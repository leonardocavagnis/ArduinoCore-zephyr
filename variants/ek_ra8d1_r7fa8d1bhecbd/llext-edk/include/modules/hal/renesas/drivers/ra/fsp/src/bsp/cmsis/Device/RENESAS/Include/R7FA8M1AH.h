/*
 * Copyright (c) 2020 - 2024 Renesas Electronics Corporation and/or its affiliates
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * @file     ./out/R7FA8M1AH.h
 * @brief    CMSIS HeaderFile
 * @version  1.2
 */

/** @addtogroup Renesas
 * @{
 */

/** @addtogroup R7FA8M1AH
 * @{
 */

#ifndef R7FA8M1AH_H
 #define R7FA8M1AH_H

 #ifdef __cplusplus
extern "C" {
 #endif

/** @addtogroup Configuration_of_CMSIS
 * @{
 */

/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M85 Processor and Core Peripherals  =========================== */
 #define __CM85_REV                0x0000U
 #define __NVIC_PRIO_BITS          4
 #define __Vendor_SysTickConfig    0
 #define __VTOR_PRESENT            1
 #define __MPU_PRESENT             1
 #define __FPU_PRESENT             1
 #define __FPU_DP                  0
 #define __DSP_PRESENT             1
 #define __ICACHE_PRESENT          1
 #define __DCACHE_PRESENT          1
 #define __SAUREGION_PRESENT       1
 #define __PMU_PRESENT             0
 #define __PMU_NUM_EVENTCNT        0

/** @} */ /* End of group Configuration_of_CMSIS */

 #include "core_cm85.h"
 #include "system.h"

 #ifndef __IM                              /*!< Fallback for older CMSIS versions                                         */
  #define __IM     __I
 #endif
 #ifndef __OM                              /*!< Fallback for older CMSIS versions                                         */
  #define __OM     __O
 #endif
 #ifndef __IOM                             /*!< Fallback for older CMSIS versions                                         */
  #define __IOM    __IO
 #endif

/* ========================================  Start of section using anonymous unions  ======================================== */
 #if defined(__CC_ARM)
  #pragma push
  #pragma anon_unions
 #elif defined(__ICCARM__)
  #pragma language=extended
 #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
 #elif defined(__GNUC__)

/* anonymous unions are enabled by default */
 #elif defined(__TMS470__)

/* anonymous unions are enabled by default */
 #elif defined(__TASKING__)
  #pragma warning 586
 #elif defined(__CSMC__)

/* anonymous unions are enabled by default */
 #else
  #warning Not supported compiler type
 #endif

/* =========================================================================================================================== */
/* ================                              Device Specific Cluster Section                              ================ */
/* =========================================================================================================================== */

/** @addtogroup Device_Peripheral_clusters
 * @{
 */

/**
 * @brief R_BUS_CSa [CSa] (CS Registers)
 */
typedef struct
{
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t MOD;

        struct
        {
            __IOM uint16_t WRMOD : 1;
            uint16_t             : 2;
            __IOM uint16_t EWENB : 1;
            uint16_t             : 4;
            __IOM uint16_t PRENB : 1;
            __IOM uint16_t PWENB : 1;
            uint16_t             : 5;
            __IOM uint16_t PRMOD : 1;
        } MOD_b;
    };

    union
    {
        __IOM uint32_t WCR1;

        struct
        {
            __IOM uint32_t CSPWWAIT : 3;
            uint32_t                : 5;
            __IOM uint32_t CSPRWAIT : 3;
            uint32_t                : 5;
            __IOM uint32_t CSWWAIT  : 5;
            uint32_t                : 3;
            __IOM uint32_t CSRWAIT  : 5;
            uint32_t                : 3;
        } WCR1_b;
    };

    union
    {
        __IOM uint32_t WCR2;

        struct
        {
            __IOM uint32_t CSROFF : 3;
            uint32_t              : 1;
            __IOM uint32_t CSWOFF : 3;
            uint32_t              : 1;
            __IOM uint32_t WDOFF  : 3;
            uint32_t              : 1;
            __IOM uint32_t AWAIT  : 2;
            uint32_t              : 2;
            __IOM uint32_t RDON   : 3;
            uint32_t              : 1;
            __IOM uint32_t WRON   : 3;
            uint32_t              : 1;
            __IOM uint32_t WDON   : 3;
            uint32_t              : 1;
            __IOM uint32_t CSON   : 3;
            uint32_t              : 1;
        } WCR2_b;
    };
    __IM uint32_t RESERVED1;
} R_BUS_CSa_Type;

/**
 * @brief R_BUS_CSb [CSb] (CS Registers)
 */
typedef struct
{
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t CR;

        struct
        {
            __IOM uint16_t EXENB : 1;
            uint16_t             : 3;
            __IOM uint16_t BSIZE : 2;
            uint16_t             : 2;
            __IOM uint16_t EMODE : 1;
            uint16_t             : 3;
            __IOM uint16_t MPXEN : 1;
            uint16_t             : 3;
        } CR_b;
    };
    __IM uint16_t RESERVED1[3];

    union
    {
        __IOM uint16_t REC;

        struct
        {
            __IOM uint16_t RRCV : 4;
            uint16_t            : 4;
            __IOM uint16_t WRCV : 4;
            uint16_t            : 4;
        } REC_b;
    };
    __IM uint16_t RESERVED2[2];
} R_BUS_CSb_Type;

/**
 * @brief R_BUS_SDRAM [SDRAM] (SDRAM Registers)
 */
typedef struct
{
    union
    {
        __IOM uint8_t SDCCR;

        struct
        {
            __IOM uint8_t EXENB : 1;
            uint8_t             : 3;
            __IOM uint8_t BSIZE : 2;
            uint8_t             : 2;
        } SDCCR_b;
    };

    union
    {
        __IOM uint8_t SDCMOD;

        struct
        {
            __IOM uint8_t EMODE : 1;
            uint8_t             : 7;
        } SDCMOD_b;
    };

    union
    {
        __IOM uint8_t SDAMOD;

        struct
        {
            __IOM uint8_t BE : 1;
            uint8_t          : 7;
        } SDAMOD_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint32_t RESERVED1[3];

    union
    {
        __IOM uint8_t SDSELF;

        struct
        {
            __IOM uint8_t SFEN : 1;
            uint8_t            : 7;
        } SDSELF_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3;

    union
    {
        __IOM uint16_t SDRFCR;

        struct
        {
            __IOM uint16_t RFC  : 12;
            __IOM uint16_t REFW : 4;   /*!< [15..12] Auto-Refresh Cycle/ Self-Refresh Clearing Cycle Count
                                        *   Setting. ( REFW+1 Cycles )                                                */
        } SDRFCR_b;
    };

    union
    {
        __IOM uint8_t SDRFEN;

        struct
        {
            __IOM uint8_t RFEN : 1;
            uint8_t            : 7;
        } SDRFEN_b;
    };
    __IM uint8_t  RESERVED4;
    __IM uint32_t RESERVED5[2];

    union
    {
        __IOM uint8_t SDICR;

        struct
        {
            __IOM uint8_t INIRQ : 1;
            uint8_t             : 7;
        } SDICR_b;
    };
    __IM uint8_t  RESERVED6;
    __IM uint16_t RESERVED7;

    union
    {
        __IOM uint16_t SDIR;

        struct
        {
            __IOM uint16_t ARFI : 4;
            __IOM uint16_t ARFC : 4;
            __IOM uint16_t PRC  : 3;   /*!< [10..8] Initialization Precharge Cycle Count ( PRF+3 cycles
                                        *   )                                                                         */
            uint16_t : 5;
        } SDIR_b;
    };
    __IM uint16_t RESERVED8;
    __IM uint32_t RESERVED9[6];

    union
    {
        __IOM uint8_t SDADR;

        struct
        {
            __IOM uint8_t MXC : 2;
            uint8_t           : 6;
        } SDADR_b;
    };
    __IM uint8_t  RESERVED10;
    __IM uint16_t RESERVED11;

    union
    {
        __IOM uint32_t SDTR;

        struct
        {
            __IOM uint32_t CL  : 3;
            uint32_t           : 5;
            __IOM uint32_t WR  : 1;
            __IOM uint32_t RP  : 3;
            __IOM uint32_t RCD : 2;
            uint32_t           : 2;
            __IOM uint32_t RAS : 3;
            uint32_t           : 13;
        } SDTR_b;
    };

    union
    {
        __IOM uint16_t SDMOD;

        struct
        {
            __IOM uint16_t MR : 15;
            uint16_t          : 1;
        } SDMOD_b;
    };
    __IM uint16_t RESERVED12;
    __IM uint32_t RESERVED13;

    union
    {
        __IM uint8_t SDSR;

        struct
        {
            __IM uint8_t MRSST : 1;
            uint8_t            : 2;
            __IM uint8_t INIST : 1;
            __IM uint8_t SRFST : 1;
            uint8_t            : 3;
        } SDSR_b;
    };
    __IM uint8_t  RESERVED14;
    __IM uint16_t RESERVED15;
} R_BUS_SDRAM_Type;

/**
 * @brief R_BUS_BUSERRa [BUSERRa] (Bus Error Registers)
 */
typedef struct
{
    union
    {
        __IM uint32_t ADD;

        struct
        {
            __IM uint32_t BERAD : 32;
        } ADD_b;
    };

    union
    {
        union
        {
            __IM uint8_t STAT;

            struct
            {
                __IM uint8_t ACCSTAT : 1;
                uint8_t              : 6;
                __IM uint8_t ERRSTAT : 1;
            } STAT_b;
        };

        union
        {
            __IM uint8_t RW;

            struct
            {
                __IM uint8_t RWSTAT : 1;
                uint8_t             : 7;
            } RW_b;
        };
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2[2];
} R_BUS_BUSERRa_Type;

/**
 * @brief R_BUS_BTZFERR [BTZFERR] (Bus TZF Error Registers)
 */
typedef struct
{
    union
    {
        __IM uint32_t ADD;

        struct
        {
            __IM uint32_t BTZFERAD : 32;
        } ADD_b;
    };

    union
    {
        __IM uint8_t RW;

        struct
        {
            __IM uint8_t TRWSTAT : 1;
            uint8_t              : 7;
        } RW_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2[2];
} R_BUS_BTZFERR_Type;

/**
 * @brief R_BUS_BUSERRb [BUSERRb] (Bus Error Registers)
 */
typedef struct
{
    union
    {
        __IM uint8_t STAT;

        struct
        {
            __IM uint8_t SLERRSTAT : 1;
            __IM uint8_t STERRSTAT : 1;
            uint8_t                : 1;
            __IM uint8_t MMERRSTAT : 1;
            __IM uint8_t ILERRSTAT : 1;
            __IM uint8_t MSERRSTAT : 1;
            uint8_t                : 2;
        } STAT_b;
    };
    __IM uint8_t RESERVED[7];

    union
    {
        __IOM uint8_t CLR;

        struct
        {
            __IOM uint8_t SLERRCLR : 1;
            __IOM uint8_t STERRCLR : 1;
            uint8_t                : 1;
            __IOM uint8_t MMERRCLR : 1;
            __IOM uint8_t ILERRCLR : 1;
            __IOM uint8_t MSERRCLR : 1;
            uint8_t                : 2;
        } CLR_b;
    };
    __IM uint8_t RESERVED1[7];
} R_BUS_BUSERRb_Type;

/**
 * @brief R_BUS_DMACDTCERR [DMACDTCERR] (DMAC/DTC Error Registers)
 */
typedef struct
{
    __IM uint8_t RESERVED[36];

    union
    {
        __IM uint8_t STAT;

        struct
        {
            __IM uint8_t MTERRSTAT : 1;
            uint8_t                : 7;
        } STAT_b;
    };
    __IM uint8_t RESERVED1[7];

    union
    {
        __IOM uint8_t CLR;

        struct
        {
            __IOM uint8_t MTERRCLR : 1;
            uint8_t                : 7;
        } CLR_b;
    };
} R_BUS_DMACDTCERR_Type;

/**
 * @brief R_BUS_BUSSABT0 [BUSSABT0] (Bus Slave Arbitration Control 0 Registers)
 */
typedef struct
{
    __IM uint32_t RESERVED[2];

    union
    {
        __IOM uint32_t MRE0BI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } MRE0BI_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t FLBI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } FLBI_b;
    };
    __IM uint32_t RESERVED2[3];

    union
    {
        __IOM uint32_t S0BI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } S0BI_b;
    };
    __IM uint32_t RESERVED3;

    union
    {
        __IOM uint32_t S1BI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } S1BI_b;
    };
    __IM uint32_t RESERVED4;

    union
    {
        __IOM uint32_t S2BI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } S2BI_b;
    };
    __IM uint32_t RESERVED5;

    union
    {
        __IOM uint32_t S3BI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } S3BI_b;
    };
    __IM uint32_t RESERVED6[3];

    union
    {
        __IOM uint32_t STBYSBI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } STBYSBI_b;
    };
    __IM uint32_t RESERVED7;

    union
    {
        union
        {
            __IOM uint32_t ECBI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } ECBI_b;
        };

        union
        {
            __IOM uint32_t SPI0BI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } SPI0BI_b;
        };
    };
    __IM uint32_t RESERVED8;

    union
    {
        union
        {
            __IOM uint32_t EOBI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } EOBI_b;
        };

        union
        {
            __IOM uint32_t SPI1BI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } SPI1BI_b;
        };
    };
    __IM uint32_t RESERVED9;

    union
    {
        __IOM uint32_t PBBI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } PBBI_b;
    };
    __IM uint32_t RESERVED10;

    union
    {
        union
        {
            __IOM uint32_t PABI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } PABI_b;
        };

        union
        {
            __IOM uint32_t CPU0SAHBI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } CPU0SAHBI_b;
        };
    };
    __IM uint32_t RESERVED11;

    union
    {
        union
        {
            __IOM uint32_t PIBI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } PIBI_b;
        };

        union
        {
            __IOM uint32_t CPU1TCMBI;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } CPU1TCMBI_b;
        };
    };
    __IM uint32_t RESERVED12;

    union
    {
        __IOM uint32_t PSBI;

        struct
        {
            __IOM uint32_t ARBS : 1;
            uint32_t            : 31;
        } PSBI_b;
    };
} R_BUS_BUSSABT0_Type;

/**
 * @brief R_BUS_BUSSABT1 [BUSSABT1] (Bus Slave Arbitration Control 1 Registers)
 */
typedef struct
{
    union
    {
        union
        {
            __IOM uint32_t FHBI;

            struct
            {
                __IOM uint32_t ARBS : 2;
                uint32_t            : 30;
            } FHBI_b;
        };

        union
        {
            __IOM uint32_t MRC0BI;

            struct
            {
                __IOM uint32_t ARBS : 2;
                uint32_t            : 30;
            } MRC0BI_b;
        };
    };
    __IM uint32_t RESERVED[5];

    union
    {
        __IOM uint32_t S0BI;

        struct
        {
            __IOM uint32_t ARBS : 2;
            uint32_t            : 30;
        } S0BI_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t S1BI;

        struct
        {
            __IOM uint32_t ARBS : 2;
            uint32_t            : 30;
        } S1BI_b;
    };
} R_BUS_BUSSABT1_Type;

/**
 * @brief R_BUS_BMSAERR [BMSAERR] (Bus Master Security Attribution Unit Error Address and Read/Write Status registers.)
 */
typedef struct
{
    union
    {
        __IM uint32_t ADD;

        struct
        {
            __IM uint32_t MSERAD : 32;
        } ADD_b;
    };

    union
    {
        __IM uint8_t RW;                /*!< (@ 0x00000004) BUS Master Security Attribution Unit Error Read
                                         *                  Write.                                                     */

        struct
        {
            __IM uint8_t MSARWSTAT : 1; /*!< [0..0] Master Security Attribution Unit error access Read/Write
                                         *   Status.                                                                   */
            uint8_t : 7;
        } RW_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2[2];
} R_BUS_BMSAERR_Type;

/**
 * @brief R_BUS_OAD [OAD] (Bus Operation After Detection Registers)
 */
typedef struct
{
    union
    {
        __IOM uint16_t BUSOAD;

        struct
        {
            __IOM uint16_t ILERROAD : 1;
            __IOM uint16_t SLERROAD : 1;
            __IOM uint16_t BWERROAD : 1;
            uint16_t                : 13;
        } BUSOAD_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t BUSOADPT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8;
        } BUSOADPT_b;
    };
    __IM uint16_t RESERVED1[5];

    union
    {
        __IOM uint16_t MSAOAD;         /*!< (@ 0x00000010) Master Security Attribution Operation After Detection
                                        *                  Register.                                                  */

        struct
        {
            __IOM uint16_t OAD : 1;
            uint16_t           : 7;
            __OM uint16_t KEY  : 8;
        } MSAOAD_b;
    };
    __IM uint16_t RESERVED2;

    union
    {
        __IOM uint16_t MSAPT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8;
        } MSAPT_b;
    };
} R_BUS_OAD_Type;

/**
 * @brief R_BUS_MBWERR [MBWERR] (Master Bufferable Write Error Registers)
 */
typedef struct
{
    union
    {
        __IM uint32_t STAT;

        struct
        {
            __IM uint32_t BWERR0  : 1;
            __IM uint32_t BWERR1  : 1;
            __IM uint32_t BWERR2  : 1;
            __IM uint32_t BWERR3  : 1;
            __IM uint32_t BWERR4  : 1;
            __IM uint32_t BWERR5  : 1;
            __IM uint32_t BWERR6  : 1;
            __IM uint32_t BWERR7  : 1;
            __IM uint32_t BWERR8  : 1;
            __IM uint32_t BWERR9  : 1;
            __IM uint32_t BWERR10 : 1;
            __IM uint32_t BWERR11 : 1;
            __IM uint32_t BWERR12 : 1;
            __IM uint32_t BWERR13 : 1;
            __IM uint32_t BWERR14 : 1;
            __IM uint32_t BWERR15 : 1;
            __IM uint32_t BWERR16 : 1;
            __IM uint32_t BWERR17 : 1;
            __IM uint32_t BWERR18 : 1;
            __IM uint32_t BWERR19 : 1;
            __IM uint32_t BWERR20 : 1;
            __IM uint32_t BWERR21 : 1;
            __IM uint32_t BWERR22 : 1;
            __IM uint32_t BWERR23 : 1;
            __IM uint32_t BWERR24 : 1;
            __IM uint32_t BWERR25 : 1;
            __IM uint32_t BWERR26 : 1;
            __IM uint32_t BWERR27 : 1;
            __IM uint32_t BWERR28 : 1;
            __IM uint32_t BWERR29 : 1;
            __IM uint32_t BWERR30 : 1;
            __IM uint32_t BWERR31 : 1;
        } STAT_b;
    };
    __IM uint32_t RESERVED;

    union
    {
        __IOM uint32_t CLR;

        struct
        {
            __IOM uint32_t BWERR0  : 1;
            __IOM uint32_t BWERR1  : 1;
            __IOM uint32_t BWERR2  : 1;
            __IOM uint32_t BWERR3  : 1;
            __IOM uint32_t BWERR4  : 1;
            __IOM uint32_t BWERR5  : 1;
            __IOM uint32_t BWERR6  : 1;
            __IOM uint32_t BWERR7  : 1;
            __IOM uint32_t BWERR8  : 1;
            __IOM uint32_t BWERR9  : 1;
            __IOM uint32_t BWERR10 : 1;
            __IOM uint32_t BWERR11 : 1;
            __IOM uint32_t BWERR12 : 1;
            __IOM uint32_t BWERR13 : 1;
            __IOM uint32_t BWERR14 : 1;
            __IOM uint32_t BWERR15 : 1;
            __IOM uint32_t BWERR16 : 1;
            __IOM uint32_t BWERR17 : 1;
            __IOM uint32_t BWERR18 : 1;
            __IOM uint32_t BWERR19 : 1;
            __IOM uint32_t BWERR20 : 1;
            __IOM uint32_t BWERR21 : 1;
            __IOM uint32_t BWERR22 : 1;
            __IOM uint32_t BWERR23 : 1;
            __IOM uint32_t BWERR24 : 1;
            __IOM uint32_t BWERR25 : 1;
            __IOM uint32_t BWERR26 : 1;
            __IOM uint32_t BWERR27 : 1;
            __IOM uint32_t BWERR28 : 1;
            __IOM uint32_t BWERR29 : 1;
            __IOM uint32_t BWERR30 : 1;
            __IOM uint32_t BWERR31 : 1;
        } CLR_b;
    };
} R_BUS_MBWERR_Type;

/**
 * @brief R_BUS_BUSM [BUSM] (Master Bus Control Registers)
 */
typedef struct
{
    union
    {
        __IOM uint16_t CNT;

        struct
        {
            uint16_t             : 15;
            __IOM uint16_t IERES : 1;
        } CNT_b;
    };
    __IM uint16_t RESERVED;
} R_BUS_BUSM_Type;

/**
 * @brief R_BUS_BUSS [BUSS] (Slave Bus Control Register Array)
 */
typedef struct
{
    union
    {
        __IOM uint16_t CNT;

        struct
        {
            __IOM uint16_t ARBS   : 2;
            uint16_t              : 2;
            __IOM uint16_t ARBMET : 2;
            uint16_t              : 10;
        } CNT_b;
    };
    __IM uint16_t RESERVED;
} R_BUS_BUSS_Type;

/**
 * @brief R_CANFD_CFDC [CFDC] (Channel Control/Status)
 */
typedef struct
{
    union
    {
        __IOM uint32_t NCFG;

        struct
        {
            __IOM uint32_t NBRP   : 10;
            __IOM uint32_t NSJW   : 7;
            __IOM uint32_t NTSEG1 : 8;
            __IOM uint32_t NTSEG2 : 7;
        } NCFG_b;
    };

    union
    {
        __IOM uint32_t CTR;

        struct
        {
            __IOM uint32_t CHMDC   : 2;
            __IOM uint32_t CSLPR   : 1;
            __IOM uint32_t RTBO    : 1;
            uint32_t               : 4;
            __IOM uint32_t BEIE    : 1;
            __IOM uint32_t EWIE    : 1;
            __IOM uint32_t EPIE    : 1;
            __IOM uint32_t BOEIE   : 1;
            __IOM uint32_t BORIE   : 1;
            __IOM uint32_t OLIE    : 1;
            __IOM uint32_t BLIE    : 1;
            __IOM uint32_t ALIE    : 1;
            __IOM uint32_t TAIE    : 1;
            __IOM uint32_t EOCOIE  : 1;
            __IOM uint32_t SOCOIE  : 1;
            __IOM uint32_t TDCVFIE : 1; /*!< [19..19] Transceiver Delay Compensation Violation Interrupt
                                         *   enable                                                                    */
            uint32_t            : 1;
            __IOM uint32_t BOM  : 2;
            __IOM uint32_t ERRD : 1;
            __IOM uint32_t CTME : 1;
            __IOM uint32_t CTMS : 2;
            uint32_t            : 3;
            __IOM uint32_t CRCT : 1;
            __IOM uint32_t ROM  : 1;
        } CTR_b;
    };

    union
    {
        __IOM uint32_t STS;

        struct
        {
            __IM uint32_t  CRSTSTS : 1;
            __IM uint32_t  CHLTSTS : 1;
            __IM uint32_t  CSLPSTS : 1;
            __IM uint32_t  EPSTS   : 1;
            __IM uint32_t  BOSTS   : 1;
            __IM uint32_t  TRMSTS  : 1;
            __IM uint32_t  RECSTS  : 1;
            __IM uint32_t  COMSTS  : 1;
            __IOM uint32_t ESIF    : 1;
            uint32_t               : 7;
            __IM uint32_t  REC     : 8;
            __IOM uint32_t TEC     : 8;
        } STS_b;
    };

    union
    {
        __IOM uint32_t ERFL;

        struct
        {
            __IOM uint32_t BEF   : 1;
            __IOM uint32_t EWF   : 1;
            __IOM uint32_t EPF   : 1;
            __IOM uint32_t BOEF  : 1;
            __IOM uint32_t BORF  : 1;
            __IOM uint32_t OVLF  : 1;
            __IOM uint32_t BLF   : 1;
            __IOM uint32_t ALF   : 1;
            __IOM uint32_t SERR  : 1;
            __IOM uint32_t FERR  : 1;
            __IOM uint32_t AERR  : 1;
            __IOM uint32_t CERR  : 1;
            __IOM uint32_t B1ERR : 1;
            __IOM uint32_t B0ERR : 1;
            __IOM uint32_t ADERR : 1;
            uint32_t             : 1;
            __IM uint32_t CRCREG : 15;
            uint32_t             : 1;
        } ERFL_b;
    };
} R_CANFD_CFDC_Type;

/**
 * @brief R_CANFD_CFDC2 [CFDC2] (Channel Configuration Registers)
 */
typedef struct
{
    union
    {
        __IOM uint32_t DCFG;

        struct
        {
            __IOM uint32_t DBRP   : 8;
            __IOM uint32_t DTSEG1 : 5;
            uint32_t              : 3;
            __IOM uint32_t DTSEG2 : 4;
            uint32_t              : 4;
            __IOM uint32_t DSJW   : 4;
            uint32_t              : 4;
        } DCFG_b;
    };

    union
    {
        __IOM uint32_t FDCFG;

        struct
        {
            __IOM uint32_t EOCCFG : 3;
            uint32_t              : 5;
            __IOM uint32_t TDCOC  : 1;
            __IOM uint32_t TDCE   : 1;
            __IOM uint32_t ESIC   : 1;
            uint32_t              : 5;
            __IOM uint32_t TDCO   : 8;
            uint32_t              : 4;
            __IOM uint32_t FDOE   : 1;
            __IOM uint32_t REFE   : 1;
            __IOM uint32_t CLOE   : 1;
            uint32_t              : 1;
        } FDCFG_b;
    };

    union
    {
        __IOM uint32_t FDCTR;

        struct
        {
            __IOM uint32_t EOCCLR : 1;
            __IOM uint32_t SOCCLR : 1;
            uint32_t              : 30;
        } FDCTR_b;
    };

    union
    {
        __IOM uint32_t FDSTS;

        struct
        {
            __IM uint32_t  TDCR  : 8;
            __IOM uint32_t EOCO  : 1;
            __IOM uint32_t SOCO  : 1;
            uint32_t             : 5;
            __IOM uint32_t TDCVF : 1;
            __IM uint32_t  EOC   : 8;
            __IM uint32_t  SOC   : 8;
        } FDSTS_b;
    };

    union
    {
        __IOM uint32_t FDCRC;

        struct
        {
            __IM uint32_t CRCREG : 21;
            uint32_t             : 3;
            __IM uint32_t SCNT   : 4;
            uint32_t             : 4;
        } FDCRC_b;
    };
    __IM uint32_t RESERVED[3];
} R_CANFD_CFDC2_Type;

/**
 * @brief R_CANFD_CFDGAFL [CFDGAFL] (Global Acceptance Filter List Registers)
 */
typedef struct
{
    union
    {
        __IOM uint32_t ID;

        struct
        {
            __IOM uint32_t GAFLID  : 29;
            __IOM uint32_t GAFLLB  : 1;
            __IOM uint32_t GAFLRTR : 1;
            __IOM uint32_t GAFLIDE : 1;
        } ID_b;
    };

    union
    {
        __IOM uint32_t M;

        struct
        {
            __IOM uint32_t GAFLIDM  : 29;
            __IOM uint32_t GAFLIFL1 : 1;
            __IOM uint32_t GAFLRTRM : 1;
            __IOM uint32_t GAFLIDEM : 1;
        } M_b;
    };

    union
    {
        __IOM uint32_t P0;

        struct
        {
            __IOM uint32_t GAFLDLC  : 4;
            uint32_t                : 3;
            __IOM uint32_t GAFLIFL0 : 1;
            __IOM uint32_t GAFLRMDP : 5; /*!< [12..8] Global Acceptance Filter List RX Message Buffer Direction
                                          *   Pointer                                                                   */
            uint32_t               : 2;
            __IOM uint32_t GAFLRMV : 1;
            __IOM uint32_t GAFLPTR : 16;
        } P0_b;
    };

    union
    {
        __IOM uint32_t P1;

        struct
        {
            __IOM uint32_t GAFLFDP : 9;
            uint32_t               : 23;
        } P1_b;
    };
} R_CANFD_CFDGAFL_Type;

/**
 * @brief R_CANFD_CFDTHL [CFDTHL] (Channel TX History List)
 */
typedef struct
{
    union
    {
        __IM uint32_t ACC0;

        struct
        {
            __IM uint32_t BT   : 3;
            __IM uint32_t BN   : 7;
            uint32_t           : 6;
            __IM uint32_t TMTS : 16;
        } ACC0_b;
    };

    union
    {
        __IOM uint32_t ACC1;

        struct
        {
            __IM uint32_t TID  : 16;
            __IM uint32_t TIFL : 2;
            uint32_t           : 14;
        } ACC1_b;
    };
} R_CANFD_CFDTHL_Type;

/**
 * @brief R_CANFD_CFDRF [CFDRF] (RX FIFO Access Registers)
 */
typedef struct
{
    union
    {
        __IM uint32_t ID;

        struct
        {
            __IM uint32_t RFID  : 29;
            uint32_t            : 1;
            __IM uint32_t RFRTR : 1;
            __IM uint32_t RFIDE : 1;
        } ID_b;
    };

    union
    {
        __IM uint32_t PTR;

        struct
        {
            __IM uint32_t RFTS  : 16;
            uint32_t            : 12;
            __IM uint32_t RFDLC : 4;
        } PTR_b;
    };

    union
    {
        __IM uint32_t FDSTS;

        struct
        {
            __IM uint32_t RFESI : 1;
            __IM uint32_t RFBRS : 1;
            __IM uint32_t RFFDF : 1;
            uint32_t            : 5;
            __IM uint32_t RFIFL : 2;
            uint32_t            : 6;
            __IM uint32_t RFPTR : 16;
        } FDSTS_b;
    };

    union
    {
        __IM uint8_t DF[64];

        struct
        {
            __IM uint8_t RFDB : 8;
        } DF_b[64];
    };
} R_CANFD_CFDRF_Type;

/**
 * @brief R_CANFD_CFDCF [CFDCF] (Common FIFO Access Registers)
 */
typedef struct
{
    union
    {
        __IOM uint32_t ID;

        struct
        {
            __IOM uint32_t CFID  : 29;
            uint32_t             : 1;
            __IOM uint32_t CFRTR : 1;
            __IOM uint32_t CFIDE : 1;
        } ID_b;
    };

    union
    {
        __IOM uint32_t PTR;

        struct
        {
            __IOM uint32_t CFTS  : 16;
            uint32_t             : 12;
            __IOM uint32_t CFDLC : 4;
        } PTR_b;
    };

    union
    {
        __IOM uint32_t FDSTS;

        struct
        {
            __IOM uint32_t CFESI : 1;
            __IOM uint32_t CFBRS : 1;
            __IOM uint32_t CFFDF : 1;
            uint32_t             : 5;
            __IOM uint32_t CFIFL : 2;
            uint32_t             : 6;
            __IOM uint32_t CFPTR : 16;
        } FDSTS_b;
    };

    union
    {
        __IOM uint8_t DF[64];

        struct
        {
            __IOM uint8_t CFDB : 8;
        } DF_b[64];
    };
} R_CANFD_CFDCF_Type;

/**
 * @brief R_CANFD_CFDTM [CFDTM] (TX Message Buffer Access Registers)
 */
typedef struct
{
    union
    {
        __IOM uint32_t ID;

        struct
        {
            __IOM uint32_t TMID  : 29;
            uint32_t             : 1;
            __IOM uint32_t TMRTR : 1;
            __IOM uint32_t TMIDE : 1;
        } ID_b;
    };

    union
    {
        __IOM uint32_t PTR;

        struct
        {
            __IOM uint32_t TMTS  : 16;
            uint32_t             : 12;
            __IOM uint32_t TMDLC : 4;
        } PTR_b;
    };

    union
    {
        __IOM uint32_t FDCTR;

        struct
        {
            __IOM uint32_t TMESI : 1;
            __IOM uint32_t TMBRS : 1;
            __IOM uint32_t TMFDF : 1;
            uint32_t             : 5;
            __IOM uint32_t TMIFL : 2;
            uint32_t             : 6;
            __IOM uint32_t TMPTR : 16;
        } FDCTR_b;
    };

    union
    {
        __IOM uint8_t DF[64];

        struct
        {
            __IOM uint8_t TMDB : 8;
        } DF_b[64];
    };
} R_CANFD_CFDTM_Type;

/**
 * @brief R_CANFD_CFDRM_RM [RM] (RX Message Buffer Access Registers)
 */
typedef struct
{
    union
    {
        __IM uint32_t ID;

        struct
        {
            __IM uint32_t RMID  : 29;
            uint32_t            : 1;
            __IM uint32_t RMRTR : 1;
            __IM uint32_t RMIDE : 1;
        } ID_b;
    };

    union
    {
        __IM uint32_t PTR;

        struct
        {
            __IM uint32_t RMTS  : 16;
            uint32_t            : 12;
            __IM uint32_t RMDLC : 4;
        } PTR_b;
    };

    union
    {
        __IM uint32_t FDSTS;

        struct
        {
            __IM uint32_t RMESI : 1;
            __IM uint32_t RMBRS : 1;
            __IM uint32_t RMFDF : 1;
            uint32_t            : 5;
            __IM uint32_t RMIFL : 2;
            uint32_t            : 6;
            __IM uint32_t RMPTR : 16;
        } FDSTS_b;
    };

    union
    {
        __IM uint8_t DF[64];

        struct
        {
            __IM uint8_t RMDB : 8;
        } DF_b[64];
    };
} R_CANFD_CFDRM_RM_Type;

/**
 * @brief R_CANFD_CFDRM [CFDRM] (RX Message Buffer Access Clusters)
 */
typedef struct
{
    __IOM R_CANFD_CFDRM_RM_Type RM[8];
    __IM uint32_t               RESERVED[104];
} R_CANFD_CFDRM_Type;

/**
 * @brief R_ELC_ELSEGR [ELSEGR] (Event Link Software Event Generation Register)
 */
typedef struct
{
    union
    {
        __IOM uint8_t BY;

        struct
        {
            __OM uint8_t SEG : 1;
            uint8_t          : 5;
            __IOM uint8_t WE : 1;
            __OM uint8_t  WI : 1;
        } BY_b;
    };
    __IM uint8_t RESERVED;
} R_ELC_ELSEGR_Type;

/**
 * @brief R_ELC_ELSR [ELSR] (Event Link Setting Register [0..30])
 */
typedef struct
{
    union
    {
        __IOM uint16_t HA;

        struct
        {
            __IOM uint16_t ELS : 9;
            uint16_t           : 7;
        } HA_b;
    };
    __IM uint16_t RESERVED;
} R_ELC_ELSR_Type;

/**
 * @brief R_IIC0_SAR [SAR] (Slave Address Registers)
 */
typedef struct
{
    union
    {
        __IOM uint8_t L;

        struct
        {
            __IOM uint8_t SVA : 8;     /*!< [7..0] A slave address is set.7-Bit Address = SVA[7:1] 10-Bit
                                        *   Address = { SVA9,SVA8,SVA[7:0] }                                          */
        } L_b;
    };

    union
    {
        __IOM uint8_t U;

        struct
        {
            __IOM uint8_t FS   : 1;
            __IOM uint8_t SVA8 : 1;
            __IOM uint8_t SVA9 : 1;
            uint8_t            : 5;
        } U_b;
    };
} R_IIC0_SAR_Type;

/**
 * @brief R_MPU_MMPU_GROUP_REGION [REGION] (Address region control)
 */
typedef struct
{
    union
    {
        __IOM uint16_t AC;

        struct
        {
            __IOM uint16_t ENABLE : 1;
            __IOM uint16_t RP     : 1;
            __IOM uint16_t WP     : 1;
            __IOM uint16_t PP     : 1;
            uint16_t              : 12;
        } AC_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint32_t S;

        struct
        {
            __IOM uint32_t MMPUS : 32; /*!< [31..0] Address where the region starts, for use in region determination.
                                        *   NOTE: Some low-order bits are fixed to 0.                                 */
        } S_b;
    };

    union
    {
        __IOM uint32_t E;

        struct
        {
            __IOM uint32_t MMPUE : 32; /*!< [31..0] Region end address registerAddress where the region
                                        *   end, for use in region determination. NOTE: Some low-order
                                        *   bits are fixed to 1.                                                      */
        } E_b;
    };
    __IM uint32_t RESERVED1;
} R_MPU_MMPU_GROUP_REGION_Type;

/**
 * @brief R_MPU_MMPU_GROUP [GROUP] ([DMAC0..NPU] MMPU Registers)
 */
typedef struct
{
    union
    {
        __IOM uint16_t EN;

        struct
        {
            __IOM uint16_t ENABLE : 1;
            uint16_t              : 7;
            __OM uint16_t KEY     : 8; /*!< [15..8] Write Keyword The data written to these bits are not
                                        *   stored.                                                                   */
        } EN_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t ENPT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8; /*!< [15..8] Write Keyword The data written to these bits are not
                                         *   stored.                                                                   */
        } ENPT_b;
    };
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint16_t RPT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8; /*!< [15..8] Write Keyword The data written to these bits are not
                                         *   stored.                                                                   */
        } RPT_b;
    };
    __IM uint16_t RESERVED2;

    union
    {
        __IOM uint16_t RPT_SEC;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8; /*!< [15..8] Write Keyword The data written to these bits are not
                                         *   stored.                                                                   */
        } RPT_SEC_b;
    };
    __IM uint16_t RESERVED3;
    __IM uint32_t RESERVED4[60];
    __IOM R_MPU_MMPU_GROUP_REGION_Type REGION[8];
    __IM uint32_t RESERVED5[32];
} R_MPU_MMPU_GROUP_Type;

/**
 * @brief R_MPU_SPMON_SP [SP] (Stack Pointer Monitor)
 */
typedef struct
{
    union
    {
        __IOM uint16_t OAD;            /*!< (@ 0x00000000) Stack Pointer Monitor Operation After Detection
                                        *                  Register                                                   */

        struct
        {
            __IOM uint16_t OAD : 1;
            uint16_t           : 7;
            __OM uint16_t KEY  : 8;    /*!< [15..8] Write Keyword The data written to these bits are not
                                        *   stored.                                                                   */
        } OAD_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t CTL;

        struct
        {
            __IOM uint16_t ENABLE : 1;
            uint16_t              : 7;
            __IOM uint16_t ERROR  : 1;
            uint16_t              : 7;
        } CTL_b;
    };

    union
    {
        __IOM uint16_t PT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8; /*!< [15..8] Write Keyword The data written to these bits are not
                                         *   stored.                                                                   */
        } PT_b;
    };

    union
    {
        __IOM uint32_t SA;

        struct
        {
            __IOM uint32_t MSPMPUSA : 32; /*!< [31..0] Region start address register Address where the region
                                           *   starts, for use in region determination.NOTE: Range: 0x1FF00000-0x200FFFF
                                           *   The low-order 2 bits are fixed to 0.                                      */
        } SA_b;
    };

    union
    {
        __IOM uint32_t EA;

        struct
        {
            __IOM uint32_t MSPMPUEA : 32; /*!< [31..0] Region end address register Address where the region
                                           *   starts, for use in region determination.NOTE: Range: 0x1FF00003-0x200FFFF
                                           *   The low-order 2 bits are fixed to 1.                                      */
        } EA_b;
    };
} R_MPU_SPMON_SP_Type;

/**
 * @brief R_PFS_PORT_PIN [PIN] (Pin Function Selects)
 */
typedef struct
{
    union
    {
        union
        {
            __IOM uint32_t PmnPFS;

            struct
            {
                __IOM uint32_t PODR  : 1;
                __IM uint32_t  PIDR  : 1;
                __IOM uint32_t PDR   : 1;
                uint32_t             : 1;
                __IOM uint32_t PCR   : 1;
                uint32_t             : 1;
                __IOM uint32_t NCODR : 1;
                uint32_t             : 3;
                __IOM uint32_t DSCR  : 2;
                __IOM uint32_t EOFR  : 2;
                __IOM uint32_t ISEL  : 1;
                __IOM uint32_t ASEL  : 1;
                __IOM uint32_t PMR   : 1;
                uint32_t             : 7;
                __IOM uint32_t PSEL  : 5; /*!< [28..24] Port Function SelectThese bits select the peripheral
                                           *   function. For individual pin functions, see the MPC table                 */
                uint32_t : 3;
            } PmnPFS_b;
        };

        union
        {
            __IOM uint16_t PmnPFS_HA;

            struct
            {
                __IOM uint16_t PODR  : 1;
                __IM uint16_t  PIDR  : 1;
                __IOM uint16_t PDR   : 1;
                uint16_t             : 1;
                __IOM uint16_t PCR   : 1;
                uint16_t             : 1;
                __IOM uint16_t NCODR : 1;
                uint16_t             : 3;
                __IOM uint16_t DSCR  : 2;
                __IOM uint16_t EOFR  : 2;
                __IOM uint16_t ISEL  : 1;
                __IOM uint16_t ASEL  : 1;
            } PmnPFS_HA_b;
        };

        union
        {
            __IOM uint8_t PmnPFS_BY;

            struct
            {
                __IOM uint8_t PODR  : 1;
                __IM uint8_t  PIDR  : 1;
                __IOM uint8_t PDR   : 1;
                uint8_t             : 1;
                __IOM uint8_t PCR   : 1;
                uint8_t             : 1;
                __IOM uint8_t NCODR : 1;
                uint8_t             : 1;
            } PmnPFS_BY_b;
        };
    };
} R_PFS_PORT_PIN_Type;

/**
 * @brief R_PFS_PORT [PORT] (Port [0..14])
 */
typedef struct
{
    __IOM R_PFS_PORT_PIN_Type PIN[16];
} R_PFS_PORT_Type;

/**
 * @brief R_PMISC_PMSAR [PMSAR] (Port Security Attribution Register)
 */
typedef struct
{
    __IOM uint16_t PMSAR;
    __IM uint16_t  RESERVED;
} R_PMISC_PMSAR_Type;

/**
 * @brief R_RTC_RTCCR [RTCCR] (Time Capture Control Register)
 */
typedef struct
{
    union
    {
        __IOM uint8_t RTCCR;

        struct
        {
            __IOM uint8_t TCCT : 2;
            __IM uint8_t  TCST : 1;
            uint8_t            : 1;
            __IOM uint8_t TCNF : 2;
            uint8_t            : 1;
            __IOM uint8_t TCEN : 1;
        } RTCCR_b;
    };
    __IM uint8_t RESERVED;
} R_RTC_RTCCR_Type;

/**
 * @brief R_RTC_CP [CP] (Capture registers)
 */
typedef struct
{
    __IM uint8_t RESERVED[2];

    union
    {
        union
        {
            __IM uint8_t RSEC;

            struct
            {
                __IM uint8_t SEC1 : 4;  /*!< [3..0] 1-Second Capture Capture value for the ones place of
                                         *   seconds                                                                   */
                __IM uint8_t SEC10 : 3; /*!< [6..4] 10-Second Capture Capture value for the tens place of
                                         *   seconds                                                                   */
                uint8_t : 1;
            } RSEC_b;
        };

        union
        {
            __IM uint8_t BCNT0;

            struct
            {
                __IM uint8_t BCNT0CP : 8; /*!< [7..0] BCNT0CP is a read-only register that captures the BCNT0
                                           *   value when a time capture event is detected.                              */
            } BCNT0_b;
        };
    };
    __IM uint8_t RESERVED1;

    union
    {
        union
        {
            __IM uint8_t RMIN;

            struct
            {
                __IM uint8_t MIN1 : 4;  /*!< [3..0] 1-Minute Capture Capture value for the ones place of
                                         *   minutes                                                                   */
                __IM uint8_t MIN10 : 3; /*!< [6..4] 10-Minute Capture Capture value for the tens place of
                                         *   minutes                                                                   */
                uint8_t : 1;
            } RMIN_b;
        };

        union
        {
            __IM uint8_t BCNT1;

            struct
            {
                __IM uint8_t BCNT1CP : 8; /*!< [7..0] BCNT1CP is a read-only register that captures the BCNT1
                                           *   value when a time capture event is detected.                              */
            } BCNT1_b;
        };
    };
    __IM uint8_t RESERVED2;

    union
    {
        union
        {
            __IM uint8_t RHR;

            struct
            {
                __IM uint8_t HR1 : 4;  /*!< [3..0] 1-Minute Capture Capture value for the ones place of
                                        *   minutes                                                                   */
                __IM uint8_t HR10 : 2; /*!< [5..4] 10-Minute Capture Capture value for the tens place of
                                        *   minutes                                                                   */
                __IM uint8_t PM : 1;
                uint8_t         : 1;
            } RHR_b;
        };

        union
        {
            __IM uint8_t BCNT2;

            struct
            {
                __IM uint8_t BCNT2CP : 8; /*!< [7..0] BCNT2CP is a read-only register that captures the BCNT2
                                           *   value when a time capture event is detected.                              */
            } BCNT2_b;
        };
    };
    __IM uint8_t RESERVED3[3];

    union
    {
        union
        {
            __IM uint8_t RDAY;

            struct
            {
                __IM uint8_t DATE1  : 4;
                __IM uint8_t DATE10 : 2;
                uint8_t             : 2;
            } RDAY_b;
        };

        union
        {
            __IM uint8_t BCNT3;

            struct
            {
                __IM uint8_t BCNT3CP : 8; /*!< [7..0] BCNT3CP is a read-only register that captures the BCNT3
                                           *   value when a time capture event is detected.                              */
            } BCNT3_b;
        };
    };
    __IM uint8_t RESERVED4;

    union
    {
        __IM uint8_t RMON;

        struct
        {
            __IM uint8_t MON1  : 4;
            __IM uint8_t MON10 : 1;    /*!< [4..4] 10-Month Capture Capture value for the tens place of
                                        *   months                                                                    */
            uint8_t : 3;
        } RMON_b;
    };
    __IM uint8_t RESERVED5[3];
} R_RTC_CP_Type;

/**
 * @brief R_USB_FS0_PIPE_TR [PIPE_TR] (Pipe Transaction Counter Registers)
 */
typedef struct
{
    union
    {
        __IOM uint16_t E;

        struct
        {
            uint16_t             : 8;
            __IOM uint16_t TRCLR : 1;
            __IOM uint16_t TRENB : 1;
            uint16_t             : 6;
        } E_b;
    };

    union
    {
        __IOM uint16_t N;

        struct
        {
            __IOM uint16_t TRNCNT : 16;
        } N_b;
    };
} R_USB_FS0_PIPE_TR_Type;

/**
 * @brief R_USB_HS0_PIPE_TR [PIPE_TR] (Pipe Transaction Counter Registers)
 */
typedef struct
{
    union
    {
        __IOM uint16_t E;

        struct
        {
            uint16_t             : 8;
            __IOM uint16_t TRCLR : 1;  /*!< [8..8] Transaction Counter ClearSetting this bit to 1 allows
                                        *   clearing the transaction counter to 0.                                    */
            __IOM uint16_t TRENB : 1;  /*!< [9..9] Transaction Counter EnableEnables or disables the transaction
                                        *   counter function.                                                         */
            uint16_t : 6;
        } E_b;
    };

    union
    {
        __IOM uint16_t N;

        struct
        {
            __IOM uint16_t TRNCNT : 16; /*!< [15..0] Transaction CounterWhen writing to: Specify the number
                                         *   of total packets (number of transactions) to be received
                                         *   by the relevant PIPE.When read from: When TRENB = 0: Indicate
                                         *   the specified number of transactions.When TRENB = 1: Indicate
                                         *   the number of currently counted transactions.                             */
        } N_b;
    };
} R_USB_HS0_PIPE_TR_Type;

/**
 * @brief R_XSPI_CMCFGCS [CMCFGCS] (xSPI Command Map Configuration registers)
 */
typedef struct
{
    union
    {
        __IOM uint32_t CMCFG0;

        struct
        {
            __IOM uint32_t FFMT    : 2;
            __IOM uint32_t ADDSIZE : 2;
            __IOM uint32_t WPBSTMD : 1;
            __IOM uint32_t ARYAMD  : 1;
            uint32_t               : 10;
            __IOM uint32_t ADDRPEN : 8;
            __IOM uint32_t ADDRPCD : 8;
        } CMCFG0_b;
    };

    union
    {
        __IOM uint32_t CMCFG1;

        struct
        {
            __IOM uint32_t RDCMD  : 16;
            __IOM uint32_t RDLATE : 5;
            uint32_t              : 11;
        } CMCFG1_b;
    };

    union
    {
        __IOM uint32_t CMCFG2;

        struct
        {
            __IOM uint32_t WRCMD  : 16;
            __IOM uint32_t WRLATE : 5;
            uint32_t              : 11;
        } CMCFG2_b;
    };
    __IM uint32_t RESERVED;
} R_XSPI_CMCFGCS_Type;

/**
 * @brief R_XSPI_CDBUF [CDBUF] (xSPI BUF register)
 */
typedef struct
{
    union
    {
        __IOM uint32_t CDT;

        struct
        {
            __IOM uint32_t CMDSIZE  : 2;
            __IOM uint32_t ADDSIZE  : 3;
            __IOM uint32_t DATASIZE : 4;
            __IOM uint32_t LATE     : 5;
            uint32_t                : 1;
            __IOM uint32_t TRTYPE   : 1;
            __IOM uint32_t CMD      : 16;
        } CDT_b;
    };

    union
    {
        __IOM uint32_t CDA;

        struct
        {
            __IOM uint32_t ADD : 32;
        } CDA_b;
    };

    union
    {
        __IOM uint32_t CDD0;

        struct
        {
            __IOM uint32_t DATA : 32;
        } CDD0_b;
    };

    union
    {
        __IOM uint32_t CDD1;

        struct
        {
            __IOM uint32_t DATA : 32;
        } CDD1_b;
    };
} R_XSPI_CDBUF_Type;

/**
 * @brief R_XSPI_CCCTLCS [CCCTLCS] (xSPI CS register)
 */
typedef struct
{
    union
    {
        __IOM uint32_t CCCTL0;

        struct
        {
            __IOM uint32_t CAEN     : 1;
            __IOM uint32_t CANOWR   : 1;
            uint32_t                : 6;
            __IOM uint32_t CAITV    : 5;
            uint32_t                : 3;
            __IOM uint32_t CASFTSTA : 5;
            uint32_t                : 3;
            __IOM uint32_t CASFTEND : 5;
            uint32_t                : 3;
        } CCCTL0_b;
    };

    union
    {
        __IOM uint32_t CCCTL1;

        struct
        {
            __IOM uint32_t CACMDSIZE  : 2;
            __IOM uint32_t CAADDSIZE  : 3;
            __IOM uint32_t CADATASIZE : 4;
            uint32_t                  : 7;
            __IOM uint32_t CAWRLATE   : 5;
            uint32_t                  : 3;
            __IOM uint32_t CARDLATE   : 5;
            uint32_t                  : 3;
        } CCCTL1_b;
    };

    union
    {
        __IOM uint32_t CCCTL2;

        struct
        {
            __IOM uint32_t CAWRCMD : 16;
            __IOM uint32_t CARDCMD : 16;
        } CCCTL2_b;
    };

    union
    {
        __IOM uint32_t CCCTL3;

        struct
        {
            __IOM uint32_t CAADD : 32;
        } CCCTL3_b;
    };

    union
    {
        __IOM uint32_t CCCTL4;

        struct
        {
            __IOM uint32_t CADATA : 32;
        } CCCTL4_b;
    };

    union
    {
        __IOM uint32_t CCCTL5;

        struct
        {
            __IOM uint32_t CADATA : 32;
        } CCCTL5_b;
    };

    union
    {
        __IOM uint32_t CCCTL6;

        struct
        {
            __IOM uint32_t CADATA : 32;
        } CCCTL6_b;
    };

    union
    {
        __IOM uint32_t CCCTL7;

        struct
        {
            __IOM uint32_t CADATA : 32;
        } CCCTL7_b;
    };
} R_XSPI_CCCTLCS_Type;

/**
 * @brief R_AGTX0_AGT16_CTRL [CTRL] (CTRL)
 */
typedef struct
{
    union
    {
        __IOM uint8_t AGTCR;

        struct
        {
            __IOM uint8_t TSTART : 1;
            __IM uint8_t  TCSTF  : 1;
            __OM uint8_t  TSTOP  : 1;
            uint8_t              : 1;
            __IOM uint8_t TEDGF  : 1;
            __IOM uint8_t TUNDF  : 1;
            __IOM uint8_t TCMAF  : 1;
            __IOM uint8_t TCMBF  : 1;
        } AGTCR_b;
    };

    union
    {
        __IOM uint8_t AGTMR1;

        struct
        {
            __IOM uint8_t TMOD   : 3;
            __IOM uint8_t TEDGPL : 1;
            __IOM uint8_t TCK    : 3;
            uint8_t              : 1;
        } AGTMR1_b;
    };

    union
    {
        __IOM uint8_t AGTMR2;

        struct
        {
            __IOM uint8_t CKS : 3;     /*!< [2..0] AGTLCLK/AGTSCLK count source clock frequency division
                                        *   ratio                                                                     */
            uint8_t           : 4;
            __IOM uint8_t LPM : 1;
        } AGTMR2_b;
    };

    union
    {
        __IOM uint8_t AGTIOSEL_ALT;

        struct
        {
            __IOM uint8_t SEL  : 2;
            uint8_t            : 2;
            __IOM uint8_t TIES : 1;
            uint8_t            : 3;
        } AGTIOSEL_ALT_b;
    };

    union
    {
        __IOM uint8_t AGTIOC;

        struct
        {
            __IOM uint8_t TEDGSEL : 1; /*!< [0..0] I/O polarity switchFunction varies depending on the operating
                                        *   mode.                                                                     */
            uint8_t             : 1;
            __IOM uint8_t TOE   : 1;
            uint8_t             : 1;
            __IOM uint8_t TIPF  : 2;
            __IOM uint8_t TIOGT : 2;
        } AGTIOC_b;
    };

    union
    {
        __IOM uint8_t AGTISR;

        struct
        {
            uint8_t            : 2;
            __IOM uint8_t EEPS : 1;
            uint8_t            : 5;
        } AGTISR_b;
    };

    union
    {
        __IOM uint8_t AGTCMSR;

        struct
        {
            __IOM uint8_t TCMEA  : 1;
            __IOM uint8_t TOEA   : 1;
            __IOM uint8_t TOPOLA : 1;
            uint8_t              : 1;
            __IOM uint8_t TCMEB  : 1;
            __IOM uint8_t TOEB   : 1;
            __IOM uint8_t TOPOLB : 1;
            uint8_t              : 1;
        } AGTCMSR_b;
    };

    union
    {
        __IOM uint8_t AGTIOSEL;

        struct
        {
            __IOM uint8_t SEL  : 2;
            uint8_t            : 2;
            __IOM uint8_t TIES : 1;
            uint8_t            : 3;
        } AGTIOSEL_b;
    };
} R_AGTX0_AGT16_CTRL_Type;

/**
 * @brief R_AGTX0_AGT16 [AGT16] (AGT (16-bit) peripheral registers)
 */
typedef struct
{
    union
    {
        __IOM uint16_t AGT;

        struct
        {
            __IOM uint16_t AGT : 16;   /*!< [15..0] 16bit counter and reload register. NOTE : When 1 is
                                        *   written to the TSTOP bit in the AGTCRn register, the 16-bit
                                        *   counter is forcibly stopped and set to FFFFH.                             */
        } AGT_b;
    };

    union
    {
        __IOM uint16_t AGTCMA;

        struct
        {
            __IOM uint16_t AGTCMA : 16; /*!< [15..0] AGT Compare Match A data is stored.NOTE : When 1 is
                                         *   written to the TSTOP bit in the AGTCRn register, set to
                                         *   FFFFH                                                                     */
        } AGTCMA_b;
    };

    union
    {
        __IOM uint16_t AGTCMB;

        struct
        {
            __IOM uint16_t AGTCMB : 16; /*!< [15..0] AGT Compare Match B data is stored.NOTE : When 1 is
                                         *   written to the TSTOP bit in the AGTCR register, set to
                                         *   FFFFH                                                                     */
        } AGTCMB_b;
    };
    __IM uint16_t                 RESERVED;
    __IOM R_AGTX0_AGT16_CTRL_Type CTRL;
} R_AGTX0_AGT16_Type;

/**
 * @brief R_AGTX0_AGT32 [AGT32] (AGTW (32-bit) peripheral registers)
 */
typedef struct
{
    union
    {
        __IOM uint32_t AGT;

        struct
        {
            __IOM uint32_t AGT : 32;   /*!< [31..0] 32bit counter and reload register. NOTE : When 1 is
                                        *   written to the TSTOP bit in the AGTCRn register, the 16-bit
                                        *   counter is forcibly stopped and set to FFFFH.                             */
        } AGT_b;
    };

    union
    {
        __IOM uint32_t AGTCMA;

        struct
        {
            __IOM uint32_t AGTCMA : 32; /*!< [31..0] AGT Compare Match A data is stored.NOTE : When 1 is
                                         *   written to the TSTOP bit in the AGTCRn register, set to
                                         *   FFFFH                                                                     */
        } AGTCMA_b;
    };

    union
    {
        __IOM uint32_t AGTCMB;

        struct
        {
            __IOM uint32_t AGTCMB : 32; /*!< [31..0] AGT Compare Match B data is stored.NOTE : When 1 is
                                         *   written to the TSTOP bit in the AGTCR register, set to
                                         *   FFFFH                                                                     */
        } AGTCMB_b;
    };
    __IOM R_AGTX0_AGT16_CTRL_Type CTRL;
} R_AGTX0_AGT32_Type;

/**
 * @brief R_OFS_DATAFLASH_CFGDLOCK_CFGD [CFGD] (Configuration Data [0..1] Lock Bits)
 */
typedef struct
{
    union
    {
        __IM uint32_t CFGD_L;

        struct
        {
            __IM uint32_t CDLK0  : 1;
            __IM uint32_t CDLK1  : 1;
            __IM uint32_t CDLK2  : 1;
            __IM uint32_t CDLK3  : 1;
            __IM uint32_t CDLK4  : 1;
            __IM uint32_t CDLK5  : 1;
            __IM uint32_t CDLK6  : 1;
            __IM uint32_t CDLK7  : 1;
            __IM uint32_t CDLK8  : 1;
            __IM uint32_t CDLK9  : 1;
            __IM uint32_t CDLK10 : 1;
            __IM uint32_t CDLK11 : 1;
            __IM uint32_t CDLK12 : 1;
            __IM uint32_t CDLK13 : 1;
            __IM uint32_t CDLK14 : 1;
            __IM uint32_t CDLK15 : 1;
            __IM uint32_t CDLK16 : 1;
            __IM uint32_t CDLK17 : 1;
            __IM uint32_t CDLK18 : 1;
            __IM uint32_t CDLK19 : 1;
            __IM uint32_t CDLK20 : 1;
            __IM uint32_t CDLK21 : 1;
            __IM uint32_t CDLK22 : 1;
            __IM uint32_t CDLK23 : 1;
            __IM uint32_t CDLK24 : 1;
            __IM uint32_t CDLK25 : 1;
            __IM uint32_t CDLK26 : 1;
            __IM uint32_t CDLK27 : 1;
            __IM uint32_t CDLK28 : 1;
            __IM uint32_t CDLK29 : 1;
            __IM uint32_t CDLK30 : 1;
            __IM uint32_t CDLK31 : 1;
        } CFGD_L_b;
    };

    union
    {
        __IM uint32_t CFGD_H;

        struct
        {
            __IM uint32_t CDLK32 : 1;
            __IM uint32_t CDLK33 : 1;
            __IM uint32_t CDLK34 : 1;
            __IM uint32_t CDLK35 : 1;
            __IM uint32_t CDLK36 : 1;
            __IM uint32_t CDLK37 : 1;
            __IM uint32_t CDLK38 : 1;
            __IM uint32_t CDLK39 : 1;
            __IM uint32_t CDLK40 : 1;
            __IM uint32_t CDLK41 : 1;
            __IM uint32_t CDLK42 : 1;
            __IM uint32_t CDLK43 : 1;
            __IM uint32_t CDLK44 : 1;
            __IM uint32_t CDLK45 : 1;
            __IM uint32_t CDLK46 : 1;
            __IM uint32_t CDLK47 : 1;
            __IM uint32_t CDLK48 : 1;
            __IM uint32_t CDLK49 : 1;
            __IM uint32_t CDLK50 : 1;
            __IM uint32_t CDLK51 : 1;
            __IM uint32_t CDLK52 : 1;
            __IM uint32_t CDLK53 : 1;
            __IM uint32_t CDLK54 : 1;
            __IM uint32_t CDLK55 : 1;
            __IM uint32_t CDLK56 : 1;
            __IM uint32_t CDLK57 : 1;
            __IM uint32_t CDLK58 : 1;
            __IM uint32_t CDLK59 : 1;
            __IM uint32_t CDLK60 : 1;
            __IM uint32_t CDLK61 : 1;
            __IM uint32_t CDLK62 : 1;
            __IM uint32_t CDLK63 : 1;
        } CFGD_H_b;
    };
} R_OFS_DATAFLASH_CFGDLOCK_CFGD_Type;

/**
 * @brief R_OFS_DATAFLASH_CFGDLOCK [CFGDLOCK] (Configuration Data Lock Bits)
 */
typedef struct
{
    __IOM R_OFS_DATAFLASH_CFGDLOCK_CFGD_Type CFGD0;
    __IOM R_OFS_DATAFLASH_CFGDLOCK_CFGD_Type CFGD1;

    union
    {
        __IM uint16_t CFGD2;

        struct
        {
            __IM uint16_t CDLK0  : 1;
            __IM uint16_t CDLK1  : 1;
            __IM uint16_t CDLK2  : 1;
            __IM uint16_t CDLK3  : 1;
            __IM uint16_t CDLK4  : 1;
            __IM uint16_t CDLK5  : 1;
            __IM uint16_t CDLK6  : 1;
            __IM uint16_t CDLK7  : 1;
            __IM uint16_t CDLK8  : 1;
            __IM uint16_t CDLK9  : 1;
            __IM uint16_t CDLK10 : 1;
            __IM uint16_t CDLK11 : 1;
            __IM uint16_t CDLK12 : 1;
            __IM uint16_t CDLK13 : 1;
            __IM uint16_t CDLK14 : 1;
            __IM uint16_t CDLK15 : 1;
        } CFGD2_b;
    };
    __IM uint16_t RESERVED;
} R_OFS_DATAFLASH_CFGDLOCK_Type;

/** @} */ /* End of group Device_Peripheral_clusters */

/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */

/** @addtogroup Device_Peripheral_peripherals
 * @{
 */

/* =========================================================================================================================== */
/* ================                                         R_ACMPHS0                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief High-Speed Analog Comparator (R_ACMPHS0)
 */

typedef struct
{
    union
    {
        __IOM uint8_t CMPCTL;

        struct
        {
            __IOM uint8_t CINV   : 1;
            __IOM uint8_t COE    : 1;
            __IOM uint8_t CSTEN  : 1;
            __IOM uint8_t CEG    : 2;
            __IOM uint8_t CDFS   : 2;
            __IOM uint8_t HCMPON : 1;
        } CMPCTL_b;
    };
    __IM uint8_t RESERVED[3];

    union
    {
        __IOM uint8_t CMPSEL0;

        struct
        {
            __IOM uint8_t CMPSEL : 4;
            uint8_t              : 4;
        } CMPSEL0_b;
    };
    __IM uint8_t RESERVED1[3];

    union
    {
        __IOM uint8_t CMPSEL1;

        struct
        {
            __IOM uint8_t CRVS : 6;
            uint8_t            : 2;
        } CMPSEL1_b;
    };
    __IM uint8_t RESERVED2[3];

    union
    {
        __IM uint8_t CMPMON;

        struct
        {
            __IM uint8_t CMPMON : 1;
            uint8_t             : 7;
        } CMPMON_b;
    };
    __IM uint8_t RESERVED3[3];

    union
    {
        __IOM uint8_t CPIOC;

        struct
        {
            __IOM uint8_t CPOE   : 1;
            uint8_t              : 6;
            __IOM uint8_t VREFEN : 1;
        } CPIOC_b;
    };
} R_ACMPHS0_Type;

/* =========================================================================================================================== */
/* ================                                          R_ADC0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief A/D Converter (R_ADC0)
 */

typedef struct
{
    union
    {
        __IOM uint16_t ADCSR;

        struct
        {
            __IOM uint16_t DBLANS : 5; /*!< [4..0] Double Trigger Channel SelectThese bits select one analog
                                        *   input channel for double triggered operation. The setting
                                        *   is only effective while double trigger mode is selected.                  */
            uint16_t              : 1;
            __IOM uint16_t GBADIE : 1;
            __IOM uint16_t DBLE   : 1;
            __IOM uint16_t EXTRG  : 1;
            __IOM uint16_t TRGE   : 1;
            __IOM uint16_t ADHSC  : 1;
            uint16_t              : 1;
            __IOM uint16_t ADIE   : 1;
            __IOM uint16_t ADCS   : 2;
            __IOM uint16_t ADST   : 1;
        } ADCSR_b;
    };

    union
    {
        __IOM uint8_t ADREF;

        struct
        {
            __IOM uint8_t ADF : 1;     /*!< [0..0] Scanning end flag bitThis bit is a status bit that becomes
                                        *   '1' while scanning.                                                       */
            uint8_t              : 6;
            __IM uint8_t ADSCACT : 1;
        } ADREF_b;
    };

    union
    {
        __IOM uint8_t ADEXREF;

        struct
        {
            __IOM uint8_t GBADF : 1;
            uint8_t             : 7;
        } ADEXREF_b;
    };

    union
    {
        __IOM uint16_t ADANSA[2];

        struct
        {
            __IOM uint16_t ANSA0  : 1;
            __IOM uint16_t ANSA1  : 1;
            __IOM uint16_t ANSA2  : 1;
            __IOM uint16_t ANSA3  : 1;
            __IOM uint16_t ANSA4  : 1;
            __IOM uint16_t ANSA5  : 1;
            __IOM uint16_t ANSA6  : 1;
            __IOM uint16_t ANSA7  : 1;
            __IOM uint16_t ANSA8  : 1;
            __IOM uint16_t ANSA9  : 1;
            __IOM uint16_t ANSA10 : 1;
            __IOM uint16_t ANSA11 : 1;
            __IOM uint16_t ANSA12 : 1;
            __IOM uint16_t ANSA13 : 1;
            __IOM uint16_t ANSA14 : 1;
            __IOM uint16_t ANSA15 : 1;
        } ADANSA_b[2];
    };

    union
    {
        __IOM uint16_t ADADS[2];       /*!< (@ 0x00000008) A/D-Converted Value Addition/Average Channel
                                        *                  Select Register                                            */

        struct
        {
            __IOM uint16_t ADS0  : 1;
            __IOM uint16_t ADS1  : 1;
            __IOM uint16_t ADS2  : 1;
            __IOM uint16_t ADS3  : 1;
            __IOM uint16_t ADS4  : 1;
            __IOM uint16_t ADS5  : 1;
            __IOM uint16_t ADS6  : 1;
            __IOM uint16_t ADS7  : 1;
            __IOM uint16_t ADS8  : 1;
            __IOM uint16_t ADS9  : 1;
            __IOM uint16_t ADS10 : 1;
            __IOM uint16_t ADS11 : 1;
            __IOM uint16_t ADS12 : 1;
            __IOM uint16_t ADS13 : 1;
            __IOM uint16_t ADS14 : 1;
            __IOM uint16_t ADS15 : 1;
        } ADADS_b[2];
    };

    union
    {
        __IOM uint8_t ADADC;           /*!< (@ 0x0000000C) A/D-Converted Value Addition/Average Count Select
                                        *                  Register                                                   */

        struct
        {
            __IOM uint8_t ADC : 3;     /*!< [2..0] Addition frequency selection bit.NOTE: AVEE bit is valid
                                        *   at the only setting of ADC[2:0] bits = 001b or 011b. When
                                        *   average mode is selected by setting the ADADC.AVEE bit
                                        *   to 1, do not set the addition count to three times (ADADC.ADC[2:0]
                                        *   = 010b)                                                                   */
            uint8_t            : 4;
            __IOM uint8_t AVEE : 1;    /*!< [7..7] Average Mode Enable. NOTE:When average mode is deselected
                                        *   by setting the ADADC.AVEE bit to 0, set the addition count
                                        *   to 1, 2, 3, 4 or 16-time conversion. 16-time conversion
                                        *   can only be used with 12-bit accuracy selected. NOTE: AVEE
                                        *   bit is valid at the only setting of ADC[2:0] bits = 001b
                                        *   or 011b. When average mode is selected by setting the ADADC.AVEE
                                        *   bit to 1, do not set the addition count to three times
                                        *   (ADADC.ADC[2:0] = 010b)                                                   */
        } ADADC_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        __IOM uint16_t ADCER;

        struct
        {
            uint16_t               : 1;
            __IOM uint16_t ADPRC   : 2;
            uint16_t               : 1;
            __IOM uint16_t DCE     : 1;
            __IOM uint16_t ACE     : 1;
            uint16_t               : 2;
            __IOM uint16_t DIAGVAL : 2;
            __IOM uint16_t DIAGLD  : 1;
            __IOM uint16_t DIAGM   : 1;
            uint16_t               : 2;
            __IOM uint16_t ADINV   : 1;
            __IOM uint16_t ADRFMT  : 1;
        } ADCER_b;
    };

    union
    {
        __IOM uint16_t ADSTRGR;

        struct
        {
            __IOM uint16_t TRSB : 6;   /*!< [5..0] A/D Conversion Start Trigger Select for Group BSelect
                                        *   the A/D conversion start trigger for group B in group scan
                                        *   mode.                                                                     */
            uint16_t            : 2;
            __IOM uint16_t TRSA : 6;   /*!< [13..8] A/D Conversion Start Trigger SelectSelect the A/D conversion
                                        *   start trigger in single scan mode and continuous mode.
                                        *   In group scan mode, the A/D conversion start trigger for
                                        *   group A is selected.                                                      */
            uint16_t : 2;
        } ADSTRGR_b;
    };

    union
    {
        __IOM uint16_t ADEXICR;

        struct
        {
            __IOM uint16_t TSSAD : 1;  /*!< [0..0] Temperature Sensor Output A/D converted Value Addition/Average
                                        *   Mode Select                                                               */
            __IOM uint16_t OCSAD : 1;  /*!< [1..1] Internal Reference Voltage A/D converted Value Addition/Average
                                        *   Mode Select                                                               */
            uint16_t            : 6;
            __IOM uint16_t TSSA : 1;
            __IOM uint16_t OCSA : 1;
            __IOM uint16_t TSSB : 1;   /*!< [10..10] Temperature Sensor Output A/D Conversion Select for
                                        *   Group B in group scan mode.                                               */
            __IOM uint16_t OCSB : 1;   /*!< [11..11] Internal Reference Voltage A/D Conversion Select for
                                        *   Group B in group scan mode.                                               */
            uint16_t             : 2;
            __IOM uint16_t EXSEL : 1;
            __IOM uint16_t EXOEN : 1;
        } ADEXICR_b;
    };

    union
    {
        __IOM uint16_t ADANSB[2];

        struct
        {
            __IOM uint16_t ANSB0  : 1;
            __IOM uint16_t ANSB1  : 1;
            __IOM uint16_t ANSB2  : 1;
            __IOM uint16_t ANSB3  : 1;
            __IOM uint16_t ANSB4  : 1;
            __IOM uint16_t ANSB5  : 1;
            __IOM uint16_t ANSB6  : 1;
            __IOM uint16_t ANSB7  : 1;
            __IOM uint16_t ANSB8  : 1;
            __IOM uint16_t ANSB9  : 1;
            __IOM uint16_t ANSB10 : 1;
            __IOM uint16_t ANSB11 : 1;
            __IOM uint16_t ANSB12 : 1;
            __IOM uint16_t ANSB13 : 1;
            __IOM uint16_t ANSB14 : 1;
            __IOM uint16_t ANSB15 : 1;
        } ADANSB_b[2];
    };

    union
    {
        __IM uint16_t ADDBLDR;

        struct
        {
            __IM uint16_t ADDBLDR : 16; /*!< [15..0] This is a 16-bit read-only register for storing the
                                         *   result of A/D conversion in response to the second trigger
                                         *   in double trigger mode.                                                   */
        } ADDBLDR_b;
    };

    union
    {
        __IM uint16_t ADTSDR;

        struct
        {
            __IM uint16_t ADTSDR : 16; /*!< [15..0] This is a 16-bit read-only register for storing the
                                        *   A/D conversion result of temperature sensor output.                       */
        } ADTSDR_b;
    };

    union
    {
        __IM uint16_t ADOCDR;

        struct
        {
            __IM uint16_t ADOCDR : 16; /*!< [15..0] This is a 16-bit read-only register for storing the
                                        *   A/D result of internal reference voltage.                                 */
        } ADOCDR_b;
    };

    union
    {
        union
        {
            __IM uint16_t ADRD_RIGHT;

            struct
            {
                __IM uint16_t AD : 14;    /*!< [13..0] A/D-converted value (right-justified)The format for
                                           *   data determine ADCER.ADRFMT and ADCER.ADPRC.                              */
                __IM uint16_t DIAGST : 2;
            } ADRD_RIGHT_b;
        };

        union
        {
            __IM uint16_t ADRD_LEFT;

            struct
            {
                __IM uint16_t DIAGST : 2;
                __IM uint16_t AD     : 14; /*!< [15..2] A/D-converted value (right-justified)The format for
                                            *   data determine ADCER.ADRFMT and ADCER.ADPRC.                              */
            } ADRD_LEFT_b;
        };
    };

    union
    {
        __IM uint16_t ADDR[29];

        struct
        {
            __IM uint16_t ADDR : 16;   /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                        *   storing the result of A/D conversion.                                     */
        } ADDR_b[29];
    };
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2;
    __IM uint16_t RESERVED3;

    union
    {
        __IOM uint8_t ADAMPOFF;

        struct
        {
            __IOM uint8_t OPOFF : 8;
        } ADAMPOFF_b;
    };

    union
    {
        __IOM uint8_t ADTSTPR;

        struct
        {
            __IOM uint8_t PRO  : 1;
            __IOM uint8_t B0WI : 1;
            uint8_t            : 6;
        } ADTSTPR_b;
    };

    union
    {
        __IOM uint16_t ADDDACER;

        struct
        {
            __IOM uint16_t WRION  : 5;
            uint16_t              : 3;
            __IOM uint16_t WRIOFF : 5;
            uint16_t              : 2;
            __IOM uint16_t ADHS   : 1;
        } ADDDACER_b;
    };

    union
    {
        __IOM uint16_t ADSHCR;

        struct
        {
            __IOM uint16_t SSTSH : 8;  /*!< [7..0] Channel-Dedicated Sample-and-Hold Circuit Sampling Time
                                        *   Setting Set the sampling time (4 to 255 states)                           */
            __IOM uint16_t SHANS0 : 1;
            __IOM uint16_t SHANS1 : 1;
            __IOM uint16_t SHANS2 : 1;
            uint16_t              : 5;
        } ADSHCR_b;
    };

    union
    {
        __IOM uint16_t ADEXTSTR;

        struct
        {
            __IOM uint16_t SHTEST : 3; /*!< [2..0] Test mode bit for S&H circuit.Test mode bit of S&H circuit
                                        *   only for channel.                                                         */
            uint16_t             : 1;
            __IOM uint16_t SWTST : 2;
            uint16_t             : 2;
            __IOM uint16_t SHTRM : 2;  /*!< [9..8] Current adjustment trim bit for S&H circuit.Trim bit
                                        *   for adjustment to hardening of process.                                   */
            uint16_t              : 1;
            __IOM uint16_t ADTRM3 : 1; /*!< [11..11] Trim bit 3 for A/D hard macro.3bit Flash comparator
                                        *   power save bit for A/D hard macro to hardening of process.                */
            __IOM uint16_t ADTRM2 : 2; /*!< [13..12] Trim bit 2 for A/D hard macro.Bias adjustment trim
                                        *   bit for A/D hard macro to hardening of process.                           */
            __IOM uint16_t ADTRM1 : 2; /*!< [15..14] Trim bit 1 for A/D hard macro.Timing adjustment trim
                                        *   bit for A/D hard macro to hardening of process.                           */
        } ADEXTSTR_b;
    };

    union
    {
        __IOM uint16_t ADTSTRA;

        struct
        {
            __IOM uint16_t ATBUSSEL : 1;
            __IOM uint16_t TSTSWREF : 3;  /*!< [3..1] Pressure switch refreshing setting bit for S&H circuit
                                           *   amplifier test.Refreshing the pressure switch that opens
                                           *   for the DAC output voltage charge period when the amplifier
                                           *   of the S&H circuit is tested only for the channel is set.                 */
            uint16_t            : 1;
            __IOM uint16_t OCSW : 1;      /*!< [5..5] Internal reference voltage analog switch test control
                                           *   bit.                                                                      */
            __IOM uint16_t TSSW : 1;      /*!< [6..6] Temperature sensor output analogue switch test control
                                           *   bit                                                                       */
            uint16_t                 : 1;
            __IOM uint16_t ADTEST_AD : 4; /*!< [11..8] Test bit for A/D analog module Bit for test of A/D analog
                                           *   module Details are described to the bit explanation.                      */
            __IOM uint16_t ADTEST_IO : 4; /*!< [15..12] Test bit for analog I/ODetails are described to the
                                           *   bit explanation.                                                          */
        } ADTSTRA_b;
    };

    union
    {
        __IOM uint16_t ADTSTRB;

        struct
        {
            __IOM uint16_t ADVAL : 15; /*!< [14..0] Signal input bit bit14-0 for A/D analog module test.It
                                        *   corresponds to ADVAL 14:0 input of A/D analog module.                     */
            uint16_t : 1;
        } ADTSTRB_b;
    };

    union
    {
        __IOM uint16_t ADTSTRC;

        struct
        {
            __IOM uint16_t ADMD : 8;    /*!< [7..0] Bit for A/D analog module test.ADMODE 6:0 input of A/D
                                         *   analog module.                                                            */
            uint16_t               : 4;
            __IOM uint16_t SYNCERR : 1;
            uint16_t               : 3;
        } ADTSTRC_b;
    };

    union
    {
        __IOM uint16_t ADTSTRD;

        struct
        {
            __IOM uint16_t ADVAL16 : 1; /*!< [0..0] Signal input bit bit16 for A/D analog module test.It
                                         *   corresponds to ADVAL 16 input of A/D analog module.                       */
            uint16_t : 15;
        } ADTSTRD_b;
    };

    union
    {
        __IOM uint16_t ADSWTSTR0;

        struct
        {
            __IOM uint16_t CHSW00 : 1;
            __IOM uint16_t CHSW01 : 1;
            __IOM uint16_t CHSW02 : 1;
            __IOM uint16_t CHSW03 : 1;
            __IOM uint16_t CHSW04 : 1;
            __IOM uint16_t CHSW05 : 1;
            uint16_t              : 10;
        } ADSWTSTR0_b;
    };

    union
    {
        __IOM uint16_t ADSWTSTR1;

        struct
        {
            __IOM uint16_t CHSW16 : 1;
            __IOM uint16_t CHSW17 : 1;
            __IOM uint16_t CHSW18 : 1;
            __IOM uint16_t CHSW19 : 1;
            __IOM uint16_t CHSW20 : 1;
            __IOM uint16_t CHSW21 : 1;
            uint16_t              : 10;
        } ADSWTSTR1_b;
    };

    union
    {
        __IOM uint16_t ADSWTSTR2;

        struct
        {
            __IOM uint16_t EX0SW : 1;    /*!< [0..0] Test control of 0 enhancing input channel switches bit
                                          *   (ANEX0 switch)                                                            */
            __IOM uint16_t EX1SW : 1;    /*!< [1..1] Test control of one enhancing input channel switch bit
                                          *   (ANEX1 switch).                                                           */
            uint16_t                : 2;
            __IOM uint16_t SHBYPS0  : 1;
            __IOM uint16_t SHBYPS1  : 1;
            __IOM uint16_t SHBYPS2  : 1;
            uint16_t                : 1;
            __IOM uint16_t GRP0SW   : 1;
            __IOM uint16_t GRP1SW   : 1;
            __IOM uint16_t GRP2SW   : 1;
            __IOM uint16_t GRP3SW   : 1;
            __IOM uint16_t GRPEX1SW : 1;
            uint16_t                : 3;
        } ADSWTSTR2_b;
    };
    __IM uint16_t RESERVED4;

    union
    {
        __IOM uint8_t ADDISCR;

        struct
        {
            __IOM uint8_t ADNDIS : 4;
            __IOM uint8_t CHARGE : 1;
            uint8_t              : 3;
        } ADDISCR_b;
    };

    union
    {
        __IOM uint8_t ADSWCR;

        struct
        {
            __IOM uint8_t ADSWREF : 3; /*!< [2..0] These bits are read as 0. The write value should be 0.Refreshing
                                        *   the pressure switch in A/D analog module is set.                          */
            uint8_t               : 1;
            __IOM uint8_t SHSWREF : 3;
            uint8_t               : 1;
        } ADSWCR_b;
    };

    union
    {
        __IOM uint8_t ADSHMSR;

        struct
        {
            __IOM uint8_t SHMD : 1;    /*!< [0..0] Channel-Dedicated Sample-and-Hold Circuit Operation Mode
                                        *   Select                                                                    */
            uint8_t : 7;
        } ADSHMSR_b;
    };

    union
    {
        __IOM uint8_t ADICR;

        struct
        {
            __IOM uint8_t ADIC : 2;
            uint8_t            : 6;
        } ADICR_b;
    };

    union
    {
        __IOM uint8_t ADACSR;

        struct
        {
            uint8_t             : 1;
            __IOM uint8_t ADSAC : 1;
            uint8_t             : 6;
        } ADACSR_b;
    };
    __IM uint8_t RESERVED5;

    union
    {
        __IOM uint16_t ADGSPCR;

        struct
        {
            __IOM uint16_t PGS : 1;     /*!< [0..0] Group A priority control setting bit.Note: When the PGS
                                         *   bit is to be set to 1, the ADCSR.ADCS[1:0] bits must be
                                         *   set to 01b (group scan mode). If the bits are set to any
                                         *   other values, proper operation is not guaranteed.                         */
            __IOM uint16_t GBRSCN : 1;  /*!< [1..1] Group B Restart Setting(Enabled only when PGS = 1. Reserved
                                         *   when PGS = 0.)                                                            */
            uint16_t               : 6;
            __IOM uint16_t GBEXTRG : 1;
            uint16_t               : 6;
            __IOM uint16_t GBRP    : 1; /*!< [15..15] Group B Single Scan Continuous Start(Enabled only when
                                         *   PGS = 1. Reserved when PGS = 0.)Note: When the GBRP bit
                                         *   has been set to 1, single scan is performed continuously
                                         *   for group B regardless of the setting of the GBRSCN bit.                  */
        } ADGSPCR_b;
    };

    union
    {
        __IM uint16_t ADGSCS;          /*!< (@ 0x00000082) A/D Conversion Channel Status Register (for Group
                                        *                  Scan)                                                      */

        struct
        {
            __IM uint16_t CHSELGB : 8;
            __IM uint16_t CHSELGA : 8;
        } ADGSCS_b;
    };

    union
    {
        __IM uint16_t ADDBLDRA;

        struct
        {
            __IM uint16_t ADDBLDRA : 16; /*!< [15..0] This register is a 16-bit read-only registers for storing
                                          *   the result of A/D conversion in response to the respective
                                          *   triggers during extended operation in double trigger mode.                */
        } ADDBLDRA_b;
    };

    union
    {
        __IM uint16_t ADDBLDRB;

        struct
        {
            __IM uint16_t ADDBLDRB : 16; /*!< [15..0] This register is a 16-bit read-only registers for storing
                                          *   the result of A/D conversion in response to the respective
                                          *   triggers during extended operation in double trigger mode.                */
        } ADDBLDRB_b;
    };

    union
    {
        __IOM uint8_t ADSER;

        struct
        {
            uint8_t             : 7;
            __IOM uint8_t SMPEX : 1;
        } ADSER_b;
    };
    __IM uint8_t RESERVED6;

    union
    {
        __IOM uint8_t ADHVREFCNT;      /*!< (@ 0x0000008A) A/D High-Potential/Low-Potential Reference Voltage
                                        *                  Control Register                                           */

        struct
        {
            __IOM uint8_t HVSEL : 2;
            uint8_t             : 2;
            __IOM uint8_t LVSEL : 1;
            uint8_t             : 2;
            __IOM uint8_t ADSLP : 1;
        } ADHVREFCNT_b;
    };
    __IM uint8_t RESERVED7;

    union
    {
        __IM uint8_t ADWINMON;         /*!< (@ 0x0000008C) A/D Compare Function Window A/B Status Monitor
                                        *                  Register                                                   */

        struct
        {
            __IM uint8_t MONCOMB : 1;  /*!< [0..0] Combination result monitorThis bit indicates the combination
                                        *   result.This bit is valid when both window A operation and
                                        *   window B operation are enabled.                                           */
            uint8_t              : 3;
            __IM uint8_t MONCMPA : 1;
            __IM uint8_t MONCMPB : 1;
            uint8_t              : 2;
        } ADWINMON_b;
    };
    __IM uint8_t  RESERVED8;
    __IM uint16_t RESERVED9;

    union
    {
        __IOM uint16_t ADCMPCR;

        struct
        {
            __IOM uint16_t CMPAB : 2;  /*!< [1..0] Window A/B Composite Conditions SettingNOTE: These bits
                                        *   are valid when both window A and window B are enabled (CMPAE
                                        *   = 1 and CMPBE = 1).                                                       */
            uint16_t              : 7;
            __IOM uint16_t CMPBE  : 1;
            uint16_t              : 1;
            __IOM uint16_t CMPAE  : 1;
            uint16_t              : 1;
            __IOM uint16_t CMPBIE : 1;
            __IOM uint16_t WCMPE  : 1;
            __IOM uint16_t CMPAIE : 1;
        } ADCMPCR_b;
    };

    union
    {
        __IOM uint8_t ADCMPANSER;      /*!< (@ 0x00000092) A/D Compare Function Window A Extended Input
                                        *                  Select Register                                            */

        struct
        {
            __IOM uint8_t CMPTSA : 1;
            __IOM uint8_t CMPOCA : 1;
            uint8_t              : 6;
        } ADCMPANSER_b;
    };

    union
    {
        __IOM uint8_t ADCMPLER;        /*!< (@ 0x00000093) A/D Compare Function Window A Extended Input
                                        *                  Comparison Condition Setting Register                      */

        struct
        {
            __IOM uint8_t CMPLTSA : 1; /*!< [0..0] Compare Window A Temperature Sensor Output Comparison
                                        *   Condition Select                                                          */
            __IOM uint8_t CMPLOCA : 1; /*!< [1..1] Compare Window A Internal Reference Voltage ComparisonCondition
                                        *   Select                                                                    */
            uint8_t : 6;
        } ADCMPLER_b;
    };

    union
    {
        __IOM uint16_t ADCMPANSR[2];     /*!< (@ 0x00000094) A/D Compare Function Window A Channel Select
                                          *                  Register                                                   */

        struct
        {
            __IOM uint16_t CMPCHA0  : 1;
            __IOM uint16_t CMPCHA1  : 1;
            __IOM uint16_t CMPCHA2  : 1;
            __IOM uint16_t CMPCHA3  : 1;
            __IOM uint16_t CMPCHA4  : 1;
            __IOM uint16_t CMPCHA5  : 1;
            __IOM uint16_t CMPCHA6  : 1;
            __IOM uint16_t CMPCHA7  : 1;
            __IOM uint16_t CMPCHA8  : 1;
            __IOM uint16_t CMPCHA9  : 1;
            __IOM uint16_t CMPCHA10 : 1;
            __IOM uint16_t CMPCHA11 : 1;
            __IOM uint16_t CMPCHA12 : 1;
            __IOM uint16_t CMPCHA13 : 1;
            __IOM uint16_t CMPCHA14 : 1;
            __IOM uint16_t CMPCHA15 : 1;
        } ADCMPANSR_b[2];
    };

    union
    {
        __IOM uint16_t ADCMPLR[2];        /*!< (@ 0x00000098) A/D Compare Function Window A Comparison Condition
                                           *                  Setting Register                                           */

        struct
        {
            __IOM uint16_t CMPLCHA0  : 1;
            __IOM uint16_t CMPLCHA1  : 1;
            __IOM uint16_t CMPLCHA2  : 1;
            __IOM uint16_t CMPLCHA3  : 1;
            __IOM uint16_t CMPLCHA4  : 1;
            __IOM uint16_t CMPLCHA5  : 1;
            __IOM uint16_t CMPLCHA6  : 1;
            __IOM uint16_t CMPLCHA7  : 1;
            __IOM uint16_t CMPLCHA8  : 1;
            __IOM uint16_t CMPLCHA9  : 1;
            __IOM uint16_t CMPLCHA10 : 1;
            __IOM uint16_t CMPLCHA11 : 1;
            __IOM uint16_t CMPLCHA12 : 1;
            __IOM uint16_t CMPLCHA13 : 1;
            __IOM uint16_t CMPLCHA14 : 1;
            __IOM uint16_t CMPLCHA15 : 1;
        } ADCMPLR_b[2];
    };

    union
    {
        __IOM uint16_t ADCMPDR0;          /*!< (@ 0x0000009C) A/D Compare Function Window A Lower-Side Level
                                           *                  Setting Register                                           */

        struct
        {
            __IOM uint16_t ADCMPDR0 : 16; /*!< [15..0] The ADCMPDR0 register sets the reference data when the
                                           *   compare window A function is used. ADCMPDR0 sets the lower-side
                                           *   level of window A.                                                        */
        } ADCMPDR0_b;
    };

    union
    {
        __IOM uint16_t ADCMPDR1;          /*!< (@ 0x0000009E) A/D Compare Function Window A Upper-Side Level
                                           *                  Setting Register                                           */

        struct
        {
            __IOM uint16_t ADCMPDR1 : 16; /*!< [15..0] The ADCMPDR1 register sets the reference data when the
                                           *   compare window A function is used. ADCMPDR1 sets the upper-side
                                           *   level of window A..                                                       */
        } ADCMPDR1_b;
    };

    union
    {
        __IOM uint16_t ADCMPSR[2];         /*!< (@ 0x000000A0) A/D Compare Function Window A Channel Status
                                            *                  Register                                                   */

        struct
        {
            __IOM uint16_t CMPSTCHA0  : 1;
            __IOM uint16_t CMPSTCHA1  : 1;
            __IOM uint16_t CMPSTCHA2  : 1;
            __IOM uint16_t CMPSTCHA3  : 1;
            __IOM uint16_t CMPSTCHA4  : 1;
            __IOM uint16_t CMPSTCHA5  : 1;
            __IOM uint16_t CMPSTCHA6  : 1;
            __IOM uint16_t CMPSTCHA7  : 1;
            __IOM uint16_t CMPSTCHA8  : 1;
            __IOM uint16_t CMPSTCHA9  : 1;
            __IOM uint16_t CMPSTCHA10 : 1;
            __IOM uint16_t CMPSTCHA11 : 1;
            __IOM uint16_t CMPSTCHA12 : 1;
            __IOM uint16_t CMPSTCHA13 : 1;
            __IOM uint16_t CMPSTCHA14 : 1;
            __IOM uint16_t CMPSTCHA15 : 1;
        } ADCMPSR_b[2];
    };

    union
    {
        __IOM uint8_t ADCMPSER;         /*!< (@ 0x000000A4) A/D Compare Function Window A Extended Input
                                         *                  Channel Status Register                                    */

        struct
        {
            __IOM uint8_t CMPSTTSA : 1; /*!< [0..0] Compare Window A Temperature Sensor Output Compare Flag
                                         *   When window A operation is enabled (ADCMPCR.CMPAE = 1b),
                                         *   this bit indicates the temperature sensor output comparison
                                         *   result. When window A operation is disabled (ADCMPCR.CMPAE
                                         *   = 0b), comparison conditions for CMPSTTSA are not met any
                                         *   time.                                                                     */
            __IOM uint8_t CMPSTOCA : 1; /*!< [1..1] Compare Window A Internal Reference Voltage Compare Flag
                                         *   When window A operation is enabled (ADCMPCR.CMPAE = 1b),
                                         *   this bit indicates the temperature sensor output comparison
                                         *   result. When window A operation is disabled (ADCMPCR.CMPAE
                                         *   = 0b), comparison conditions for CMPSTTSA are not met any
                                         *   time.                                                                     */
            uint8_t : 6;
        } ADCMPSER_b;
    };
    __IM uint8_t RESERVED10;

    union
    {
        __IOM uint8_t ADCMPBNSR;       /*!< (@ 0x000000A6) A/D Compare Function Window B Channel Selection
                                        *                  Register                                                   */

        struct
        {
            __IOM uint8_t CMPCHB : 6;  /*!< [5..0] Compare window B channel selection bit.The channel that
                                        *   compares it on the condition of compare window B is selected.             */
            uint8_t             : 1;
            __IOM uint8_t CMPLB : 1;
        } ADCMPBNSR_b;
    };
    __IM uint8_t RESERVED11;

    union
    {
        __IOM uint16_t ADWINLLB;          /*!< (@ 0x000000A8) A/D Compare Function Window B Lower-Side Level
                                           *                  Setting Register                                           */

        struct
        {
            __IOM uint16_t ADWINLLB : 16; /*!< [15..0] This register is used to compare A window function is
                                           *   used to set the lower level of the window B.                              */
        } ADWINLLB_b;
    };

    union
    {
        __IOM uint16_t ADWINULB;          /*!< (@ 0x000000AA) A/D Compare Function Window B Upper-Side Level
                                           *                  Setting Register                                           */

        struct
        {
            __IOM uint16_t ADWINULB : 16; /*!< [15..0] This register is used to compare A window function is
                                           *   used to set the higher level of the window B.                             */
        } ADWINULB_b;
    };

    union
    {
        __IOM uint8_t ADCMPBSR;

        struct
        {
            __IOM uint8_t CMPSTB : 1;  /*!< [0..0] Compare window B flag.It is a status flag that shows
                                        *   the comparative result of CH (AN000-AN027, temperature
                                        *   sensor, and internal reference voltage) made the object
                                        *   of window B relation condition.                                           */
            uint8_t : 7;
        } ADCMPBSR_b;
    };
    __IM uint8_t  RESERVED12;
    __IM uint16_t RESERVED13;

    union
    {
        __IM uint16_t ADBUF0;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF0_b;
    };

    union
    {
        __IM uint16_t ADBUF1;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF1_b;
    };

    union
    {
        __IM uint16_t ADBUF2;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF2_b;
    };

    union
    {
        __IM uint16_t ADBUF3;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF3_b;
    };

    union
    {
        __IM uint16_t ADBUF4;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF4_b;
    };

    union
    {
        __IM uint16_t ADBUF5;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF5_b;
    };

    union
    {
        __IM uint16_t ADBUF6;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF6_b;
    };

    union
    {
        __IM uint16_t ADBUF7;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF7_b;
    };

    union
    {
        __IM uint16_t ADBUF8;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF8_b;
    };

    union
    {
        __IM uint16_t ADBUF9;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF9_b;
    };

    union
    {
        __IM uint16_t ADBUF10;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF10_b;
    };

    union
    {
        __IM uint16_t ADBUF11;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF11_b;
    };

    union
    {
        __IM uint16_t ADBUF12;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF12_b;
    };

    union
    {
        __IM uint16_t ADBUF13;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF13_b;
    };

    union
    {
        __IM uint16_t ADBUF14;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF14_b;
    };

    union
    {
        __IM uint16_t ADBUF15;

        struct
        {
            __IM uint16_t ADBUF : 16;  /*!< [15..0] A/D data buffer registers (ADBUF) are 16-bit read-only
                                        *   registers that sequentially store all A/D converted values.
                                        *   The automatic clear function is not applied to these registers.           */
        } ADBUF15_b;
    };

    union
    {
        __IOM uint8_t ADBUFEN;

        struct
        {
            __IOM uint8_t BUFEN : 1;
            uint8_t             : 7;
        } ADBUFEN_b;
    };
    __IM uint8_t RESERVED14;

    union
    {
        __IOM uint8_t ADBUFPTR;

        struct
        {
            __IM uint8_t BUFPTR : 4;   /*!< [3..0] Data Buffer PointerThese bits indicate the number of
                                        *   data buffer to which the next A/D converted data is transferred.          */
            __IM uint8_t PTROVF : 1;
            uint8_t             : 3;
        } ADBUFPTR_b;
    };
    __IM uint8_t  RESERVED15;
    __IM uint32_t RESERVED16[2];
    __IM uint8_t  RESERVED17;

    union
    {
        __IOM uint8_t ADSSTRL;

        struct
        {
            __IOM uint8_t SST : 8;
        } ADSSTRL_b;
    };

    union
    {
        __IOM uint8_t ADSSTRT;

        struct
        {
            __IOM uint8_t SST : 8;
        } ADSSTRT_b;
    };

    union
    {
        __IOM uint8_t ADSSTRO;

        struct
        {
            __IOM uint8_t SST : 8;
        } ADSSTRO_b;
    };

    union
    {
        __IOM uint8_t ADSSTR[16];

        struct
        {
            __IOM uint8_t SST : 8;
        } ADSSTR_b[16];
    };

    union
    {
        __IOM uint16_t ADANIM;

        struct
        {
            __IOM uint16_t ANIM0 : 1;
            __IOM uint16_t ANIM1 : 1;
            __IOM uint16_t ANIM2 : 1;
            __IOM uint16_t ANIM3 : 1;
            uint16_t             : 12;
        } ADANIM_b;
    };

    union
    {
        __IOM uint8_t ADCALEXE;

        struct
        {
            uint8_t              : 6;
            __IM uint8_t  CALMON : 1;
            __IOM uint8_t CALEXE : 1;
        } ADCALEXE_b;
    };
    __IM uint8_t RESERVED18;

    union
    {
        __IOM uint8_t VREFAMPCNT;        /*!< (@ 0x000000F4) A/D Dedicated Reference Voltage Circuit Control
                                          *                  Register                                                   */

        struct
        {
            __IOM uint8_t OLDETEN   : 1;
            __IOM uint8_t VREFADCG  : 2;
            __IOM uint8_t VREFADCEN : 1;
            __IOM uint8_t BGREN     : 1;
            uint8_t                 : 2;
            __IOM uint8_t ADSLP     : 1;
        } VREFAMPCNT_b;
    };
    __IM uint8_t  RESERVED19;
    __IM uint16_t RESERVED20;

    union
    {
        __IOM uint16_t ADRD;

        struct
        {
            __IM uint16_t AD : 16;
        } ADRD_b;
    };

    union
    {
        __IM uint8_t ADRST;

        struct
        {
            __IM uint8_t DIAGST : 2;
            uint8_t             : 6;
        } ADRST_b;
    };
    __IM uint8_t  RESERVED21;
    __IM uint32_t RESERVED22[41];

    union
    {
        __IOM uint16_t ADPGACR;

        struct
        {
            __IOM uint16_t P000SEL0  : 1;
            __IOM uint16_t P000SEL1  : 1;
            __IOM uint16_t P000ENAMP : 1;
            __IOM uint16_t P000GEN   : 1;
            __IOM uint16_t P001SEL0  : 1;
            __IOM uint16_t P001SEL1  : 1;
            __IOM uint16_t P001ENAMP : 1;
            __IOM uint16_t P001GEN   : 1;
            __IOM uint16_t P002SEL0  : 1;
            __IOM uint16_t P002SEL1  : 1;
            __IOM uint16_t P002ENAMP : 1;
            __IOM uint16_t P002GEN   : 1;
            __IOM uint16_t P003SEL0  : 1;
            __IOM uint16_t P003SEL1  : 1;
            __IOM uint16_t P003ENAMP : 1;
            __IOM uint16_t P003GEN   : 1;
        } ADPGACR_b;
    };

    union
    {
        __IOM uint16_t ADPGAGS0;         /*!< (@ 0x000001A2) A/D Programmable Gain Amplifier Gain Setting
                                          *                  Register 0                                                 */

        struct
        {
            __IOM uint16_t P000GAIN : 4; /*!< [3..0] PGA P000 gain setting bit.The gain magnification of (ADPGSDCR0.P000GEN=
                                          *   b) when the shingle end is input and each PGA P000 is set.
                                          *   When the differential motion is input, (ADPGSDCR0.P000GEN=1b)
                                          *   sets the gain magnification when the differential motion
                                          *   is input by the combination with ADPGSDCR0.P000DG 1:0.                    */
            __IOM uint16_t P001GAIN : 4; /*!< [7..4] PGA P001 gain setting bit.The gain magnification of (ADPGSDCR0.P001GEN=
                                          *   b) when the shingle end is input and each PGA P001 is set.
                                          *   When the differential motion is input, (ADPGSDCR0.P001GEN=1b)
                                          *   sets the gain magnification when the differential motion
                                          *   is input by the combination with ADPGSDCR0.P001DG 1:0.                    */
            __IOM uint16_t P002GAIN : 4; /*!< [11..8] PGA P002 gain setting bit.The gain magnification of
                                          *   (ADPGSDCR0.P002GEN=0b) when the shingle end is input and
                                          *   each PGA P002 is set. When the differential motion is input,
                                          *   (ADPGSDCR0.P002GEN=1b) sets the gain magnification when
                                          *   the differential motion is input by the combination with
                                          *   ADPGSDCR0.P002DG 1:0.                                                     */
            __IOM uint16_t P003GAIN : 4; /*!< [15..12] PGA P003 gain setting bit.The gain magnification of
                                          *   (ADPGSDCR0.P003GEN=0b) when the shingle end is input and
                                          *   each PGA P003 is set. When the differential motion is input,
                                          *   (ADPGSDCR0.P003GEN=1b) sets the gain magnification when
                                          *   the differential motion is input by the combination with
                                          *   ADPGSDCR0.P003DG 1:0.                                                     */
        } ADPGAGS0_b;
    };
    __IM uint32_t RESERVED23[3];

    union
    {
        __IOM uint16_t ADPGADCR0;       /*!< (@ 0x000001B0) A/D Programmable Gain Amplifier Differential
                                         *                  Input Control Register                                     */

        struct
        {
            __IOM uint16_t P000DG : 2;  /*!< [1..0] P000 Differential Input Gain SettingNOTE: When these
                                         *   bits are used, set {P000DEN, P000GEN} to 11b.                             */
            uint16_t               : 1;
            __IOM uint16_t P000DEN : 1;
            __IOM uint16_t P001DG  : 2; /*!< [5..4] P001 Differential Input Gain SettingNOTE: When these
                                         *   bits are used, set {P001DEN, P001GEN} to 11b.                             */
            uint16_t               : 1;
            __IOM uint16_t P001DEN : 1;
            __IOM uint16_t P002DG  : 2; /*!< [9..8] P002 Differential Input Gain SettingNOTE: When these
                                         *   bits are used, set {P002DEN, P002GEN} to 11b.                             */
            uint16_t               : 1;
            __IOM uint16_t P002DEN : 1;
            __IOM uint16_t P003DG  : 2; /*!< [13..12] P003 Differential Input Gain SettingNOTE: When these
                                         *   bits are used, set {P003DEN, P003GEN} to 11b.                             */
            uint16_t               : 1;
            __IOM uint16_t P003DEN : 1;
        } ADPGADCR0_b;
    };
    __IM uint16_t RESERVED24;

    union
    {
        __IOM uint8_t ADPGADBS0;       /*!< (@ 0x000001B4) A/D Programmable Gain Amplifier Differential
                                        *                  Input Bias Select Register 0                               */

        struct
        {
            __IOM uint8_t P0BIAS : 1;  /*!< [0..0] Programmable Gain Amplifiers P000 to P002 Bias Voltage
                                        *   SelectNOTE: This bit selects the input bias voltage value
                                        *   when differential inputs are used.                                        */
            uint8_t : 7;
        } ADPGADBS0_b;
    };

    union
    {
        __IOM uint8_t ADPGADBS1;       /*!< (@ 0x000001B5) A/D Programmable Gain Amplifier Differential
                                        *                  Input Bias Select Register 1                               */

        struct
        {
            __IOM uint8_t P3BIAS : 1;  /*!< [0..0] Programmable Gain Amplifiers P003 Bias Voltage SelectNOTE:
                                        *   This bit selects the input bias voltage value when differential
                                        *   inputs are used.                                                          */
            uint8_t : 7;
        } ADPGADBS1_b;
    };
    __IM uint16_t RESERVED25;
    __IM uint32_t RESERVED26[10];

    union
    {
        __IOM uint32_t ADREFMON;

        struct
        {
            __IOM uint32_t PGAMON : 3;
            uint32_t              : 13;
            __IOM uint32_t MONSEL : 4;
            uint32_t              : 12;
        } ADREFMON_b;
    };
} R_ADC0_Type;

/* =========================================================================================================================== */
/* ================                                          R_PSCU                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Peripheral Security Control Unit (R_PSCU)
 */

typedef struct
{
    __IM uint32_t RESERVED;

    union
    {
        __IOM uint32_t PSARB;

        struct
        {
            uint32_t               : 4;
            __IOM uint32_t PSARB4  : 1;
            uint32_t               : 3;
            __IOM uint32_t PSARB8  : 1;
            __IOM uint32_t PSARB9  : 1;
            uint32_t               : 1;
            __IOM uint32_t PSARB11 : 1;
            __IOM uint32_t PSARB12 : 1;
            uint32_t               : 2;
            __IOM uint32_t PSARB15 : 1;
            __IOM uint32_t PSARB16 : 1;
            uint32_t               : 1;
            __IOM uint32_t PSARB18 : 1;
            __IOM uint32_t PSARB19 : 1;
            uint32_t               : 2;
            __IOM uint32_t PSARB22 : 1;
            uint32_t               : 4;
            __IOM uint32_t PSARB27 : 1;
            __IOM uint32_t PSARB28 : 1;
            __IOM uint32_t PSARB29 : 1;
            __IOM uint32_t PSARB30 : 1;
            __IOM uint32_t PSARB31 : 1;
        } PSARB_b;
    };

    union
    {
        __IOM uint32_t PSARC;

        struct
        {
            __IOM uint32_t PSARC0 : 1;  /*!< [0..0] Clock Frequency Accuracy Measurement Circuit Security
                                         *   Attribution                                                               */
            __IOM uint32_t PSARC1 : 1;
            uint32_t              : 5;
            __IOM uint32_t PSARC7 : 1;  /*!< [7..7] Serial Sound Interface Enhanced (channel 1) Security
                                         *   Attribution                                                               */
            __IOM uint32_t PSARC8 : 1;  /*!< [8..8] Serial Sound Interface Enhanced (channel 0) Security
                                         *   Attribution                                                               */
            uint32_t               : 2;
            __IOM uint32_t PSARC11 : 1;
            __IOM uint32_t PSARC12 : 1;
            __IOM uint32_t PSARC13 : 1;
            uint32_t               : 1;
            __IOM uint32_t PSARC15 : 1;
            __IOM uint32_t PSARC16 : 1;
            uint32_t               : 9;
            __IOM uint32_t PSARC26 : 1; /*!< [26..26] Controller Area Network with Flexible Data-Rate 1 Security
                                         *   Attribution                                                               */
            __IOM uint32_t PSARC27 : 1; /*!< [27..27] Controller Area Network with Flexible Data-Rate 0 Security
                                         *   Attribution                                                               */
            uint32_t               : 3;
            __IOM uint32_t PSARC31 : 1;
        } PSARC_b;
    };

    union
    {
        __IOM uint32_t PSARD;

        struct
        {
            uint32_t               : 4;
            __IOM uint32_t PSARD4  : 1;
            __IOM uint32_t PSARD5  : 1;
            uint32_t               : 5;
            __IOM uint32_t PSARD11 : 1;
            __IOM uint32_t PSARD12 : 1;
            __IOM uint32_t PSARD13 : 1;
            __IOM uint32_t PSARD14 : 1;
            __IOM uint32_t PSARD15 : 1;
            __IOM uint32_t PSARD16 : 1;
            uint32_t               : 3;
            __IOM uint32_t PSARD20 : 1;
            uint32_t               : 1;
            __IOM uint32_t PSARD22 : 1;
            uint32_t               : 4;
            __IOM uint32_t PSARD27 : 1;
            __IOM uint32_t PSARD28 : 1;
            uint32_t               : 3;
        } PSARD_b;
    };

    union
    {
        __IOM uint32_t PSARE;

        struct
        {
            uint32_t               : 1;
            __IOM uint32_t PSARE1  : 1;
            __IOM uint32_t PSARE2  : 1;
            __IOM uint32_t PSARE3  : 1;
            uint32_t               : 4;
            __IOM uint32_t PSARE8  : 1;
            __IOM uint32_t PSARE9  : 1;
            uint32_t               : 8;
            __IOM uint32_t PSARE18 : 1;
            __IOM uint32_t PSARE19 : 1;
            __IOM uint32_t PSARE20 : 1;
            __IOM uint32_t PSARE21 : 1;
            __IOM uint32_t PSARE22 : 1;
            __IOM uint32_t PSARE23 : 1;
            __IOM uint32_t PSARE24 : 1;
            __IOM uint32_t PSARE25 : 1;
            __IOM uint32_t PSARE26 : 1;
            __IOM uint32_t PSARE27 : 1;
            __IOM uint32_t PSARE28 : 1;
            __IOM uint32_t PSARE29 : 1;
            __IOM uint32_t PSARE30 : 1;
            __IOM uint32_t PSARE31 : 1;
        } PSARE_b;
    };

    union
    {
        __IOM uint32_t MSSAR;

        struct
        {
            __IOM uint32_t MSSAR0  : 1;
            __IOM uint32_t MSSAR1  : 1;
            uint32_t               : 9;
            __IOM uint32_t MSSAR11 : 1;
            uint32_t               : 1;
            __IOM uint32_t MSSAR13 : 1;
            uint32_t               : 1;
            __IOM uint32_t MSSAR15 : 1;
            uint32_t               : 6;
            __IOM uint32_t MSSAR22 : 1;
            uint32_t               : 8;
            __IOM uint32_t MSSAR31 : 1;
        } MSSAR_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t PPARB;

        struct
        {
            uint32_t               : 4;
            __IOM uint32_t PPARB4  : 1;
            uint32_t               : 3;
            __IOM uint32_t PPARB8  : 1;
            __IOM uint32_t PPARB9  : 1;
            uint32_t               : 1;
            __IOM uint32_t PPARB11 : 1;
            __IOM uint32_t PPARB12 : 1;
            uint32_t               : 2;
            __IOM uint32_t PPARB15 : 1;
            __IOM uint32_t PPARB16 : 1;
            uint32_t               : 1;
            __IOM uint32_t PPARB18 : 1;
            __IOM uint32_t PPARB19 : 1;
            uint32_t               : 2;
            __IOM uint32_t PPARB22 : 1;
            uint32_t               : 4;
            __IOM uint32_t PPARB27 : 1;
            __IOM uint32_t PPARB28 : 1;
            __IOM uint32_t PPARB29 : 1;
            __IOM uint32_t PPARB30 : 1;
            __IOM uint32_t PPARB31 : 1;
        } PPARB_b;
    };

    union
    {
        __IOM uint32_t PPARC;

        struct
        {
            __IOM uint32_t PPARC0 : 1;  /*!< [0..0] Clock Frequency Accuracy Measurement Circuit Privilege
                                         *   Attribution                                                               */
            __IOM uint32_t PPARC1 : 1;
            uint32_t              : 5;
            __IOM uint32_t PPARC7 : 1;  /*!< [7..7] Serial Sound Interface Enhanced (channel 1) Privilege
                                         *   Attribution                                                               */
            __IOM uint32_t PPARC8 : 1;  /*!< [8..8] Serial Sound Interface Enhanced (channel 0) Privilege
                                         *   Attribution                                                               */
            uint32_t               : 2;
            __IOM uint32_t PPARC11 : 1;
            __IOM uint32_t PPARC12 : 1;
            __IOM uint32_t PPARC13 : 1;
            uint32_t               : 1;
            __IOM uint32_t PPARC15 : 1;
            __IOM uint32_t PPARC16 : 1;
            uint32_t               : 9;
            __IOM uint32_t PPARC26 : 1; /*!< [26..26] Controller Area Network with Flexible Data-Rate 1 Privilege
                                         *   Attribution                                                               */
            __IOM uint32_t PPARC27 : 1; /*!< [27..27] Controller Area Network with Flexible Data-Rate 0 Privilege
                                         *   Attribution                                                               */
            uint32_t               : 3;
            __IOM uint32_t PPARC31 : 1;
        } PPARC_b;
    };

    union
    {
        __IOM uint32_t PPARD;

        struct
        {
            uint32_t               : 4;
            __IOM uint32_t PPARD4  : 1;
            __IOM uint32_t PPARD5  : 1;
            uint32_t               : 5;
            __IOM uint32_t PPARD11 : 1;
            __IOM uint32_t PPARD12 : 1;
            __IOM uint32_t PPARD13 : 1;
            __IOM uint32_t PPARD14 : 1;
            __IOM uint32_t PPARD15 : 1;
            __IOM uint32_t PPARD16 : 1;
            uint32_t               : 3;
            __IOM uint32_t PPARD20 : 1;
            uint32_t               : 1;
            __IOM uint32_t PPARD22 : 1;
            uint32_t               : 4;
            __IOM uint32_t PPARD27 : 1;
            __IOM uint32_t PPARD28 : 1;
            uint32_t               : 3;
        } PPARD_b;
    };

    union
    {
        __IOM uint32_t PPARE;

        struct
        {
            uint32_t               : 1;
            __IOM uint32_t PPARE1  : 1;
            __IOM uint32_t PPARE2  : 1;
            __IOM uint32_t PPARE3  : 1;
            uint32_t               : 4;
            __IOM uint32_t PPARE8  : 1;
            __IOM uint32_t PPARE9  : 1;
            uint32_t               : 8;
            __IOM uint32_t PPARE18 : 1;
            __IOM uint32_t PPARE19 : 1;
            __IOM uint32_t PPARE20 : 1;
            __IOM uint32_t PPARE21 : 1;
            __IOM uint32_t PPARE22 : 1;
            __IOM uint32_t PPARE23 : 1;
            __IOM uint32_t PPARE24 : 1;
            __IOM uint32_t PPARE25 : 1;
            __IOM uint32_t PPARE26 : 1;
            __IOM uint32_t PPARE27 : 1;
            __IOM uint32_t PPARE28 : 1;
            __IOM uint32_t PPARE29 : 1;
            __IOM uint32_t PPARE30 : 1;
            __IOM uint32_t PPARE31 : 1;
        } PPARE_b;
    };

    union
    {
        __IOM uint32_t MSPAR;

        struct
        {
            uint32_t               : 31;
            __IOM uint32_t MSPAR31 : 1;
        } MSPAR_b;
    };

    union
    {
        __IM uint32_t CFSAMONA;        /*!< (@ 0x00000030) Code Flash Security Attribution Monitor Register
                                        *                  A                                                          */

        struct
        {
            uint32_t           : 15;
            __IM uint32_t CFS2 : 9;
            uint32_t           : 8;
        } CFSAMONA_b;
    };

    union
    {
        __IM uint32_t DFSAMON;

        struct
        {
            uint32_t          : 10;
            __IM uint32_t DFS : 6;
            uint32_t          : 16;
        } DFSAMON_b;
    };

    union
    {
        __IM uint32_t DLMMON;

        struct
        {
            __IM uint32_t DLMMON : 4;
            uint32_t             : 28;
        } DLMMON_b;
    };
} R_PSCU_Type;

/* =========================================================================================================================== */
/* ================                                           R_BUS                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Bus Interface (R_BUS)
 */

typedef struct
{
    __IOM R_BUS_CSa_Type CSa[8];
    __IM uint32_t        RESERVED[480];
    __IOM R_BUS_CSb_Type CSb[8];

    union
    {
        __IOM uint16_t CSRECEN;

        struct
        {
            __IOM uint16_t RCVEN0  : 1;
            __IOM uint16_t RCVEN1  : 1;
            __IOM uint16_t RCVEN2  : 1;
            __IOM uint16_t RCVEN3  : 1;
            __IOM uint16_t RCVEN4  : 1;
            __IOM uint16_t RCVEN5  : 1;
            __IOM uint16_t RCVEN6  : 1;
            __IOM uint16_t RCVEN7  : 1;
            __IOM uint16_t RCVENM0 : 1;
            __IOM uint16_t RCVENM1 : 1;
            __IOM uint16_t RCVENM2 : 1;
            __IOM uint16_t RCVENM3 : 1;
            __IOM uint16_t RCVENM4 : 1;
            __IOM uint16_t RCVENM5 : 1;
            __IOM uint16_t RCVENM6 : 1;
            __IOM uint16_t RCVENM7 : 1;
        } CSRECEN_b;
    };
    __IM uint16_t          RESERVED1;
    __IM uint32_t          RESERVED2[223];
    __IOM R_BUS_SDRAM_Type SDRAM;
    __IM uint32_t          RESERVED3[235];

    union
    {
        __IOM R_BUS_OAD_Type  OAD;
        __IOM R_BUS_BUSM_Type BUSM[6];
    };
    __IM uint32_t RESERVED4[58];

    union
    {
        union
        {
            __IOM uint32_t BUSMABT;

            struct
            {
                __IOM uint32_t ARBS : 1;
                uint32_t            : 31;
            } BUSMABT_b;
        };
        __IOM R_BUS_BUSS_Type BUSS[18];
    };
    __IM uint32_t RESERVED5[46];

    union
    {
        __IOM R_BUS_BUSSABT0_Type BUSSABT0;
        __IOM R_BUS_BUSSABT1_Type BUSSABT1;
    };
    __IM uint32_t RESERVED6[33];

    union
    {
        __IOM uint32_t BUSDIVBYP;

        struct
        {
            __IOM uint32_t EDMABPE  : 1;
            uint32_t                : 2;
            __IOM uint32_t GDSSBPE  : 1;
            uint32_t                : 12;
            __IOM uint32_t CPU0SBPE : 1;
            uint32_t                : 15;
        } BUSDIVBYP_b;
    };
    __IM uint32_t            RESERVED7[319];
    __IOM R_BUS_BUSERRa_Type BUSERRa[12];
    __IM uint32_t            RESERVED8[16];

    union
    {
        __IOM R_BUS_BTZFERR_Type BTZFERR[4];
        __IOM R_BUS_BMSAERR_Type BMSAERR[9]; /*!< (@ 0x00001900) Bus Master Security Attribution Unit Error Address
                                              *                  and Read/Write Status registers.                           */
    };
    __IM uint32_t RESERVED9[28];

    union
    {
        __IOM R_BUS_BUSERRb_Type    BUSERRb[12];
        __IOM R_BUS_DMACDTCERR_Type DMACDTCERR;
    };
    __IM uint32_t           RESERVED10[16];
    __IOM R_BUS_MBWERR_Type MBWERR;
    __IM uint32_t           RESERVED11[5];
    __IOM R_BUS_MBWERR_Type SBWERR;
} R_BUS_Type;

/* =========================================================================================================================== */
/* ================                                           R_CAC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Clock Frequency Accuracy Measurement Circuit (R_CAC)
 */

typedef struct
{
    union
    {
        __IOM uint8_t CACR0;

        struct
        {
            __IOM uint8_t CFME : 1;
            uint8_t            : 7;
        } CACR0_b;
    };

    union
    {
        __IOM uint8_t CACR1;

        struct
        {
            __IOM uint8_t CACREFE : 1;
            __IOM uint8_t FMCS    : 3;
            __IOM uint8_t TCSS    : 2;
            __IOM uint8_t EDGES   : 2;
        } CACR1_b;
    };

    union
    {
        __IOM uint8_t CACR2;

        struct
        {
            __IOM uint8_t RPS  : 1;
            __IOM uint8_t RSCS : 3;
            __IOM uint8_t RCDS : 2;    /*!< [5..4] Measurement Reference Clock Frequency Division Ratio
                                        *   Select                                                                    */
            __IOM uint8_t DFS : 2;
        } CACR2_b;
    };

    union
    {
        __IOM uint8_t CAICR;

        struct
        {
            __IOM uint8_t FERRIE : 1;
            __IOM uint8_t MENDIE : 1;
            __IOM uint8_t OVFIE  : 1;
            uint8_t              : 1;
            __OM uint8_t FERRFCL : 1;
            __OM uint8_t MENDFCL : 1;
            __OM uint8_t OVFFCL  : 1;
            uint8_t              : 1;
        } CAICR_b;
    };

    union
    {
        __IM uint8_t CASTR;

        struct
        {
            __IM uint8_t FERRF : 1;
            __IM uint8_t MENDF : 1;
            __IM uint8_t OVFF  : 1;
            uint8_t            : 5;
        } CASTR_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        __IOM uint16_t CAULVR;

        struct
        {
            __IOM uint16_t CAULVR : 16; /*!< [15..0] CAULVR is a 16-bit readable/writable register that stores
                                         *   the upper-limit value of the frequency.                                   */
        } CAULVR_b;
    };

    union
    {
        __IOM uint16_t CALLVR;

        struct
        {
            __IOM uint16_t CALLVR : 16; /*!< [15..0] CALLVR is a 16-bit readable/writable register that stores
                                         *   the lower-limit value of the frequency.                                   */
        } CALLVR_b;
    };

    union
    {
        __IM uint16_t CACNTBR;

        struct
        {
            __IM uint16_t CACNTBR : 16; /*!< [15..0] CACNTBR is a 16-bit read-only register that retains
                                         *   the counter value at the time a valid reference signal
                                         *   edge is input                                                             */
        } CACNTBR_b;
    };
} R_CAC_Type;

/* =========================================================================================================================== */
/* ================                                         R_CANFD0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Controller Area Network - Flexible Data (CAN-FD) Module (R_CANFD0)
 */

typedef struct
{
    __IOM R_CANFD_CFDC_Type CFDC[1];
    __IM uint32_t           RESERVED;

    union
    {
        __IOM uint32_t CFDGCFG;

        struct
        {
            __IOM uint32_t TPRI  : 1;
            __IOM uint32_t DCE   : 1;
            __IOM uint32_t DRE   : 1;
            __IOM uint32_t MME   : 1;
            __IOM uint32_t DCS   : 1;
            __IOM uint32_t CMPOC : 1;
            uint32_t             : 2;
            __IOM uint32_t TSP   : 4;
            __IOM uint32_t TSSS  : 1;
            uint32_t             : 3;
            __IOM uint32_t ITRCP : 16;
        } CFDGCFG_b;
    };

    union
    {
        __IOM uint32_t CFDGCTR;

        struct
        {
            __IOM uint32_t GMDC    : 2;
            __IOM uint32_t GSLPR   : 1;
            uint32_t               : 5;
            __IOM uint32_t DEIE    : 1;
            __IOM uint32_t MEIE    : 1;
            __IOM uint32_t THLEIE  : 1;
            __IOM uint32_t CMPOFIE : 1;
            uint32_t               : 4;
            __IOM uint32_t TSRST   : 1;
            uint32_t               : 15;
        } CFDGCTR_b;
    };

    union
    {
        __IOM uint32_t CFDGSTS;

        struct
        {
            __IM uint32_t GRSTSTS  : 1;
            __IM uint32_t GHLTSTS  : 1;
            __IM uint32_t GSLPSTS  : 1;
            __IM uint32_t GRAMINIT : 1;
            uint32_t               : 28;
        } CFDGSTS_b;
    };

    union
    {
        __IOM uint32_t CFDGERFL;

        struct
        {
            __IOM uint32_t DEF   : 1;
            __IM uint32_t  MES   : 1;
            __IM uint32_t  THLES : 1;
            __IOM uint32_t CMPOF : 1;
            uint32_t             : 12;
            __IOM uint32_t EEF0  : 1;
            uint32_t             : 15;
        } CFDGERFL_b;
    };

    union
    {
        __IOM uint32_t CFDGTSC;

        struct
        {
            __IM uint32_t TS : 16;
            uint32_t         : 16;
        } CFDGTSC_b;
    };

    union
    {
        __IOM uint32_t CFDGAFLECTR;

        struct
        {
            __IOM uint32_t AFLPN  : 4;
            uint32_t              : 4;
            __IOM uint32_t AFLDAE : 1;
            uint32_t              : 23;
        } CFDGAFLECTR_b;
    };

    union
    {
        __IOM uint32_t CFDGAFLCFG0;    /*!< (@ 0x0000002C) Global Acceptance Filter List Configuration Register
                                        *                  0                                                          */

        struct
        {
            __IOM uint32_t RNC1 : 9;
            uint32_t            : 7;
            __IOM uint32_t RNC0 : 9;
            uint32_t            : 7;
        } CFDGAFLCFG0_b;
    };

    union
    {
        __IOM uint32_t CFDRMNB;

        struct
        {
            __IOM uint32_t NRXMB : 8;
            __IOM uint32_t RMPLS : 3;
            uint32_t             : 21;
        } CFDRMNB_b;
    };

    union
    {
        __IOM uint32_t CFDRMND0;

        struct
        {
            __IOM uint32_t RMNSu : 32;
        } CFDRMND0_b;
    };

    union
    {
        __IOM uint32_t CFDRMIEC;       /*!< (@ 0x00000038) RX Message Buffer Interrupt Enable Configuration
                                        *                  Register                                                   */

        struct
        {
            __IOM uint32_t RMIE : 32;
        } CFDRMIEC_b;
    };

    union
    {
        __IOM uint32_t CFDRFCC[2];

        struct
        {
            __IOM uint32_t RFE    : 1;
            __IOM uint32_t RFIE   : 1;
            uint32_t              : 2;
            __IOM uint32_t RFPLS  : 3;
            uint32_t              : 1;
            __IOM uint32_t RFDC   : 3;
            uint32_t              : 1;
            __IOM uint32_t RFIM   : 1;
            __IOM uint32_t RFIGCV : 3;
            uint32_t              : 16;
        } CFDRFCC_b[2];
    };

    union
    {
        __IOM uint32_t CFDRFSTS[2];

        struct
        {
            __IM uint32_t  RFEMP : 1;
            __IM uint32_t  RFFLL : 1;
            __IOM uint32_t RFMLT : 1;
            __IOM uint32_t RFIF  : 1;
            uint32_t             : 4;
            __IM uint32_t RFMC   : 8;
            uint32_t             : 16;
        } CFDRFSTS_b[2];
    };

    union
    {
        __IOM uint32_t CFDRFPCTR[2];

        struct
        {
            __OM uint32_t RFPC : 8;
            uint32_t           : 24;
        } CFDRFPCTR_b[2];
    };

    union
    {
        __IOM uint32_t CFDCFCC[1];

        struct
        {
            __IOM uint32_t CFE    : 1;
            __IOM uint32_t CFRXIE : 1;
            __IOM uint32_t CFTXIE : 1;
            uint32_t              : 1;
            __IOM uint32_t CFPLS  : 3;
            uint32_t              : 1;
            __IOM uint32_t CFM    : 2;
            __IOM uint32_t CFITSS : 1;
            __IOM uint32_t CFITR  : 1;
            __IOM uint32_t CFIM   : 1;
            __IOM uint32_t CFIGCV : 3;
            __IOM uint32_t CFTML  : 5;
            __IOM uint32_t CFDC   : 3;
            __IOM uint32_t CFITT  : 8;
        } CFDCFCC_b[1];
    };

    union
    {
        __IOM uint32_t CFDCFSTS[1];

        struct
        {
            __IM uint32_t  CFEMP  : 1;
            __IM uint32_t  CFFLL  : 1;
            __IOM uint32_t CFMLT  : 1;
            __IOM uint32_t CFRXIF : 1;
            __IOM uint32_t CFTXIF : 1;
            uint32_t              : 3;
            __IM uint32_t CFMC    : 8;
            uint32_t              : 16;
        } CFDCFSTS_b[1];
    };

    union
    {
        __IOM uint32_t CFDCFPCTR[1];

        struct
        {
            __OM uint32_t CFPC : 8;
            uint32_t           : 24;
        } CFDCFPCTR_b[1];
    };

    union
    {
        __IM uint32_t CFDFESTS;

        struct
        {
            __IM uint32_t RFXEMP : 2;
            uint32_t             : 6;
            __IM uint32_t CFXEMP : 1;
            uint32_t             : 23;
        } CFDFESTS_b;
    };

    union
    {
        __IM uint32_t CFDFFSTS;

        struct
        {
            __IM uint32_t RFXFLL : 2;
            uint32_t             : 6;
            __IM uint32_t CFXFLL : 1;
            uint32_t             : 23;
        } CFDFFSTS_b;
    };

    union
    {
        __IM uint32_t CFDFMSTS;

        struct
        {
            __IM uint32_t RFXMLT : 2;
            uint32_t             : 6;
            __IM uint32_t CFXMLT : 1;
            uint32_t             : 23;
        } CFDFMSTS_b;
    };

    union
    {
        __IOM uint32_t CFDRFISTS;

        struct
        {
            __IM uint32_t RFXIF : 1;
            uint32_t            : 31;
        } CFDRFISTS_b;
    };

    union
    {
        __IOM uint8_t CFDTMC[4];

        struct
        {
            __IOM uint8_t TMTR  : 1;
            __IOM uint8_t TMTAR : 1;
            __IOM uint8_t TMOM  : 1;
            uint8_t             : 5;
        } CFDTMC_b[4];
    };

    union
    {
        __IOM uint8_t CFDTMSTS[4];

        struct
        {
            __IM uint8_t  TMTSTS : 1;
            __IOM uint8_t TMTRF  : 2;
            __IM uint8_t  TMTRM  : 1;
            __IM uint8_t  TMTARM : 1;
            uint8_t              : 3;
        } CFDTMSTS_b[4];
    };

    union
    {
        __IM uint32_t CFDTMTRSTS[1];       /*!< (@ 0x00000078) TX Message Buffer Transmission Request Status
                                            *                  Register                                                   */

        struct
        {
            __IM uint32_t CFDTMTRSTSg : 4;
            uint32_t                  : 28;
        } CFDTMTRSTS_b[1];
    };

    union
    {
        __IM uint32_t CFDTMTARSTS[1];       /*!< (@ 0x0000007C) TX Message Buffer Transmission Abort Request
                                             *                  Status Register                                            */

        struct
        {
            __IM uint32_t CFDTMTARSTSg : 4;
            uint32_t                   : 28;
        } CFDTMTARSTS_b[1];
    };

    union
    {
        __IM uint32_t CFDTMTCSTS[1];       /*!< (@ 0x00000080) TX Message Buffer Transmission Completion Status
                                            *                  Register                                                   */

        struct
        {
            __IM uint32_t CFDTMTCSTSg : 4;
            uint32_t                  : 28;
        } CFDTMTCSTS_b[1];
    };

    union
    {
        __IM uint32_t CFDTMTASTS[1];

        struct
        {
            __IM uint32_t CFDTMTASTSg : 4;
            uint32_t                  : 28;
        } CFDTMTASTS_b[1];
    };

    union
    {
        __IOM uint32_t CFDTMIEC[1];    /*!< (@ 0x00000088) TX Message Buffer Interrupt Enable Configuration
                                        *                  Register                                                   */

        struct
        {
            __IOM uint32_t TMIEg : 4;
            uint32_t             : 28;
        } CFDTMIEC_b[1];
    };

    union
    {
        __IOM uint32_t CFDTXQCC0[1];

        struct
        {
            __IOM uint32_t TXQE    : 1;
            uint32_t               : 4;
            __IOM uint32_t TXQTXIE : 1;
            uint32_t               : 1;
            __IOM uint32_t TXQIM   : 1;
            __IOM uint32_t TXQDC   : 2;
            uint32_t               : 22;
        } CFDTXQCC0_b[1];
    };

    union
    {
        __IOM uint32_t CFDTXQSTS0[1];

        struct
        {
            __IM uint32_t  TXQEMP  : 1;
            __IM uint32_t  TXQFLL  : 1;
            __IOM uint32_t TXQTXIF : 1;
            uint32_t               : 5;
            __IM uint32_t TXQMC    : 6;
            uint32_t               : 18;
        } CFDTXQSTS0_b[1];
    };

    union
    {
        __IOM uint32_t CFDTXQPCTR0[1];

        struct
        {
            __OM uint32_t TXQPC : 8;
            uint32_t            : 24;
        } CFDTXQPCTR0_b[1];
    };

    union
    {
        __IOM uint32_t CFDTHLCC[1];

        struct
        {
            __IOM uint32_t THLE   : 1;
            uint32_t              : 7;
            __IOM uint32_t THLIE  : 1;
            __IOM uint32_t THLIM  : 1;
            __IOM uint32_t THLDTE : 1;
            uint32_t              : 21;
        } CFDTHLCC_b[1];
    };

    union
    {
        __IOM uint32_t CFDTHLSTS[1];

        struct
        {
            __IM uint32_t  THLEMP : 1;
            __IM uint32_t  THLFLL : 1;
            __IOM uint32_t THLELT : 1;
            __IOM uint32_t THLIF  : 1;
            uint32_t              : 4;
            __IM uint32_t THLMC   : 6;
            uint32_t              : 18;
        } CFDTHLSTS_b[1];
    };

    union
    {
        __IOM uint32_t CFDTHLPCTR[1];

        struct
        {
            __OM uint32_t THLPC : 8;
            uint32_t            : 24;
        } CFDTHLPCTR_b[1];
    };

    union
    {
        __IOM uint32_t CFDGTINTSTS0;

        struct
        {
            __IM uint32_t TSIF0  : 1;
            __IM uint32_t TAIF0  : 1;
            __IM uint32_t TQIF0  : 1;
            __IM uint32_t CFTIF0 : 1;
            __IM uint32_t THIF0  : 1;
            uint32_t             : 27;
        } CFDGTINTSTS0_b;
    };

    union
    {
        __IOM uint32_t CFDGTSTCFG;

        struct
        {
            uint32_t             : 16;
            __IOM uint32_t RTMPS : 10;
            uint32_t             : 6;
        } CFDGTSTCFG_b;
    };

    union
    {
        __IOM uint32_t CFDGTSTCTR;

        struct
        {
            uint32_t            : 2;
            __IOM uint32_t RTME : 1;
            uint32_t            : 29;
        } CFDGTSTCTR_b;
    };

    union
    {
        __IOM uint32_t CFDGFDCFG;

        struct
        {
            __IOM uint32_t RPED   : 1;
            uint32_t              : 7;
            __IOM uint32_t TSCCFG : 2;
            uint32_t              : 22;
        } CFDGFDCFG_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t CFDGLOCKK;

        struct
        {
            __OM uint32_t LOCK : 16;
            uint32_t           : 16;
        } CFDGLOCKK_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t CFDGAFLIGNENT;

        struct
        {
            __IOM uint32_t IRN : 5;
            uint32_t           : 27;
        } CFDGAFLIGNENT_b;
    };

    union
    {
        __IOM uint32_t CFDGAFLIGNCTR;

        struct
        {
            __IOM uint32_t IREN : 1;
            uint32_t            : 7;
            __OM uint32_t KEY   : 8;
            uint32_t            : 16;
        } CFDGAFLIGNCTR_b;
    };

    union
    {
        __IOM uint32_t CFDCDTCT;

        struct
        {
            __IOM uint32_t RFDMAE0 : 1;
            __IOM uint32_t RFDMAE1 : 1;
            uint32_t               : 6;
            __IOM uint32_t CFDMAE0 : 1;
            uint32_t               : 23;
        } CFDCDTCT_b;
    };

    union
    {
        __IM uint32_t CFDCDTSTS;

        struct
        {
            __IM uint32_t RFDMASTS0 : 1;
            __IM uint32_t RFDMASTS1 : 1;
            uint32_t                : 6;
            __IM uint32_t CFDMASTS0 : 1; /*!< [8..8] DMA Transfer Status only for Common FIFO 0 of channel
                                          *   0                                                                         */
            uint32_t : 23;
        } CFDCDTSTS_b;
    };
    __IM uint32_t RESERVED3[2];

    union
    {
        __IOM uint32_t CFDGRSTC;

        struct
        {
            __IOM uint32_t SRST : 1;
            uint32_t            : 7;
            __OM uint32_t KEY   : 8;
            uint32_t            : 16;
        } CFDGRSTC_b;
    };
    __IM uint32_t              RESERVED4[9];
    __IOM R_CANFD_CFDC2_Type   CFDC2[1];
    __IOM R_CANFD_CFDGAFL_Type CFDGAFL[16];
    __IM uint32_t              RESERVED5[24];

    union
    {
        __IOM uint32_t CFDRPGACC[64];

        struct
        {
            __IOM uint32_t RDTA : 32;
        } CFDRPGACC_b[64];
    };
    __IM uint32_t             RESERVED6[104];
    __IOM R_CANFD_CFDRF_Type  CFDRF[2];
    __IOM R_CANFD_CFDCF_Type  CFDCF[1];
    __IOM R_CANFD_CFDTM_Type  CFDTM[4];
    __IM uint32_t             RESERVED7[3];
    __IOM R_CANFD_CFDTHL_Type CFDTHL[1];
    __IM uint32_t             RESERVED8[118];
    __IOM R_CANFD_CFDRM_Type  CFDRM[4];
} R_CANFD_Type;

/* =========================================================================================================================== */
/* ================                                           R_CRC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Cyclic Redundancy Check (CRC) Calculator (R_CRC)
 */

typedef struct
{
    union
    {
        __IOM uint8_t CRCCR0;

        struct
        {
            __IOM uint8_t GPS    : 3;
            uint8_t              : 3;
            __IOM uint8_t LMS    : 1;
            __OM uint8_t  DORCLR : 1;
        } CRCCR0_b;
    };

    union
    {
        __IOM uint8_t CRCCR1;

        struct
        {
            uint8_t              : 6;
            __IOM uint8_t CRCSWR : 1;
            __IOM uint8_t CRCSEN : 1;
        } CRCCR1_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        union
        {
            __IOM uint32_t CRCDIR;

            struct
            {
                __IOM uint32_t CRCDIR : 32;
            } CRCDIR_b;
        };

        union
        {
            __IOM uint8_t CRCDIR_BY;

            struct
            {
                __IOM uint8_t CRCDIR_BY : 8; /*!< [7..0] Calculation input Data ( Case of CRC-8, CRC-16 or CRC-CCITT
                                              *   )                                                                         */
            } CRCDIR_BY_b;
        };
    };

    union
    {
        union
        {
            __IOM uint32_t CRCDOR;

            struct
            {
                __IOM uint32_t CRCDOR : 32;
            } CRCDOR_b;
        };

        union
        {
            __IOM uint16_t CRCDOR_HA;

            struct
            {
                __IOM uint16_t CRCDOR_HA : 16; /*!< [15..0] Calculation output Data (Case of CRC-16 or CRC-CCITT
                                                *   )                                                                         */
            } CRCDOR_HA_b;
        };

        union
        {
            __IOM uint8_t CRCDOR_BY;

            struct
            {
                __IOM uint8_t CRCDOR_BY : 8;
            } CRCDOR_BY_b;
        };
    };

    union
    {
        __IOM uint16_t CRCSAR;

        struct
        {
            __IOM uint16_t CRCSA : 14;
            uint16_t             : 2;
        } CRCSAR_b;
    };
    __IM uint16_t RESERVED1;
} R_CRC_Type;

/* =========================================================================================================================== */
/* ================                                           R_DAC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief D/A Converter (R_DAC)
 */

typedef struct
{
    union
    {
        __IOM uint16_t DADR[2];

        struct
        {
            __IOM uint16_t DADR : 16;  /*!< [15..0] D/A Data RegisterNOTE: When DADPR.DPSEL = 0, the high-order
                                        *   4 bits are fixed to 0: right justified format. When DADPR.DPSEL
                                        *   = 1, the low-order 4 bits are fixed to 0: left justified
                                        *   format.                                                                   */
        } DADR_b[2];
    };

    union
    {
        __IOM uint8_t DACR;

        struct
        {
            uint8_t             : 5;
            __IOM uint8_t DAE   : 1;
            __IOM uint8_t DAOE0 : 1;
            __IOM uint8_t DAOE1 : 1;
        } DACR_b;
    };

    union
    {
        __IOM uint8_t DADPR;

        struct
        {
            uint8_t             : 7;
            __IOM uint8_t DPSEL : 1;
        } DADPR_b;
    };

    union
    {
        __IOM uint8_t DAADSCR;

        struct
        {
            uint8_t              : 7;
            __IOM uint8_t DAADST : 1;
        } DAADSCR_b;
    };

    union
    {
        __IOM uint8_t DAVREFCR;

        struct
        {
            __IOM uint8_t REF : 3;
            uint8_t           : 5;
        } DAVREFCR_b;
    };

    union
    {
        __IOM uint8_t DAAMPCR;

        struct
        {
            uint8_t              : 6;
            __IOM uint8_t DAAMP0 : 1;
            __IOM uint8_t DAAMP1 : 1;
        } DAAMPCR_b;
    };

    union
    {
        __IOM uint8_t DAPC;

        struct
        {
            __IOM uint8_t PUMPEN : 1;
            uint8_t              : 7;
        } DAPC_b;
    };
    __IM uint16_t RESERVED[9];

    union
    {
        __IOM uint8_t DAASWCR;

        struct
        {
            uint8_t              : 6;
            __IOM uint8_t DAASW0 : 1;  /*!< [6..6] Set the DAASW0 bit to 1 in the initialization procedure
                                        *   to wait for stabilization of the output amplifier of D/A
                                        *   channel 0. When DAASW0 is set to 1, D/A conversion operates,
                                        *   but the conversion result D/A is not output from channel
                                        *   0. When the DAASW0 bit is 0, the stabilization wait time
                                        *   stops, and the D/A conversion result of channel 0 is output
                                        *   through the output amplifier.                                             */
            __IOM uint8_t DAASW1 : 1;  /*!< [7..7] Set the DAASW1 bit to 1 in the initialization procedure
                                        *   to wait for stabilization of the output amplifier of D/A
                                        *   channel 1. When DAASW1 is set to 1, D/A conversion operates,
                                        *   but the conversion result D/A is not output from channel
                                        *   1. When the DAASW1 bit is 0, the stabilization wait time
                                        *   stops, and the D/A conversion result of channel 1 is output
                                        *   through the output amplifier.                                             */
        } DAASWCR_b;
    };
    __IM uint8_t  RESERVED1;
    __IM uint16_t RESERVED2[2129];

    union
    {
        __IOM uint8_t DAADUSR;

        struct
        {
            __IOM uint8_t AMADSEL0 : 1; /*!< [0..0] The DAADUSR register selects the target ADC12 unit for
                                         *   D/A and A/D synchronous conversions. Set bit [0] to 1 to
                                         *   select unit 0 as the target synchronous unit for the MCU.
                                         *   When setting the DAADSCR.DAADST bit to 1 for synchronous
                                         *   conversions, select the target unit in this register in
                                         *   advance. Only set the DAADUSR register while the ADCSR.ADST
                                         *   bit of the ADC12 is set to 0 and the DAADSCR.DAADST bit
                                         *   is set to 0.                                                              */
            __IOM uint8_t AMADSEL1 : 1; /*!< [1..1] The DAADUSR register selects the target ADC12 unit for
                                         *   D/A and A/D synchronous conversions. Set bit [1] to 1 to
                                         *   select unit 1 as the target synchronous unit for the MCU.
                                         *   When setting the DAADSCR.DAADST bit to 1 for synchronous
                                         *   conversions, select the target unit in this register in
                                         *   advance. Only set the DAADUSR register while the ADCSR.ADST
                                         *   bit of the ADC12 is set to 0 and the DAADSCR.DAADST bit
                                         *   is set to 0.                                                              */
            uint8_t : 6;
        } DAADUSR_b;
    };
    __IM uint8_t  RESERVED3;
    __IM uint16_t RESERVED4;
} R_DAC_Type;

/* =========================================================================================================================== */
/* ================                                          R_DEBUG                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Debug Function (R_DEBUG)
 */

typedef struct
{
    union
    {
        __IM uint32_t DBGSTR;

        struct
        {
            uint32_t                   : 28;
            __IM uint32_t CDBGPWRUPREQ : 1;
            __IM uint32_t CDBGPWRUPACK : 1;
            uint32_t                   : 2;
        } DBGSTR_b;
    };
    __IM uint32_t RESERVED[3];

    union
    {
        __IOM uint32_t DBGSTOPCR;

        struct
        {
            __IOM uint32_t DBGSTOP_IWDT  : 1;
            __IOM uint32_t DBGSTOP_WDT   : 1;
            uint32_t                     : 12;
            __IOM uint32_t DBGSTOP_TIM   : 1;
            __IOM uint32_t DBGSTOP_SIR   : 1;
            __IOM uint32_t DBGSTOP_LVD0  : 1;
            __IOM uint32_t DBGSTOP_LVD1  : 1;
            __IOM uint32_t DBGSTOP_LVD2  : 1;
            uint32_t                     : 5;
            __IOM uint32_t DBGSTOP_RPER  : 1;
            __IOM uint32_t DBGSTOP_RECCR : 1;
            uint32_t                     : 5;
            __IOM uint32_t DBGSTOP_CPER  : 1;
        } DBGSTOPCR_b;
    };
    __IM uint32_t RESERVED1[123];

    union
    {
        __IOM uint32_t FSBLSTAT;

        struct
        {
            __IOM uint32_t CS     : 1;
            __IOM uint32_t RS     : 1;
            uint32_t              : 6;
            __IM uint32_t FSBLCLK : 3;
            uint32_t              : 21;
        } FSBLSTAT_b;
    };
} R_DEBUG_Type;

/* =========================================================================================================================== */
/* ================                                           R_DMA                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief DMA Controller Common (R_DMA)
 */

typedef struct
{
    union
    {
        __IOM uint8_t DMAST;

        struct
        {
            __IOM uint8_t DMST : 1;
            uint8_t            : 7;
        } DMAST_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2[15];

    union
    {
        __IOM uint32_t DMECHR;

        struct
        {
            __IM uint32_t DMECH    : 3;
            uint32_t               : 5;
            __IM uint32_t DMECHSAM : 1;
            uint32_t               : 7;
            __IOM uint32_t DMESTA  : 1;
            uint32_t               : 15;
        } DMECHR_b;
    };
    __IM uint32_t RESERVED3[15];

    union
    {
        __IOM uint32_t DELSR[8];

        struct
        {
            __IOM uint32_t DELS : 9;
            uint32_t            : 7;
            __IOM uint32_t IR   : 1;   /*!< [16..16] Interrupt Status Flag for DMAC NOTE: Writing 1 to the
                                        *   IR flag is prohibited.                                                    */
            uint32_t : 15;
        } DELSR_b[8];
    };
} R_DMA_Type;

/* =========================================================================================================================== */
/* ================                                          R_DMAC0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief DMA Controller (R_DMAC0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t DMSAR;

        struct
        {
            __IOM uint32_t DMSAR : 32;
        } DMSAR_b;
    };

    union
    {
        __IOM uint32_t DMDAR;

        struct
        {
            __IOM uint32_t DMDAR : 32;
        } DMDAR_b;
    };

    union
    {
        __IOM uint32_t DMCRA;

        struct
        {
            __IOM uint32_t DMCRAL : 16;
            __IOM uint32_t DMCRAH : 10;
            uint32_t              : 6;
        } DMCRA_b;
    };

    union
    {
        __IOM uint32_t DMCRB;

        struct
        {
            __IOM uint32_t DMCRBL : 16; /*!< [15..0] Functions as a number of block, repeat or repeat-block
                                         *   transfer counter.                                                         */
            __IOM uint32_t DMCRBH : 16; /*!< [31..16] Specifies the number of block transfer operations or
                                         *   repeat transfer operations.                                               */
        } DMCRB_b;
    };

    union
    {
        __IOM uint16_t DMTMD;

        struct
        {
            __IOM uint16_t DCTG : 2;
            uint16_t            : 6;
            __IOM uint16_t SZ   : 2;
            __IOM uint16_t TKP  : 1;
            uint16_t            : 1;
            __IOM uint16_t DTS  : 2;
            __IOM uint16_t MD   : 2;
        } DMTMD_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        __IOM uint8_t DMINT;

        struct
        {
            __IOM uint8_t DARIE : 1;   /*!< [0..0] Destination Address Extended Repeat Area Overflow Interrupt
                                        *   Enable                                                                    */
            __IOM uint8_t SARIE : 1;   /*!< [1..1] Source Address Extended Repeat Area Overflow Interrupt
                                        *   Enable                                                                    */
            __IOM uint8_t RPTIE : 1;
            __IOM uint8_t ESIE  : 1;
            __IOM uint8_t DTIE  : 1;
            uint8_t             : 3;
        } DMINT_b;
    };

    union
    {
        __IOM uint16_t DMAMD;

        struct
        {
            __IOM uint16_t DARA : 5;   /*!< [4..0] Destination Address Extended Repeat Area Specifies the
                                        *   extended repeat area on the destination address. For details
                                        *   on the settings.                                                          */
            __IOM uint16_t DADR : 1;
            __IOM uint16_t DM   : 2;
            __IOM uint16_t SARA : 5;   /*!< [12..8] Source Address Extended Repeat Area Specifies the extended
                                        *   repeat area on the source address. For details on the settings.           */
            __IOM uint16_t SADR : 1;
            __IOM uint16_t SM   : 2;
        } DMAMD_b;
    };
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint32_t DMOFR;

        struct
        {
            __IOM uint32_t DMOFR : 32; /*!< [31..0] Specifies the offset when offset addition is selected
                                        *   as the address update mode for transfer source or destination.            */
        } DMOFR_b;
    };

    union
    {
        __IOM uint8_t DMCNT;

        struct
        {
            __IOM uint8_t DTE : 1;
            uint8_t           : 7;
        } DMCNT_b;
    };

    union
    {
        __IOM uint8_t DMREQ;

        struct
        {
            __IOM uint8_t SWREQ : 1;
            uint8_t             : 3;
            __IOM uint8_t CLRS  : 1;
            uint8_t             : 3;
        } DMREQ_b;
    };

    union
    {
        __IOM uint8_t DMSTS;

        struct
        {
            __IOM uint8_t ESIF : 1;
            uint8_t            : 3;
            __IOM uint8_t DTIF : 1;
            uint8_t            : 2;
            __IM uint8_t ACT   : 1;
        } DMSTS_b;
    };
    __IM uint8_t   RESERVED2;
    __IOM uint32_t DMSRR;
    __IOM uint32_t DMDRR;

    union
    {
        __IOM uint32_t DMSBS;

        struct
        {
            __IOM uint32_t DMSBSL : 16; /*!< [15..0] Functions as data transfer counter in repeat-block transfer
                                         *   mode                                                                      */
            __IOM uint32_t DMSBSH : 16; /*!< [31..16] Specifies the repeat-area size in repeat-block transfer
                                         *   mode                                                                      */
        } DMSBS_b;
    };

    union
    {
        __IOM uint32_t DMDBS;

        struct
        {
            __IOM uint32_t DMDBSL : 16; /*!< [15..0] Functions as data transfer counter in repeat-block transfer
                                         *   mode                                                                      */
            __IOM uint32_t DMDBSH : 16; /*!< [31..16] Specifies the repeat-area size in repeat-block transfer
                                         *   mode                                                                      */
        } DMDBS_b;
    };

    union
    {
        __IOM uint8_t DMBWR;

        struct
        {
            __IOM uint8_t BWE : 1;
            uint8_t           : 7;
        } DMBWR_b;
    };
    __IM uint8_t  RESERVED3;
    __IM uint16_t RESERVED4;
} R_DMAC0_Type;

/* =========================================================================================================================== */
/* ================                                           R_DOC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Data Operation Circuit (R_DOC)
 */

typedef struct
{
    union
    {
        __IOM uint8_t DOCR;

        struct
        {
            __IOM uint8_t OMS     : 2;
            __IOM uint8_t DCSEL   : 1;
            uint8_t               : 2;
            __IM uint8_t  DOPCF   : 1;
            __IOM uint8_t DOPCFCL : 1;
            uint8_t               : 1;
        } DOCR_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        __IOM uint16_t DODIR;

        struct
        {
            __IOM uint16_t DODIR : 16; /*!< [15..0] 16-bit read-write register in which 16-bit data for
                                        *   use in the operations are stored.                                         */
        } DODIR_b;
    };

    union
    {
        __IOM uint16_t DODSR;

        struct
        {
            __IOM uint16_t DODSR : 16; /*!< [15..0] This register stores 16-bit data for use as a reference
                                        *   in data comparison mode. This register also stores the
                                        *   results of operations in data addition and data subtraction
                                        *   modes.                                                                    */
        } DODSR_b;
    };
} R_DOC_Type;

/* =========================================================================================================================== */
/* ================                                           R_DTC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Data Transfer Controller (R_DTC)
 */

typedef struct
{
    union
    {
        __IOM uint8_t DTCCR;

        struct
        {
            uint8_t           : 4;
            __IOM uint8_t RRS : 1;
            uint8_t           : 3;
        } DTCCR_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint32_t DTCVBR;

        struct
        {
            __IOM uint32_t DTCVBR : 32; /*!< [31..0] DTC Vector Base Address.Note: A value cannot be set
                                         *   in the lower-order 10 bits. These bits are fixed to 0.                    */
        } DTCVBR_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint8_t DTCST;

        struct
        {
            __IOM uint8_t DTCST : 1;
            uint8_t             : 7;
        } DTCST_b;
    };
    __IM uint8_t RESERVED3;

    union
    {
        __IM uint16_t DTCSTS;

        struct
        {
            __IM uint16_t VECN : 8;    /*!< [7..0] DTC-Activating Vector Number MonitoringThese bits indicate
                                        *   the vector number for the activating source when DTC transfer
                                        *   is in progress.The value is only valid if DTC transfer
                                        *   is in progress (the value of the ACT flag is 1)                           */
            uint16_t          : 7;
            __IM uint16_t ACT : 1;
        } DTCSTS_b;
    };

    union
    {
        __IOM uint8_t DTCCR_SEC;

        struct
        {
            uint8_t            : 4;
            __IOM uint8_t RRSS : 1;
            uint8_t            : 3;
        } DTCCR_SEC_b;
    };
    __IM uint8_t   RESERVED4;
    __IM uint16_t  RESERVED5;
    __IOM uint32_t DTCVBR_SEC;
    __IM uint32_t  RESERVED6[2];

    union
    {
        __IOM uint32_t DTEVR;

        struct
        {
            __IM uint32_t DTEV    : 8;
            __IM uint32_t DTEVSAM : 1;
            uint32_t              : 7;
            __IOM uint32_t DTESTA : 1;
            uint32_t              : 15;
        } DTEVR_b;
    };
} R_DTC_Type;

/* =========================================================================================================================== */
/* ================                                           R_ELC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Event Link Controller (R_ELC)
 */

typedef struct
{
    union
    {
        __IOM uint8_t ELCR;

        struct
        {
            uint8_t             : 7;
            __IOM uint8_t ELCON : 1;
        } ELCR_b;
    };
    __IM uint8_t            RESERVED;
    __IM uint16_t           RESERVED1;
    __IOM R_ELC_ELSEGR_Type ELSEGR[2];
    __IM uint32_t           RESERVED2[6];
    __IOM R_ELC_ELSR_Type   ELSR[31];
    __IM uint32_t           RESERVED3[17];

    union
    {
        __IOM uint32_t ELCSARA;         /*!< (@ 0x000000E0) Event Link Controller Security Attribution Register
                                         *                  A                                                          */

        struct
        {
            __IOM uint32_t ELCR    : 1;
            __IOM uint32_t ELSEGR0 : 1; /*!< [1..1] Event Link Software Event Generation Register 0 Security
                                         *   Attribution                                                               */
            __IOM uint32_t ELSEGR1 : 1; /*!< [2..2] Event Link Software Event Generation Register 1Security
                                         *   Attribution                                                               */
            uint32_t : 29;
        } ELCSARA_b;
    };

    union
    {
        __IOM uint32_t ELCSARB;        /*!< (@ 0x000000E4) Event Link Controller Security Attribution Register
                                        *                  B                                                          */

        struct
        {
            __IOM uint32_t ELSR0  : 1;
            __IOM uint32_t ELSR1  : 1;
            __IOM uint32_t ELSR2  : 1;
            __IOM uint32_t ELSR3  : 1;
            __IOM uint32_t ELSR4  : 1;
            __IOM uint32_t ELSR5  : 1;
            __IOM uint32_t ELSR6  : 1;
            __IOM uint32_t ELSR7  : 1;
            __IOM uint32_t ELSR8  : 1;
            __IOM uint32_t ELSR9  : 1;
            __IOM uint32_t ELSR10 : 1;
            __IOM uint32_t ELSR11 : 1;
            __IOM uint32_t ELSR12 : 1;
            __IOM uint32_t ELSR13 : 1;
            __IOM uint32_t ELSR14 : 1;
            __IOM uint32_t ELSR15 : 1;
            __IOM uint32_t ELSR16 : 1;
            __IOM uint32_t ELSR17 : 1;
            uint32_t              : 12;
            __IOM uint32_t ELSR30 : 1;
            uint32_t              : 1;
        } ELCSARB_b;
    };
    __IM uint32_t RESERVED4[2];

    union
    {
        __IOM uint32_t ELCPARA;         /*!< (@ 0x000000F0) Event Link Controller Priviledge Attribution
                                         *                  Register A                                                 */

        struct
        {
            __IOM uint32_t ELCR    : 1;
            __IOM uint32_t ELSEGR0 : 1; /*!< [1..1] Event Link Software Event Generation Register 0 Priviledge
                                         *   Attribution                                                               */
            __IOM uint32_t ELSEGR1 : 1; /*!< [2..2] Event Link Software Event Generation Register 1 Priviledge
                                         *   Attribution                                                               */
            uint32_t : 29;
        } ELCPARA_b;
    };

    union
    {
        __IOM uint32_t ELCPARB;        /*!< (@ 0x000000F4) Event Link Controller Priviledge Attribution
                                        *                  Register B                                                 */

        struct
        {
            __IOM uint32_t ELSR0  : 1;
            __IOM uint32_t ELSR1  : 1;
            __IOM uint32_t ELSR2  : 1;
            __IOM uint32_t ELSR3  : 1;
            __IOM uint32_t ELSR4  : 1;
            __IOM uint32_t ELSR5  : 1;
            __IOM uint32_t ELSR6  : 1;
            __IOM uint32_t ELSR7  : 1;
            __IOM uint32_t ELSR8  : 1;
            __IOM uint32_t ELSR9  : 1;
            __IOM uint32_t ELSR10 : 1;
            __IOM uint32_t ELSR11 : 1;
            __IOM uint32_t ELSR12 : 1;
            __IOM uint32_t ELSR13 : 1;
            __IOM uint32_t ELSR14 : 1;
            __IOM uint32_t ELSR15 : 1;
            __IOM uint32_t ELSR16 : 1;
            __IOM uint32_t ELSR17 : 1;
            uint32_t              : 12;
            __IOM uint32_t ELSR30 : 1;
            uint32_t              : 1;
        } ELCPARB_b;
    };
} R_ELC_Type;

/* =========================================================================================================================== */
/* ================                                         R_ETHERC0                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief Ethernet MAC Controller (R_ETHERC0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t ECMR;

        struct
        {
            __IOM uint32_t PRM   : 1;
            __IOM uint32_t DM    : 1;
            __IOM uint32_t RTM   : 1;
            __IOM uint32_t ILB   : 1;
            uint32_t             : 1;
            __IOM uint32_t TE    : 1;
            __IOM uint32_t RE    : 1;
            uint32_t             : 2;
            __IOM uint32_t MPDE  : 1;
            uint32_t             : 2;
            __IOM uint32_t PRCEF : 1;
            uint32_t             : 3;
            __IOM uint32_t TXF   : 1;
            __IOM uint32_t RXF   : 1;
            __IOM uint32_t PFR   : 1;
            __IOM uint32_t ZPF   : 1;
            __IOM uint32_t TPC   : 1;
            uint32_t             : 11;
        } ECMR_b;
    };
    __IM uint32_t RESERVED;

    union
    {
        __IOM uint32_t RFLR;

        struct
        {
            __IOM uint32_t RFL : 12;   /*!< [11..0] Receive Frame Maximum LengthThe set value becomes the
                                        *   maximum frame length. The minimum value that can be set
                                        *   is 1,518 bytes, and the maximum value that can be set is
                                        *   2,048 bytes. Values that are less than 1,518 bytes are
                                        *   regarded as 1,518 bytes, and values larger than 2,048 bytes
                                        *   are regarded as 2,048 bytes.                                              */
            uint32_t : 20;
        } RFLR_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t ECSR;

        struct
        {
            __IOM uint32_t ICD   : 1;
            __IOM uint32_t MPD   : 1;
            __IOM uint32_t LCHNG : 1;
            uint32_t             : 1;
            __IOM uint32_t PSRTO : 1;
            __IOM uint32_t BFR   : 1;
            uint32_t             : 26;
        } ECSR_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t ECSIPR;

        struct
        {
            __IOM uint32_t ICDIP   : 1;
            __IOM uint32_t MPDIP   : 1;
            __IOM uint32_t LCHNGIP : 1;
            uint32_t               : 1;
            __IOM uint32_t PSRTOIP : 1;
            __IOM uint32_t BFSIPR  : 1;
            uint32_t               : 26;
        } ECSIPR_b;
    };
    __IM uint32_t RESERVED3;

    union
    {
        __IOM uint32_t PIR;

        struct
        {
            __IOM uint32_t MDC : 1;    /*!< [0..0] MII/RMII Management Data ClockThe MDC bit value is output
                                        *   from the ETn_MDC pin to supply the management data clock
                                        *   to the MII or RMII.                                                       */
            __IOM uint32_t MMD : 1;
            __IOM uint32_t MDO : 1;    /*!< [2..2] MII/RMII Management Data-OutThe MDO bit value is output
                                        *   from the ETn_MDIO pin when the MMD bit is 1 (write). The
                                        *   value is not output when the MMD bit is 0 (read).                         */
            __IM uint32_t MDI : 1;     /*!< [3..3] MII/RMII Management Data-InThis bit indicates the level
                                        *   of the ETn_MDIO pin. The write value should be 0.                         */
            uint32_t : 28;
        } PIR_b;
    };
    __IM uint32_t RESERVED4;

    union
    {
        __IM uint32_t PSR;

        struct
        {
            __IM uint32_t LMON : 1;    /*!< [0..0] ETn_LINKSTA Pin Status FlagThe link status can be read
                                        *   by connecting the link signal output from the PHY-LSI to
                                        *   the ETn_LINKSTA pin. For details on the polarity, refer
                                        *   to the specifications of the connected PHY-LSI.                           */
            uint32_t : 31;
        } PSR_b;
    };
    __IM uint32_t RESERVED5[5];

    union
    {
        __IOM uint32_t RDMLR;          /*!< (@ 0x00000040) Random Number Generation Counter Upper Limit
                                        *                  Setting Register                                           */

        struct
        {
            __IOM uint32_t RMD : 20;
            uint32_t           : 12;
        } RDMLR_b;
    };
    __IM uint32_t RESERVED6[3];

    union
    {
        __IOM uint32_t IPGR;

        struct
        {
            __IOM uint32_t IPG : 5;
            uint32_t           : 27;
        } IPGR_b;
    };

    union
    {
        __IOM uint32_t APR;

        struct
        {
            __IOM uint32_t AP : 16;    /*!< [15..0] Automatic PAUSE Time SettingThese bits set the value
                                        *   of the pause_time parameter for a PAUSE frame that is automatically
                                        *   transmitted. Transmission is not performed until the set
                                        *   value multiplied by 512 bit time has elapsed.                             */
            uint32_t : 16;
        } APR_b;
    };

    union
    {
        __OM uint32_t MPR;

        struct
        {
            __OM uint32_t MP : 16;     /*!< [15..0] Manual PAUSE Time SettingThese bits set the value of
                                        *   the pause_time parameter for a PAUSE frame that is manually
                                        *   transmitted. Transmission is not performed until the set
                                        *   value multiplied by 512 bit time has elapsed. The read
                                        *   value is undefined.                                                       */
            uint32_t : 16;
        } MPR_b;
    };
    __IM uint32_t RESERVED7;

    union
    {
        __IM uint32_t RFCF;

        struct
        {
            __IM uint32_t RPAUSE : 8;
            uint32_t             : 24;
        } RFCF_b;
    };

    union
    {
        __IOM uint32_t TPAUSER;

        struct
        {
            __IOM uint32_t TPAUSE : 16;
            uint32_t              : 16;
        } TPAUSER_b;
    };
    __IM uint32_t TPAUSECR;

    union
    {
        __IOM uint32_t BCFRR;

        struct
        {
            __IOM uint32_t BCF : 16;
            uint32_t           : 16;
        } BCFRR_b;
    };
    __IM uint32_t RESERVED8[20];

    union
    {
        __IOM uint32_t MAHR;

        struct
        {
            __IOM uint32_t MAHR : 32;  /*!< [31..0] MAC Address Upper Bit RegisterThe MAHR register sets
                                        *   the upper 32 bits (b47 to b16) of the 48-bit MAC address.                 */
        } MAHR_b;
    };
    __IM uint32_t RESERVED9;

    union
    {
        __IOM uint32_t MALR;

        struct
        {
            __IOM uint32_t MALR : 16;  /*!< [15..0] MAC Address Lower Bit RegisterThe MALR register sets
                                        *   the lower 16 bits of the 48-bit MAC address.                              */
            uint32_t : 16;
        } MALR_b;
    };
    __IM uint32_t RESERVED10;

    union
    {
        __IOM uint32_t TROCR;

        struct
        {
            __IOM uint32_t TROCR : 32; /*!< [31..0] Transmit Retry Over Counter RegisterThe TROCR register
                                        *   is a counter indicating the number of frames that fail
                                        *   to be retransmitted.                                                      */
        } TROCR_b;
    };
    __IOM uint32_t CDCR;

    union
    {
        __IOM uint32_t LCCR;

        struct
        {
            __IOM uint32_t LCCR : 32;  /*!< [31..0] Lost Carrier Counter RegisterThe LCCR register is a
                                        *   counter indicating the number of times a loss of carrier
                                        *   is detected during frame transmission.                                    */
        } LCCR_b;
    };

    union
    {
        __IOM uint32_t CNDCR;

        struct
        {
            __IOM uint32_t CNDCR : 32; /*!< [31..0] Carrier Not Detect Counter RegisterThe CNDCR register
                                        *   is a counter indicating the number of times a carrier is
                                        *   not detected during preamble transmission.                                */
        } CNDCR_b;
    };
    __IM uint32_t RESERVED11;

    union
    {
        __IOM uint32_t CEFCR;

        struct
        {
            __IOM uint32_t CEFCR : 32; /*!< [31..0] CRC Error Frame Receive Counter RegisterThe CEFCR register
                                        *   is a counter indicating the number of received frames where
                                        *   a CRC error has been detected.                                            */
        } CEFCR_b;
    };

    union
    {
        __IOM uint32_t FRECR;

        struct
        {
            __IOM uint32_t FRECR : 32; /*!< [31..0] Frame Receive Error Counter RegisterThe FRECR register
                                        *   is a counter indicating the number of times a frame receive
                                        *   error has occurred.                                                       */
        } FRECR_b;
    };

    union
    {
        __IOM uint32_t TSFRCR;

        struct
        {
            __IOM uint32_t TSFRCR : 32; /*!< [31..0] Too-Short Frame Receive Counter RegisterThe TSFRCR register
                                         *   is a counter indicating the number of times a short frame
                                         *   that is shorter than 64 bytes has been received.                          */
        } TSFRCR_b;
    };

    union
    {
        __IOM uint32_t TLFRCR;

        struct
        {
            __IOM uint32_t TLFRCR : 32; /*!< [31..0] Too-Long Frame Receive Counter RegisterThe TLFRCR register
                                         *   is a counter indicating the number of times a long frame
                                         *   that is longer than the RFLR register value has been received.            */
        } TLFRCR_b;
    };

    union
    {
        __IOM uint32_t RFCR;

        struct
        {
            __IOM uint32_t RFCR : 32;  /*!< [31..0] Received Alignment Error Frame Counter RegisterThe RFCR
                                        *   register is a counter indicating the number of times a
                                        *   frame has been received with the alignment error (frame
                                        *   is not an integral number of octets).                                     */
        } RFCR_b;
    };

    union
    {
        __IOM uint32_t MAFCR;

        struct
        {
            __IOM uint32_t MAFCR : 32; /*!< [31..0] Multicast Address Frame Receive Counter RegisterThe
                                        *   MAFCR register is a counter indicating the number of times
                                        *   a frame where the multicast address is set has been received.             */
        } MAFCR_b;
    };
} R_ETHERC0_Type;

/* =========================================================================================================================== */
/* ================                                      R_ETHERC_EDMAC                                       ================ */
/* =========================================================================================================================== */

/**
 * @brief Ethernet DMA Controller (R_ETHERC_EDMAC)
 */

typedef struct
{
    union
    {
        __IOM uint32_t EDMR;

        struct
        {
            __OM uint32_t SWR : 1;
            uint32_t          : 3;
            __IOM uint32_t DL : 2;
            __IOM uint32_t DE : 1;     /*!< [6..6] Big Endian Mode/Little Endian ModeNOTE: This setting
                                        *   applies to data for the transmit/receive buffer. It does
                                        *   not apply to transmit/receive descriptors and registers.                  */
            uint32_t : 25;
        } EDMR_b;
    };
    __IM uint32_t RESERVED;

    union
    {
        __IOM uint32_t EDTRR;

        struct
        {
            __OM uint32_t TR : 1;
            uint32_t         : 31;
        } EDTRR_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t EDRRR;

        struct
        {
            __IOM uint32_t RR : 1;
            uint32_t          : 31;
        } EDRRR_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t TDLAR;

        struct
        {
            __IOM uint32_t TDLAR : 32; /*!< [31..0] The start address of the transmit descriptor list is
                                        *   set. Set the start address according to the descriptor
                                        *   length selected by the EDMR.DL[1:0] bits.16-byte boundary:
                                        *   Lower 4 bits = 0000b32-byte boundary: Lower 5 bits = 00000b64-byte
                                        *   boundary: Lower 6 bits = 000000b                                          */
        } TDLAR_b;
    };
    __IM uint32_t RESERVED3;

    union
    {
        __IOM uint32_t RDLAR;

        struct
        {
            __IOM uint32_t RDLAR : 32; /*!< [31..0] The start address of the receive descriptor list is
                                        *   set. Set the start address according to the descriptor
                                        *   length selected by the EDMR.DL[1:0] bits.16-byte boundary:
                                        *   Lower 4 bits = 0000b32-byte boundary: Lower 5 bits = 00000b64-byte
                                        *   boundary: Lower 6 bits = 000000b                                          */
        } RDLAR_b;
    };
    __IM uint32_t RESERVED4;

    union
    {
        __IOM uint32_t EESR;

        struct
        {
            __IOM uint32_t CERF : 1;
            __IOM uint32_t PRE  : 1;
            __IOM uint32_t RTSF : 1;
            __IOM uint32_t RTLF : 1;
            __IOM uint32_t RRF  : 1;
            uint32_t            : 2;
            __IOM uint32_t RMAF : 1;
            __IOM uint32_t TRO  : 1;
            __IOM uint32_t CD   : 1;
            __IOM uint32_t DLC  : 1;
            __IOM uint32_t CND  : 1;
            uint32_t            : 4;
            __IOM uint32_t RFOF : 1;
            __IOM uint32_t RDE  : 1;
            __IOM uint32_t FR   : 1;
            __IOM uint32_t TFUF : 1;
            __IOM uint32_t TDE  : 1;
            __IOM uint32_t TC   : 1;
            __IM uint32_t  ECI  : 1;   /*!< [22..22] ETHERC Status Register Source FlagNOTE: When the source
                                        *   in the ETHERCn.ECSR register is cleared, the ECI flag is
                                        *   also cleared.                                                             */
            __IOM uint32_t ADE   : 1;
            __IOM uint32_t RFCOF : 1;
            __IOM uint32_t RABT  : 1;
            __IOM uint32_t TABT  : 1;
            uint32_t             : 3;
            __IOM uint32_t TWB   : 1;
            uint32_t             : 1;
        } EESR_b;
    };
    __IM uint32_t RESERVED5;

    union
    {
        __IOM uint32_t EESIPR;

        struct
        {
            __IOM uint32_t CERFIP  : 1;
            __IOM uint32_t PREIP   : 1;
            __IOM uint32_t RTSFIP  : 1;
            __IOM uint32_t RTLFIP  : 1;
            __IOM uint32_t RRFIP   : 1;
            uint32_t               : 2;
            __IOM uint32_t RMAFIP  : 1;
            __IOM uint32_t TROIP   : 1;
            __IOM uint32_t CDIP    : 1;
            __IOM uint32_t DLCIP   : 1;
            __IOM uint32_t CNDIP   : 1;
            uint32_t               : 4;
            __IOM uint32_t RFOFIP  : 1;
            __IOM uint32_t RDEIP   : 1;
            __IOM uint32_t FRIP    : 1;
            __IOM uint32_t TFUFIP  : 1;
            __IOM uint32_t TDEIP   : 1;
            __IOM uint32_t TCIP    : 1;
            __IOM uint32_t ECIIP   : 1;
            __IOM uint32_t ADEIP   : 1;
            __IOM uint32_t RFCOFIP : 1;
            __IOM uint32_t RABTIP  : 1;
            __IOM uint32_t TABTIP  : 1;
            uint32_t               : 3;
            __IOM uint32_t TWBIP   : 1;
            uint32_t               : 1;
        } EESIPR_b;
    };
    __IM uint32_t RESERVED6;

    union
    {
        __IOM uint32_t TRSCER;         /*!< (@ 0x00000038) ETHERC/EDMAC Transmit/Receive Status Copy Enable
                                        *                  Register                                                   */

        struct
        {
            uint32_t              : 4;
            __IOM uint32_t RRFCE  : 1;
            uint32_t              : 2;
            __IOM uint32_t RMAFCE : 1;
            uint32_t              : 24;
        } TRSCER_b;
    };
    __IM uint32_t RESERVED7;

    union
    {
        __IOM uint32_t RMFCR;

        struct
        {
            __IOM uint32_t MFC : 16;   /*!< [15..0] Missed-Frame CounterThese bits indicate the number of
                                        *   frames that are discarded and not transferred to the receive
                                        *   buffer during reception.                                                  */
            uint32_t : 16;
        } RMFCR_b;
    };
    __IM uint32_t RESERVED8;

    union
    {
        __IOM uint32_t TFTR;

        struct
        {
            __IOM uint32_t TFT : 11;   /*!< [10..0] Transmit FIFO Threshold00Dh to 200h: The threshold is
                                        *   the set value multiplied by 4. Example: 00Dh: 52 bytes
                                        *   040h: 256 bytes 100h: 1024 bytes 200h: 2048 bytes                         */
            uint32_t : 21;
        } TFTR_b;
    };
    __IM uint32_t RESERVED9;

    union
    {
        __IOM uint32_t FDR;

        struct
        {
            __IOM uint32_t RFD : 5;
            uint32_t           : 3;
            __IOM uint32_t TFD : 5;
            uint32_t           : 19;
        } FDR_b;
    };
    __IM uint32_t RESERVED10;

    union
    {
        __IOM uint32_t RMCR;

        struct
        {
            __IOM uint32_t RNR : 1;
            uint32_t           : 31;
        } RMCR_b;
    };
    __IM uint32_t RESERVED11[2];

    union
    {
        __IOM uint32_t TFUCR;

        struct
        {
            __IOM uint32_t UNDER : 16; /*!< [15..0] Transmit FIFO Underflow CountThese bits indicate how
                                        *   many times the transmit FIFO has underflowed. The counter
                                        *   stops when the counter value reaches FFFFh.                               */
            uint32_t : 16;
        } TFUCR_b;
    };

    union
    {
        __IOM uint32_t RFOCR;

        struct
        {
            __IOM uint32_t OVER : 16;  /*!< [15..0] Receive FIFO Overflow CountThese bits indicate how many
                                        *   times the receive FIFO has overflowed. The counter stops
                                        *   when the counter value reaches FFFFh.                                     */
            uint32_t : 16;
        } RFOCR_b;
    };

    union
    {
        __IOM uint32_t IOSR;

        struct
        {
            __IOM uint32_t ELB : 1;
            uint32_t           : 31;
        } IOSR_b;
    };

    union
    {
        __IOM uint32_t FCFTR;

        struct
        {
            __IOM uint32_t RFDO : 3;   /*!< [2..0] Receive FIFO Data PAUSE Output Threshold(When (RFDO+1)x256-32
                                        *   bytes of data is stored in the receive FIFO.)                             */
            uint32_t            : 13;
            __IOM uint32_t RFFO : 3;   /*!< [18..16] Receive FIFO Frame PAUSE Output Threshold(When ((RFFO+1)x2)
                                        *   receive frames have been stored in the receive FIFO.)                     */
            uint32_t : 13;
        } FCFTR_b;
    };
    __IM uint32_t RESERVED12;

    union
    {
        __IOM uint32_t RPADIR;

        struct
        {
            __IOM uint32_t PADR : 6;
            uint32_t            : 10;
            __IOM uint32_t PADS : 2;
            uint32_t            : 14;
        } RPADIR_b;
    };

    union
    {
        __IOM uint32_t TRIMD;

        struct
        {
            __IOM uint32_t TIS : 1;    /*!< [0..0] Transmit Interrupt EnableSet the EESR.TWB flag to 1 in
                                        *   the mode selected by the TIM bit to notify an interrupt.                  */
            uint32_t           : 3;
            __IOM uint32_t TIM : 1;
            uint32_t           : 27;
        } TRIMD_b;
    };
    __IM uint32_t RESERVED13[18];

    union
    {
        __IOM uint32_t RBWAR;

        struct
        {
            __IM uint32_t RBWAR : 32;  /*!< [31..0] Receive Buffer Write Address RegisterThe RBWAR register
                                        *   indicates the last address that the EDMAC has written data
                                        *   to when writing to the receive buffer.Refer to the address
                                        *   indicated by the RBWAR register to recognize which address
                                        *   in the receive buffer the EDMAC is writing data to. Note
                                        *   that the address that the EDMAC is outputting to the receive
                                        *   buffer may not match the read value of the RBWAR register
                                        *   during data reception.                                                    */
        } RBWAR_b;
    };

    union
    {
        __IOM uint32_t RDFAR;

        struct
        {
            __IM uint32_t RDFAR : 32;  /*!< [31..0] Receive Descriptor Fetch Address RegisterThe RDFAR register
                                        *   indicates the start address of the last fetched receive
                                        *   descriptor when the EDMAC fetches descriptor information
                                        *   from the receive descriptor.Refer to the address indicated
                                        *   by the RDFAR register to recognize which receive descriptor
                                        *   information the EDMAC is using for the current processing.
                                        *   Note that the address of the receive descriptor that the
                                        *   EDMAC fetches may not match the read value of the RDFAR
                                        *   register during data reception.                                           */
        } RDFAR_b;
    };
    __IM uint32_t RESERVED14;

    union
    {
        __IOM uint32_t TBRAR;

        struct
        {
            __IM uint32_t TBRAR : 32;  /*!< [31..0] Transmit Buffer Read Address RegisterThe TBRAR register
                                        *   indicates the last address that the EDMAC has read data
                                        *   from when reading data from the transmit buffer.Refer to
                                        *   the address indicated by the TBRAR register to recognize
                                        *   which address in the transmit buffer the EDMAC is reading
                                        *   from. Note that the address that the EDMAC is outputting
                                        *   to the transmit buffer may not match the read value of
                                        *   the TBRAR register.                                                       */
        } TBRAR_b;
    };

    union
    {
        __IM uint32_t TDFAR;

        struct
        {
            __IM uint32_t TDFAR : 32;  /*!< [31..0] Transmit Descriptor Fetch Address RegisterThe TDFAR
                                        *   register indicates the start address of the last fetched
                                        *   transmit descriptor when the EDMAC fetches descriptor information
                                        *   from the transmit descriptor.Refer to the address indicated
                                        *   by the TDFAR register to recognize which transmit descriptor
                                        *   information the EDMAC is using for the current processing.
                                        *   Note that the address of the transmit descriptor that the
                                        *   EDMAC fetches may not match the read value of the TDFAR
                                        *   register.                                                                 */
        } TDFAR_b;
    };
} R_ETHERC_EDMAC_Type;

/* =========================================================================================================================== */
/* ================                                       R_FACI_HP_CMD                                       ================ */
/* =========================================================================================================================== */

/**
 * @brief Flash Application Command Interface Command-Issuing Area (R_FACI_HP_CMD)
 */

typedef struct
{
    union
    {
        __IOM uint16_t FACI_CMD16;
        __IOM uint8_t  FACI_CMD8;
    };
} R_FACI_HP_CMD_Type;

/* =========================================================================================================================== */
/* ================                                         R_FACI_HP                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief Flash Application Command Interface (R_FACI_HP)
 */

typedef struct
{
    __IM uint32_t RESERVED[4];

    union
    {
        __IOM uint8_t FASTAT;

        struct
        {
            uint8_t             : 3;
            __IOM uint8_t DFAE  : 1;
            __IM uint8_t  CMDLK : 1;
            uint8_t             : 2;
            __IOM uint8_t CFAE  : 1;
        } FASTAT_b;
    };
    __IM uint8_t  RESERVED1;
    __IM uint16_t RESERVED2;

    union
    {
        __IOM uint8_t FAEINT;

        struct
        {
            uint8_t               : 3;
            __IOM uint8_t DFAEIE  : 1;
            __IOM uint8_t CMDLKIE : 1;
            uint8_t               : 2;
            __IOM uint8_t CFAEIE  : 1;
        } FAEINT_b;
    };
    __IM uint8_t  RESERVED3;
    __IM uint16_t RESERVED4;

    union
    {
        __IOM uint8_t FRDYIE;

        struct
        {
            __IOM uint8_t FRDYIE : 1;
            uint8_t              : 7;
        } FRDYIE_b;
    };
    __IM uint8_t  RESERVED5;
    __IM uint16_t RESERVED6;
    __IM uint32_t RESERVED7[5];

    union
    {
        __IOM uint32_t FSADDR;

        struct
        {
            __IOM uint32_t FSA : 32;   /*!< [31..0] Start Address of Flash Sequencer Command Target Area
                                        *   These bits can be written when FRDY bit of FSTATR register
                                        *   is '1'. Writing to these bits in FRDY = '0' is ignored.                   */
        } FSADDR_b;
    };

    union
    {
        __IOM uint32_t FEADDR;

        struct
        {
            __IOM uint32_t FEA : 32;   /*!< [31..0] End Address of Flash Sequencer Command Target Area Specifies
                                        *   end address of target area in 'Blank Check' command. These
                                        *   bits can be written when FRDY bit of FSTATR register is
                                        *   '1'. Writing to these bits in FRDY = '0' is ignored.                      */
        } FEADDR_b;
    };
    __IM uint32_t RESERVED8[3];

    union
    {
        __IOM uint16_t FMEPROT;

        struct
        {
            __IOM uint16_t CEPROT : 1; /*!< [0..0] Code Flash P/E Mode Entry ProtectionWriting to this bit
                                        *   is only possible when the FRDY bit in the FSTATR register
                                        *   is 1. Writing to this bit while the FRDY bit = 0 isignored.Writing
                                        *   to this bit is only possible when 16 bits are written and
                                        *   the value written to the KEY bits is D9h.Written values
                                        *   are not retained by these bits (always read as 0x00).Only
                                        *   secure access can write to this register. Both secure access
                                        *   and non-secure read access are allowed. Non-secure writeaccess
                                        *   is denied, but TrustZo                                                    */
            uint16_t          : 7;
            __OM uint16_t KEY : 8;
        } FMEPROT_b;
    };
    __IM uint16_t RESERVED9;
    __IM uint32_t RESERVED10[12];

    union
    {
        __IOM uint16_t FBPROT0;

        struct
        {
            __IOM uint16_t BPCN0 : 1;  /*!< [0..0] Block Protection for Non-secure CancelThis bit can be
                                        *   written when the FRDY bit in the FSTATR register is 1.
                                        *   Writing to this bit is ignored when the FRDY bit is 0.Writing
                                        *   to this bit is only possible when 16 bits are written and
                                        *   the value written to the KEY[7:0] bits is 0x78.Written
                                        *   values are not retained by these bits (always read as 0x00).              */
            uint16_t          : 7;
            __OM uint16_t KEY : 8;
        } FBPROT0_b;
    };
    __IM uint16_t RESERVED11;

    union
    {
        __IOM uint16_t FBPROT1;

        struct
        {
            __IOM uint16_t BPCN1 : 1;  /*!< [0..0] Block Protection for Secure CancelWriting to this bit
                                        *   is only possible when the FRDY bit in the FSTATR register
                                        *   is 1. Writing to this bit while FRDY bit = 0 is ignored.Writing
                                        *   to this bit is only possible when 16 bits are written and
                                        *   the value written to the KEY[7:0] bits is 0xB1.Written
                                        *   values are not retained by these bits (always read as 0x00).              */
            uint16_t          : 7;
            __OM uint16_t KEY : 8;
        } FBPROT1_b;
    };
    __IM uint16_t RESERVED12;

    union
    {
        __IM uint32_t FSTATR;

        struct
        {
            uint32_t                 : 6;
            __IM uint32_t FLWEERR    : 1;
            uint32_t                 : 1;
            __IM uint32_t PRGSPD     : 1;
            __IM uint32_t ERSSPD     : 1;
            __IM uint32_t DBFULL     : 1;
            __IM uint32_t SUSRDY     : 1;
            __IM uint32_t PRGERR     : 1;
            __IM uint32_t ERSERR     : 1;
            __IM uint32_t ILGLERR    : 1;
            __IM uint32_t FRDY       : 1;
            uint32_t                 : 4;
            __IM uint32_t  OTERR     : 1;
            __IOM uint32_t SECERR    : 1;
            __IM uint32_t  FESETERR  : 1;
            __IM uint32_t  ILGCOMERR : 1;
            uint32_t                 : 8;
        } FSTATR_b;
    };

    union
    {
        __IOM uint16_t FENTRYR;

        struct
        {
            __IOM uint16_t FENTRYC : 1; /*!< [0..0] Code Flash P/E Mode Entry These bits can be written when
                                         *   FRDY bit in FSTATR register is '1'. Writing to this bit
                                         *   in FRDY = '0' is ignored. Writing to these bits is enabled
                                         *   only when this register is accessed in 16-bit size and
                                         *   H'AA is written to KEY bits                                               */
            uint16_t               : 6;
            __IOM uint16_t FENTRYD : 1; /*!< [7..7] Data Flash P/E Mode Entry These bits can be written when
                                         *   FRDY bit in FSTATR register is '1'. Writing to this bit
                                         *   in FRDY = '0' is ignored. Writing to these bits is enabled
                                         *   only when this register is accessed in 16-bit size and
                                         *   H'AA is written to KEY bits.                                              */
            __OM uint16_t KEY : 8;
        } FENTRYR_b;
    };
    __IM uint16_t RESERVED13;
    __IM uint32_t RESERVED14;

    union
    {
        __IOM uint16_t FSUINITR;

        struct
        {
            __IOM uint16_t SUINIT : 1; /*!< [0..0] Set-up Initialization This bit can be written when FRDY
                                        *   bit of FSTATR register is '1'. Writing to this bit in FRDY
                                        *   = '0' is ignored. Writing to these bits is enabled only
                                        *   when this register is accessed in 16-bit size and H'2D
                                        *   is written to KEY bits.                                                   */
            uint16_t          : 7;
            __OM uint16_t KEY : 8;
        } FSUINITR_b;
    };
    __IM uint16_t RESERVED15;
    __IM uint32_t RESERVED16[4];

    union
    {
        __IM uint16_t FCMDR;

        struct
        {
            __IM uint16_t PCMDR : 8;
            __IM uint16_t CMDR  : 8;
        } FCMDR_b;
    };
    __IM uint16_t RESERVED17;
    __IM uint32_t RESERVED18[11];

    union
    {
        __IOM uint8_t FBCCNT;

        struct
        {
            __IOM uint8_t BCDIR : 1;
            uint8_t             : 7;
        } FBCCNT_b;
    };
    __IM uint8_t  RESERVED19;
    __IM uint16_t RESERVED20;

    union
    {
        __IM uint8_t FBCSTAT;

        struct
        {
            __IM uint8_t BCST : 1;
            uint8_t           : 7;
        } FBCSTAT_b;
    };
    __IM uint8_t  RESERVED21;
    __IM uint16_t RESERVED22;

    union
    {
        __IM uint32_t FPSADDR;

        struct
        {
            __IM uint32_t PSADR : 19;  /*!< [18..0] Programmed Area Start Address NOTE: Indicates address
                                        *   of the first programmed data which is found in 'Blank Check'
                                        *   command execution.                                                        */
            uint32_t : 13;
        } FPSADDR_b;
    };

    union
    {
        __IM uint32_t FAWMON;

        struct
        {
            __IM uint32_t FAWS : 11;   /*!< [10..0] Start Sector Address for Access Window NOTE: These bits
                                        *   indicate the start sector address for setting the access
                                        *   window that is located in the configuration area.                         */
            uint32_t           : 4;
            __IM uint32_t FSPR : 1;    /*!< [15..15] Protection Flag of programming the Access Window, Boot
                                        *   Flag and Temporary Boot Swap Control and 'Config Clear'
                                        *   command execution                                                         */
            __IM uint32_t FAWE : 11;   /*!< [26..16] End Sector Address for Access Window NOTE: These bits
                                        *   indicate the end sector address for setting the access
                                        *   window that is located in the configuration area.                         */
            uint32_t            : 4;
            __IM uint32_t BTFLG : 1;
        } FAWMON_b;
    };

    union
    {
        __IOM uint16_t FCPSR;

        struct
        {
            __IOM uint16_t ESUSPMD : 1;
            uint16_t               : 15;
        } FCPSR_b;
    };
    __IM uint16_t RESERVED23;

    union
    {
        __IOM uint16_t FPCKAR;

        struct
        {
            __IOM uint16_t PCKA : 8;   /*!< [7..0] Flash Sequencer Processing Clock Frequency These bits
                                        *   can be written when FRDY bit in FSTATR register is '1'.
                                        *   Writing to this bit in FRDY = '0' is ignored. Writing to
                                        *   these bits is enabled only when this register is accessed
                                        *   in 16-bit size and H'1E is written to KEY bits.                           */
            __OM uint16_t KEY : 8;
        } FPCKAR_b;
    };
    __IM uint16_t RESERVED24;

    union
    {
        __IOM uint16_t FSUACR;

        struct
        {
            __IOM uint16_t SAS : 2;    /*!< [1..0] Start Up Area Select These bits can be written when FRDY
                                        *   bit in FSTATR register is '1'. Writing to this bit in FRDY
                                        *   = '0' is ignored. Writing to these bits is enabled only
                                        *   when this register is accessed in 16-bit size and H'66
                                        *   is written to KEY bits.                                                   */
            uint16_t          : 6;
            __OM uint16_t KEY : 8;
        } FSUACR_b;
    };
    __IM uint16_t RESERVED25;
} R_FACI_HP_Type;

/* =========================================================================================================================== */
/* ================                                         R_FCACHE                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Flash Cache (R_FCACHE)
 */

typedef struct
{
    union
    {
        __IOM uint16_t FCACHEE;

        struct
        {
            __IOM uint16_t FCACHEEN : 1;
            uint16_t                : 15;
        } FCACHEE_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t FCACHEIV;

        struct
        {
            __IOM uint16_t FCACHEIV : 1;
            uint16_t                : 15;
        } FCACHEIV_b;
    };
    __IM uint16_t RESERVED1[11];

    union
    {
        __IOM uint8_t FLWT;

        struct
        {
            __IOM uint8_t FLWT : 3;
            uint8_t            : 5;
        } FLWT_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3[17];

    union
    {
        __IOM uint16_t FSAR;

        struct
        {
            __IOM uint16_t FLWTSA     : 1;
            __IOM uint16_t FCACHEENSA : 1;
            uint16_t                  : 6;
            __IOM uint16_t FCKMHZSA   : 1;
            __IOM uint16_t FACICOMISA : 1;
            __IOM uint16_t FACICOMRSA : 1;
            __IOM uint16_t FACITRSA   : 1;
            uint16_t                  : 4;
        } FSAR_b;
    };
} R_FCACHE_Type;

/* =========================================================================================================================== */
/* ================                                          R_GPT0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief General PWM Timer (R_GPT0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t GTWP;

        struct
        {
            __IOM uint32_t WP    : 1;
            __IOM uint32_t STRWP : 1;
            __IOM uint32_t STPWP : 1;
            __IOM uint32_t CLRWP : 1;
            __IOM uint32_t CMNWP : 1;
            uint32_t             : 3;
            __OM uint32_t PRKEY  : 8;
            uint32_t             : 16;
        } GTWP_b;
    };

    union
    {
        __IOM uint32_t GTSTR;

        struct
        {
            __IOM uint32_t CSTRT0 : 1;  /*!< [0..0] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT1 : 1;  /*!< [1..1] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT2 : 1;  /*!< [2..2] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT3 : 1;  /*!< [3..3] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT4 : 1;  /*!< [4..4] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT5 : 1;  /*!< [5..5] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT6 : 1;  /*!< [6..6] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT7 : 1;  /*!< [7..7] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT8 : 1;  /*!< [8..8] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT9 : 1;  /*!< [9..9] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT10 : 1; /*!< [10..10] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT11 : 1; /*!< [11..11] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT12 : 1; /*!< [12..12] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT13 : 1; /*!< [13..13] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT14 : 1; /*!< [14..14] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT15 : 1; /*!< [15..15] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT16 : 1; /*!< [16..16] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT17 : 1; /*!< [17..17] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT18 : 1; /*!< [18..18] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT19 : 1; /*!< [19..19] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT20 : 1; /*!< [20..20] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT21 : 1; /*!< [21..21] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT22 : 1; /*!< [22..22] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT23 : 1; /*!< [23..23] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT24 : 1; /*!< [24..24] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT25 : 1; /*!< [25..25] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT26 : 1; /*!< [26..26] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT27 : 1; /*!< [27..27] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT28 : 1; /*!< [28..28] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT29 : 1; /*!< [29..29] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT30 : 1; /*!< [30..30] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
            __IOM uint32_t CSTRT31 : 1; /*!< [31..31] Channel GTCNT Count StartRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter stop. 1
                                         *   means counter running.                                                    */
        } GTSTR_b;
    };

    union
    {
        __IOM uint32_t GTSTP;

        struct
        {
            __IOM uint32_t CSTOP0 : 1;  /*!< [0..0] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP1 : 1;  /*!< [1..1] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP2 : 1;  /*!< [2..2] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP3 : 1;  /*!< [3..3] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP4 : 1;  /*!< [4..4] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP5 : 1;  /*!< [5..5] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP6 : 1;  /*!< [6..6] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP7 : 1;  /*!< [7..7] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP8 : 1;  /*!< [8..8] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP9 : 1;  /*!< [9..9] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP10 : 1; /*!< [10..10] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP11 : 1; /*!< [11..11] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP12 : 1; /*!< [12..12] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP13 : 1; /*!< [13..13] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP14 : 1; /*!< [14..14] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP15 : 1; /*!< [15..15] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP16 : 1; /*!< [16..16] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP17 : 1; /*!< [17..17] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP18 : 1; /*!< [18..18] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP19 : 1; /*!< [19..19] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP20 : 1; /*!< [20..20] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP21 : 1; /*!< [21..21] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP22 : 1; /*!< [22..22] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP23 : 1; /*!< [23..23] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP24 : 1; /*!< [24..24] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP25 : 1; /*!< [25..25] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP26 : 1; /*!< [26..26] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP27 : 1; /*!< [27..27] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP28 : 1; /*!< [28..28] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP29 : 1; /*!< [29..29] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP30 : 1; /*!< [30..30] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
            __IOM uint32_t CSTOP31 : 1; /*!< [31..31] Channel GTCNT Count StopRead data shows each channel's
                                         *   counter status (GTCR.CST bit). 0 means counter runnning.
                                         *   1 means counter stop.                                                     */
        } GTSTP_b;
    };

    union
    {
        __OM uint32_t GTCLR;

        struct
        {
            __OM uint32_t CCLR0  : 1;
            __OM uint32_t CCLR1  : 1;
            __OM uint32_t CCLR2  : 1;
            __OM uint32_t CCLR3  : 1;
            __OM uint32_t CCLR4  : 1;
            __OM uint32_t CCLR5  : 1;
            __OM uint32_t CCLR6  : 1;
            __OM uint32_t CCLR7  : 1;
            __OM uint32_t CCLR8  : 1;
            __OM uint32_t CCLR9  : 1;
            __OM uint32_t CCLR10 : 1;
            __OM uint32_t CCLR11 : 1;
            __OM uint32_t CCLR12 : 1;
            __OM uint32_t CCLR13 : 1;
            __OM uint32_t CCLR14 : 1;
            __OM uint32_t CCLR15 : 1;
            __OM uint32_t CCLR16 : 1;
            __OM uint32_t CCLR17 : 1;
            __OM uint32_t CCLR18 : 1;
            __OM uint32_t CCLR19 : 1;
            __OM uint32_t CCLR20 : 1;
            __OM uint32_t CCLR21 : 1;
            __OM uint32_t CCLR22 : 1;
            __OM uint32_t CCLR23 : 1;
            __OM uint32_t CCLR24 : 1;
            __OM uint32_t CCLR25 : 1;
            __OM uint32_t CCLR26 : 1;
            __OM uint32_t CCLR27 : 1;
            __OM uint32_t CCLR28 : 1;
            __OM uint32_t CCLR29 : 1;
            __OM uint32_t CCLR30 : 1;
            __OM uint32_t CCLR31 : 1;
        } GTCLR_b;
    };

    union
    {
        __IOM uint32_t GTSSR;

        struct
        {
            __IOM uint32_t SSGTRGAR : 1;
            __IOM uint32_t SSGTRGAF : 1;
            __IOM uint32_t SSGTRGBR : 1;
            __IOM uint32_t SSGTRGBF : 1;
            __IOM uint32_t SSGTRGCR : 1;
            __IOM uint32_t SSGTRGCF : 1;
            __IOM uint32_t SSGTRGDR : 1;
            __IOM uint32_t SSGTRGDF : 1;
            __IOM uint32_t SSCARBL  : 1; /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   Counter Start Enable                                                      */
            __IOM uint32_t SSELCA : 1;
            __IOM uint32_t SSELCB : 1;
            __IOM uint32_t SSELCC : 1;
            __IOM uint32_t SSELCD : 1;
            __IOM uint32_t SSELCE : 1;
            __IOM uint32_t SSELCF : 1;
            __IOM uint32_t SSELCG : 1;
            __IOM uint32_t SSELCH : 1;
            uint32_t              : 7;
            __IOM uint32_t CSTRT  : 1;
        } GTSSR_b;
    };

    union
    {
        __IOM uint32_t GTPSR;

        struct
        {
            __IOM uint32_t PSGTRGAR : 1;
            __IOM uint32_t PSGTRGAF : 1;
            __IOM uint32_t PSGTRGBR : 1;
            __IOM uint32_t PSGTRGBF : 1;
            __IOM uint32_t PSGTRGCR : 1;
            __IOM uint32_t PSGTRGCF : 1;
            __IOM uint32_t PSGTRGDR : 1;
            __IOM uint32_t PSGTRGDF : 1;
            __IOM uint32_t PSCARBL  : 1; /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   Counter Stop Enable                                                       */
            __IOM uint32_t PSELCA : 1;
            __IOM uint32_t PSELCB : 1;
            __IOM uint32_t PSELCC : 1;
            __IOM uint32_t PSELCD : 1;
            __IOM uint32_t PSELCE : 1;
            __IOM uint32_t PSELCF : 1;
            __IOM uint32_t PSELCG : 1;
            __IOM uint32_t PSELCH : 1;
            uint32_t              : 7;
            __IOM uint32_t CSTOP  : 1;
        } GTPSR_b;
    };

    union
    {
        __IOM uint32_t GTCSR;

        struct
        {
            __IOM uint32_t CSGTRGAR : 1;
            __IOM uint32_t CSGTRGAF : 1;
            __IOM uint32_t CSGTRGBR : 1;
            __IOM uint32_t CSGTRGBF : 1;
            __IOM uint32_t CSGTRGCR : 1;
            __IOM uint32_t CSGTRGCF : 1;
            __IOM uint32_t CSGTRGDR : 1;
            __IOM uint32_t CSGTRGDF : 1;
            __IOM uint32_t CSCARBL  : 1; /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   Counter Clear Enable                                                      */
            __IOM uint32_t CSELCA : 1;
            __IOM uint32_t CSELCB : 1;
            __IOM uint32_t CSELCC : 1;
            __IOM uint32_t CSELCD : 1;
            __IOM uint32_t CSELCE : 1;
            __IOM uint32_t CSELCF : 1;
            __IOM uint32_t CSELCG : 1;
            __IOM uint32_t CSELCH : 1;
            __IOM uint32_t CSCMSC : 3;   /*!< [26..24] Compare Match/Input Capture/Synchronous counter clearing
                                          *   Source Counter Clear Enable.                                              */
            __IOM uint32_t CP1CCE : 1;   /*!< [27..27] Complementary PWM mode1 Crest Source Counter Clear
                                          *   Enable (This bit is only available in GPT324 to GPT329.
                                          *   In GPT320 to GPT323, this bit is read as 0. The write value
                                          *   should be 0.)                                                             */
            uint32_t            : 3;
            __IOM uint32_t CCLR : 1;
        } GTCSR_b;
    };

    union
    {
        __IOM uint32_t GTUPSR;

        struct
        {
            __IOM uint32_t USGTRGAR : 1;
            __IOM uint32_t USGTRGAF : 1;
            __IOM uint32_t USGTRGBR : 1;
            __IOM uint32_t USGTRGBF : 1;
            __IOM uint32_t USGTRGCR : 1;
            __IOM uint32_t USGTRGCF : 1;
            __IOM uint32_t USGTRGDR : 1;
            __IOM uint32_t USGTRGDF : 1;
            __IOM uint32_t USCARBL  : 1; /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   Counter Count Up Enable                                                   */
            __IOM uint32_t USELCA : 1;
            __IOM uint32_t USELCB : 1;
            __IOM uint32_t USELCC : 1;
            __IOM uint32_t USELCD : 1;
            __IOM uint32_t USELCE : 1;
            __IOM uint32_t USELCF : 1;
            __IOM uint32_t USELCG : 1;
            __IOM uint32_t USELCH : 1;
            __IOM uint32_t USILVL : 4;
            uint32_t              : 4;
        } GTUPSR_b;
    };

    union
    {
        __IOM uint32_t GTDNSR;

        struct
        {
            __IOM uint32_t DSGTRGAR : 1;
            __IOM uint32_t DSGTRGAF : 1;
            __IOM uint32_t DSGTRGBR : 1;
            __IOM uint32_t DSGTRGBF : 1;
            __IOM uint32_t DSGTRGCR : 1;
            __IOM uint32_t DSGTRGCF : 1;
            __IOM uint32_t DSGTRGDR : 1;
            __IOM uint32_t DSGTRGDF : 1;
            __IOM uint32_t DSCARBL  : 1; /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   Counter Count Down Enable                                                 */
            __IOM uint32_t DSELCA : 1;
            __IOM uint32_t DSELCB : 1;
            __IOM uint32_t DSELCC : 1;
            __IOM uint32_t DSELCD : 1;
            __IOM uint32_t DSELCE : 1;
            __IOM uint32_t DSELCF : 1;
            __IOM uint32_t DSELCG : 1;
            __IOM uint32_t DSELCH : 1;
            __IOM uint32_t DSILVL : 4;
            uint32_t              : 4;
        } GTDNSR_b;
    };

    union
    {
        __IOM uint32_t GTICASR;          /*!< (@ 0x00000024) General PWM Timer Input Capture Source Select
                                          *                  Register A                                                 */

        struct
        {
            __IOM uint32_t ASGTRGAR : 1;
            __IOM uint32_t ASGTRGAF : 1; /*!< [1..1] GTETRG Pin Falling Input Source GTCCRA Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t ASGTRGBR : 1;
            __IOM uint32_t ASGTRGBF : 1; /*!< [3..3] GTETRG Pin Falling Input Source GTCCRA Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t ASGTRGCR : 1;
            __IOM uint32_t ASGTRGCF : 1; /*!< [5..5] GTETRG Pin Falling Input Source GTCCRA Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t ASGTRGDR : 1;
            __IOM uint32_t ASGTRGDF : 1; /*!< [7..7] GTETRG Pin Falling Input Source GTCCRA Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t ASCARBL : 1;  /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   GTCCRA Input Capture Enable                                               */
            __IOM uint32_t ASELCA : 1;
            __IOM uint32_t ASELCB : 1;
            __IOM uint32_t ASELCC : 1;
            __IOM uint32_t ASELCD : 1;
            __IOM uint32_t ASELCE : 1;
            __IOM uint32_t ASELCF : 1;
            __IOM uint32_t ASELCG : 1;
            __IOM uint32_t ASELCH : 1;
            uint32_t              : 8;
        } GTICASR_b;
    };

    union
    {
        __IOM uint32_t GTICBSR;          /*!< (@ 0x00000028) General PWM Timer Input Capture Source Select
                                          *                  Register B                                                 */

        struct
        {
            __IOM uint32_t BSGTRGAR : 1;
            __IOM uint32_t BSGTRGAF : 1; /*!< [1..1] GTETRG Pin Falling Input Source GTCCRB Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t BSGTRGBR : 1;
            __IOM uint32_t BSGTRGBF : 1; /*!< [3..3] GTETRG Pin Falling Input Source GTCCRB Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t BSGTRGCR : 1;
            __IOM uint32_t BSGTRGCF : 1; /*!< [5..5] GTETRG Pin Falling Input Source GTCCRB Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t BSGTRGDR : 1;
            __IOM uint32_t BSGTRGDF : 1; /*!< [7..7] GTETRG Pin Falling Input Source GTCCRB Input Capture
                                          *   Enable                                                                    */
            __IOM uint32_t BSCARBL : 1;  /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCARBH : 1;  /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCAFBL : 1;  /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCAFBH : 1;  /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCBRAL : 1;  /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCBRAH : 1;  /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCBFAL : 1;  /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSCBFAH : 1;  /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                          *   GTCCRB Input Capture Enable                                               */
            __IOM uint32_t BSELCA : 1;
            __IOM uint32_t BSELCB : 1;
            __IOM uint32_t BSELCC : 1;
            __IOM uint32_t BSELCD : 1;
            __IOM uint32_t BSELCE : 1;
            __IOM uint32_t BSELCF : 1;
            __IOM uint32_t BSELCG : 1;
            __IOM uint32_t BSELCH : 1;
            uint32_t              : 8;
        } GTICBSR_b;
    };

    union
    {
        __IOM uint32_t GTCR;

        struct
        {
            __IOM uint32_t CST     : 1;
            uint32_t               : 7;
            __IOM uint32_t ICDS    : 1;
            __IOM uint32_t SCGTIOC : 1;
            __IOM uint32_t SSCGRP  : 2;
            __IOM uint32_t CPSCD   : 1;
            uint32_t               : 2;
            __IOM uint32_t SSCEN   : 1;
            __IOM uint32_t MD      : 4;
            uint32_t               : 3;
            __IOM uint32_t TPCS    : 4;
            __IOM uint32_t CKEG    : 2;
            uint32_t               : 3;
        } GTCR_b;
    };

    union
    {
        __IOM uint32_t GTUDDTYC;       /*!< (@ 0x00000030) General PWM Timer Count Direction and Duty Setting
                                        *                  Register                                                   */

        struct
        {
            __IOM uint32_t UD     : 1;
            __IOM uint32_t UDF    : 1;
            uint32_t              : 14;
            __IOM uint32_t OADTY  : 2;
            __IOM uint32_t OADTYF : 1;
            __IOM uint32_t OADTYR : 1; /*!< [19..19] GTIOCA Output Value Selecting after Releasing 0 percent/100
                                        *   percent Duty Setting                                                      */
            uint32_t              : 4;
            __IOM uint32_t OBDTY  : 2;
            __IOM uint32_t OBDTYF : 1;
            __IOM uint32_t OBDTYR : 1; /*!< [27..27] GTIOCB Output Value Selecting after Releasing 0 percent/100
                                        *   percent Duty Setting                                                      */
            uint32_t : 4;
        } GTUDDTYC_b;
    };

    union
    {
        __IOM uint32_t GTIOR;

        struct
        {
            __IOM uint32_t GTIOA  : 5;
            __IOM uint32_t CPSCIR : 1; /*!< [5..5] Complementary PWM Mode Initial Output at Synchronous
                                        *   Clear Disable.(This bit is only available in GPT324 to
                                        *   GPT329. In GPT320 to GPT323, this bit is read as 0. The
                                        *   write value should be 0.)                                                 */
            __IOM uint32_t OADFLT : 1;
            __IOM uint32_t OAHLD  : 1;
            __IOM uint32_t OAE    : 1;
            __IOM uint32_t OADF   : 2;
            __IOM uint32_t OAEOCD : 1; /*!< [11..11] GTCCRA Compare Match Cycle End Output Invalidate.(This
                                        *   bit is only available in GPT324 to GPT329. In GPT320 to
                                        *   GPT323, this bit is read as 0. The write value should be
                                        *   0.)                                                                       */
            __IOM uint32_t PSYE   : 1;
            __IOM uint32_t NFAEN  : 1;
            __IOM uint32_t NFCSA  : 2;
            __IOM uint32_t GTIOB  : 5;
            uint32_t              : 1;
            __IOM uint32_t OBDFLT : 1;
            __IOM uint32_t OBHLD  : 1;
            __IOM uint32_t OBE    : 1;
            __IOM uint32_t OBDF   : 2;
            __IOM uint32_t OBEOCD : 1; /*!< [27..27] GTCCRB Compare Match Cycle End Output Invalidate.(This
                                        *   bit is only available in GPT324 to GPT329. In GPT320 to
                                        *   GPT323, this bit is read as 0. The write value should be
                                        *   0.)                                                                       */
            uint32_t             : 1;
            __IOM uint32_t NFBEN : 1;
            __IOM uint32_t NFCSB : 2;
        } GTIOR_b;
    };

    union
    {
        __IOM uint32_t GTINTAD;

        struct
        {
            uint32_t            : 8;
            __IOM uint32_t SCFA : 1;     /*!< [8..8] GTCCRn Register Compare Match/Input Capture Source Synchronous
                                          *   Clear Enable                                                              */
            __IOM uint32_t SCFB : 1;     /*!< [9..9] GTCCRn Register Compare Match/Input Capture Source Synchronous
                                          *   Clear Enable                                                              */
            __IOM uint32_t SCFC : 1;     /*!< [10..10] GTCCRn Register Compare Match/Input Capture Source
                                          *   Synchronous Clear Enable                                                  */
            __IOM uint32_t SCFD : 1;     /*!< [11..11] GTCCRn Register Compare Match/Input Capture Source
                                          *   Synchronous Clear Enable                                                  */
            __IOM uint32_t SCFE : 1;     /*!< [12..12] GTCCRn Register Compare Match/Input Capture Source
                                          *   Synchronous Clear Enable                                                  */
            __IOM uint32_t SCFF : 1;     /*!< [13..13] GTCCRn Register Compare Match/Input Capture Source
                                          *   Synchronous Clear Enable                                                  */
            __IOM uint32_t SCFPO    : 1;
            __IOM uint32_t SCFPU    : 1;
            __IOM uint32_t ADTRAUEN : 1; /*!< [16..16] GTADTRn Register Compare Match (Up-Counting) A/D Conversion
                                          *   Start Request Enable                                                      */
            __IOM uint32_t ADTRADEN : 1; /*!< [17..17] GTADTRn Register Compare Match (Down-Counting) A/D
                                          *   Conversion Start Request Enable                                           */
            __IOM uint32_t ADTRBUEN : 1; /*!< [18..18] GTADTRn Register Compare Match (Up-Counting) A/D Conversion
                                          *   Start Request Enable                                                      */
            __IOM uint32_t ADTRBDEN : 1; /*!< [19..19] GTADTRn Register Compare Match (Down-Counting) A/D
                                          *   Conversion Start Request Enable                                           */
            uint32_t               : 4;
            __IOM uint32_t GRP     : 2;
            uint32_t               : 2;
            __IOM uint32_t GRPDTE  : 1;
            __IOM uint32_t GRPABH  : 1;
            __IOM uint32_t GRPABL  : 1;
            __IOM uint32_t GTINTPC : 1;
        } GTINTAD_b;
    };

    union
    {
        __IOM uint32_t GTST;

        struct
        {
            __IOM uint32_t TCFA  : 1;
            __IOM uint32_t TCFB  : 1;
            __IOM uint32_t TCFC  : 1;
            __IOM uint32_t TCFD  : 1;
            __IOM uint32_t TCFE  : 1;
            __IOM uint32_t TCFF  : 1;
            __IOM uint32_t TCFPO : 1;
            __IOM uint32_t TCFPU : 1;
            __IM uint32_t  ITCNT : 3;   /*!< [10..8] GTCIV/GTCIU Interrupt Skipping Count Counter(Counter
                                         *   for counting the number of times a timer interrupt has
                                         *   been skipped.)                                                            */
            uint32_t               : 4;
            __IM uint32_t  TUCF    : 1;
            __IOM uint32_t ADTRAUF : 1; /*!< [16..16] GTADTRA Compare Match (Up-Counting) A/D Converter Start
                                         *   Request Interrupt Enable                                                  */
            __IOM uint32_t ADTRADF : 1; /*!< [17..17] GTADTRA Compare Match(Down-Counting) A/D Convertor
                                         *   Start Request Flag                                                        */
            __IOM uint32_t ADTRBUF : 1; /*!< [18..18] GTADTRB Compare Match(Up-Counting) A/D Convertor Start
                                         *   Request Flag                                                              */
            __IOM uint32_t ADTRBDF : 1; /*!< [19..19] GTADTRB Compare Match(Down-Counting) A/D Convertor
                                         *   Start Request Flag                                                        */
            uint32_t             : 4;
            __IM uint32_t ODF    : 1;
            uint32_t             : 3;
            __IM uint32_t  DTEF  : 1;
            __IM uint32_t  OABHF : 1;
            __IM uint32_t  OABLF : 1;
            __IOM uint32_t PCF   : 1;
        } GTST_b;
    };

    union
    {
        __IOM uint32_t GTBER;

        struct
        {
            __IOM uint32_t BD0     : 1;
            __IOM uint32_t BD1     : 1;
            __IOM uint32_t BD2     : 1;
            __IOM uint32_t BD3     : 1;
            uint32_t               : 4;
            __IOM uint32_t DBRTECA : 1;
            uint32_t               : 1;
            __IOM uint32_t DBRTECB : 1;
            uint32_t               : 5;
            __IOM uint32_t CCRA    : 2;
            __IOM uint32_t CCRB    : 2;
            __IOM uint32_t PR      : 2;
            __OM uint32_t  CCRSWT  : 1; /*!< [22..22] GTCCRA and GTCCRB Forcible Buffer OperationThis bit
                                         *   is read as 0.                                                             */
            uint32_t             : 1;
            __IOM uint32_t ADTTA : 2;   /*!< [25..24] GTADTRA Buffer Transfer Timing Select in the Triangle
                                         *   wavesNOTE: In the Saw waves, values other than 0 0: Transfer
                                         *   at an underflow (in down-counting) or overflow (in up-counting)
                                         *   is performed.                                                             */
            __IOM uint32_t ADTDA : 1;
            uint32_t             : 1;
            __IOM uint32_t ADTTB : 2;   /*!< [29..28] GTADTRB Buffer Transfer Timing Select in the Triangle
                                         *   wavesNOTE: In the Saw waves, values other than 0 0: Transfer
                                         *   at an underflow (in down-counting) or overflow (in up-counting)
                                         *   is performed.                                                             */
            __IOM uint32_t ADTDB : 1;
            uint32_t             : 1;
        } GTBER_b;
    };

    union
    {
        __IOM uint32_t GTITC;          /*!< (@ 0x00000044) General PWM Timer Interrupt and A/D Converter
                                        *                  Start Request Skipping Setting Register                    */

        struct
        {
            __IOM uint32_t ITLA  : 1;
            __IOM uint32_t ITLB  : 1;
            __IOM uint32_t ITLC  : 1;
            __IOM uint32_t ITLD  : 1;
            __IOM uint32_t ITLE  : 1;
            __IOM uint32_t ITLF  : 1;
            __IOM uint32_t IVTC  : 2;
            __IOM uint32_t IVTT  : 3;
            uint32_t             : 1;
            __IOM uint32_t ADTAL : 1;
            uint32_t             : 1;
            __IOM uint32_t ADTBL : 1;
            uint32_t             : 17;
        } GTITC_b;
    };

    union
    {
        __IOM uint32_t GTCNT;

        struct
        {
            __IOM uint32_t GTCNT : 32;
        } GTCNT_b;
    };

    union
    {
        __IOM uint32_t GTCCR[6];

        struct
        {
            __IOM uint32_t GTCCR : 32;
        } GTCCR_b[6];
    };

    union
    {
        __IOM uint32_t GTPR;

        struct
        {
            __IOM uint32_t GTPR : 32;
        } GTPR_b;
    };

    union
    {
        __IOM uint32_t GTPBR;

        struct
        {
            __IOM uint32_t GTPBR : 32;
        } GTPBR_b;
    };

    union
    {
        __IOM uint32_t GTPDBR;          /*!< (@ 0x0000006C) General PWM Timer Cycle Setting Double-Buffer
                                         *                  Register                                                   */

        struct
        {
            __IOM uint32_t GTPDBR : 32;
        } GTPDBR_b;
    };

    union
    {
        __IOM uint32_t GTADTRA;

        struct
        {
            __IOM uint32_t GTADTRA : 32;
        } GTADTRA_b;
    };

    union
    {
        __IOM uint32_t GTADTBRA;          /*!< (@ 0x00000074) A/D Converter Start Request Timing Buffer Register
                                           *                  A                                                          */

        struct
        {
            __IOM uint32_t GTADTBRA : 32;
        } GTADTBRA_b;
    };

    union
    {
        __IOM uint32_t GTADTDBRA;          /*!< (@ 0x00000078) A/D Converter Start Request Timing Double-Buffer
                                            *                  Register A                                                 */

        struct
        {
            __IOM uint32_t GTADTDBRA : 32; /*!< [31..0] A/D Converter Start Request Timing Double-Buffer Register
                                            *   A                                                                         */
        } GTADTDBRA_b;
    };

    union
    {
        __IOM uint32_t GTADTRB;

        struct
        {
            __IOM uint32_t GTADTRB : 32;
        } GTADTRB_b;
    };

    union
    {
        __IOM uint32_t GTADTBRB;          /*!< (@ 0x00000080) A/D Converter Start Request Timing Buffer Register
                                           *                  B                                                          */

        struct
        {
            __IOM uint32_t GTADTBRB : 32;
        } GTADTBRB_b;
    };

    union
    {
        __IOM uint32_t GTADTDBRB;          /*!< (@ 0x00000084) A/D Converter Start Request Timing Double-Buffer
                                            *                  Register B                                                 */

        struct
        {
            __IOM uint32_t GTADTDBRB : 32; /*!< [31..0] A/D Converter Start Request Timing Double-Buffer Register
                                            *   B                                                                         */
        } GTADTDBRB_b;
    };

    union
    {
        __IOM uint32_t GTDTCR;

        struct
        {
            __IOM uint32_t TDE   : 1;
            uint32_t             : 3;
            __IOM uint32_t TDBUE : 1;
            __IOM uint32_t TDBDE : 1;
            uint32_t             : 2;
            __IOM uint32_t TDFER : 1;
            uint32_t             : 23;
        } GTDTCR_b;
    };

    union
    {
        __IOM uint32_t GTDVU;

        struct
        {
            __IOM uint32_t GTDVU : 32;
        } GTDVU_b;
    };

    union
    {
        __IOM uint32_t GTDVD;

        struct
        {
            __IOM uint32_t GTDVD : 32;
        } GTDVD_b;
    };

    union
    {
        __IOM uint32_t GTDBU;

        struct
        {
            __IOM uint32_t GTDVU : 32;
        } GTDBU_b;
    };

    union
    {
        __IOM uint32_t GTDBD;

        struct
        {
            __IOM uint32_t GTDBD : 32;
        } GTDBD_b;
    };

    union
    {
        __IM uint32_t GTSOS;           /*!< (@ 0x0000009C) General PWM Timer Output Protection Function
                                        *                  Status Register                                            */

        struct
        {
            __IM uint32_t SOS : 2;
            uint32_t          : 30;
        } GTSOS_b;
    };

    union
    {
        __IOM uint32_t GTSOTR;         /*!< (@ 0x000000A0) General PWM Timer Output Protection Function
                                        *                  Temporary Release Register                                 */

        struct
        {
            __IOM uint32_t SOTR : 1;
            uint32_t            : 31;
        } GTSOTR_b;
    };

    union
    {
        __IOM uint32_t GTADSMR;         /*!< (@ 0x000000A4) General PWM Timer A/D Conversion Start Request
                                         *                  Signal Monitoring Register                                 */

        struct
        {
            __IOM uint32_t ADSMS0  : 2;
            uint32_t               : 6;
            __IOM uint32_t ADSMEN0 : 1; /*!< [8..8] A/D Conversion Start Request Signal Monitor 0 Output
                                         *   Enabling                                                                  */
            uint32_t               : 7;
            __IOM uint32_t ADSMS1  : 2;
            uint32_t               : 6;
            __IOM uint32_t ADSMEN1 : 1; /*!< [24..24] A/D Conversion Start Request Signal Monitor 1 Output
                                         *   Enabling                                                                  */
            uint32_t : 7;
        } GTADSMR_b;
    };

    union
    {
        __IOM uint32_t GTEITC;            /*!< (@ 0x000000A8) General PWM Timer Extended Interrupt Skipping
                                           *                  Counter Control Register                                   */

        struct
        {
            __IOM uint32_t EIVTC1  : 2;
            uint32_t               : 2;
            __IOM uint32_t EIVTT1  : 4;
            uint32_t               : 4;
            __IM uint32_t  EITCNT1 : 4;
            __IOM uint32_t EIVTC2  : 2;   /*!< [17..16] Extended Interrupt Skipping Counter 2 Count Source
                                           *   select                                                                    */
            uint32_t                 : 2;
            __IOM uint32_t EIVTT2    : 4;
            __IOM uint32_t EITCNT2IV : 4;
            __IM uint32_t  EITCNT2   : 4;
        } GTEITC_b;
    };

    union
    {
        __IOM uint32_t GTEITLI1;       /*!< (@ 0x000000AC) General PWM Timer Extended Interrupt Skipping
                                        *                  Setting Register 1                                         */

        struct
        {
            __IOM uint32_t EITLA : 3;  /*!< [2..0] GTCCRA Register Compare Match/Input Capture Interrupt
                                        *   Extended Skipping Function Select                                         */
            uint32_t             : 1;
            __IOM uint32_t EITLB : 3;  /*!< [6..4] GTCCRB Register Compare Match/Input Capture Interrupt
                                        *   Extended Skipping Function Select                                         */
            uint32_t             : 1;
            __IOM uint32_t EITLC : 3;  /*!< [10..8] GTCCRC Register Compare Match Interrupt Extended Skipping
                                        *   Function Select                                                           */
            uint32_t             : 1;
            __IOM uint32_t EITLD : 3;  /*!< [14..12] GTCCRD Register Compare Match Interrupt Extended Skipping
                                        *   Function Select                                                           */
            uint32_t             : 1;
            __IOM uint32_t EITLE : 3;  /*!< [18..16] GTCCRE Register Compare Match Interrupt Extended Skipping
                                        *   Function Select                                                           */
            uint32_t             : 1;
            __IOM uint32_t EITLF : 3;  /*!< [22..20] GTCCRF Register Compare Match Interrupt Extended Skipping
                                        *   Function Select                                                           */
            uint32_t             : 1;
            __IOM uint32_t EITLV : 3;
            uint32_t             : 1;
            __IOM uint32_t EITLU : 3;
            uint32_t             : 1;
        } GTEITLI1_b;
    };

    union
    {
        __IOM uint32_t GTEITLI2;       /*!< (@ 0x000000B0) General PWM Timer Extended Interrupt Skipping
                                        *                  Setting Register 2                                         */

        struct
        {
            __IOM uint32_t EADTAL : 3; /*!< [2..0] GTADTRA Register A/D Conversion Start Request Extended
                                        *   Skipping Function Select                                                  */
            uint32_t              : 1;
            __IOM uint32_t EADTBL : 3; /*!< [6..4] GTADTRB Register A/D Conversion Start Request Extended
                                        *   Skipping Function Select                                                  */
            uint32_t : 25;
        } GTEITLI2_b;
    };

    union
    {
        __IOM uint32_t GTEITLB;         /*!< (@ 0x000000B4) General PWM Timer Extended Buffer Transfer Skipping
                                         *                  Setting Register                                           */

        struct
        {
            __IOM uint32_t EBTLCA : 3;  /*!< [2..0] GTCCRA Register Buffer Transfer Extended Skipping Function
                                         *   Select                                                                    */
            uint32_t              : 1;
            __IOM uint32_t EBTLCB : 3;  /*!< [6..4] GTCCRB Register Buffer Transfer Extended Skipping Function
                                         *   Select                                                                    */
            uint32_t              : 1;
            __IOM uint32_t EBTLPR : 3;  /*!< [10..8] GTPR Register Buffer Transfer Extended Skipping Function
                                         *   Select                                                                    */
            uint32_t               : 5;
            __IOM uint32_t EBTLADA : 3; /*!< [18..16] GTADTRA Register Buffer Transfer Extended Skipping
                                         *   Function Select                                                           */
            uint32_t               : 1;
            __IOM uint32_t EBTLADB : 3; /*!< [22..20] GTADTRB Register Buffer Transfer Extended Skipping
                                         *   Function Select                                                           */
            uint32_t               : 1;
            __IOM uint32_t EBTLDVU : 3; /*!< [26..24] GTDVU Register Buffer Transfer Extended Skipping Function
                                         *   Select                                                                    */
            uint32_t               : 1;
            __IOM uint32_t EBTLDVD : 3; /*!< [30..28] GTDVD Register Buffer Transfer Extended Skipping Function
                                         *   Select                                                                    */
            uint32_t : 1;
        } GTEITLB_b;
    };

    union
    {
        __IOM uint32_t GTICLF;           /*!< (@ 0x000000B8) General PWM Timer Inter Channel Logical Operation
                                          *                  Function Setting Register                                  */

        struct
        {
            __IOM uint32_t ICLFA    : 3;
            uint32_t                : 1;
            __IOM uint32_t ICLFSELC : 6;
            uint32_t                : 6;
            __IOM uint32_t ICLFB    : 3;
            uint32_t                : 1;
            __IOM uint32_t ICLFSELD : 6;
            uint32_t                : 6;
        } GTICLF_b;
    };

    union
    {
        __IOM uint32_t GTPC;

        struct
        {
            __IOM uint32_t PCEN : 1;
            uint32_t            : 7;
            __IOM uint32_t ASTP : 1;
            uint32_t            : 7;
            __IOM uint32_t PCNT : 12;
            uint32_t            : 4;
        } GTPC_b;
    };
    __IM uint32_t RESERVED[4];

    union
    {
        __IOM uint32_t GTSECSR;         /*!< (@ 0x000000D0) General PWM Timer Operation Enable Bit Simultaneous
                                         *                  Control Channel Select Register                            */

        struct
        {
            __IOM uint32_t SECSEL0 : 1; /*!< [0..0] Channel 0 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL1 : 1; /*!< [1..1] Channel 1 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL2 : 1; /*!< [2..2] Channel 2 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL3 : 1; /*!< [3..3] Channel 3 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL4 : 1; /*!< [4..4] Channel 4 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL5 : 1; /*!< [5..5] Channel 5 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL6 : 1; /*!< [6..6] Channel 6 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL7 : 1; /*!< [7..7] Channel 7 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL8 : 1; /*!< [8..8] Channel 8 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            __IOM uint32_t SECSEL9 : 1; /*!< [9..9] Channel 9 Operation Enable Bit Simultaneous Control Channel
                                         *   Select                                                                    */
            uint32_t : 22;
        } GTSECSR_b;
    };

    union
    {
        __IOM uint32_t GTSECR;         /*!< (@ 0x000000D4) General PWM Timer Operation Enable Bit Simultaneous
                                        *                  Control Register                                           */

        struct
        {
            __IOM uint32_t SBDCE : 1;
            __IOM uint32_t SBDPE : 1;
            __IOM uint32_t SBDAE : 1;
            __IOM uint32_t SBDDE : 1;
            uint32_t             : 4;
            __IOM uint32_t SBDCD : 1;
            __IOM uint32_t SBDPD : 1;
            __IOM uint32_t SBDAD : 1;
            __IOM uint32_t SBDDD : 1;
            uint32_t             : 4;
            __IOM uint32_t SPCE  : 1;
            __IOM uint32_t SSCE  : 1;
            uint32_t             : 6;
            __IOM uint32_t SPCD  : 1;
            __IOM uint32_t SSCD  : 1;
            uint32_t             : 6;
        } GTSECR_b;
    };
    __IM uint32_t RESERVED1[2];

    union
    {
        __IOM uint32_t GTBER2;

        struct
        {
            __IOM uint32_t CCTCA : 1;  /*!< [0..0] Counter Clear Source GTCCRA Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CCTCB : 1;  /*!< [1..1] Counter Clear Source GTCCRB Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CCTPR  : 1;
            __IOM uint32_t CCTADA : 1; /*!< [3..3] Counter Clear Source GTADTRA Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CCTADB : 1; /*!< [4..4] Counter Clear Source GTADTRB Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CCTDV : 1;  /*!< [5..5] Counter Clear Source GTDVU/GTDVD Register Buffer Transfer
                                        *   Disable                                                                   */
            uint32_t             : 2;
            __IOM uint32_t CMTCA : 2;  /*!< [9..8] Compare Match Source GTCCRA Register Buffer Transfer
                                        *   Enable                                                                    */
            __IOM uint32_t CMTCB : 2;  /*!< [11..10] Compare Match Source GTCCRB Register Buffer Transfer
                                        *   Enable                                                                    */
            uint32_t              : 1;
            __IOM uint32_t CMTADA : 1; /*!< [13..13] Compare Match Source GTADTRA Register Buffer Transfer
                                        *   Enable                                                                    */
            __IOM uint32_t CMTADB : 1; /*!< [14..14] Compare Match Source GTADTRA Register Buffer Transfer
                                        *   Enable                                                                    */
            uint32_t             : 1;
            __IOM uint32_t CPTCA : 1;  /*!< [16..16] Overflow/Underflow Source GTCCRA Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CPTCB : 1;  /*!< [17..17] Overflow/Underflow Source GTCCRB Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CPTPR : 1;  /*!< [18..18] Overflow/Underflow Source GTPR Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CPTADA : 1; /*!< [19..19] Overflow/Underflow Source GTADTRA Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CPTADB : 1; /*!< [20..20] Overflow/Underflow Source GTADTRB Register Buffer Transfer
                                        *   Disable                                                                   */
            __IOM uint32_t CPTDV : 1;  /*!< [21..21] Overflow/Underflow Source GTDVU/GTDVD Register Buffer
                                        *   Transfer Disable                                                          */
            uint32_t             : 2;
            __IOM uint32_t CP3DB : 1;
            __IOM uint32_t CPBTD : 1;
            __IOM uint32_t OLTTA : 2;
            __IOM uint32_t OLTTB : 2;
            uint32_t             : 2;
        } GTBER2_b;
    };

    union
    {
        __IOM uint32_t GTOLBR;

        struct
        {
            __IOM uint32_t GTIOAB : 5;
            uint32_t              : 11;
            __IOM uint32_t GTIOBB : 5;
            uint32_t              : 11;
        } GTOLBR_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t GTICCR;         /*!< (@ 0x000000EC) General PWM Timer Inter Channel Cooperation Input
                                        *                  Capture Control Register                                   */

        struct
        {
            __IOM uint32_t ICAFA : 1;  /*!< [0..0] Forwarding GTCCRA register Compare Match/Input Capture
                                        *   to Other Channel GTCCRA Input Capture Source Enable                       */
            __IOM uint32_t ICAFB : 1;  /*!< [1..1] Forwarding GTCCRB register Compare Match/Input Capture
                                        *   to Other Channel GTCCRA Input Capture Source Enable                       */
            __IOM uint32_t ICAFC : 1;  /*!< [2..2] Forwarding GTCCRC register Compare Match Capture to Other
                                        *   Channel GTCCRA Input Capture Source Enable                                */
            __IOM uint32_t ICAFD : 1;  /*!< [3..3] Forwarding GTCCRD register Compare Match Capture to Other
                                        *   Channel GTCCRA Input Capture Source Enable                                */
            __IOM uint32_t ICAFE : 1;  /*!< [4..4] Forwarding GTCCRE register Compare Match Capture to Other
                                        *   Channel GTCCRA Input Capture Source Enable                                */
            __IOM uint32_t ICAFF : 1;  /*!< [5..5] Forwarding GTCCRF register Compare Match Capture to Other
                                        *   Channel GTCCRA Input Capture Source Enable                                */
            __IOM uint32_t ICAFPO : 1; /*!< [6..6] Forwarding Overflow to Other Channel GTCCRA Input Capture
                                        *   Source Enable                                                             */
            __IOM uint32_t ICAFPU : 1; /*!< [7..7] Forwarding Underflow to Other Channel GTCCRA Input Capture
                                        *   Source Enable                                                             */
            __IOM uint32_t ICACLK : 1; /*!< [8..8] Forwarding Count Clock to Other Channel GTCCRA Input
                                        *   Capture Source Enable                                                     */
            uint32_t              : 5;
            __IOM uint32_t ICAGRP : 2;
            __IOM uint32_t ICBFA  : 1; /*!< [16..16] Forwarding GTCCRA register Compare Match/Input Capture
                                        *   to Other Channel GTCCRB Input Capture Source Enable                       */
            __IOM uint32_t ICBFB : 1;  /*!< [17..17] Forwarding GTCCRB register Compare Match/Input Capture
                                        *   to Other Channel GTCCRB Input Capture Source Enable                       */
            __IOM uint32_t ICBFC : 1;  /*!< [18..18] Forwarding GTCCRC register Compare Match Capture to
                                        *   Other Channel GTCCRB Input Capture Source Enable                          */
            __IOM uint32_t ICBFD : 1;  /*!< [19..19] Forwarding GTCCRD register Compare Match Capture to
                                        *   Other Channel GTCCRB Input Capture Source Enable                          */
            __IOM uint32_t ICBFE : 1;  /*!< [20..20] Forwarding GTCCRE register Compare Match Capture to
                                        *   Other Channel GTCCRb Input Capture Source Enable                          */
            __IOM uint32_t ICBFF : 1;  /*!< [21..21] Forwarding GTCCRF register Compare Match Capture to
                                        *   Other Channel GTCCRB Input Capture Source Enable                          */
            __IOM uint32_t ICBFPO : 1; /*!< [22..22] Forwarding Overflow to Other Channel GTCCRB Input Capture
                                        *   Source Enable                                                             */
            __IOM uint32_t ICBFPU : 1; /*!< [23..23] Forwarding Underflow to Other Channel GTCCRB Input
                                        *   Capture Source Enable                                                     */
            __IOM uint32_t ICBCLK : 1; /*!< [24..24] Forwarding Count Clock to Other Channel GTCCRB Input
                                        *   Capture Source Enable                                                     */
            uint32_t              : 5;
            __IOM uint32_t ICBGRP : 2;
        } GTICCR_b;
    };
} R_GPT0_Type;

/* =========================================================================================================================== */
/* ================                                         R_GPT_OPS                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief Output Phase Switching for GPT (R_GPT_OPS)
 */

typedef struct
{
    union
    {
        __IOM uint32_t OPSCR;

        struct
        {
            __IOM uint32_t UF : 1;     /*!< [0..0] Input Phase Soft Setting WFThis bit sets the input phase
                                        *   by the software settings.This bit setting is valid when
                                        *   the OPSCR.FB bit = 1.                                                     */
            __IOM uint32_t VF : 1;     /*!< [1..1] Input Phase Soft Setting VFThis bit sets the input phase
                                        *   by the software settings.This bit setting is valid when
                                        *   the OPSCR.FB bit = 1.                                                     */
            __IOM uint32_t WF : 1;     /*!< [2..2] Input Phase Soft Setting UFThis bit sets the input phase
                                        *   by the software settings.This bit setting is valid when
                                        *   the OPSCR.FB bit = 1.                                                     */
            uint32_t        : 1;
            __IM uint32_t U : 1;       /*!< [4..4] Input U-Phase MonitorThis bit monitors the state of the
                                        *   input phase.OPSCR.FB=0:External input monitoring by PCLKOPSCR.FB=1:Softwa
                                        *   e settings (UF/VF/WF)                                                     */
            __IM uint32_t V : 1;       /*!< [5..5] Input V-Phase MonitorThis bit monitors the state of the
                                        *   input phase.OPSCR.FB=0:External input monitoring by PCLKOPSCR.FB=1:Softwa
                                        *   e settings (UF/VF/WF)                                                     */
            __IM uint32_t W : 1;       /*!< [6..6] Input W-Phase MonitorThis bit monitors the state of the
                                        *   input phase.OPSCR.FB=0:External input monitoring by PCLKOPSCR.FB=1:Softwa
                                        *   e settings (UF/VF/WF)                                                     */
            uint32_t          : 1;
            __IOM uint32_t EN : 1;
            uint32_t          : 7;
            __IOM uint32_t FB : 1;     /*!< [16..16] External Feedback Signal EnableThis bit selects the
                                        *   input phase from the software settings and external input.                */
            __IOM uint32_t P     : 1;
            __IOM uint32_t N     : 1;
            __IOM uint32_t INV   : 1;
            __IOM uint32_t RV    : 1;
            __IOM uint32_t ALIGN : 1;
            uint32_t             : 2;
            __IOM uint32_t GRP   : 2;
            __IOM uint32_t GODF  : 1;
            uint32_t             : 2;
            __IOM uint32_t NFEN  : 1;
            __IOM uint32_t NFCS  : 2;  /*!< [31..30] External Input Noise Filter Clock selectionNoise filter
                                        *   sampling clock setting of the external input.                             */
        } OPSCR_b;
    };
} R_GPT_OPS_Type;

/* =========================================================================================================================== */
/* ================                                        R_GPT_POEG0                                        ================ */
/* =========================================================================================================================== */

/**
 * @brief Port Output Enable for GPT (R_GPT_POEG0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t POEGG;

        struct
        {
            __IOM uint32_t PIDF  : 1;
            __IOM uint32_t IOCF  : 1;
            __IOM uint32_t OSTPF : 1;
            __IOM uint32_t SSF   : 1;
            __IOM uint32_t PIDE  : 1;   /*!< [4..4] Port Input Detection Enable. Note: Can be modified only
                                         *   once after a reset.                                                       */
            __IOM uint32_t IOCE : 1;    /*!< [5..5] Enable for GPT Output-Disable Request. Note: Can be modified
                                         *   only once after a reset.                                                  */
            __IOM uint32_t OSTPE : 1;   /*!< [6..6] Oscillation Stop Detection Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            uint32_t             : 1;
            __IOM uint32_t CDRE0 : 1;   /*!< [8..8] Comparator Disable Request Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            __IOM uint32_t CDRE1 : 1;   /*!< [9..9] Comparator Disable Request Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            __IOM uint32_t CDRE2 : 1;   /*!< [10..10] Comparator Disable Request Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            __IOM uint32_t CDRE3 : 1;   /*!< [11..11] Comparator Disable Request Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            __IOM uint32_t CDRE4 : 1;   /*!< [12..12] Comparator Disable Request Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            __IOM uint32_t CDRE5 : 1;   /*!< [13..13] Comparator Disable Request Enable. Note: Can be modified
                                         *   only once after a reset.                                                  */
            uint32_t               : 2;
            __IM uint32_t ST       : 1;
            uint32_t               : 7;
            __IOM uint32_t DERR0ST : 1;
            __IOM uint32_t DERR1ST : 1;
            __IOM uint32_t DERR0E  : 1;
            __IOM uint32_t DERR1E  : 1;
            __IOM uint32_t INV     : 1;
            __IOM uint32_t NFEN    : 1;
            __IOM uint32_t NFCS    : 2;
        } POEGG_b;
    };
    __IM uint32_t RESERVED[15];

    union
    {
        __IOM uint16_t GTONCWP;        /*!< (@ 0x00000040) GPT Output Stopping Control Group Write Protection
                                        *                  Register                                                   */

        struct
        {
            __IOM uint16_t WP    : 1;
            uint16_t             : 7;
            __IOM uint16_t PRKEY : 8;
        } GTONCWP_b;
    };
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint16_t GTONCCR;        /*!< (@ 0x00000044) GPT Output Stopping Control Group Controlling
                                        *                  Register                                                   */

        struct
        {
            __IOM uint16_t NE  : 1;
            uint16_t           : 3;
            __IOM uint16_t NFS : 4;
            __IOM uint16_t NFV : 1;
            uint16_t           : 7;
        } GTONCCR_b;
    };
    __IM uint16_t RESERVED2;
} R_GPT_POEG0_Type;

/* =========================================================================================================================== */
/* ================                                           R_ICU                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Interrupt Controller Unit (R_ICU)
 */

typedef struct
{
    union
    {
        __IOM uint8_t IRQCR[16];

        struct
        {
            __IOM uint8_t IRQMD   : 2;
            uint8_t               : 2;
            __IOM uint8_t FCLKSEL : 2;
            uint8_t               : 1;
            __IOM uint8_t FLTEN   : 1;
        } IRQCR_b[16];
    };

    union
    {
        __IM uint8_t NMICR;

        struct
        {
            __IOM uint8_t NMIMD    : 1;
            uint8_t                : 3;
            __IOM uint8_t NFCLKSEL : 2;
            uint8_t                : 1;
            __IOM uint8_t NFLTEN   : 1;
        } NMICR_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2[6143];

    union
    {
        __IOM uint8_t SWIRQ_S;         /*!< (@ 0x00006010) Software Interrupt Request Register for Secure
                                        *                  Interrupt                                                  */

        struct
        {
            __IOM uint8_t SWIRQS : 1;
            uint8_t              : 7;
        } SWIRQ_S_b;
    };
    __IM uint8_t  RESERVED3;
    __IM uint16_t RESERVED4;
    __IM uint32_t RESERVED5[3];

    union
    {
        __IOM uint8_t SWIRQ_NS;        /*!< (@ 0x00006020) Software Interrupt Request Register for Non-secure
                                        *                  Interrupt                                                  */

        struct
        {
            __IOM uint8_t SWIRQNS : 1;
            uint8_t               : 7;
        } SWIRQ_NS_b;
    };
    __IM uint8_t  RESERVED6;
    __IM uint16_t RESERVED7;
    __IM uint32_t RESERVED8[15];

    union
    {
        __IOM uint16_t IENMIER;        /*!< (@ 0x00006060) Integrated Error NMI Interrupt Enable Registe
                                        *                  for CPU                                                    */

        struct
        {
            __IOM uint16_t CMEN  : 1;
            __IOM uint16_t LMEN  : 1;
            __IOM uint16_t BUSEN : 1;
            uint16_t             : 13;
        } IENMIER_b;
    };
    __IM uint16_t RESERVED9;
    __IM uint32_t RESERVED10[39];

    union
    {
        __IOM uint16_t NMIER;

        struct
        {
            __IOM uint16_t IWDTEN : 1;
            __IOM uint16_t WDTEN  : 1;
            __IOM uint16_t LVD1EN : 1;
            __IOM uint16_t LVD2EN : 1;
            uint16_t              : 2;
            __IOM uint16_t OSTEN  : 1;
            __IOM uint16_t NMIEN  : 1;
            uint16_t              : 4;
            __IOM uint16_t BUSEN  : 1;
            __IOM uint16_t CMEN   : 1;
            uint16_t              : 1;
            __IOM uint16_t LUEN   : 1;
        } NMIER_b;
    };
    __IM uint16_t RESERVED11;
    __IM uint32_t RESERVED12[3];

    union
    {
        __IOM uint16_t NMICLR;

        struct
        {
            __IOM uint16_t IWDTCLR : 1;
            __IOM uint16_t WDTCLR  : 1;
            __IOM uint16_t LVD1CLR : 1;
            __IOM uint16_t LVD2CLR : 1;
            uint16_t               : 2;
            __IOM uint16_t OSTCLR  : 1;
            __IOM uint16_t NMICLR  : 1;
            uint16_t               : 4;
            __IOM uint16_t BUSCLR  : 1;
            __IOM uint16_t CMCLR   : 1;
            uint16_t               : 1;
            __IOM uint16_t LUCLR   : 1;
        } NMICLR_b;
    };
    __IM uint16_t RESERVED13;
    __IM uint32_t RESERVED14[3];

    union
    {
        __IM uint16_t NMISR;

        struct
        {
            __IM uint16_t IWDTST : 1;
            __IM uint16_t WDTST  : 1;
            __IM uint16_t LVD1ST : 1;
            __IM uint16_t LVD2ST : 1;
            uint16_t             : 2;
            __IM uint16_t OSTST  : 1;
            __IM uint16_t NMIST  : 1;
            uint16_t             : 4;
            __IM uint16_t BUSST  : 1;
            __IM uint16_t CMST   : 1;
            uint16_t             : 1;
            __IM uint16_t LUST   : 1;
        } NMISR_b;
    };
    __IM uint16_t RESERVED15;
    __IM uint32_t RESERVED16[31];

    union
    {
        __IOM uint32_t WUPEN;

        struct
        {
            __IOM uint32_t IRQWUPEN0 : 1;   /*!< [0..0] IRQ0 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN1 : 1;   /*!< [1..1] IRQ1 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN2 : 1;   /*!< [2..2] IRQ2 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN3 : 1;   /*!< [3..3] IRQ3 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN4 : 1;   /*!< [4..4] IRQ4 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN5 : 1;   /*!< [5..5] IRQ5 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN6 : 1;   /*!< [6..6] IRQ6 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN7 : 1;   /*!< [7..7] IRQ7 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN8 : 1;   /*!< [8..8] IRQ8 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN9 : 1;   /*!< [9..9] IRQ9 Interrupt Deep Sleep/Software Standby Returns Enable
                                             *   bit                                                                       */
            __IOM uint32_t IRQWUPEN10 : 1;  /*!< [10..10] IRQ10 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t IRQWUPEN11 : 1;  /*!< [11..11] IRQ11 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t IRQWUPEN12 : 1;  /*!< [12..12] IRQ12 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t IRQWUPEN13 : 1;  /*!< [13..13] IRQ13 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t IRQWUPEN14 : 1;  /*!< [14..14] IRQ14 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t IRQWUPEN15 : 1;  /*!< [15..15] IRQ15 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t IWDTWUPEN : 1;   /*!< [16..16] IWDT Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            uint32_t                 : 1;
            __IOM uint32_t LVD1WUPEN : 1;   /*!< [18..18] PVD1 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t LVD2WUPEN : 1;   /*!< [19..19] PVD2 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t VBATTWUPEN : 1;  /*!< [20..20] VBATT Monitor Interrupt Deep Sleep/Software Standby
                                             *   Returns Enable bit                                                        */
            uint32_t                   : 3;
            __IOM uint32_t RTCALMWUPEN : 1; /*!< [24..24] RTC Alarm Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t RTCPRDWUPEN : 1; /*!< [25..25] RCT Period Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t USBHSWUPEN : 1;  /*!< [26..26] USBHS Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t USBFSWUPEN : 1;  /*!< [27..27] USBFS0 Interrupt Deep Sleep/Software Standby Returns
                                             *   Enable bit                                                                */
            __IOM uint32_t AGT1UDWUPEN : 1; /*!< [28..28] AGT1 Underflow Interrupt Deep Sleep/Software Standby
                                             *   Returns Enable bit                                                        */
            __IOM uint32_t AGT1CAWUPEN : 1; /*!< [29..29] AGT1 Compare Match A Interrupt Deep Sleep/Software
                                             *   Standby Returns Enable bit                                                */
            __IOM uint32_t AGT1CBWUPEN : 1; /*!< [30..30] AGT1 Compare Match B Interrupt Deep Sleep/Software
                                             *   Standby Returns Enable bit                                                */
            __IOM uint32_t RIIC0WUPEN : 1;  /*!< [31..31] RIIC0 Address Match Interrupt Deep Sleep/Software Standby
                                             *   Returns Enable bit                                                        */
        } WUPEN_b;
    };

    union
    {
        __IOM uint32_t WUPEN1;

        struct
        {
            uint32_t                    : 3;
            __IOM uint32_t COMPHS0WUPEN : 1; /*!< [3..3] Comparator-HS0 Interrupt Deep Sleep/Software Standby
                                              *   Returns Enable bit                                                        */
            uint32_t                  : 4;
            __IOM uint32_t ULP0UWUPEN : 1;   /*!< [8..8] ULPT0 Underflow Interrupt Deep Sleep/Software Standby
                                              *   Returns Enable bit                                                        */
            __IOM uint32_t ULP0AWUPEN : 1;   /*!< [9..9] ULPT0 Compare Match A Interrupt Deep Sleep/Software Standby
                                              *   Returns Enable bit                                                        */
            __IOM uint32_t ULP0BWUPEN : 1;   /*!< [10..10] ULPT0 Compare Match B Interrupt Deep Sleep/Software
                                              *   Standby Returns Enable bit                                                */
            __IOM uint32_t I3CWUPEN : 1;     /*!< [11..11] I3C Wakeup Condition Detection Interrupt Deep Sleep/Software
                                              *   Standby Returns Enable bit                                                */
            __IOM uint32_t ULP1UWUPEN : 1;   /*!< [12..12] ULPT1 Underflow Interrupt Deep Sleep/Software Standby
                                              *   Returns Enable bit                                                        */
            __IOM uint32_t ULP1AWUPEN : 1;   /*!< [13..13] ULPT1 Compare Match A Interrupt Deep Sleep/Software
                                              *   Standby Returns Enable bit                                                */
            __IOM uint32_t ULP1BWUPEN : 1;   /*!< [14..14] ULPT1 Compare Match B Interrupt Deep Sleep/Software
                                              *   Standby Returns Enable bit                                                */
            uint32_t : 17;
        } WUPEN1_b;
    };
    __IM uint32_t RESERVED17[86];

    union
    {
        __IOM uint32_t IELSR[96];

        struct
        {
            __IOM uint32_t IELS : 9;   /*!< [8..0] ICU Event selection to NVICSet the number for the event
                                        *   signal to be linked .                                                     */
            uint32_t            : 7;
            __IOM uint32_t IR   : 1;
            uint32_t            : 7;
            __IOM uint32_t DTCE : 1;
            uint32_t            : 7;
        } IELSR_b[96];
    };
} R_ICU_Type;

/* =========================================================================================================================== */
/* ================                                          R_IIC0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief I2C Bus Interface (R_IIC0)
 */

typedef struct
{
    union
    {
        __IOM uint8_t ICCR1;

        struct
        {
            __IM uint8_t  SDAI   : 1;
            __IM uint8_t  SCLI   : 1;
            __IOM uint8_t SDAO   : 1;
            __IOM uint8_t SCLO   : 1;
            __IOM uint8_t SOWP   : 1;
            __IOM uint8_t CLO    : 1;
            __IOM uint8_t IICRST : 1;  /*!< [6..6] I2C Bus Interface Internal ResetNote:If an internal reset
                                        *   is initiated using the IICRST bit for a bus hang-up occurred
                                        *   during communication with the master device in slave mode,
                                        *   the states may become different between the slave device
                                        *   and the master device (due to the difference in the bit
                                        *   counter information).                                                     */
            __IOM uint8_t ICE : 1;
        } ICCR1_b;
    };

    union
    {
        __IOM uint8_t ICCR2;

        struct
        {
            uint8_t          : 1;
            __IOM uint8_t ST : 1;      /*!< [1..1] Start Condition Issuance RequestSet the ST bit to 1 (start
                                        *   condition issuance request) when the BBSY flag is set to
                                        *   0 (bus free state).                                                       */
            __IOM uint8_t RS : 1;      /*!< [2..2] Restart Condition Issuance RequestNote: Do not set the
                                        *   RS bit to 1 while issuing a stop condition.                               */
            __IOM uint8_t SP : 1;      /*!< [3..3] Stop Condition Issuance RequestNote: Writing to the SP
                                        *   bit is not possible while the setting of the BBSY flag
                                        *   is 0 (bus free state).Note: Do not set the SP bit to 1
                                        *   while a restart condition is being issued.                                */
            uint8_t            : 1;
            __IOM uint8_t TRS  : 1;
            __IOM uint8_t MST  : 1;
            __IM uint8_t  BBSY : 1;
        } ICCR2_b;
    };

    union
    {
        __IOM uint8_t ICMR1;

        struct
        {
            __IOM uint8_t BC   : 3;
            __OM uint8_t  BCWP : 1;
            __IOM uint8_t CKS  : 3;    /*!< [6..4] Internal Reference Clock (fIIC) Selection ( fIIC = PCLKB
                                        *   / 2^CKS )                                                                 */
            __IOM uint8_t MTWP : 1;
        } ICMR1_b;
    };

    union
    {
        __IOM uint8_t ICMR2;

        struct
        {
            __IOM uint8_t TMOS : 1;
            __IOM uint8_t TMOL : 1;
            __IOM uint8_t TMOH : 1;
            uint8_t            : 1;
            __IOM uint8_t SDDL : 3;
            __IOM uint8_t DLCS : 1;
        } ICMR2_b;
    };

    union
    {
        __IOM uint8_t ICMR3;

        struct
        {
            __IOM uint8_t NF    : 2;
            __IM uint8_t  ACKBR : 1;
            __IOM uint8_t ACKBT : 1;
            __IOM uint8_t ACKWP : 1;
            __IOM uint8_t RDRFS : 1;
            __IOM uint8_t WAIT  : 1;   /*!< [6..6] WAITNote: When the value of the WAIT bit is to be read,
                                        *   be sure to read the ICDRR beforehand.                                     */
            __IOM uint8_t SMBS : 1;
        } ICMR3_b;
    };

    union
    {
        __IOM uint8_t ICFER;

        struct
        {
            __IOM uint8_t TMOE  : 1;
            __IOM uint8_t MALE  : 1;
            __IOM uint8_t NALE  : 1;
            __IOM uint8_t SALE  : 1;
            __IOM uint8_t NACKE : 1;
            __IOM uint8_t NFE   : 1;
            __IOM uint8_t SCLE  : 1;
            __IOM uint8_t FMPE  : 1;
        } ICFER_b;
    };

    union
    {
        __IOM uint8_t ICSER;

        struct
        {
            __IOM uint8_t SAR0E : 1;
            __IOM uint8_t SAR1E : 1;
            __IOM uint8_t SAR2E : 1;
            __IOM uint8_t GCAE  : 1;
            uint8_t             : 1;
            __IOM uint8_t DIDE  : 1;
            uint8_t             : 1;
            __IOM uint8_t HOAE  : 1;
        } ICSER_b;
    };

    union
    {
        __IOM uint8_t ICIER;

        struct
        {
            __IOM uint8_t TMOIE : 1;
            __IOM uint8_t ALIE  : 1;
            __IOM uint8_t STIE  : 1;
            __IOM uint8_t SPIE  : 1;
            __IOM uint8_t NAKIE : 1;
            __IOM uint8_t RIE   : 1;
            __IOM uint8_t TEIE  : 1;
            __IOM uint8_t TIE   : 1;
        } ICIER_b;
    };

    union
    {
        __IOM uint8_t ICSR1;

        struct
        {
            __IOM uint8_t AAS0 : 1;
            __IOM uint8_t AAS1 : 1;
            __IOM uint8_t AAS2 : 1;
            __IOM uint8_t GCA  : 1;
            uint8_t            : 1;
            __IOM uint8_t DID  : 1;
            uint8_t            : 1;
            __IOM uint8_t HOA  : 1;
        } ICSR1_b;
    };

    union
    {
        __IOM uint8_t ICSR2;

        struct
        {
            __IOM uint8_t TMOF  : 1;
            __IOM uint8_t AL    : 1;
            __IOM uint8_t START : 1;
            __IOM uint8_t STOP  : 1;
            __IOM uint8_t NACKF : 1;
            __IOM uint8_t RDRF  : 1;
            __IOM uint8_t TEND  : 1;
            __IM uint8_t  TDRE  : 1;
        } ICSR2_b;
    };
    __IOM R_IIC0_SAR_Type SAR[3];

    union
    {
        __IOM uint8_t ICBRL;

        struct
        {
            __IOM uint8_t BRL : 5;
            uint8_t           : 3;
        } ICBRL_b;
    };

    union
    {
        __IOM uint8_t ICBRH;

        struct
        {
            __IOM uint8_t BRH : 5;
            uint8_t           : 3;
        } ICBRH_b;
    };

    union
    {
        __IOM uint8_t ICDRT;

        struct
        {
            __IOM uint8_t ICDRT : 8;
        } ICDRT_b;
    };

    union
    {
        __IM uint8_t ICDRR;

        struct
        {
            __IM uint8_t ICDRR : 8;
        } ICDRR_b;
    };
    __IM uint8_t RESERVED[2];

    union
    {
        __IOM uint8_t ICWUR;

        struct
        {
            __IOM uint8_t WUAFA : 1;
            uint8_t             : 3;
            __IOM uint8_t WUACK : 1;
            __IOM uint8_t WUF   : 1;
            __IOM uint8_t WUIE  : 1;
            __IOM uint8_t WUE   : 1;
        } ICWUR_b;
    };

    union
    {
        __IOM uint8_t ICWUR2;

        struct
        {
            __IOM uint8_t WUSEN  : 1;
            __IM uint8_t  WUASYF : 1;
            __IM uint8_t  WUSYF  : 1;
            uint8_t              : 5;
        } ICWUR2_b;
    };
} R_IIC0_Type;

/* =========================================================================================================================== */
/* ================                                          R_IWDT                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Independent Watchdog Timer (R_IWDT)
 */

typedef struct
{
    union
    {
        __IOM uint8_t IWDTRR;

        struct
        {
            __IOM uint8_t IWDTRR : 8;  /*!< [7..0] The counter is refreshed by writing 0x00 and then writing
                                        *   0xFF to this register.                                                    */
        } IWDTRR_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        __IOM uint16_t IWDTCR;

        struct
        {
            __IOM uint16_t TOPS : 2;
            uint16_t            : 2;
            __IOM uint16_t CKS  : 4;
            __IOM uint16_t RPES : 2;
            uint16_t            : 2;
            __IOM uint16_t RPSS : 2;
            uint16_t            : 2;
        } IWDTCR_b;
    };

    union
    {
        __IOM uint16_t IWDTSR;

        struct
        {
            __IM uint16_t  CNTVAL : 14;
            __IOM uint16_t UNDFF  : 1;
            __IOM uint16_t REFEF  : 1;
        } IWDTSR_b;
    };

    union
    {
        __IOM uint8_t IWDTRCR;

        struct
        {
            uint8_t               : 7;
            __IOM uint8_t RSTIRQS : 1;
        } IWDTRCR_b;
    };
    __IM uint8_t RESERVED1;

    union
    {
        __IOM uint8_t IWDTCSTPR;

        struct
        {
            uint8_t              : 7;
            __IOM uint8_t SLCSTP : 1;
        } IWDTCSTPR_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3;
} R_IWDT_Type;

/* =========================================================================================================================== */
/* ================                                          R_I3C0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief I3C Bus Interface (R_I3C0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t PRTS;

        struct
        {
            __IOM uint32_t PRTMD : 1;
            uint32_t             : 31;
        } PRTS_b;
    };
    __IM uint32_t RESERVED[3];

    union
    {
        __IOM uint32_t CECTL;

        struct
        {
            __IOM uint32_t CLKE : 1;
            uint32_t            : 31;
        } CECTL_b;
    };

    union
    {
        __IOM uint32_t BCTL;

        struct
        {
            __IOM uint32_t INCBA    : 1;
            uint32_t                : 6;
            __IOM uint32_t BMDS     : 1;
            __IOM uint32_t HJACKCTL : 1;
            uint32_t                : 20;
            __IOM uint32_t ABT      : 1;
            __IOM uint32_t RSM      : 1;
            __IOM uint32_t BUSE     : 1;
        } BCTL_b;
    };

    union
    {
        __IOM uint32_t MSDVAD;

        struct
        {
            uint32_t              : 16;
            __IOM uint32_t MDYAD  : 7;
            uint32_t              : 8;
            __IOM uint32_t MDYADV : 1;
        } MSDVAD_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t RSTCTL;

        struct
        {
            __IOM uint32_t RI3CRST : 1;
            __IOM uint32_t CMDQRST : 1;
            __IOM uint32_t RSPQRST : 1;
            __IOM uint32_t TDBRST  : 1;
            __IOM uint32_t RDBRST  : 1;
            __IOM uint32_t IBIQRST : 1;
            __IOM uint32_t RSQRST  : 1;
            uint32_t               : 9;
            __IOM uint32_t INTLRST : 1;
            uint32_t               : 15;
        } RSTCTL_b;
    };

    union
    {
        __IOM uint32_t PRSST;

        struct
        {
            uint32_t              : 2;
            __IOM uint32_t CRMS   : 1;
            uint32_t              : 1;
            __IM uint32_t TRMD    : 1;
            uint32_t              : 2;
            __OM uint32_t PRSSTWP : 1;
            uint32_t              : 24;
        } PRSST_b;
    };
    __IM uint32_t RESERVED2[2];

    union
    {
        __IOM uint32_t INST;

        struct
        {
            uint32_t            : 10;
            __IOM uint32_t INEF : 1;
            uint32_t            : 21;
        } INST_b;
    };

    union
    {
        __IOM uint32_t INSTE;

        struct
        {
            uint32_t            : 10;
            __IOM uint32_t INEE : 1;
            uint32_t            : 21;
        } INSTE_b;
    };

    union
    {
        __IOM uint32_t INIE;

        struct
        {
            uint32_t             : 10;
            __IOM uint32_t INEIE : 1;
            uint32_t             : 21;
        } INIE_b;
    };

    union
    {
        __IOM uint32_t INSTFC;

        struct
        {
            uint32_t            : 10;
            __OM uint32_t INEFC : 1;
            uint32_t            : 21;
        } INSTFC_b;
    };
    __IM uint32_t RESERVED3;

    union
    {
        __IM uint32_t DVCT;

        struct
        {
            uint32_t          : 19;
            __IM uint32_t IDX : 5;
            uint32_t          : 8;
        } DVCT_b;
    };
    __IM uint32_t RESERVED4[4];

    union
    {
        __IOM uint32_t IBINCTL;

        struct
        {
            __IOM uint32_t NRHJCTL  : 1;
            __IOM uint32_t NRMRCTL  : 1;
            uint32_t                : 1;
            __IOM uint32_t NRSIRCTL : 1;
            uint32_t                : 28;
        } IBINCTL_b;
    };
    __IM uint32_t RESERVED5;

    union
    {
        __IOM uint32_t BFCTL;

        struct
        {
            __IOM uint32_t MALE   : 1;
            __IOM uint32_t NALE   : 1;
            __IOM uint32_t SALE   : 1;
            uint32_t              : 5;
            __IOM uint32_t SCSYNE : 1;
            uint32_t              : 3;
            __IOM uint32_t SMBS   : 1;
            uint32_t              : 1;
            __IOM uint32_t FMPE   : 1;
            __IOM uint32_t HSME   : 1;
            uint32_t              : 16;
        } BFCTL_b;
    };

    union
    {
        __IOM uint32_t SVCTL;

        struct
        {
            __IOM uint32_t GCAE  : 1;
            uint32_t             : 4;
            __IOM uint32_t HSMCE : 1;
            __IOM uint32_t DVIDE : 1;
            uint32_t             : 8;
            __IOM uint32_t HOAE  : 1;
            __IOM uint32_t SVAEn : 1;
            uint32_t             : 15;
        } SVCTL_b;
    };
    __IM uint32_t RESERVED6[2];

    union
    {
        __IOM uint32_t REFCKCTL;

        struct
        {
            __IOM uint32_t IREFCKS : 3;
            uint32_t               : 29;
        } REFCKCTL_b;
    };

    union
    {
        __IOM uint32_t STDBR;

        struct
        {
            __IOM uint32_t SBRLO  : 8;
            __IOM uint32_t SBRHO  : 8;
            __IOM uint32_t SBRLP  : 6;
            uint32_t              : 2;
            __IOM uint32_t SBRHP  : 6;
            uint32_t              : 1;
            __IOM uint32_t DSBRPO : 1;
        } STDBR_b;
    };

    union
    {
        __IOM uint32_t EXTBR;

        struct
        {
            __IOM uint32_t EBRLO : 8;
            __IOM uint32_t EBRHO : 8;
            __IOM uint32_t EBRLP : 6;
            uint32_t             : 2;
            __IOM uint32_t EBRHP : 6;
            uint32_t             : 2;
        } EXTBR_b;
    };

    union
    {
        __IOM uint32_t BFRECDT;

        struct
        {
            __IOM uint32_t FRECYC : 9;
            uint32_t              : 23;
        } BFRECDT_b;
    };

    union
    {
        __IOM uint32_t BAVLCDT;

        struct
        {
            __IOM uint32_t AVLCYC : 9;
            uint32_t              : 23;
        } BAVLCDT_b;
    };

    union
    {
        __IOM uint32_t BIDLCDT;

        struct
        {
            __IOM uint32_t IDLCYC : 18;
            uint32_t              : 14;
        } BIDLCDT_b;
    };

    union
    {
        __IOM uint32_t OUTCTL;

        struct
        {
            __IOM uint32_t SDOC   : 1;
            __IOM uint32_t SCOC   : 1;
            __OM uint32_t  SOCWP  : 1;
            uint32_t              : 1;
            __IOM uint32_t EXCYC  : 1;
            uint32_t              : 3;
            __IOM uint32_t SDOD   : 3;
            uint32_t              : 4;
            __IOM uint32_t SDODCS : 1;
            uint32_t              : 16;
        } OUTCTL_b;
    };

    union
    {
        __IOM uint32_t INCTL;

        struct
        {
            __IOM uint32_t DNFS : 4;
            __IOM uint32_t DNFE : 1;
            uint32_t            : 27;
        } INCTL_b;
    };

    union
    {
        __IOM uint32_t TMOCTL;

        struct
        {
            __IOM uint32_t TODTS  : 2;
            uint32_t              : 2;
            __IOM uint32_t TOLCTL : 1;
            __IOM uint32_t TOHCTL : 1;
            __IOM uint32_t TOMDS  : 2;
            uint32_t              : 24;
        } TMOCTL_b;
    };
    __IM uint32_t RESERVED7;

    union
    {
        __IOM uint32_t WUCTL;

        struct
        {
            __IOM uint32_t WUACKS  : 1;
            uint32_t               : 3;
            __IOM uint32_t WUANFS  : 1;
            uint32_t               : 1;
            __IOM uint32_t WUFSYNE : 1;
            __IOM uint32_t WUFE    : 1;
            uint32_t               : 24;
        } WUCTL_b;
    };
    __IM uint32_t RESERVED8;

    union
    {
        __IOM uint32_t ACKCTL;

        struct
        {
            __IM uint32_t  ACKR   : 1;
            __IOM uint32_t ACKT   : 1;
            __OM uint32_t  ACKTWP : 1;
            uint32_t              : 29;
        } ACKCTL_b;
    };

    union
    {
        __IOM uint32_t SCSTRCTL;

        struct
        {
            __IOM uint32_t ACKTWE : 1;
            __IOM uint32_t RWE    : 1;
            uint32_t              : 30;
        } SCSTRCTL_b;
    };
    __IM uint32_t RESERVED9[2];

    union
    {
        __IOM uint32_t SCSTLCTL;

        struct
        {
            __IOM uint32_t STLCYC : 16;
            uint32_t              : 12;
            __IOM uint32_t AAPE   : 1;
            __IOM uint32_t TRAPE  : 1;
            __IOM uint32_t PARPE  : 1;
            __IOM uint32_t ACKPE  : 1;
        } SCSTLCTL_b;
    };
    __IM uint32_t RESERVED10[3];

    union
    {
        __IOM uint32_t SVTDLG0;

        struct
        {
            uint32_t             : 16;
            __IOM uint32_t STDLG : 16;
        } SVTDLG0_b;
    };
    __IM uint32_t RESERVED11[31];

    union
    {
        __IOM uint32_t CNDCTL;

        struct
        {
            __IOM uint32_t STCND : 1;
            __IOM uint32_t SRCND : 1;
            __IOM uint32_t SPCND : 1;
            uint32_t             : 29;
        } CNDCTL_b;
    };
    __IM uint32_t  RESERVED12[3];
    __OM uint32_t  NCMDQP;
    __IM uint32_t  NRSPQP;
    __IOM uint32_t NTDTBP0;
    __IM uint32_t  RESERVED13[8];
    __IOM uint32_t NIBIQP;
    __IM uint32_t  NRSQP;
    __IM uint32_t  RESERVED14[3];

    union
    {
        __IOM uint32_t NQTHCTL;

        struct
        {
            __IOM uint32_t CMDQTH  : 8;
            __IOM uint32_t RSPQTH  : 8;
            __IOM uint32_t IBIDSSZ : 8;
            __IOM uint32_t IBIQTH  : 8;
        } NQTHCTL_b;
    };

    union
    {
        __IOM uint32_t NTBTHCTL0;      /*!< (@ 0x00000194) Normal Transfer Data Buffer Threshold Control
                                        *                  Register 0                                                 */

        struct
        {
            __IOM uint32_t TXDBTH : 3;
            uint32_t              : 5;
            __IOM uint32_t RXDBTH : 3;
            uint32_t              : 5;
            __IOM uint32_t TXSTTH : 3;
            uint32_t              : 5;
            __IOM uint32_t RXSTTH : 3;
            uint32_t              : 5;
        } NTBTHCTL0_b;
    };
    __IM uint32_t RESERVED15[10];

    union
    {
        __IOM uint32_t NRQTHCTL;       /*!< (@ 0x000001C0) Normal Receive Status Queue Threshold Control
                                        *                  Register                                                   */

        struct
        {
            __IOM uint32_t RSQTH : 8;
            uint32_t             : 24;
        } NRQTHCTL_b;
    };
    __IM uint32_t RESERVED16[3];

    union
    {
        __IOM uint32_t BST;

        struct
        {
            __IOM uint32_t STCNDDF : 1;
            __IOM uint32_t SPCNDDF : 1;
            __IOM uint32_t HDREXDF : 1;
            uint32_t               : 1;
            __IOM uint32_t NACKDF  : 1;
            uint32_t               : 3;
            __IOM uint32_t TENDF   : 1;
            uint32_t               : 7;
            __IOM uint32_t ALF     : 1;
            uint32_t               : 3;
            __IOM uint32_t TODF    : 1;
            uint32_t               : 11;
        } BST_b;
    };

    union
    {
        __IOM uint32_t BSTE;

        struct
        {
            __IOM uint32_t STCNDDE : 1;
            __IOM uint32_t SPCNDDE : 1;
            __IOM uint32_t HDREXDE : 1;
            uint32_t               : 1;
            __IOM uint32_t NACKDE  : 1;
            uint32_t               : 3;
            __IOM uint32_t TENDE   : 1;
            uint32_t               : 7;
            __IOM uint32_t ALE     : 1;
            uint32_t               : 3;
            __IOM uint32_t TODE    : 1;
            uint32_t               : 11;
        } BSTE_b;
    };

    union
    {
        __IOM uint32_t BIE;

        struct
        {
            __IOM uint32_t STCNDDIE : 1;
            __IOM uint32_t SPCNDDIE : 1;
            __IOM uint32_t HDREXDIE : 1;
            uint32_t                : 1;
            __IOM uint32_t NACKDIE  : 1;
            uint32_t                : 3;
            __IOM uint32_t TENDIE   : 1;
            uint32_t                : 7;
            __IOM uint32_t ALIE     : 1;
            uint32_t                : 3;
            __IOM uint32_t TODIE    : 1;
            uint32_t                : 11;
        } BIE_b;
    };

    union
    {
        __IOM uint32_t BSTFC;

        struct
        {
            __OM uint32_t STCNDDFC : 1;
            __OM uint32_t SPCNDDFC : 1;
            __OM uint32_t HDREXDFC : 1;
            uint32_t               : 1;
            __OM uint32_t NACKDFC  : 1;
            uint32_t               : 3;
            __OM uint32_t TENDFC   : 1;
            uint32_t               : 7;
            __OM uint32_t ALFC     : 1;
            uint32_t               : 3;
            __OM uint32_t TODFC    : 1;
            uint32_t               : 11;
        } BSTFC_b;
    };

    union
    {
        __IOM uint32_t NTST;

        struct
        {
            __IOM uint32_t TDBEF0  : 1;
            __IOM uint32_t RDBFF0  : 1;
            __IOM uint32_t IBIQEFF : 1;
            __IOM uint32_t CMDQEF  : 1;
            __IOM uint32_t RSPQFF  : 1;
            __IOM uint32_t TABTF   : 1;
            uint32_t               : 3;
            __IOM uint32_t TEF     : 1;
            uint32_t               : 10;
            __IOM uint32_t RSQFF   : 1;
            uint32_t               : 11;
        } NTST_b;
    };

    union
    {
        __IOM uint32_t NTSTE;

        struct
        {
            __IOM uint32_t TDBEE0  : 1;
            __IOM uint32_t RDBFE0  : 1;
            __IOM uint32_t IBIQEFE : 1;
            __IOM uint32_t CMDQEE  : 1;
            __IOM uint32_t RSPQFE  : 1;
            __IOM uint32_t TABTE   : 1;
            uint32_t               : 3;
            __IOM uint32_t TEE     : 1;
            uint32_t               : 10;
            __IOM uint32_t RSQFE   : 1;
            uint32_t               : 11;
        } NTSTE_b;
    };

    union
    {
        __IOM uint32_t NTIE;

        struct
        {
            __IOM uint32_t TDBEIE0  : 1;
            __IOM uint32_t RDBFIE0  : 1;
            __IOM uint32_t IBIQEFIE : 1;
            __IOM uint32_t CMDQEIE  : 1;
            __IOM uint32_t RSPQFIE  : 1;
            __IOM uint32_t TABTIE   : 1;
            uint32_t                : 3;
            __IOM uint32_t TEIE     : 1;
            uint32_t                : 10;
            __IOM uint32_t RSQFIE   : 1;
            uint32_t                : 11;
        } NTIE_b;
    };

    union
    {
        __IOM uint32_t NTSTFC;

        struct
        {
            __OM uint32_t TDBEFC0  : 1;
            __OM uint32_t RDBFFC0  : 1;
            __OM uint32_t IBIQEFFC : 1;
            __OM uint32_t CMDQEFC  : 1;
            __OM uint32_t RSPQFFC  : 1;
            __OM uint32_t TABTFC   : 1;
            uint32_t               : 3;
            __OM uint32_t TEFC     : 1;
            uint32_t               : 10;
            __OM uint32_t RSQFFC   : 1;
            uint32_t               : 11;
        } NTSTFC_b;
    };
    __IM uint32_t RESERVED17[8];

    union
    {
        __IM uint32_t BCST;

        struct
        {
            __IM uint32_t BFREF : 1;
            __IM uint32_t BAVLF : 1;
            __IM uint32_t BIDLF : 1;
            uint32_t            : 29;
        } BCST_b;
    };

    union
    {
        __IOM uint32_t SVST;

        struct
        {
            __IOM uint32_t GCAF  : 1;
            uint32_t             : 4;
            __IOM uint32_t HSMCF : 1;
            __IOM uint32_t DVIDF : 1;
            uint32_t             : 8;
            __IOM uint32_t HOAF  : 1;
            __IOM uint32_t SVAFn : 1;
            uint32_t             : 15;
        } SVST_b;
    };

    union
    {
        __IOM uint32_t WUST;

        struct
        {
            __IOM uint32_t WUASYNF : 1;
            uint32_t               : 31;
        } WUST_b;
    };
    __IM uint32_t RESERVED18[2];

    union
    {
        __IOM uint32_t DATBAS0;

        struct
        {
            __IOM uint32_t DVSTAD  : 7;
            uint32_t               : 5;
            __IOM uint32_t DVIBIPL : 1;
            __IOM uint32_t DVSIRRJ : 1;
            __IOM uint32_t DVMRRJ  : 1;
            __IOM uint32_t DVIBITS : 1;
            __IOM uint32_t DVDYAD  : 8;
            uint32_t               : 5;
            __IOM uint32_t DVNACK  : 2;
            __IOM uint32_t DVTYP   : 1;
        } DATBAS0_b;
    };
    __IM uint32_t RESERVED19;

    union
    {
        __IOM uint32_t DATBAS1;

        struct
        {
            __IOM uint32_t DVSTAD  : 7;
            uint32_t               : 5;
            __IOM uint32_t DVIBIPL : 1;
            __IOM uint32_t DVSIRRJ : 1;
            __IOM uint32_t DVMRRJ  : 1;
            __IOM uint32_t DVIBITS : 1;
            __IOM uint32_t DVDYAD  : 8;
            uint32_t               : 5;
            __IOM uint32_t DVNACK  : 2;
            __IOM uint32_t DVTYP   : 1;
        } DATBAS1_b;
    };
    __IM uint32_t RESERVED20;

    union
    {
        __IOM uint32_t DATBAS2;

        struct
        {
            __IOM uint32_t DVSTAD  : 7;
            uint32_t               : 5;
            __IOM uint32_t DVIBIPL : 1;
            __IOM uint32_t DVSIRRJ : 1;
            __IOM uint32_t DVMRRJ  : 1;
            __IOM uint32_t DVIBITS : 1;
            __IOM uint32_t DVDYAD  : 8;
            uint32_t               : 5;
            __IOM uint32_t DVNACK  : 2;
            __IOM uint32_t DVTYP   : 1;
        } DATBAS2_b;
    };
    __IM uint32_t RESERVED21;

    union
    {
        __IOM uint32_t DATBAS3;

        struct
        {
            __IOM uint32_t DVSTAD  : 7;
            uint32_t               : 5;
            __IOM uint32_t DVIBIPL : 1;
            __IOM uint32_t DVSIRRJ : 1;
            __IOM uint32_t DVMRRJ  : 1;
            __IOM uint32_t DVIBITS : 1;
            __IOM uint32_t DVDYAD  : 8;
            uint32_t               : 5;
            __IOM uint32_t DVNACK  : 2;
            __IOM uint32_t DVTYP   : 1;
        } DATBAS3_b;
    };
    __IM uint32_t RESERVED22[24];

    union
    {
        __IOM uint32_t EXDATBAS;

        struct
        {
            __IOM uint32_t EDSTAD : 7;
            uint32_t              : 9;
            __IOM uint32_t EDDYAD : 8;
            uint32_t              : 5;
            __IOM uint32_t EDNACK : 2;
            __IOM uint32_t EDTYP  : 1;
        } EXDATBAS_b;
    };
    __IM uint32_t RESERVED23[3];

    union
    {
        __IOM uint32_t SDATBAS0;

        struct
        {
            __IOM uint32_t SDSTAD  : 10;
            __IOM uint32_t SDADLS  : 1;
            uint32_t               : 1;
            __IOM uint32_t SDIBIPL : 1;
            uint32_t               : 3;
            __IOM uint32_t SDDYAD  : 7;
            uint32_t               : 9;
        } SDATBAS0_b;
    };

    union
    {
        __IOM uint32_t SDATBAS1;

        struct
        {
            __IOM uint32_t SDSTAD  : 10;
            __IOM uint32_t SDADLS  : 1;
            uint32_t               : 1;
            __IOM uint32_t SDIBIPL : 1;
            uint32_t               : 3;
            __IOM uint32_t SDDYAD  : 7;
            uint32_t               : 9;
        } SDATBAS1_b;
    };

    union
    {
        __IOM uint32_t SDATBAS2;

        struct
        {
            __IOM uint32_t SDSTAD  : 10;
            __IOM uint32_t SDADLS  : 1;
            uint32_t               : 1;
            __IOM uint32_t SDIBIPL : 1;
            uint32_t               : 3;
            __IOM uint32_t SDDYAD  : 7;
            uint32_t               : 9;
        } SDATBAS2_b;
    };
    __IM uint32_t RESERVED24[5];

    union
    {
        __IOM uint32_t MSDCT0;

        struct
        {
            uint32_t              : 8;
            __IOM uint32_t RBCR0  : 1;
            __IOM uint32_t RBCR1  : 1;
            __IOM uint32_t RBCR2  : 1;
            __IOM uint32_t RBCR3  : 1;
            uint32_t              : 2;
            __IOM uint32_t RBCR76 : 2;
            uint32_t              : 16;
        } MSDCT0_b;
    };

    union
    {
        __IOM uint32_t MSDCT1;

        struct
        {
            uint32_t              : 8;
            __IOM uint32_t RBCR0  : 1;
            __IOM uint32_t RBCR1  : 1;
            __IOM uint32_t RBCR2  : 1;
            __IOM uint32_t RBCR3  : 1;
            uint32_t              : 2;
            __IOM uint32_t RBCR76 : 2;
            uint32_t              : 16;
        } MSDCT1_b;
    };

    union
    {
        __IOM uint32_t MSDCT2;

        struct
        {
            uint32_t              : 8;
            __IOM uint32_t RBCR0  : 1;
            __IOM uint32_t RBCR1  : 1;
            __IOM uint32_t RBCR2  : 1;
            __IOM uint32_t RBCR3  : 1;
            uint32_t              : 2;
            __IOM uint32_t RBCR76 : 2;
            uint32_t              : 16;
        } MSDCT2_b;
    };

    union
    {
        __IOM uint32_t MSDCT3;

        struct
        {
            uint32_t              : 8;
            __IOM uint32_t RBCR0  : 1;
            __IOM uint32_t RBCR1  : 1;
            __IOM uint32_t RBCR2  : 1;
            __IOM uint32_t RBCR3  : 1;
            uint32_t              : 2;
            __IOM uint32_t RBCR76 : 2;
            uint32_t              : 16;
        } MSDCT3_b;
    };
    __IM uint32_t RESERVED25[16];

    union
    {
        __IOM uint32_t SVDCT;

        struct
        {
            __IOM uint32_t TDCR   : 8;
            __IOM uint32_t TBCR0  : 1;
            __IOM uint32_t TBCR1  : 1;
            __IOM uint32_t TBCR2  : 1;
            __IOM uint32_t TBCR3  : 1;
            uint32_t              : 2;
            __IOM uint32_t TBCR76 : 2;
            uint32_t              : 16;
        } SVDCT_b;
    };
    __IOM uint32_t SDCTPIDL;           /*!< (@ 0x00000324) Slave Device Characteristic Table Provisional
                                        *                  ID Low Register                                            */
    __IOM uint32_t SDCTPIDH;           /*!< (@ 0x00000328) Slave Device Characteristic Table Provisional
                                        *                  ID High Register                                           */
    __IM uint32_t RESERVED26;

    union
    {
        __IM uint32_t SVDVAD0;

        struct
        {
            uint32_t             : 16;
            __IM uint32_t SVAD   : 10;
            uint32_t             : 1;
            __IM uint32_t SADLG  : 1;
            uint32_t             : 2;
            __IM uint32_t SSTADV : 1;
            __IM uint32_t SDYADV : 1;
        } SVDVAD0_b;
    };
    __IM uint32_t RESERVED27[7];

    union
    {
        __IOM uint32_t CSECMD;

        struct
        {
            __IOM uint32_t SVIRQE : 1;
            __IOM uint32_t MSRQE  : 1;
            uint32_t              : 1;
            __IOM uint32_t HJEVE  : 1;
            uint32_t              : 28;
        } CSECMD_b;
    };

    union
    {
        __IOM uint32_t CEACTST;

        struct
        {
            __IOM uint32_t ACTST : 4;
            uint32_t             : 28;
        } CEACTST_b;
    };

    union
    {
        __IOM uint32_t CMWLG;

        struct
        {
            __IOM uint32_t MWLG : 16;
            uint32_t            : 16;
        } CMWLG_b;
    };

    union
    {
        __IOM uint32_t CMRLG;

        struct
        {
            __IOM uint32_t MRLG   : 16;
            __IOM uint32_t IBIPSZ : 8;
            uint32_t              : 8;
        } CMRLG_b;
    };

    union
    {
        __IM uint32_t CETSTMD;

        struct
        {
            __IM uint32_t TSTMD : 8;
            uint32_t            : 24;
        } CETSTMD_b;
    };

    union
    {
        __IOM uint32_t CGDVST;

        struct
        {
            __IOM uint32_t PNDINT : 4;
            uint32_t              : 1;
            __IOM uint32_t PRTE   : 1;
            __IOM uint32_t ACTMD  : 2;
            __IOM uint32_t VDRSV  : 8;
            uint32_t              : 16;
        } CGDVST_b;
    };

    union
    {
        __IOM uint32_t CMDSPW;

        struct
        {
            __IOM uint32_t MSWDR : 3;
            uint32_t             : 29;
        } CMDSPW_b;
    };

    union
    {
        __IOM uint32_t CMDSPR;

        struct
        {
            __IOM uint32_t MSRDR  : 3;
            __IOM uint32_t CDTTIM : 3;
            uint32_t              : 26;
        } CMDSPR_b;
    };

    union
    {
        __IOM uint32_t CMDSPT;

        struct
        {
            __IOM uint32_t MRTTIM : 24;
            uint32_t              : 7;
            __IOM uint32_t MRTE   : 1;
        } CMDSPT_b;
    };

    union
    {
        __IOM uint32_t CETSM;          /*!< (@ 0x00000374) CCC Exchange Timing Support Information M (Mode)
                                        *                  Register                                                   */

        struct
        {
            uint32_t            : 8;
            __IOM uint32_t FREQ : 8;
            __IOM uint32_t INAC : 8;
            uint32_t            : 8;
        } CETSM_b;
    };
    __IM uint32_t RESERVED28[2];

    union
    {
        __IOM uint32_t BITCNT;

        struct
        {
            __IOM uint32_t BCNT  : 5;
            uint32_t             : 2;
            __OM uint32_t BCNTWP : 1;
            uint32_t             : 24;
        } BITCNT_b;
    };
    __IM uint32_t RESERVED29[4];

    union
    {
        __IM uint32_t NQSTLV;

        struct
        {
            __IM uint32_t CMDQFLV : 8;
            __IM uint32_t RSPQLV  : 8;
            __IM uint32_t IBIQLV  : 8;
            __IM uint32_t IBISCNT : 5;
            uint32_t              : 3;
        } NQSTLV_b;
    };

    union
    {
        __IM uint32_t NDBSTLV0;

        struct
        {
            __IM uint32_t TDBFLV : 8;
            __IM uint32_t RDBLV  : 8;
            uint32_t             : 16;
        } NDBSTLV0_b;
    };
    __IM uint32_t RESERVED30[9];

    union
    {
        __IM uint32_t NRSQSTLV;

        struct
        {
            __IM uint32_t RSQLV : 8;
            uint32_t            : 24;
        } NRSQSTLV_b;
    };
    __IM uint32_t RESERVED31[2];

    union
    {
        __IM uint32_t PRSTDBG;

        struct
        {
            __IM uint32_t SCILV : 1;
            __IM uint32_t SDILV : 1;
            __IM uint32_t SCOLV : 1;
            __IM uint32_t SDOLV : 1;
            uint32_t            : 28;
        } PRSTDBG_b;
    };

    union
    {
        __IM uint32_t MSERRCNT;

        struct
        {
            __IM uint32_t M2ECNT : 8;
            uint32_t             : 24;
        } MSERRCNT_b;
    };
} R_I3C0_Type;

/* =========================================================================================================================== */
/* ================                                        R_MPU_MMPU                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief Bus Master MPU (R_MPU_MMPU)
 */

typedef struct
{
    union
    {
        __IOM uint16_t OAD;

        struct
        {
            __IOM uint16_t OAD : 1;
            uint16_t           : 7;
            __OM uint16_t KEY  : 8;    /*!< [15..8] Write Keyword The data written to these bits are not
                                        *   stored.                                                                   */
        } OAD_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t OADPT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8; /*!< [15..8] Write Keyword The data written to these bits are not
                                         *   stored.                                                                   */
        } OADPT_b;
    };
    __IM uint16_t               RESERVED1;
    __IM uint32_t               RESERVED2[62];
    __IOM R_MPU_MMPU_GROUP_Type DMAC0;
    __IOM R_MPU_MMPU_GROUP_Type DMAC1;
    __IOM R_MPU_MMPU_GROUP_Type EDMAC;
    __IOM R_MPU_MMPU_GROUP_Type GLCDC;
    __IOM R_MPU_MMPU_GROUP_Type DRW;
    __IOM R_MPU_MMPU_GROUP_Type MIPI_DSI;
    __IOM R_MPU_MMPU_GROUP_Type CEU;
    __IOM R_MPU_MMPU_GROUP_Type MIPI_CSI;
    __IOM R_MPU_MMPU_GROUP_Type NPU;
} R_MPU_MMPU_Type;

/* =========================================================================================================================== */
/* ================                                        R_MPU_SPMON                                        ================ */
/* =========================================================================================================================== */

/**
 * @brief CPU Stack Pointer Monitor (R_MPU_SPMON)
 */

typedef struct
{
    __IOM R_MPU_SPMON_SP_Type SP[2];
} R_MPU_SPMON_Type;

/* =========================================================================================================================== */
/* ================                                          R_MSTP                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief System-Module Stop (R_MSTP)
 */

typedef struct
{
    union
    {
        __IOM uint32_t MSTPCRA;

        struct
        {
            __IOM uint32_t MSTPA0  : 1;
            __IOM uint32_t MSTPA1  : 1;
            __IOM uint32_t MSTPA2  : 1;
            __IOM uint32_t MSTPA3  : 1;
            __IOM uint32_t MSTPA4  : 1;
            __IOM uint32_t MSTPA5  : 1;
            __IOM uint32_t MSTPA6  : 1;
            __IOM uint32_t MSTPA7  : 1;
            __IOM uint32_t MSTPA8  : 1;
            __IOM uint32_t MSTPA9  : 1;
            __IOM uint32_t MSTPA10 : 1; /*!< [10..10] Module stop bit 10. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA11 : 1; /*!< [11..11] Module stop bit 11. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA12 : 1; /*!< [12..12] Module stop bit 12. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA13 : 1; /*!< [13..13] Module stop bit 13. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA14 : 1; /*!< [14..14] Module stop bit 14. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA15 : 1; /*!< [15..15] Module stop bit 15. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA16 : 1; /*!< [16..16] Module stop bit 16. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA17 : 1; /*!< [17..17] Module stop bit 17. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA18 : 1; /*!< [18..18] Module stop bit 18. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA19 : 1; /*!< [19..19] Module stop bit 19. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA20 : 1; /*!< [20..20] Module stop bit 20. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA21 : 1; /*!< [21..21] Module stop bit 21. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA22 : 1; /*!< [22..22] Module stop bit 22. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA23 : 1; /*!< [23..23] Module stop bit 23. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA24 : 1; /*!< [24..24] Module stop bit 24. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA25 : 1; /*!< [25..25] Module stop bit 25. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA26 : 1; /*!< [26..26] Module stop bit 26. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA27 : 1; /*!< [27..27] Module stop bit 27. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA28 : 1; /*!< [28..28] Module stop bit 28. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA29 : 1; /*!< [29..29] Module stop bit 29. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA30 : 1; /*!< [30..30] Module stop bit 30. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA31 : 1; /*!< [31..31] Module stop bit 31. See device hardware manual for
                                         *   usage.                                                                    */
        } MSTPCRA_b;
    };

    union
    {
        __IOM uint32_t MSTPCRB;

        struct
        {
            __IOM uint32_t MSTPB0  : 1;
            __IOM uint32_t MSTPB1  : 1;
            __IOM uint32_t MSTPB2  : 1;
            __IOM uint32_t MSTPB3  : 1;
            __IOM uint32_t MSTPB4  : 1;
            __IOM uint32_t MSTPB5  : 1;
            __IOM uint32_t MSTPB6  : 1;
            __IOM uint32_t MSTPB7  : 1;
            __IOM uint32_t MSTPB8  : 1;
            __IOM uint32_t MSTPB9  : 1;
            __IOM uint32_t MSTPB10 : 1; /*!< [10..10] Module stop bit 10. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB11 : 1; /*!< [11..11] Module stop bit 11. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB12 : 1; /*!< [12..12] Module stop bit 12. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB13 : 1; /*!< [13..13] Module stop bit 13. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB14 : 1; /*!< [14..14] Module stop bit 14. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB15 : 1; /*!< [15..15] Module stop bit 15. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB16 : 1; /*!< [16..16] Module stop bit 16. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB17 : 1; /*!< [17..17] Module stop bit 17. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB18 : 1; /*!< [18..18] Module stop bit 18. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB19 : 1; /*!< [19..19] Module stop bit 19. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB20 : 1; /*!< [20..20] Module stop bit 20. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB21 : 1; /*!< [21..21] Module stop bit 21. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB22 : 1; /*!< [22..22] Module stop bit 22. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB23 : 1; /*!< [23..23] Module stop bit 23. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB24 : 1; /*!< [24..24] Module stop bit 24. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB25 : 1; /*!< [25..25] Module stop bit 25. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB26 : 1; /*!< [26..26] Module stop bit 26. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB27 : 1; /*!< [27..27] Module stop bit 27. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB28 : 1; /*!< [28..28] Module stop bit 28. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB29 : 1; /*!< [29..29] Module stop bit 29. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB30 : 1; /*!< [30..30] Module stop bit 30. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPB31 : 1; /*!< [31..31] Module stop bit 31. See device hardware manual for
                                         *   usage.                                                                    */
        } MSTPCRB_b;
    };

    union
    {
        __IOM uint32_t MSTPCRC;

        struct
        {
            __IOM uint32_t MSTPC0  : 1;
            __IOM uint32_t MSTPC1  : 1;
            __IOM uint32_t MSTPC2  : 1;
            __IOM uint32_t MSTPC3  : 1;
            __IOM uint32_t MSTPC4  : 1;
            __IOM uint32_t MSTPC5  : 1;
            __IOM uint32_t MSTPC6  : 1;
            __IOM uint32_t MSTPC7  : 1;
            __IOM uint32_t MSTPC8  : 1;
            __IOM uint32_t MSTPC9  : 1;
            __IOM uint32_t MSTPC10 : 1; /*!< [10..10] Module stop bit 10. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC11 : 1; /*!< [11..11] Module stop bit 11. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC12 : 1; /*!< [12..12] Module stop bit 12. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC13 : 1; /*!< [13..13] Module stop bit 13. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC14 : 1; /*!< [14..14] Module stop bit 14. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC15 : 1; /*!< [15..15] Module stop bit 15. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC16 : 1; /*!< [16..16] Module stop bit 16. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC17 : 1; /*!< [17..17] Module stop bit 17. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC18 : 1; /*!< [18..18] Module stop bit 18. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC19 : 1; /*!< [19..19] Module stop bit 19. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC20 : 1; /*!< [20..20] Module stop bit 20. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC21 : 1; /*!< [21..21] Module stop bit 21. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC22 : 1; /*!< [22..22] Module stop bit 22. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC23 : 1; /*!< [23..23] Module stop bit 23. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC24 : 1; /*!< [24..24] Module stop bit 24. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC25 : 1; /*!< [25..25] Module stop bit 25. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC26 : 1; /*!< [26..26] Module stop bit 26. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC27 : 1; /*!< [27..27] Module stop bit 27. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC28 : 1; /*!< [28..28] Module stop bit 28. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC29 : 1; /*!< [29..29] Module stop bit 29. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC30 : 1; /*!< [30..30] Module stop bit 30. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPC31 : 1; /*!< [31..31] Module stop bit 31. See device hardware manual for
                                         *   usage.                                                                    */
        } MSTPCRC_b;
    };

    union
    {
        __IOM uint32_t MSTPCRD;

        struct
        {
            __IOM uint32_t MSTPD0  : 1;
            __IOM uint32_t MSTPD1  : 1;
            __IOM uint32_t MSTPD2  : 1;
            __IOM uint32_t MSTPD3  : 1;
            __IOM uint32_t MSTPD4  : 1;
            __IOM uint32_t MSTPD5  : 1;
            __IOM uint32_t MSTPD6  : 1;
            __IOM uint32_t MSTPD7  : 1;
            __IOM uint32_t MSTPD8  : 1;
            __IOM uint32_t MSTPD9  : 1;
            __IOM uint32_t MSTPD10 : 1; /*!< [10..10] Module stop bit 10. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD11 : 1; /*!< [11..11] Module stop bit 11. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD12 : 1; /*!< [12..12] Module stop bit 12. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD13 : 1; /*!< [13..13] Module stop bit 13. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD14 : 1; /*!< [14..14] Module stop bit 14. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD15 : 1; /*!< [15..15] Module stop bit 15. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD16 : 1; /*!< [16..16] Module stop bit 16. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD17 : 1; /*!< [17..17] Module stop bit 17. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD18 : 1; /*!< [18..18] Module stop bit 18. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD19 : 1; /*!< [19..19] Module stop bit 19. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD20 : 1; /*!< [20..20] Module stop bit 20. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD21 : 1; /*!< [21..21] Module stop bit 21. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD22 : 1; /*!< [22..22] Module stop bit 22. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD23 : 1; /*!< [23..23] Module stop bit 23. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD24 : 1; /*!< [24..24] Module stop bit 24. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD25 : 1; /*!< [25..25] Module stop bit 25. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD26 : 1; /*!< [26..26] Module stop bit 26. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD27 : 1; /*!< [27..27] Module stop bit 27. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD28 : 1; /*!< [28..28] Module stop bit 28. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD29 : 1; /*!< [29..29] Module stop bit 29. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD30 : 1; /*!< [30..30] Module stop bit 30. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPD31 : 1; /*!< [31..31] Module stop bit 31. See device hardware manual for
                                         *   usage.                                                                    */
        } MSTPCRD_b;
    };

    union
    {
        union
        {
            __IOM uint32_t MSTPCRE;

            struct
            {
                __IOM uint32_t MSTPE0  : 1;
                __IOM uint32_t MSTPE1  : 1;
                __IOM uint32_t MSTPE2  : 1;
                __IOM uint32_t MSTPE3  : 1;
                __IOM uint32_t MSTPE4  : 1;
                __IOM uint32_t MSTPE5  : 1;
                __IOM uint32_t MSTPE6  : 1;
                __IOM uint32_t MSTPE7  : 1;
                __IOM uint32_t MSTPE8  : 1;
                __IOM uint32_t MSTPE9  : 1;
                __IOM uint32_t MSTPE10 : 1; /*!< [10..10] Module stop bit 10. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE11 : 1; /*!< [11..11] Module stop bit 11. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE12 : 1; /*!< [12..12] Module stop bit 12. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE13 : 1; /*!< [13..13] Module stop bit 13. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE14 : 1; /*!< [14..14] Module stop bit 14. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE15 : 1; /*!< [15..15] Module stop bit 15. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE16 : 1; /*!< [16..16] Module stop bit 16. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE17 : 1; /*!< [17..17] Module stop bit 17. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE18 : 1; /*!< [18..18] Module stop bit 18. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE19 : 1; /*!< [19..19] Module stop bit 19. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE20 : 1; /*!< [20..20] Module stop bit 20. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE21 : 1; /*!< [21..21] Module stop bit 21. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE22 : 1; /*!< [22..22] Module stop bit 22. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE23 : 1; /*!< [23..23] Module stop bit 23. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE24 : 1; /*!< [24..24] Module stop bit 24. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE25 : 1; /*!< [25..25] Module stop bit 25. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE26 : 1; /*!< [26..26] Module stop bit 26. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE27 : 1; /*!< [27..27] Module stop bit 27. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE28 : 1; /*!< [28..28] Module stop bit 28. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE29 : 1; /*!< [29..29] Module stop bit 29. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE30 : 1; /*!< [30..30] Module stop bit 30. See device hardware manual for
                                             *   usage.                                                                    */
                __IOM uint32_t MSTPE31 : 1; /*!< [31..31] Module stop bit 31. See device hardware manual for
                                             *   usage.                                                                    */
            } MSTPCRE_b;
        };

        union
        {
            __IOM uint16_t LSMRWDIS;

            struct
            {
                __IOM uint16_t RTCRWDIS : 1;
                __IOM uint16_t WDTDIS   : 1;
                __IOM uint16_t IWDTIDS  : 1;
                uint16_t                : 4;
                __IOM uint16_t WREN     : 1;
                __OM uint16_t  PRKEY    : 8;
            } LSMRWDIS_b;
        };
    };
} R_MSTP_Type;

/* =========================================================================================================================== */
/* ================                                          R_PORT0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief I/O Ports (R_PORT0)
 */

typedef struct
{
    union
    {
        union
        {
            __IOM uint32_t PCNTR1;

            struct
            {
                __IOM uint32_t PDR  : 16;
                __IOM uint32_t PODR : 16;
            } PCNTR1_b;
        };

        struct
        {
            union
            {
                __IOM uint16_t PDR;

                struct
                {
                    __IOM uint16_t PDR0  : 1;
                    __IOM uint16_t PDR1  : 1;
                    __IOM uint16_t PDR2  : 1;
                    __IOM uint16_t PDR3  : 1;
                    __IOM uint16_t PDR4  : 1;
                    __IOM uint16_t PDR5  : 1;
                    __IOM uint16_t PDR6  : 1;
                    __IOM uint16_t PDR7  : 1;
                    __IOM uint16_t PDR8  : 1;
                    __IOM uint16_t PDR9  : 1;
                    __IOM uint16_t PDR10 : 1;
                    __IOM uint16_t PDR11 : 1;
                    __IOM uint16_t PDR12 : 1;
                    __IOM uint16_t PDR13 : 1;
                    __IOM uint16_t PDR14 : 1;
                    __IOM uint16_t PDR15 : 1;
                } PDR_b;
            };

            union
            {
                __IOM uint16_t PODR;

                struct
                {
                    __IOM uint16_t PODR0  : 1;
                    __IOM uint16_t PODR1  : 1;
                    __IOM uint16_t PODR2  : 1;
                    __IOM uint16_t PODR3  : 1;
                    __IOM uint16_t PODR4  : 1;
                    __IOM uint16_t PODR5  : 1;
                    __IOM uint16_t PODR6  : 1;
                    __IOM uint16_t PODR7  : 1;
                    __IOM uint16_t PODR8  : 1;
                    __IOM uint16_t PODR9  : 1;
                    __IOM uint16_t PODR10 : 1;
                    __IOM uint16_t PODR11 : 1;
                    __IOM uint16_t PODR12 : 1;
                    __IOM uint16_t PODR13 : 1;
                    __IOM uint16_t PODR14 : 1;
                    __IOM uint16_t PODR15 : 1;
                } PODR_b;
            };
        };
    };

    union
    {
        union
        {
            __IM uint32_t PCNTR2;

            struct
            {
                __IM uint32_t PIDR : 16;
                __IM uint32_t EIDR : 16;
            } PCNTR2_b;
        };

        struct
        {
            union
            {
                __IM uint16_t PIDR;

                struct
                {
                    __IM uint16_t PIDR0  : 1;
                    __IM uint16_t PIDR1  : 1;
                    __IM uint16_t PIDR2  : 1;
                    __IM uint16_t PIDR3  : 1;
                    __IM uint16_t PIDR4  : 1;
                    __IM uint16_t PIDR5  : 1;
                    __IM uint16_t PIDR6  : 1;
                    __IM uint16_t PIDR7  : 1;
                    __IM uint16_t PIDR8  : 1;
                    __IM uint16_t PIDR9  : 1;
                    __IM uint16_t PIDR10 : 1;
                    __IM uint16_t PIDR11 : 1;
                    __IM uint16_t PIDR12 : 1;
                    __IM uint16_t PIDR13 : 1;
                    __IM uint16_t PIDR14 : 1;
                    __IM uint16_t PIDR15 : 1;
                } PIDR_b;
            };

            union
            {
                __IM uint16_t EIDR;

                struct
                {
                    __IM uint16_t EIDR0  : 1;
                    __IM uint16_t EIDR1  : 1;
                    __IM uint16_t EIDR2  : 1;
                    __IM uint16_t EIDR3  : 1;
                    __IM uint16_t EIDR4  : 1;
                    __IM uint16_t EIDR5  : 1;
                    __IM uint16_t EIDR6  : 1;
                    __IM uint16_t EIDR7  : 1;
                    __IM uint16_t EIDR8  : 1;
                    __IM uint16_t EIDR9  : 1;
                    __IM uint16_t EIDR10 : 1;
                    __IM uint16_t EIDR11 : 1;
                    __IM uint16_t EIDR12 : 1;
                    __IM uint16_t EIDR13 : 1;
                    __IM uint16_t EIDR14 : 1;
                    __IM uint16_t EIDR15 : 1;
                } EIDR_b;
            };
        };
    };

    union
    {
        union
        {
            __OM uint32_t PCNTR3;

            struct
            {
                __OM uint32_t POSR : 16;
                __OM uint32_t PORR : 16;
            } PCNTR3_b;
        };

        struct
        {
            union
            {
                __OM uint16_t POSR;

                struct
                {
                    __OM uint16_t POSR0  : 1;
                    __OM uint16_t POSR1  : 1;
                    __OM uint16_t POSR2  : 1;
                    __OM uint16_t POSR3  : 1;
                    __OM uint16_t POSR4  : 1;
                    __OM uint16_t POSR5  : 1;
                    __OM uint16_t POSR6  : 1;
                    __OM uint16_t POSR7  : 1;
                    __OM uint16_t POSR8  : 1;
                    __OM uint16_t POSR9  : 1;
                    __OM uint16_t POSR10 : 1;
                    __OM uint16_t POSR11 : 1;
                    __OM uint16_t POSR12 : 1;
                    __OM uint16_t POSR13 : 1;
                    __OM uint16_t POSR14 : 1;
                    __OM uint16_t POSR15 : 1;
                } POSR_b;
            };

            union
            {
                __OM uint16_t PORR;

                struct
                {
                    __OM uint16_t PORR0  : 1;
                    __OM uint16_t PORR1  : 1;
                    __OM uint16_t PORR2  : 1;
                    __OM uint16_t PORR3  : 1;
                    __OM uint16_t PORR4  : 1;
                    __OM uint16_t PORR5  : 1;
                    __OM uint16_t PORR6  : 1;
                    __OM uint16_t PORR7  : 1;
                    __OM uint16_t PORR8  : 1;
                    __OM uint16_t PORR9  : 1;
                    __OM uint16_t PORR10 : 1;
                    __OM uint16_t PORR11 : 1;
                    __OM uint16_t PORR12 : 1;
                    __OM uint16_t PORR13 : 1;
                    __OM uint16_t PORR14 : 1;
                    __OM uint16_t PORR15 : 1;
                } PORR_b;
            };
        };
    };

    union
    {
        union
        {
            __IOM uint32_t PCNTR4;

            struct
            {
                __IOM uint32_t EOSR : 16;
                __IOM uint32_t EORR : 16;
            } PCNTR4_b;
        };

        struct
        {
            union
            {
                __IOM uint16_t EOSR;

                struct
                {
                    __IOM uint16_t EOSR0  : 1;
                    __IOM uint16_t EOSR1  : 1;
                    __IOM uint16_t EOSR2  : 1;
                    __IOM uint16_t EOSR3  : 1;
                    __IOM uint16_t EOSR4  : 1;
                    __IOM uint16_t EOSR5  : 1;
                    __IOM uint16_t EOSR6  : 1;
                    __IOM uint16_t EOSR7  : 1;
                    __IOM uint16_t EOSR8  : 1;
                    __IOM uint16_t EOSR9  : 1;
                    __IOM uint16_t EOSR10 : 1;
                    __IOM uint16_t EOSR11 : 1;
                    __IOM uint16_t EOSR12 : 1;
                    __IOM uint16_t EOSR13 : 1;
                    __IOM uint16_t EOSR14 : 1;
                    __IOM uint16_t EOSR15 : 1;
                } EOSR_b;
            };

            union
            {
                __IOM uint16_t EORR;

                struct
                {
                    __IOM uint16_t EORR0  : 1;
                    __IOM uint16_t EORR1  : 1;
                    __IOM uint16_t EORR2  : 1;
                    __IOM uint16_t EORR3  : 1;
                    __IOM uint16_t EORR4  : 1;
                    __IOM uint16_t EORR5  : 1;
                    __IOM uint16_t EORR6  : 1;
                    __IOM uint16_t EORR7  : 1;
                    __IOM uint16_t EORR8  : 1;
                    __IOM uint16_t EORR9  : 1;
                    __IOM uint16_t EORR10 : 1;
                    __IOM uint16_t EORR11 : 1;
                    __IOM uint16_t EORR12 : 1;
                    __IOM uint16_t EORR13 : 1;
                    __IOM uint16_t EORR14 : 1;
                    __IOM uint16_t EORR15 : 1;
                } EORR_b;
            };
        };
    };
} R_PORT0_Type;

/* =========================================================================================================================== */
/* ================                                           R_PFS                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief I/O Ports-PFS (R_PFS)
 */

typedef struct
{
    __IOM R_PFS_PORT_Type PORT[15];
} R_PFS_Type;

/* =========================================================================================================================== */
/* ================                                          R_PMISC                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief I/O Ports-MISC (R_PMISC)
 */

typedef struct
{
    union
    {
        __IOM uint8_t PFENET;

        struct
        {
            uint8_t                : 4;
            __IOM uint8_t PHYMODE0 : 1;
            uint8_t                : 3;
        } PFENET_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1[5];

    union
    {
        __IOM uint8_t PWPR;

        struct
        {
            uint8_t             : 6;
            __IOM uint8_t PFSWE : 1;
            __IOM uint8_t B0WI  : 1;
        } PWPR_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3[3];

    union
    {
        __IOM uint8_t PWPRS;

        struct
        {
            uint8_t             : 6;
            __IOM uint8_t PFSWE : 1;
            __IOM uint8_t B0WI  : 1;
        } PWPRS_b;
    };
    __IM uint8_t             RESERVED4;
    __IM uint16_t            RESERVED5[13];
    __IOM R_PMISC_PMSAR_Type PMSAR[15];
} R_PMISC_Type;

/* =========================================================================================================================== */
/* ================                                           R_RTC                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Realtime Clock (R_RTC)
 */

typedef struct
{
    union
    {
        __IM uint8_t R64CNT;

        struct
        {
            __IM uint8_t F64HZ : 1;
            __IM uint8_t F32HZ : 1;
            __IM uint8_t F16HZ : 1;
            __IM uint8_t F8HZ  : 1;
            __IM uint8_t F4HZ  : 1;
            __IM uint8_t F2HZ  : 1;
            __IM uint8_t F1HZ  : 1;
            uint8_t            : 1;
        } R64CNT_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        union
        {
            __IOM uint8_t BCNT0;

            struct
            {
                __IOM uint8_t BCNT0 : 8; /*!< [7..0] The BCNT0 counter is a readable/writable 32-bit binary
                                          *   counter b7 to b0.                                                         */
            } BCNT0_b;
        };

        union
        {
            __IOM uint8_t RSECCNT;

            struct
            {
                __IOM uint8_t SEC1 : 4;  /*!< [3..0] 1-Second Count Counts from 0 to 9 every second. When
                                          *   a carry is generated, 1 is added to the tens place.                       */
                __IOM uint8_t SEC10 : 3;
                uint8_t             : 1;
            } RSECCNT_b;
        };
    };
    __IM uint8_t RESERVED1;

    union
    {
        union
        {
            __IOM uint8_t BCNT1;

            struct
            {
                __IOM uint8_t BCNT1 : 8; /*!< [7..0] The BCNT1 counter is a readable/writable 32-bit binary
                                          *   counter b15 to b8.                                                        */
            } BCNT1_b;
        };

        union
        {
            __IOM uint8_t RMINCNT;

            struct
            {
                __IOM uint8_t MIN1 : 4;  /*!< [3..0] 1-Minute Count Counts from 0 to 9 every minute. When
                                          *   a carry is generated, 1 is added to the tens place.                       */
                __IOM uint8_t MIN10 : 3;
                uint8_t             : 1;
            } RMINCNT_b;
        };
    };
    __IM uint8_t RESERVED2;

    union
    {
        union
        {
            __IOM uint8_t BCNT2;

            struct
            {
                __IOM uint8_t BCNT2 : 8; /*!< [7..0] The BCNT2 counter is a readable/writable 32-bit binary
                                          *   counter b23 to b16.                                                       */
            } BCNT2_b;
        };

        union
        {
            __IOM uint8_t RHRCNT;

            struct
            {
                __IOM uint8_t HR1 : 4;  /*!< [3..0] 1-Hour Count Counts from 0 to 9 once per hour. When a
                                         *   carry is generated, 1 is added to the tens place.                         */
                __IOM uint8_t HR10 : 2; /*!< [5..4] 10-Hour Count Counts from 0 to 2 once per carry from
                                         *   the ones place.                                                           */
                __IOM uint8_t PM : 1;
                uint8_t          : 1;
            } RHRCNT_b;
        };
    };
    __IM uint8_t RESERVED3;

    union
    {
        union
        {
            __IOM uint8_t BCNT3;

            struct
            {
                __IOM uint8_t BCNT3 : 8; /*!< [7..0] The BCNT3 counter is a readable/writable 32-bit binary
                                          *   counter b31 to b24.                                                       */
            } BCNT3_b;
        };

        union
        {
            __IOM uint8_t RWKCNT;

            struct
            {
                __IOM uint8_t DAYW : 3;
                uint8_t            : 5;
            } RWKCNT_b;
        };
    };
    __IM uint8_t RESERVED4;

    union
    {
        __IOM uint8_t RDAYCNT;

        struct
        {
            __IOM uint8_t DATE1 : 4;   /*!< [3..0] 1-Day Count Counts from 0 to 9 once per day. When a carry
                                        *   is generated, 1 is added to the tens place.                               */
            __IOM uint8_t DATE10 : 2;  /*!< [5..4] 10-Day Count Counts from 0 to 3 once per carry from the
                                        *   ones place.                                                               */
            uint8_t : 2;
        } RDAYCNT_b;
    };
    __IM uint8_t RESERVED5;

    union
    {
        __IOM uint8_t RMONCNT;

        struct
        {
            __IOM uint8_t MON1 : 4;    /*!< [3..0] 1-Month Count Counts from 0 to 9 once per month. When
                                        *   a carry is generated, 1 is added to the tens place.                       */
            __IOM uint8_t MON10 : 1;   /*!< [4..4] 10-Month Count Counts from 0 to 1 once per carry from
                                        *   the ones place.                                                           */
            uint8_t : 3;
        } RMONCNT_b;
    };
    __IM uint8_t RESERVED6;

    union
    {
        __IOM uint16_t RYRCNT;

        struct
        {
            __IOM uint16_t YR1 : 4;    /*!< [3..0] 1-Year Count Counts from 0 to 9 once per year. When a
                                        *   carry is generated, 1 is added to the tens place.                         */
            __IOM uint16_t YR10 : 4;   /*!< [7..4] 10-Year Count Counts from 0 to 9 once per carry from
                                        *   ones place. When a carry is generated in the tens place,
                                        *   1 is added to the hundreds place.                                         */
            uint16_t : 8;
        } RYRCNT_b;
    };

    union
    {
        union
        {
            __IOM uint8_t BCNT0AR;

            struct
            {
                __IOM uint8_t BCNT0AR : 8; /*!< [7..0] he BCNT0AR counter is a readable/writable alarm register
                                            *   corresponding to 32-bit binary counter b7 to b0.                          */
            } BCNT0AR_b;
        };

        union
        {
            __IOM uint8_t RSECAR;

            struct
            {
                __OM uint8_t  SEC1  : 4;
                __IOM uint8_t SEC10 : 3;
                __IOM uint8_t ENB   : 1;
            } RSECAR_b;
        };
    };
    __IM uint8_t RESERVED7;

    union
    {
        union
        {
            __IOM uint8_t BCNT1AR;

            struct
            {
                __IOM uint8_t BCNT1AR : 8; /*!< [7..0] he BCNT1AR counter is a readable/writable alarm register
                                            *   corresponding to 32-bit binary counter b15 to b8.                         */
            } BCNT1AR_b;
        };

        union
        {
            __IOM uint8_t RMINAR;

            struct
            {
                __IOM uint8_t MIN1  : 4;
                __IOM uint8_t MIN10 : 3;
                __IOM uint8_t ENB   : 1;
            } RMINAR_b;
        };
    };
    __IM uint8_t RESERVED8;

    union
    {
        union
        {
            __IOM uint8_t BCNT2AR;

            struct
            {
                __IOM uint8_t BCNT2AR : 8; /*!< [7..0] The BCNT2AR counter is a readable/writable 32-bit binary
                                            *   counter b23 to b16.                                                       */
            } BCNT2AR_b;
        };

        union
        {
            __IOM uint8_t RHRAR;

            struct
            {
                __IOM uint8_t HR1  : 4;
                __IOM uint8_t HR10 : 2;
                __IOM uint8_t PM   : 1;
                __IOM uint8_t ENB  : 1;
            } RHRAR_b;
        };
    };
    __IM uint8_t RESERVED9;

    union
    {
        union
        {
            __IOM uint8_t BCNT3AR;

            struct
            {
                __IOM uint8_t BCNT3AR : 8; /*!< [7..0] The BCNT3AR counter is a readable/writable 32-bit binary
                                            *   counter b31 to b24.                                                       */
            } BCNT3AR_b;
        };

        union
        {
            __IOM uint8_t RWKAR;

            struct
            {
                __IOM uint8_t DAYW : 3;
                uint8_t            : 4;
                __IOM uint8_t ENB  : 1;
            } RWKAR_b;
        };
    };
    __IM uint8_t RESERVED10;

    union
    {
        union
        {
            __IOM uint8_t BCNT0AER;

            struct
            {
                __IOM uint8_t ENB : 8; /*!< [7..0] The BCNT0AER register is a readable/writable register
                                        *   for setting the alarm enable corresponding to 32-bit binary
                                        *   counter b7 to b0.                                                         */
            } BCNT0AER_b;
        };

        union
        {
            __IOM uint8_t RDAYAR;

            struct
            {
                __IOM uint8_t DATE1  : 4;
                __IOM uint8_t DATE10 : 2;
                uint8_t              : 1;
                __IOM uint8_t ENB    : 1;
            } RDAYAR_b;
        };
    };
    __IM uint8_t RESERVED11;

    union
    {
        union
        {
            __IOM uint8_t BCNT1AER;

            struct
            {
                __IOM uint8_t ENB : 8; /*!< [7..0] The BCNT1AER register is a readable/writable register
                                        *   for setting the alarm enable corresponding to 32-bit binary
                                        *   counter b15 to b8.                                                        */
            } BCNT1AER_b;
        };

        union
        {
            __IOM uint8_t RMONAR;

            struct
            {
                __IOM uint8_t MON1  : 4;
                __IOM uint8_t MON10 : 1;
                uint8_t             : 2;
                __IOM uint8_t ENB   : 1;
            } RMONAR_b;
        };
    };
    __IM uint8_t RESERVED12;

    union
    {
        union
        {
            __IOM uint16_t BCNT2AER;

            struct
            {
                __IOM uint16_t ENB : 8; /*!< [7..0] The BCNT2AER register is a readable/writable register
                                         *   for setting the alarm enable corresponding to 32-bit binary
                                         *   counter b23 to b16.                                                       */
                uint16_t : 8;
            } BCNT2AER_b;
        };

        union
        {
            __IOM uint16_t RYRAR;

            struct
            {
                __IOM uint16_t YR1  : 4;
                __IOM uint16_t YR10 : 4;
                uint16_t            : 8;
            } RYRAR_b;
        };
    };

    union
    {
        union
        {
            __IOM uint8_t BCNT3AER;

            struct
            {
                __IOM uint8_t ENB : 8; /*!< [7..0] The BCNT3AER register is a readable/writable register
                                        *   for setting the alarm enable corresponding to 32-bit binary
                                        *   counter b31 to b24.                                                       */
            } BCNT3AER_b;
        };

        union
        {
            __IOM uint8_t RYRAREN;

            struct
            {
                uint8_t           : 7;
                __IOM uint8_t ENB : 1;
            } RYRAREN_b;
        };
    };
    __IM uint8_t  RESERVED13;
    __IM uint16_t RESERVED14;

    union
    {
        __IOM uint8_t RCR1;

        struct
        {
            __IOM uint8_t AIE   : 1;
            __IOM uint8_t CIE   : 1;
            __IOM uint8_t PIE   : 1;
            __IOM uint8_t RTCOS : 1;
            __IOM uint8_t PES   : 4;
        } RCR1_b;
    };
    __IM uint8_t RESERVED15;

    union
    {
        __IOM uint8_t RCR2;

        struct
        {
            __IOM uint8_t START : 1;
            __IOM uint8_t RESET : 1;
            __IOM uint8_t ADJ30 : 1;
            __IOM uint8_t RTCOE : 1;
            __IOM uint8_t AADJE : 1;   /*!< [4..4] Automatic Adjustment Enable (When the LOCO clock is selected,
                                        *   the setting of this bit is disabled.)                                     */
            __IOM uint8_t AADJP : 1;   /*!< [5..5] Automatic Adjustment Period Select (When the LOCO clock
                                        *   is selected, the setting of this bit is disabled.)                        */
            __IOM uint8_t HR24  : 1;
            __IOM uint8_t CNTMD : 1;
        } RCR2_b;
    };
    __IM uint8_t  RESERVED16;
    __IM uint16_t RESERVED17;

    union
    {
        __IOM uint8_t RCR4;

        struct
        {
            __IOM uint8_t RCKSEL : 1;
            uint8_t              : 6;
            __IOM uint8_t ROPSEL : 1;
        } RCR4_b;
    };
    __IM uint8_t RESERVED18;

    union
    {
        __IOM uint16_t RFRH;

        struct
        {
            __IOM uint16_t RFC16 : 1;  /*!< [0..0] Frequency Comparison Value (b16) To generate the operating
                                        *   clock from the LOCOclock, this bit sets the comparison
                                        *   value of the 128-Hz clock cycle.                                          */
            uint16_t : 15;
        } RFRH_b;
    };

    union
    {
        __IOM uint16_t RFRL;

        struct
        {
            __IOM uint16_t RFC : 16;   /*!< [15..0] Frequency Comparison Value(b15-b0) To generate the operating
                                        *   clock from the main clock, this bit sets the comparison
                                        *   value of the 128-Hz clock cycle.                                          */
        } RFRL_b;
    };

    union
    {
        __IOM uint8_t RADJ;

        struct
        {
            __IOM uint8_t ADJ : 6;     /*!< [5..0] Adjustment Value These bits specify the adjustment value
                                        *   from the prescaler.                                                       */
            __IOM uint8_t PMADJ : 2;
        } RADJ_b;
    };
    __IM uint8_t           RESERVED19;
    __IM uint16_t          RESERVED20[8];
    __IOM R_RTC_RTCCR_Type RTCCR[3];
    __IM uint16_t          RESERVED21[5];
    __IOM R_RTC_CP_Type    CP[3];
} R_RTC_Type;

/* =========================================================================================================================== */
/* ================                                          R_SCI0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Serial Communications Interface (R_SCI0)
 */

typedef struct
{
    union
    {
        union
        {
            __IOM uint8_t SMR;

            struct
            {
                __IOM uint8_t CKS  : 2;
                __IOM uint8_t MP   : 1;
                __IOM uint8_t STOP : 1;
                __IOM uint8_t PM   : 1;
                __IOM uint8_t PE   : 1;
                __IOM uint8_t CHR  : 1;
                __IOM uint8_t CM   : 1;
            } SMR_b;
        };

        union
        {
            __IOM uint8_t SMR_SMCI;

            struct
            {
                __IOM uint8_t CKS : 2;
                __IOM uint8_t BCP : 2;
                __IOM uint8_t PM  : 1;
                __IOM uint8_t PE  : 1;
                __IOM uint8_t BLK : 1;
                __IOM uint8_t GM  : 1;
            } SMR_SMCI_b;
        };
    };

    union
    {
        __IOM uint8_t BRR;

        struct
        {
            __IOM uint8_t BRR : 8;
        } BRR_b;
    };

    union
    {
        union
        {
            __IOM uint8_t SCR;

            struct
            {
                __IOM uint8_t CKE  : 2;
                __IOM uint8_t TEIE : 1;
                __IOM uint8_t MPIE : 1; /*!< [3..3] Multi-Processor Interrupt Enable(Valid in asynchronous
                                         *   mode when SMR.MP = 1)                                                     */
                __IOM uint8_t RE  : 1;
                __IOM uint8_t TE  : 1;
                __IOM uint8_t RIE : 1;
                __IOM uint8_t TIE : 1;
            } SCR_b;
        };

        union
        {
            __IOM uint8_t SCR_SMCI;

            struct
            {
                __IOM uint8_t CKE  : 2;
                __IOM uint8_t TEIE : 1;
                __IOM uint8_t MPIE : 1;
                __IOM uint8_t RE   : 1;
                __IOM uint8_t TE   : 1;
                __IOM uint8_t RIE  : 1;
                __IOM uint8_t TIE  : 1;
            } SCR_SMCI_b;
        };
    };

    union
    {
        __IOM uint8_t TDR;

        struct
        {
            __IOM uint8_t TDR : 8;
        } TDR_b;
    };

    union
    {
        union
        {
            __IOM uint8_t SSR;

            struct
            {
                __IOM uint8_t MPBT : 1;
                __IM uint8_t  MPB  : 1;
                __IM uint8_t  TEND : 1;
                __IOM uint8_t PER  : 1;
                __IOM uint8_t FER  : 1;
                __IOM uint8_t ORER : 1;
                __IOM uint8_t RDRF : 1;
                __IOM uint8_t TDRE : 1;
            } SSR_b;
        };

        union
        {
            __IOM uint8_t SSR_FIFO;

            struct
            {
                __IOM uint8_t DR : 1;   /*!< [0..0] Receive Data Ready flag(Valid only in asynchronous mode(including
                                         *   multi-processor) and FIFO selected)                                       */
                uint8_t            : 1;
                __IOM uint8_t TEND : 1;
                __IOM uint8_t PER  : 1;
                __IOM uint8_t FER  : 1;
                __IOM uint8_t ORER : 1;
                __IOM uint8_t RDF  : 1;
                __IOM uint8_t TDFE : 1;
            } SSR_FIFO_b;
        };

        union
        {
            __IOM uint8_t SSR_SMCI;

            struct
            {
                __IOM uint8_t MPBT : 1; /*!< [0..0] Multi-Processor Bit TransferThis bit should be 0 in smart
                                         *   card interface mode.                                                      */
                __IM uint8_t MPB : 1;   /*!< [1..1] Multi-ProcessorThis bit should be 0 in smart card interface
                                         *   mode.                                                                     */
                __IM uint8_t  TEND : 1;
                __IOM uint8_t PER  : 1;
                __IOM uint8_t ERS  : 1;
                __IOM uint8_t ORER : 1;
                __IOM uint8_t RDRF : 1;
                __IOM uint8_t TDRE : 1;
            } SSR_SMCI_b;
        };
    };

    union
    {
        __IM uint8_t RDR;

        struct
        {
            __IM uint8_t RDR : 8;
        } RDR_b;
    };

    union
    {
        __IOM uint8_t SCMR;

        struct
        {
            __IOM uint8_t SMIF : 1;
            uint8_t            : 1;
            __IOM uint8_t SINV : 1;    /*!< [2..2] Transmitted/Received Data InvertSet this bit to 0 if
                                        *   operation is to be in simple I2C mode.                                    */
            __IOM uint8_t SDIR : 1;    /*!< [3..3] Transmitted/Received Data Transfer DirectionNOTE: The
                                        *   setting is invalid and a fixed data length of 8 bits is
                                        *   used in modes other than asynchronous mode.Set this bit
                                        *   to 1 if operation is to be in simple I2C mode.                            */
            __IOM uint8_t CHR1 : 1;
            uint8_t            : 2;
            __IOM uint8_t BCP2 : 1;    /*!< [7..7] Base Clock Pulse 2Selects the number of base clock cycles
                                        *   in combination with the SMR.BCP[1:0] bits                                 */
        } SCMR_b;
    };

    union
    {
        __IOM uint8_t SEMR;

        struct
        {
            __IOM uint8_t ACS0 : 1;    /*!< [0..0] Asynchronous Mode Clock Source Select (Valid only in
                                        *   asynchronous mode).                                                       */
            __IOM uint8_t PADIS : 1;   /*!< [1..1] Preamble function Disable (Valid only in asynchronous
                                        *   mode).                                                                    */
            __IOM uint8_t BRME  : 1;
            __IOM uint8_t ABCSE : 1;   /*!< [3..3] Asynchronous Mode Extended Base Clock Select 1(Valid
                                        *   only in asynchronous mode and SCR.CKE[1]=0)                               */
            __IOM uint8_t ABCS : 1;    /*!< [4..4] Asynchronous Mode Base Clock Select(Valid only in asynchronous
                                        *   mode)                                                                     */
            __IOM uint8_t NFEN : 1;    /*!< [5..5] Digital Noise Filter Function Enable(The NFEN bit should
                                        *   be 0 without simple I2C mode and asynchronous mode.)In
                                        *   asynchronous mode, for RXDn input only. In simple I2C mode,
                                        *   for RXDn/TxDn input.                                                      */
            __IOM uint8_t BGDM : 1;    /*!< [6..6] Baud Rate Generator Double-Speed Mode Select(Only valid
                                        *   the CKE[1] bit in SCR is 0 in asynchronous mode).                         */
            __IOM uint8_t RXDESEL : 1; /*!< [7..7] Asynchronous Start Bit Edge Detection Select(Valid only
                                        *   in asynchronous mode)                                                     */
        } SEMR_b;
    };

    union
    {
        __IOM uint8_t SNFR;

        struct
        {
            __IOM uint8_t NFCS : 3;
            uint8_t            : 5;
        } SNFR_b;
    };

    union
    {
        __IOM uint8_t SIMR1;

        struct
        {
            __IOM uint8_t IICM  : 1;
            uint8_t             : 2;
            __IOM uint8_t IICDL : 5;   /*!< [7..3] SDA Delay Output SelectCycles below are of the clock
                                        *   signal from the on-chip baud rate generator.                              */
        } SIMR1_b;
    };

    union
    {
        __IOM uint8_t SIMR2;

        struct
        {
            __IOM uint8_t IICINTM : 1;
            __IOM uint8_t IICCSC  : 1;
            uint8_t               : 3;
            __IOM uint8_t IICACKT : 1;
            uint8_t               : 2;
        } SIMR2_b;
    };

    union
    {
        __IOM uint8_t SIMR3;

        struct
        {
            __IOM uint8_t IICSTAREQ  : 1;
            __IOM uint8_t IICRSTAREQ : 1;
            __IOM uint8_t IICSTPREQ  : 1;
            __IOM uint8_t IICSTIF    : 1; /*!< [3..3] Issuing of Start, Restart, or Stop Condition Completed
                                           *   Flag(When 0 is written to IICSTIF, it is cleared to 0.)                   */
            __IOM uint8_t IICSDAS : 2;
            __IOM uint8_t IICSCLS : 2;
        } SIMR3_b;
    };

    union
    {
        __IM uint8_t SISR;

        struct
        {
            __IM uint8_t IICACKR : 1;
            uint8_t              : 7;
        } SISR_b;
    };

    union
    {
        __IOM uint8_t SPMR;

        struct
        {
            __IOM uint8_t SSE    : 1;
            __IOM uint8_t CTSE   : 1;
            __IOM uint8_t MSS    : 1;
            __IOM uint8_t CSTPEN : 1;
            __IOM uint8_t MFF    : 1;
            uint8_t              : 1;
            __IOM uint8_t CKPOL  : 1;
            __IOM uint8_t CKPH   : 1;
        } SPMR_b;
    };

    union
    {
        union
        {
            __IOM uint16_t TDRHL;

            struct
            {
                __OM uint16_t TDRHL : 16;
            } TDRHL_b;
        };

        union
        {
            __OM uint16_t FTDRHL;

            struct
            {
                __OM uint16_t TDAT : 9; /*!< [8..0] Serial transmit data (Valid only in asynchronous mode(including
                                         *   multi-processor) or clock synchronous mode, and FIFO selected)            */
                __OM uint16_t MPBT : 1; /*!< [9..9] Multi-processor transfer bit flag(Valid only in asynchronous
                                         *   mode and SMR.MP=1 and FIFO selected)                                      */
                uint16_t : 6;
            } FTDRHL_b;
        };

        struct
        {
            union
            {
                __OM uint8_t FTDRH;

                struct
                {
                    __OM uint8_t TDATH : 1; /*!< [0..0] Serial transmit data (b8) (Valid only in asynchronous
                                             *   mode(including multi-processor) or clock synchronous mode,
                                             *   and FIFO selected)                                                        */
                    __OM uint8_t MPBT : 1;  /*!< [1..1] Multi-processor transfer bit flag(Valid only in asynchronous
                                             *   mode and SMR.MP=1 and FIFO selected)                                      */
                    uint8_t : 6;
                } FTDRH_b;
            };

            union
            {
                __OM uint8_t FTDRL;

                struct
                {
                    __OM uint8_t TDATL : 8; /*!< [7..0] Serial transmit data(b7-b0) (Valid only in asynchronous
                                             *   mode(including multi-processor) or clock synchronous mode,
                                             *   and FIFO selected)                                                        */
                } FTDRL_b;
            };
        };
    };

    union
    {
        union
        {
            __IM uint16_t RDRHL;

            struct
            {
                __IM uint16_t RDRHL : 16;
            } RDRHL_b;
        };

        union
        {
            __IM uint16_t FRDRHL;

            struct
            {
                __IM uint16_t RDAT : 9; /*!< [8..0] Serial receive data(Valid only in asynchronous mode(including
                                         *   multi-processor) or clock synchronous mode, and FIFO selected)            */
                __IM uint16_t MPB : 1;  /*!< [9..9] Multi-processor bit flag(Valid only in asynchronous mode
                                         *   with SMR.MP=1 and FIFO selected) It can read multi-processor
                                         *   bit corresponded to serial receive data(RDATA[8:0])                       */
                __IM uint16_t DR   : 1;
                __IM uint16_t PER  : 1;
                __IM uint16_t FER  : 1;
                __IM uint16_t ORER : 1;
                __IM uint16_t RDF  : 1;
                uint16_t           : 1;
            } FRDRHL_b;
        };

        struct
        {
            union
            {
                __IM uint8_t FRDRH;

                struct
                {
                    __IM uint8_t RDATH : 1; /*!< [0..0] Serial receive data(b8)(Valid only in asynchronous mode(including
                                             *   multi-processor) or clock synchronous mode, and FIFO selected)            */
                    __IM uint8_t MPB : 1;   /*!< [1..1] Multi-processor bit flag(Valid only in asynchronous mode
                                             *   with SMR.MP=1 and FIFO selected) It can read multi-processor
                                             *   bit corresponded to serial receive data(RDATA[8:0])                       */
                    __IM uint8_t DR   : 1;
                    __IM uint8_t PER  : 1;
                    __IM uint8_t FER  : 1;
                    __IM uint8_t ORER : 1;
                    __IM uint8_t RDF  : 1;
                    uint8_t           : 1;
                } FRDRH_b;
            };

            union
            {
                __IM uint8_t FRDRL;

                struct
                {
                    __IM uint8_t RDATL : 8; /*!< [7..0] Serial receive data(Valid only in asynchronous mode(including
                                             *   multi-processor) or clock synchronous mode, and FIFO selected)NOTE:
                                             *   When reading both of FRDRH register and FRDRL register,
                                             *   please read by an order of the FRDRH register and the FRDRL
                                             *   register.                                                                 */
                } FRDRL_b;
            };
        };
    };

    union
    {
        __IOM uint8_t MDDR;

        struct
        {
            __IOM uint8_t MDDR : 8;
        } MDDR_b;
    };

    union
    {
        __IOM uint8_t DCCR;

        struct
        {
            __IOM uint8_t DCMF  : 1;
            uint8_t             : 2;
            __IOM uint8_t DPER  : 1;
            __IOM uint8_t DFER  : 1;
            uint8_t             : 1;
            __IOM uint8_t IDSEL : 1;   /*!< [6..6] ID frame select(Valid only in asynchronous mode(including
                                        *   multi-processor)                                                          */
            __IOM uint8_t DCME : 1;    /*!< [7..7] Data Compare Match Enable(Valid only in asynchronous
                                        *   mode(including multi-processor)                                           */
        } DCCR_b;
    };

    union
    {
        __IOM uint16_t FCR;

        struct
        {
            __IOM uint16_t FM : 1;     /*!< [0..0] FIFO Mode Select(Valid only in asynchronous mode(including
                                        *   multi-processor) or clock synchronous mode)                               */
            __IOM uint16_t RFRST : 1;
            __IOM uint16_t TFRST : 1;
            __IOM uint16_t DRES  : 1;  /*!< [3..3] Receive data ready error select bit(When detecting a
                                        *   reception data ready, the interrupt request is selected.)                 */
            __IOM uint16_t TTRG : 4;   /*!< [7..4] Transmit FIFO data trigger number(Valid only in asynchronous
                                        *   mode(including multi-processor) or clock synchronous mode)                */
            __IOM uint16_t RTRG : 4;   /*!< [11..8] Receive FIFO data trigger number(Valid only in asynchronous
                                        *   mode(including multi-processor) or clock synchronous mode)                */
            __IOM uint16_t RSTRG : 4;  /*!< [15..12] RTS Output Active Trigger Number Select(Valid only
                                        *   in asynchronous mode(including multi-processor) or clock
                                        *   synchronous mode)                                                         */
        } FCR_b;
    };

    union
    {
        __IM uint16_t FDR;

        struct
        {
            __IM uint16_t R : 5;       /*!< [4..0] Receive FIFO Data CountIndicate the quantity of receive
                                        *   data stored in FRDRH and FRDRL(Valid only in asynchronous
                                        *   mode(including multi-processor) or clock synchronous mode,
                                        *   while FCR.FM=1)                                                           */
            uint16_t        : 3;
            __IM uint16_t T : 5;       /*!< [12..8] Transmit FIFO Data CountIndicate the quantity of non-transmit
                                        *   data stored in FTDRH and FTDRL(Valid only in asynchronous
                                        *   mode(including multi-processor) or clock synchronous mode,
                                        *   while FCR.FM=1)                                                           */
            uint16_t : 3;
        } FDR_b;
    };

    union
    {
        __IM uint16_t LSR;

        struct
        {
            __IM uint16_t ORER : 1;    /*!< [0..0] Overrun Error Flag (Valid only in asynchronous mode(including
                                        *   multi-processor) or clock synchronous mode, and FIFO selected)            */
            uint16_t           : 1;
            __IM uint16_t FNUM : 5;    /*!< [6..2] Framing Error CountIndicates the quantity of data with
                                        *   a framing error among the receive data stored in the receive
                                        *   FIFO data register (FRDRH and FRDRL).                                     */
            uint16_t           : 1;
            __IM uint16_t PNUM : 5;    /*!< [12..8] Parity Error CountIndicates the quantity of data with
                                        *   a parity error among the receive data stored in the receive
                                        *   FIFO data register (FRDRH and FRDRL).                                     */
            uint16_t : 3;
        } LSR_b;
    };

    union
    {
        __IOM uint16_t CDR;

        struct
        {
            __IOM uint16_t CMPD : 9;   /*!< [8..0] Compare Match DataCompare data pattern for address match
                                        *   wake-up function                                                          */
            uint16_t : 7;
        } CDR_b;
    };

    union
    {
        __IOM uint8_t SPTR;

        struct
        {
            __IM uint8_t RXDMON : 1;   /*!< [0..0] Serial input data monitor bit(The state of the RXD terminal
                                        *   is shown.)                                                                */
            __IOM uint8_t SPB2DT : 1;  /*!< [1..1] Serial port break data select bit(The output level of
                                        *   TxD terminal is selected when SCR.TE = 0.)                                */
            __IOM uint8_t SPB2IO : 1;  /*!< [2..2] Serial port break I/O bit(It's selected whether the value
                                        *   of SPB2DT is output to TxD terminal.)                                     */
            uint8_t            : 1;
            __IOM uint8_t RINV : 1;
            __IOM uint8_t TINV : 1;
            __IOM uint8_t ASEN : 1;
            __IOM uint8_t ATEN : 1;
        } SPTR_b;
    };

    union
    {
        __IOM uint8_t ACTR;

        struct
        {
            __IOM uint8_t AST : 3;
            __IOM uint8_t AJD : 1;
            __IOM uint8_t ATT : 3;
            __IOM uint8_t AET : 1;
        } ACTR_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint8_t ESMER;

        struct
        {
            __IOM uint8_t ESME : 1;
            uint8_t            : 7;
        } ESMER_b;
    };

    union
    {
        __IOM uint8_t CR0;

        struct
        {
            uint8_t             : 1;
            __IM uint8_t  SFSF  : 1;
            __IM uint8_t  RXDSF : 1;
            __IOM uint8_t BRME  : 1;
            uint8_t             : 4;
        } CR0_b;
    };

    union
    {
        __IOM uint8_t CR1;

        struct
        {
            __IOM uint8_t BFE   : 1;
            __IOM uint8_t CF0RE : 1;
            __IOM uint8_t CF1DS : 2;
            __IOM uint8_t PIBE  : 1;
            __IOM uint8_t PIBS  : 3;
        } CR1_b;
    };

    union
    {
        __IOM uint8_t CR2;

        struct
        {
            __IOM uint8_t DFCS : 3;
            uint8_t            : 1;
            __IOM uint8_t BCCS : 2;
            __IOM uint8_t RTS  : 2;
        } CR2_b;
    };

    union
    {
        __IOM uint8_t CR3;

        struct
        {
            __IOM uint8_t SDST : 1;
            uint8_t            : 7;
        } CR3_b;
    };

    union
    {
        __IOM uint8_t PCR;

        struct
        {
            __IOM uint8_t TXDXPS : 1;
            __IOM uint8_t RXDXPS : 1;
            uint8_t              : 2;
            __IOM uint8_t SHARPS : 1;
            uint8_t              : 3;
        } PCR_b;
    };

    union
    {
        __IOM uint8_t ICR;

        struct
        {
            __IOM uint8_t BFDIE  : 1;
            __IOM uint8_t CF0MIE : 1;
            __IOM uint8_t CF1MIE : 1;
            __IOM uint8_t PIBDIE : 1;
            __IOM uint8_t BCDIE  : 1;
            __IOM uint8_t AEDIE  : 1;
            uint8_t              : 2;
        } ICR_b;
    };

    union
    {
        __IM uint8_t STR;

        struct
        {
            __IM uint8_t BFDF  : 1;
            __IM uint8_t CF0MF : 1;
            __IM uint8_t CF1MF : 1;
            __IM uint8_t PIBDF : 1;
            __IM uint8_t BCDF  : 1;
            __IM uint8_t AEDF  : 1;
            uint8_t            : 2;
        } STR_b;
    };

    union
    {
        __IOM uint8_t STCR;

        struct
        {
            __IOM uint8_t BFDCL  : 1;
            __IOM uint8_t CF0MCL : 1;
            __IOM uint8_t CF1MCL : 1;
            __IOM uint8_t PIBDCL : 1;
            __IOM uint8_t BCDCL  : 1;
            __IOM uint8_t AEDCL  : 1;
            uint8_t              : 2;
        } STCR_b;
    };
    __IOM uint8_t CF0DR;

    union
    {
        __IOM uint8_t CF0CR;

        struct
        {
            __IOM uint8_t CF0CE0 : 1;
            __IOM uint8_t CF0CE1 : 1;
            __IOM uint8_t CF0CE2 : 1;
            __IOM uint8_t CF0CE3 : 1;
            __IOM uint8_t CF0CE4 : 1;
            __IOM uint8_t CF0CE5 : 1;
            __IOM uint8_t CF0CE6 : 1;
            __IOM uint8_t CF0CE7 : 1;
        } CF0CR_b;
    };
    __IOM uint8_t CF0RR;
    __IOM uint8_t PCF1DR;
    __IOM uint8_t SCF1DR;

    union
    {
        __IOM uint8_t CF1CR;

        struct
        {
            __IOM uint8_t CF1CE0 : 1;
            __IOM uint8_t CF1CE1 : 1;
            __IOM uint8_t CF1CE2 : 1;
            __IOM uint8_t CF1CE3 : 1;
            __IOM uint8_t CF1CE4 : 1;
            __IOM uint8_t CF1CE5 : 1;
            __IOM uint8_t CF1CE6 : 1;
            __IOM uint8_t CF1CE7 : 1;
        } CF1CR_b;
    };
    __IOM uint8_t CF1RR;

    union
    {
        __IOM uint8_t TCR;

        struct
        {
            __IOM uint8_t TCST : 1;
            uint8_t            : 7;
        } TCR_b;
    };

    union
    {
        __IOM uint8_t TMR;

        struct
        {
            __IOM uint8_t TOMS : 2;
            uint8_t            : 1;
            __IOM uint8_t TWRC : 1;
            __IOM uint8_t TCSS : 3;
            uint8_t            : 1;
        } TMR_b;
    };
    __IOM uint8_t TPRE;
    __IOM uint8_t TCNT;
} R_SCI0_Type;

/* =========================================================================================================================== */
/* ================                                          R_SDHI0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief SD/MMC Host Interface (R_SDHI0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t SD_CMD;

        struct
        {
            __IOM uint32_t CMDIDX : 6;  /*!< [5..0] Command IndexThese bits specify Command Format[45:40]
                                         *   (command index).[Examples]CMD6: SD_CMD[7:0] = 8'b00_000110CMD18:
                                         *   SD_CMD[7:0] = 8'b00_010010ACMD13: SD_CMD[7:0] = 8'b01_001101              */
            __IOM uint32_t ACMD  : 2;
            __IOM uint32_t RSPTP : 3;   /*!< [10..8] Mode/Response TypeNOTE: As some commands cannot be used
                                         *   in normal mode, see section 1.4.10, Example of SD_CMD Register
                                         *   Setting to select mode/response type.                                     */
            __IOM uint32_t CMDTP : 1;
            __IOM uint32_t CMDRW : 1;   /*!< [12..12] Write/Read Mode (enabled when the command with data
                                         *   is handled)                                                               */
            __IOM uint32_t TRSTP : 1;   /*!< [13..13] Single/Multiple Block Transfer (enabled when the command
                                         *   with data is handled)                                                     */
            __IOM uint32_t CMD12AT : 2; /*!< [15..14] Multiple Block Transfer Mode (enabled at multiple block
                                         *   transfer)                                                                 */
            uint32_t : 16;
        } SD_CMD_b;
    };
    __IM uint32_t RESERVED;

    union
    {
        __IOM uint32_t SD_ARG;

        struct
        {
            __IOM uint32_t SD_ARG : 32;
        } SD_ARG_b;
    };

    union
    {
        __IOM uint32_t SD_ARG1;

        struct
        {
            __IOM uint32_t SD_ARG1 : 16;
            uint32_t               : 16;
        } SD_ARG1_b;
    };

    union
    {
        __IOM uint32_t SD_STOP;

        struct
        {
            __IOM uint32_t STP : 1;    /*!< [0..0] Stop- When STP is set to 1 during multiple block transfer,
                                        *   CMD12 is issued to halt the transfer through the SD host
                                        *   interface.However, if a command sequence is halted because
                                        *   of a communications error or timeout, CMD12 is not issued.
                                        *   Although continued buffer access is possible even after
                                        *   STP has been set to 1, the buffer access error bit (ERR5
                                        *   or ERR4) in SD_INFO2 will be set accordingly.- When STP
                                        *   has been set to 1 during transfer for single block write,
                                        *   the access end flag is set when SD_BUF becomes emp                        */
            uint32_t           : 7;
            __IOM uint32_t SEC : 1;    /*!< [8..8] Block Count EnableSet SEC to 1 at multiple block transfer.When
                                        *   SD_CMD is set as follows to start the command sequence
                                        *   while SEC is set to 1, CMD12 is automatically issued to
                                        *   stop multi-block transfer with the number of blocks which
                                        *   is set to SD_SECCNT.1. CMD18 or CMD25 in normal mode (SD_CMD[10:8]
                                        *   = 000)2. SD_CMD[15:13] = 001 in extended mode (CMD12 is
                                        *   automatically issued, multiple block transfer)When the
                                        *   command sequence is halted because of a communications
                                        *   error or timeout, CMD12 is not automatically i                            */
            uint32_t : 23;
        } SD_STOP_b;
    };

    union
    {
        __IOM uint32_t SD_SECCNT;

        struct
        {
            __IOM uint32_t SD_SECCNT : 32; /*!< [31..0] Number of Transfer BlocksNOTE: Do not change the value
                                            *   of this bit when the CBSY bit in SD_INFO2 is set to 1.                    */
        } SD_SECCNT_b;
    };

    union
    {
        __IM uint32_t SD_RSP10;

        struct
        {
            __IM uint32_t SD_RSP10 : 32;
        } SD_RSP10_b;
    };

    union
    {
        __IM uint32_t SD_RSP1;

        struct
        {
            __IM uint32_t SD_RSP1 : 16;
            uint32_t              : 16;
        } SD_RSP1_b;
    };

    union
    {
        __IM uint32_t SD_RSP32;

        struct
        {
            __IM uint32_t SD_RSP32 : 32;
        } SD_RSP32_b;
    };

    union
    {
        __IM uint32_t SD_RSP3;

        struct
        {
            __IM uint32_t SD_RSP3 : 16;
            uint32_t              : 16;
        } SD_RSP3_b;
    };

    union
    {
        __IM uint32_t SD_RSP54;

        struct
        {
            __IM uint32_t SD_RSP54 : 32;
        } SD_RSP54_b;
    };

    union
    {
        __IM uint32_t SD_RSP5;

        struct
        {
            __IM uint32_t SD_RSP5 : 16;
            uint32_t              : 16;
        } SD_RSP5_b;
    };

    union
    {
        __IM uint32_t SD_RSP76;

        struct
        {
            __IM uint32_t SD_RSP76 : 24;
            uint32_t               : 8;
        } SD_RSP76_b;
    };

    union
    {
        __IM uint32_t SD_RSP7;

        struct
        {
            __IM uint32_t SD_RSP7 : 8;
            uint32_t              : 24;
        } SD_RSP7_b;
    };

    union
    {
        __IOM uint32_t SD_INFO1;

        struct
        {
            __IOM uint32_t RSPEND  : 1;
            uint32_t               : 1;
            __IOM uint32_t ACEND   : 1;
            __IOM uint32_t SDCDRM  : 1;
            __IOM uint32_t SDCDIN  : 1;
            __IM uint32_t  SDCDMON : 1;
            uint32_t               : 1;
            __IM uint32_t  SDWPMON : 1;
            __IOM uint32_t SDD3RM  : 1;
            __IOM uint32_t SDD3IN  : 1;
            __IM uint32_t  SDD3MON : 1;
            uint32_t               : 21;
        } SD_INFO1_b;
    };

    union
    {
        __IOM uint32_t SD_INFO2;

        struct
        {
            __IOM uint32_t CMDE    : 1;
            __IOM uint32_t CRCE    : 1;
            __IOM uint32_t ENDE    : 1;
            __IOM uint32_t DTO     : 1;
            __IOM uint32_t ILW     : 1;
            __IOM uint32_t ILR     : 1;
            __IOM uint32_t RSPTO   : 1;
            __IM uint32_t  SDD0MON : 1;      /*!< [7..7] SDDAT0Indicates the SDDAT0 state of the port specified
                                              *   by SD_PORTSEL.                                                            */
            __IOM uint32_t BRE          : 1;
            __IOM uint32_t BWE          : 1;
            uint32_t                    : 3;
            __IM uint32_t SD_CLK_CTRLEN : 1; /*!< [13..13] When a command sequence is started by writing to SD_CMD,
                                              *   the CBSY bit is set to 1 and, at the same time, the SCLKDIVEN
                                              *   bit is set to 0. The SCLKDIVEN bit is set to 1 after 8
                                              *   cycles of SDCLK have elapsed after setting of the CBSY
                                              *   bit to 0 due to completion of the command sequence.                       */
            __IM uint32_t  CBSY : 1;
            __IOM uint32_t ILA  : 1;
            uint32_t            : 16;
        } SD_INFO2_b;
    };

    union
    {
        __IOM uint32_t SD_INFO1_MASK;

        struct
        {
            __IOM uint32_t RSPENDM : 1;
            uint32_t               : 1;
            __IOM uint32_t ACENDM  : 1;
            __IOM uint32_t SDCDRMM : 1;
            __IOM uint32_t SDCDINM : 1;
            uint32_t               : 3;
            __IOM uint32_t SDD3RMM : 1;
            __IOM uint32_t SDD3INM : 1;
            uint32_t               : 22;
        } SD_INFO1_MASK_b;
    };

    union
    {
        __IOM uint32_t SD_INFO2_MASK;

        struct
        {
            __IOM uint32_t CMDEM  : 1;
            __IOM uint32_t CRCEM  : 1;
            __IOM uint32_t ENDEM  : 1;
            __IOM uint32_t DTOM   : 1;
            __IOM uint32_t ILWM   : 1;
            __IOM uint32_t ILRM   : 1;
            __IOM uint32_t RSPTOM : 1;
            uint32_t              : 1;
            __IOM uint32_t BREM   : 1;
            __IOM uint32_t BWEM   : 1;
            uint32_t              : 5;
            __IOM uint32_t ILAM   : 1;
            uint32_t              : 16;
        } SD_INFO2_MASK_b;
    };

    union
    {
        __IOM uint32_t SD_CLK_CTRL;

        struct
        {
            __IOM uint32_t CLKSEL    : 8;
            __IOM uint32_t CLKEN     : 1;
            __IOM uint32_t CLKCTRLEN : 1;
            uint32_t                 : 22;
        } SD_CLK_CTRL_b;
    };

    union
    {
        __IOM uint32_t SD_SIZE;

        struct
        {
            __IOM uint32_t LEN : 10;   /*!< [9..0] Transfer Data SizeThese bits specify a size between 1
                                        *   and 512 bytes for the transfer of single blocks.In cases
                                        *   of multiple block transfer with automatic issuing of CMD12
                                        *   (CMD18 and CMD25), the only specifiable transfer data size
                                        *   is 512 bytes. Furthermore, in cases of multiple block transfer
                                        *   without automatic issuing of CMD12, as well as 512 bytes,
                                        *   32, 64, 128, and 256 bytes are specifiable. However, in
                                        *   the reading of 32, 64, 128, and 256 bytes for the transfer
                                        *   of multiple blocks, this is restricted to mult                            */
            uint32_t : 22;
        } SD_SIZE_b;
    };

    union
    {
        __IOM uint32_t SD_OPTION;

        struct
        {
            __IOM uint32_t CTOP     : 4;
            __IOM uint32_t TOP      : 4;
            __IOM uint32_t TOUTMASK : 1; /*!< [8..8] Timeout MASKWhen timeout occurs in case of inactivating
                                          *   timeout, software reset should be executed to terminate
                                          *   command sequence.                                                         */
            uint32_t              : 4;
            __IOM uint32_t WIDTH8 : 1;
            uint32_t              : 1;
            __IOM uint32_t WIDTH  : 1;   /*!< [15..15] Bus WidthNOTE: The initial value is applied at a reset
                                          *   and when the SOFT_RST.SDRST flag is 0.                                    */
            uint32_t : 16;
        } SD_OPTION_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IM uint32_t SD_ERR_STS1;

        struct
        {
            __IM uint32_t CMDE0 : 1;    /*!< [0..0] Command Error 0NOTE: other than a response to a command
                                         *   issued within a command sequence                                          */
            __IM uint32_t CMDE1 : 1;    /*!< [1..1] Command Error 1NOTE: In cases where CMD12 is issued by
                                         *   setting a command index in SD_CMD, this is Indicated in
                                         *   CMDE0.                                                                    */
            __IM uint32_t RSPLENE0 : 1; /*!< [2..2] Response Length Error 0NOTE: other than a response to
                                         *   a command issued within a command sequence                                */
            __IM uint32_t RSPLENE1 : 1; /*!< [3..3] Response Length Error 1NOTE: In cases where CMD12 is
                                         *   issued by setting a command index in SD_CMD, this is indicated
                                         *   in RSPLENE0.                                                              */
            __IM uint32_t RDLENE   : 1;
            __IM uint32_t CRCLENE  : 1;
            uint32_t               : 2;
            __IM uint32_t RSPCRCE0 : 1; /*!< [8..8] Response CRC Error 0NOTE: other than a response to a
                                         *   command issued within a command sequence                                  */
            __IM uint32_t RSPCRCE1 : 1; /*!< [9..9] Response CRC Error 1NOTE: In cases where CMD12 is issued
                                         *   by setting a command index in SD_CMD, this is indicated
                                         *   in RSPCRCE0.                                                              */
            __IM uint32_t RDCRCE : 1;
            __IM uint32_t CRCTKE : 1;
            __IM uint32_t CRCTK  : 3;   /*!< [14..12] CRC Status TokenStore the CRC status token value (normal
                                         *   value is 010b)                                                            */
            uint32_t : 17;
        } SD_ERR_STS1_b;
    };

    union
    {
        __IM uint32_t SD_ERR_STS2;

        struct
        {
            __IM uint32_t RSPTO0   : 1;
            __IM uint32_t RSPTO1   : 1;
            __IM uint32_t BSYTO0   : 1;
            __IM uint32_t BSYTO1   : 1;
            __IM uint32_t RDTO     : 1;
            __IM uint32_t CRCTO    : 1;
            __IM uint32_t CRCBSYTO : 1;
            uint32_t               : 25;
        } SD_ERR_STS2_b;
    };

    union
    {
        __IOM uint32_t SD_BUF0;

        struct
        {
            __IOM uint32_t SD_BUF : 32; /*!< [31..0] SD Buffer RegisterWhen writing to the SD card, the write
                                         *   data is written to this register. When reading from the
                                         *   SD card, the read data is read from this register. This
                                         *   register is internally connected to two 512-byte buffers.If
                                         *   both buffers are not empty when executing multiple block
                                         *   read, SD/MMC clock is stopped to suspend receiving data.
                                         *   When one of buffers is empty, SD/MMC clock is supplied
                                         *   to resume receiving data.                                                 */
        } SD_BUF0_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t SDIO_MODE;

        struct
        {
            __IOM uint32_t INTEN  : 1;
            uint32_t              : 1;
            __IOM uint32_t RWREQ  : 1;
            uint32_t              : 5;
            __IOM uint32_t IOABT  : 1;
            __IOM uint32_t C52PUB : 1;
            uint32_t              : 22;
        } SDIO_MODE_b;
    };

    union
    {
        __IOM uint32_t SDIO_INFO1;

        struct
        {
            __IOM uint32_t IOIRQ   : 1;
            uint32_t               : 13;
            __IOM uint32_t EXPUB52 : 1;
            __IOM uint32_t EXWT    : 1;
            uint32_t               : 16;
        } SDIO_INFO1_b;
    };

    union
    {
        __IOM uint32_t SDIO_INFO1_MASK;

        struct
        {
            __IOM uint32_t IOIRQM   : 1;
            uint32_t                : 13;
            __IOM uint32_t EXPUB52M : 1;
            __IOM uint32_t EXWTM    : 1;
            uint32_t                : 16;
        } SDIO_INFO1_MASK_b;
    };
    __IM uint32_t RESERVED3[79];

    union
    {
        __IOM uint32_t SD_DMAEN;

        struct
        {
            uint32_t             : 1;
            __IOM uint32_t DMAEN : 1;
            uint32_t             : 30;
        } SD_DMAEN_b;
    };
    __IM uint32_t RESERVED4[3];

    union
    {
        __IOM uint32_t SOFT_RST;

        struct
        {
            __IOM uint32_t SDRST : 1;
            uint32_t             : 31;
        } SOFT_RST_b;
    };
    __IM uint32_t RESERVED5[2];

    union
    {
        __IOM uint32_t SDIF_MODE;

        struct
        {
            uint32_t               : 8;
            __IOM uint32_t NOCHKCR : 1;
            uint32_t               : 23;
        } SDIF_MODE_b;
    };
    __IM uint32_t RESERVED6[4];

    union
    {
        __IOM uint32_t EXT_SWAP;

        struct
        {
            uint32_t             : 6;
            __IOM uint32_t BWSWP : 1;
            __IOM uint32_t BRSWP : 1;
            uint32_t             : 24;
        } EXT_SWAP_b;
    };
} R_SDHI0_Type;

/* =========================================================================================================================== */
/* ================                                          R_SPI0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Serial Peripheral Interface (R_SPI0)
 */

typedef struct
{
    union
    {
        __IOM uint8_t SPCR;

        struct
        {
            __IOM uint8_t SPMS   : 1;
            __IOM uint8_t TXMD   : 1;
            __IOM uint8_t MODFEN : 1;
            __IOM uint8_t MSTR   : 1;
            __IOM uint8_t SPEIE  : 1;
            __IOM uint8_t SPTIE  : 1;
            __IOM uint8_t SPE    : 1;
            __IOM uint8_t SPRIE  : 1;
        } SPCR_b;
    };

    union
    {
        __IOM uint8_t SSLP;

        struct
        {
            __IOM uint8_t SSL0P : 1;
            __IOM uint8_t SSL1P : 1;
            __IOM uint8_t SSL2P : 1;
            __IOM uint8_t SSL3P : 1;
            __IOM uint8_t SSL4P : 1;
            __IOM uint8_t SSL5P : 1;
            __IOM uint8_t SSL6P : 1;
            __IOM uint8_t SSL7P : 1;
        } SSLP_b;
    };

    union
    {
        __IOM uint8_t SPPCR;

        struct
        {
            __IOM uint8_t SPLP  : 1;
            __IOM uint8_t SPLP2 : 1;
            uint8_t             : 2;
            __IOM uint8_t MOIFV : 1;
            __IOM uint8_t MOIFE : 1;
            uint8_t             : 2;
        } SPPCR_b;
    };

    union
    {
        __IOM uint8_t SPSR;

        struct
        {
            __IOM uint8_t OVRF  : 1;
            __IM uint8_t  IDLNF : 1;
            __IOM uint8_t MODF  : 1;
            __IOM uint8_t PERF  : 1;
            __IOM uint8_t UDRF  : 1;
            __IOM uint8_t SPTEF : 1;
            __IOM uint8_t CENDF : 1;
            __IOM uint8_t SPRF  : 1;
        } SPSR_b;
    };

    union
    {
        __IOM uint32_t SPDR;
        __IOM uint16_t SPDR_HA;
        __IOM uint8_t  SPDR_BY;
    };

    union
    {
        __IOM uint8_t SPSCR;

        struct
        {
            __IOM uint8_t SPSLN : 3;   /*!< [2..0] RSPI Sequence Length SpecificationThe order in which
                                        *   the SPCMD0 to SPCMD07 registers are to be referenced is
                                        *   changed in accordance with the sequence length that is
                                        *   set in these bits. The relationship among the setting of
                                        *   these bits, sequence length, and SPCMD0 to SPCMD7 registers
                                        *   referenced by the RSPI is shown above. However, the RSPI
                                        *   in slave mode always references SPCMD0.                                   */
            uint8_t : 5;
        } SPSCR_b;
    };

    union
    {
        __IM uint8_t SPSSR;

        struct
        {
            __IM uint8_t SPCP  : 3;
            uint8_t            : 1;
            __IM uint8_t SPECM : 3;
            uint8_t            : 1;
        } SPSSR_b;
    };

    union
    {
        __IOM uint8_t SPBR;

        struct
        {
            __IOM uint8_t SPR : 8;
        } SPBR_b;
    };

    union
    {
        __IOM uint8_t SPDCR;

        struct
        {
            __IOM uint8_t SPFC   : 2;
            __IOM uint8_t SLSEL  : 2;
            __IOM uint8_t SPRDTD : 1;
            __IOM uint8_t SPLW   : 1;
            __IOM uint8_t SPBYT  : 1;
            uint8_t              : 1;
        } SPDCR_b;
    };

    union
    {
        __IOM uint8_t SPCKD;

        struct
        {
            __IOM uint8_t SCKDL : 3;
            uint8_t             : 5;
        } SPCKD_b;
    };

    union
    {
        __IOM uint8_t SSLND;

        struct
        {
            __IOM uint8_t SLNDL : 3;
            uint8_t             : 5;
        } SSLND_b;
    };

    union
    {
        __IOM uint8_t SPND;

        struct
        {
            __IOM uint8_t SPNDL : 3;
            uint8_t             : 5;
        } SPND_b;
    };

    union
    {
        __IOM uint8_t SPCR2;

        struct
        {
            __IOM uint8_t SPPE   : 1;
            __IOM uint8_t SPOE   : 1;
            __IOM uint8_t SPIIE  : 1;
            __IOM uint8_t PTE    : 1;
            __IOM uint8_t SCKASE : 1;
            __IOM uint8_t SPTDDL : 3;
        } SPCR2_b;
    };

    union
    {
        __IOM uint16_t SPCMD[8];

        struct
        {
            __IOM uint16_t CPHA   : 1;
            __IOM uint16_t CPOL   : 1;
            __IOM uint16_t BRDV   : 2;
            __IOM uint16_t SSLA   : 3;
            __IOM uint16_t SSLKP  : 1;
            __IOM uint16_t SPB    : 4;
            __IOM uint16_t LSBF   : 1;
            __IOM uint16_t SPNDEN : 1;
            __IOM uint16_t SLNDEN : 1;
            __IOM uint16_t SCKDEN : 1;
        } SPCMD_b[8];
    };

    union
    {
        __IOM uint8_t SPDCR2;

        struct
        {
            __IOM uint8_t BYSW : 1;
            __IOM uint8_t SINV : 1;
            uint8_t            : 6;
        } SPDCR2_b;
    };

    union
    {
        __IOM uint8_t SPCR3;

        struct
        {
            __IOM uint8_t ETXMD  : 1;
            __IOM uint8_t BFDS   : 1;
            uint8_t              : 2;
            __IOM uint8_t CENDIE : 1;
            uint8_t              : 3;
        } SPCR3_b;
    };
    __IM uint16_t RESERVED;
    __IM uint32_t RESERVED1[6];
    __IM uint16_t RESERVED2;

    union
    {
        __IOM uint16_t SPPR;

        struct
        {
            uint16_t              : 4;
            __IOM uint16_t BUFWID : 1;
            uint16_t              : 3;
            __IOM uint16_t BUFNUM : 3;
            uint16_t              : 1;
            __IOM uint16_t CMDNUM : 4;
        } SPPR_b;
    };
} R_SPI0_Type;

/* =========================================================================================================================== */
/* ================                                          R_SRAM                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief SRAM (R_SRAM)
 */

typedef struct
{
    union
    {
        __IOM uint16_t SRAMPRCR;

        struct
        {
            __IOM uint16_t PR : 1;
            uint16_t          : 7;
            __OM uint16_t KW  : 8;
        } SRAMPRCR_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t SRAMPRCR_NS;

        struct
        {
            __IOM uint16_t PR : 1;
            uint16_t          : 7;
            __OM uint16_t KW  : 8;
        } SRAMPRCR_NS_b;
    };
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint8_t SRAMWTSC;

        struct
        {
            __IOM uint8_t WTEN : 1;
            uint8_t            : 7;
        } SRAMWTSC_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3;
    __IM uint32_t RESERVED4;

    union
    {
        __IOM uint8_t SRAMCR0;

        struct
        {
            __IOM uint8_t OAD     : 1;
            uint8_t               : 1;
            __IOM uint8_t ECCMOD  : 2;
            __IOM uint8_t E1STSEN : 1;
            uint8_t               : 2;
            __IOM uint8_t TSTBYP  : 1;
        } SRAMCR0_b;
    };
    __IM uint8_t  RESERVED5;
    __IM uint16_t RESERVED6;

    union
    {
        __IOM uint8_t SRAMCR1;

        struct
        {
            __IOM uint8_t OAD : 1;
            uint8_t           : 7;
        } SRAMCR1_b;
    };
    __IM uint8_t  RESERVED7;
    __IM uint16_t RESERVED8;
    __IM uint32_t RESERVED9[6];

    union
    {
        __IOM uint8_t SRAMECCRGN0;

        struct
        {
            __IOM uint8_t ECCRGN : 2;
            uint8_t              : 6;
        } SRAMECCRGN0_b;
    };
    __IM uint8_t  RESERVED10;
    __IM uint16_t RESERVED11;
    __IM uint32_t RESERVED12[3];

    union
    {
        __IM uint16_t SRAMESR;

        struct
        {
            __IM uint16_t ERR00 : 1;
            __IM uint16_t ERR01 : 1;
            __IM uint16_t ERR1  : 1;
            uint16_t            : 11;
            __IM uint16_t ERRS  : 1;
            uint16_t            : 1;
        } SRAMESR_b;
    };
    __IM uint16_t RESERVED13;
    __IM uint32_t RESERVED14;

    union
    {
        __IOM uint16_t SRAMESCLR;

        struct
        {
            __IOM uint16_t CLR00 : 1;
            __IOM uint16_t CLR01 : 1;
            __IOM uint16_t CLR1  : 1;
            uint16_t             : 11;
            __IOM uint16_t CLRS  : 1;
            uint16_t             : 1;
        } SRAMESCLR_b;
    };
    __IM uint16_t RESERVED15;
    __IM uint32_t RESERVED16;

    union
    {
        __IM uint32_t SRAMEAR0;

        struct
        {
            uint32_t         : 3;
            __IM uint32_t EA : 17;
            uint32_t         : 12;
        } SRAMEAR0_b;
    };

    union
    {
        __IM uint32_t SRAMEAR1;

        struct
        {
            uint32_t         : 3;
            __IM uint32_t EA : 17;
            uint32_t         : 12;
        } SRAMEAR1_b;
    };

    union
    {
        __IM uint32_t SRAMEAR2;

        struct
        {
            uint32_t         : 3;
            __IM uint32_t EA : 17;
            uint32_t         : 12;
        } SRAMEAR2_b;
    };
    __IM uint32_t RESERVED17[45];

    union
    {
        __IOM uint8_t STBRAMCR;

        struct
        {
            __IOM uint8_t OAD : 1;
            uint8_t           : 7;
        } STBRAMCR_b;
    };
    __IM uint8_t  RESERVED18;
    __IM uint16_t RESERVED19;
    __IM uint32_t RESERVED20[15];

    union
    {
        __IM uint32_t STBRAMEAR;

        struct
        {
            uint32_t         : 2;
            __IM uint32_t EA : 8;
            uint32_t         : 22;
        } STBRAMEAR_b;
    };
} R_SRAM_Type;

/* =========================================================================================================================== */
/* ================                                          R_SSI0                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Serial Sound Interface Enhanced (SSIE) (R_SSI0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t SSICR;

        struct
        {
            __IOM uint32_t REN  : 1;
            __IOM uint32_t TEN  : 1;
            uint32_t            : 1;
            __IOM uint32_t MUEN : 1;   /*!< [3..3] Mute EnableNOTE: When this module is muted, the value
                                        *   of outputting serial data is rewritten to 0 but data transmission
                                        *   is not stopped. Write dummy data to the SSIFTDR not to
                                        *   generate a transmit underflow because the number of data
                                        *   in the transmit FIFO is decreasing.                                       */
            __IOM uint32_t CKDV  : 4;
            __IOM uint32_t DEL   : 1;
            __IOM uint32_t PDTA  : 1;
            __IOM uint32_t SDTA  : 1;
            __IOM uint32_t SPDP  : 1;
            __IOM uint32_t LRCKP : 1;
            __IOM uint32_t BCKP  : 1;
            __IOM uint32_t MST   : 1;  /*!< [14..14] Serial WS Direction NOTE: Only the following settings
                                        *   are allowed: (SCKD, SWSD) = (0, 0) and (1, 1). Other settings
                                        *   are prohibited.                                                           */
            uint32_t           : 1;
            __IOM uint32_t SWL : 3;    /*!< [18..16] System Word LengthSet the system word length to the
                                        *   bit clock frequency/2 fs.                                                 */
            __IOM uint32_t DWL   : 3;
            __IOM uint32_t FRM   : 2;
            uint32_t             : 1;
            __IOM uint32_t IIEN  : 1;
            __IOM uint32_t ROIEN : 1;
            __IOM uint32_t RUIEN : 1;
            __IOM uint32_t TOIEN : 1;
            __IOM uint32_t TUIEN : 1;
            __IOM uint32_t CKS   : 1;
            uint32_t             : 1;
        } SSICR_b;
    };

    union
    {
        __IOM uint32_t SSISR;

        struct
        {
            __IM uint32_t IDST   : 1;
            __IM uint32_t RSWNO  : 1;
            __IM uint32_t RCHNO  : 2;
            __IM uint32_t TSWNO  : 1;
            __IM uint32_t TCHNO  : 2;
            uint32_t             : 18;
            __IM uint32_t  IIRQ  : 1;
            __IOM uint32_t ROIRQ : 1;  /*!< [26..26] Receive Overflow Error Interrupt Status Flag NOTE:
                                        *   Writable only to clear the flag. Confirm the value is 1
                                        *   and then write 0.                                                         */
            __IOM uint32_t RUIRQ : 1;  /*!< [27..27] Receive Underflow Error Interrupt Status Flag NOTE:
                                        *   Writable only to clear the flag. Confirm the value is 1
                                        *   and then write 0.                                                         */
            __IOM uint32_t TOIRQ : 1;  /*!< [28..28] Transmit Overflow Error Interrupt Status Flag NOTE:
                                        *   Writable only to clear the flag. Confirm the value is 1
                                        *   and then write 0.                                                         */
            __IOM uint32_t TUIRQ : 1;  /*!< [29..29] Transmit Underflow Error Interrupt Status Flag NOTE:
                                        *   Writable only to clear the flag. Confirm the value is 1
                                        *   and then write 0.                                                         */
            uint32_t : 2;
        } SSISR_b;
    };
    __IM uint32_t RESERVED[2];

    union
    {
        __IOM uint32_t SSIFCR;

        struct
        {
            __IOM uint32_t RFRST : 1;
            __IOM uint32_t TFRST : 1;
            __IOM uint32_t RIE   : 1;  /*!< [2..2] Receive Interrupt Enable NOTE: RXI can be cleared by
                                        *   clearing either the RDF flag (see the description of the
                                        *   RDF bit for details) or RIE bit.                                          */
            __IOM uint32_t TIE : 1;    /*!< [3..3] Transmit Interrupt Enable NOTE: TXI can be cleared by
                                        *   clearing either the TDE flag (see the description of the
                                        *   TDE bit for details) or TIE bit.                                          */
            __IOM uint32_t RTRG : 2;
            __IOM uint32_t TTRG : 2;   /*!< [7..6] Transmit Data Trigger Number NOTE: The values in parenthesis
                                        *   are the number of empty stages in SSIFTDR at which the
                                        *   TDE flag is set.                                                          */
            uint32_t              : 3;
            __IOM uint32_t BSW    : 1;
            uint32_t              : 4;
            __IOM uint32_t SSIRST : 1;
            uint32_t              : 14;
            __IOM uint32_t AUCKE  : 1;
        } SSIFCR_b;
    };

    union
    {
        __IOM uint32_t SSIFSR;

        struct
        {
            __IOM uint32_t RDF : 1;    /*!< [0..0] Receive Data Full Flag NOTE: Since the SSIFRDR register
                                        *   is a 32-byte FIFO register, the maximum number of data
                                        *   bytes that can be read from it while the RDF flag is 1
                                        *   is indicated in the RDC[3:0] flags. If reading data from
                                        *   the SSIFRDR register is continued after all the data is
                                        *   read, undefined values will be read.                                      */
            uint32_t          : 7;
            __IM uint32_t RDC : 6;     /*!< [13..8] Receive Data Indicate Flag(Indicates the number of data
                                        *   units stored in SSIFRDR)                                                  */
            uint32_t           : 2;
            __IOM uint32_t TDE : 1;    /*!< [16..16] Transmit Data Empty Flag NOTE: Since the SSIFTDR register
                                        *   is a 32-byte FIFO register, the maximum number of bytes
                                        *   that can be written to it while the TDE flag is 1 is 8
                                        *   - TDC[3:0]. If writing data to the SSIFTDR register is
                                        *   continued after all the data is written, writing will be
                                        *   invalid and an overflow occurs.                                           */
            uint32_t          : 7;
            __IM uint32_t TDC : 6;     /*!< [29..24] Transmit Data Indicate Flag(Indicates the number of
                                        *   data units stored in SSIFTDR)                                             */
            uint32_t : 2;
        } SSIFSR_b;
    };

    union
    {
        union
        {
            __OM uint32_t SSIFTDR;

            struct
            {
                __OM uint32_t SSIFTDR : 32; /*!< [31..0] SSIFTDR is a write-only FIFO register consisting of
                                             *   eight stages of 32-bit registers for storing data to be
                                             *   serially transmitted. NOTE: that when the SSIFTDR register
                                             *   is full of data (32 bytes), the next data cannot be written
                                             *   to it. If writing is attempted, it will be ignored and
                                             *   an overflow occurs.                                                       */
            } SSIFTDR_b;
        };
        __OM uint16_t SSIFTDR16;
        __OM uint8_t  SSIFTDR8;
    };

    union
    {
        union
        {
            __IM uint32_t SSIFRDR;

            struct
            {
                __IM uint32_t SSIFRDR : 32; /*!< [31..0] SSIFRDR is a read-only FIFO register consisting of eight
                                             *   stages of 32-bit registers for storing serially received
                                             *   data.                                                                     */
            } SSIFRDR_b;
        };
        __IM uint16_t SSIFRDR16;
        __IM uint8_t  SSIFRDR8;
    };

    union
    {
        __IOM uint32_t SSIOFR;

        struct
        {
            __IOM uint32_t OMOD    : 2;
            uint32_t               : 6;
            __IOM uint32_t LRCONT  : 1;
            __IOM uint32_t BCKASTP : 1; /*!< [9..9] Whether to Enable Stopping BCK Output When SSIE is in
                                         *   Idle Status                                                               */
            uint32_t : 22;
        } SSIOFR_b;
    };

    union
    {
        __IOM uint32_t SSISCR;

        struct
        {
            __IOM uint32_t RDFS : 5;
            uint32_t            : 3;
            __IOM uint32_t TDES : 5;
            uint32_t            : 19;
        } SSISCR_b;
    };
} R_SSI0_Type;

/* =========================================================================================================================== */
/* ================                                         R_SYSTEM                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief System Pins (R_SYSTEM)
 */

typedef struct
{
    __IM uint32_t RESERVED[3];

    union
    {
        __IOM uint8_t SBYCR;

        struct
        {
            uint8_t           : 6;
            __IOM uint8_t OPE : 1;
            uint8_t           : 1;
        } SBYCR_b;
    };
    __IM uint8_t RESERVED1;

    union
    {
        __IOM uint8_t SSCR2;

        struct
        {
            __IM uint8_t SS1RSF : 1;
            uint8_t             : 7;
        } SSCR2_b;
    };
    __IM uint8_t RESERVED2;

    union
    {
        __IOM uint8_t FLSCR;

        struct
        {
            __IOM uint8_t FLSWCF : 1;
            uint8_t              : 7;
        } FLSCR_b;
    };
    __IM uint8_t  RESERVED3;
    __IM uint16_t RESERVED4;
    __IM uint32_t RESERVED5[2];

    union
    {
        __IOM uint32_t MSTPCRA;

        struct
        {
            __IOM uint32_t MSTPA0  : 1;
            __IOM uint32_t MSTPA1  : 1;
            __IOM uint32_t MSTPA2  : 1;
            __IOM uint32_t MSTPA3  : 1;
            __IOM uint32_t MSTPA4  : 1;
            __IOM uint32_t MSTPA5  : 1;
            __IOM uint32_t MSTPA6  : 1;
            __IOM uint32_t MSTPA7  : 1;
            __IOM uint32_t MSTPA8  : 1;
            __IOM uint32_t MSTPA9  : 1;
            __IOM uint32_t MSTPA10 : 1; /*!< [10..10] Module stop bit 10. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA11 : 1; /*!< [11..11] Module stop bit 11. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA12 : 1; /*!< [12..12] Module stop bit 12. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA13 : 1; /*!< [13..13] Module stop bit 13. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA14 : 1; /*!< [14..14] Module stop bit 14. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA15 : 1; /*!< [15..15] Module stop bit 15. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA16 : 1; /*!< [16..16] Module stop bit 16. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA17 : 1; /*!< [17..17] Module stop bit 17. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA18 : 1; /*!< [18..18] Module stop bit 18. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA19 : 1; /*!< [19..19] Module stop bit 19. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA20 : 1; /*!< [20..20] Module stop bit 20. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA21 : 1; /*!< [21..21] Module stop bit 21. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA22 : 1; /*!< [22..22] Module stop bit 22. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA23 : 1; /*!< [23..23] Module stop bit 23. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA24 : 1; /*!< [24..24] Module stop bit 24. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA25 : 1; /*!< [25..25] Module stop bit 25. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA26 : 1; /*!< [26..26] Module stop bit 26. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA27 : 1; /*!< [27..27] Module stop bit 27. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA28 : 1; /*!< [28..28] Module stop bit 28. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA29 : 1; /*!< [29..29] Module stop bit 29. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA30 : 1; /*!< [30..30] Module stop bit 30. See device hardware manual for
                                         *   usage.                                                                    */
            __IOM uint32_t MSTPA31 : 1; /*!< [31..31] Module stop bit 31. See device hardware manual for
                                         *   usage.                                                                    */
        } MSTPCRA_b;
    };

    union
    {
        __IOM uint32_t SCKDIVCR;

        struct
        {
            __IOM uint32_t PCKD : 4;
            __IOM uint32_t PCKC : 4;
            __IOM uint32_t PCKB : 4;
            __IOM uint32_t PCKA : 4;
            __IOM uint32_t BCK  : 4;
            __IOM uint32_t PCKE : 4;
            __IOM uint32_t ICK  : 4;
            __IOM uint32_t FCK  : 4;
        } SCKDIVCR_b;
    };

    union
    {
        __IOM uint8_t SCKDIVCR2;

        struct
        {
            __IOM uint8_t CPUCK : 4;
            uint8_t             : 4;
        } SCKDIVCR2_b;
    };
    __IM uint8_t RESERVED6;

    union
    {
        __IOM uint8_t SCKSCR;

        struct
        {
            __IOM uint8_t CKSEL : 3;
            uint8_t             : 5;
        } SCKSCR_b;
    };
    __IM uint8_t RESERVED7;

    union
    {
        __IOM uint16_t PLLCCR;

        struct
        {
            __IOM uint16_t PLIDIV   : 2;
            uint16_t                : 2;
            __IOM uint16_t PLSRCSEL : 1;
            uint16_t                : 1;
            __IOM uint16_t PLLMULNF : 2;
            __IOM uint16_t PLLMUL   : 8;
        } PLLCCR_b;
    };

    union
    {
        __IOM uint8_t PLLCR;

        struct
        {
            __IOM uint8_t PLLSTP : 1;
            uint8_t              : 7;
        } PLLCR_b;
    };
    __IM uint8_t  RESERVED8;
    __IM uint32_t RESERVED9;

    union
    {
        __IOM uint8_t BCKCR;

        struct
        {
            __IOM uint8_t BCLKDIV : 1;
            uint8_t               : 7;
        } BCKCR_b;
    };
    __IM uint8_t RESERVED10;

    union
    {
        __IOM uint8_t MOSCCR;

        struct
        {
            __IOM uint8_t MOSTP : 1;
            uint8_t             : 7;
        } MOSCCR_b;
    };
    __IM uint8_t  RESERVED11;
    __IM uint16_t RESERVED12;

    union
    {
        __IOM uint8_t HOCOCR;

        struct
        {
            __IOM uint8_t HCSTP : 1;
            uint8_t             : 7;
        } HOCOCR_b;
    };
    __IM uint8_t RESERVED13;

    union
    {
        __IOM uint8_t MOCOCR;

        struct
        {
            __IOM uint8_t MCSTP : 1;
            uint8_t             : 7;
        } MOCOCR_b;
    };

    union
    {
        __IOM uint8_t FLLCR1;

        struct
        {
            __IOM uint8_t FLLEN : 1;
            uint8_t             : 7;
        } FLLCR1_b;
    };

    union
    {
        __IOM uint16_t FLLCR2;

        struct
        {
            __IOM uint16_t FLLCNTL : 11;
            uint16_t               : 5;
        } FLLCR2_b;
    };

    union
    {
        __IM uint8_t OSCSF;

        struct
        {
            __IM uint8_t HOCOSF : 1;   /*!< [0..0] HOCO Clock Oscillation Stabilization FlagNOTE: The HOCOSF
                                        *   bit value after a reset is 1 when the OFS1.HOCOEN bit is
                                        *   0. It is 0 when the OFS1.HOCOEN bit is 1.                                 */
            uint8_t             : 2;
            __IM uint8_t MOSCSF : 1;
            uint8_t             : 1;
            __IM uint8_t PLLSF  : 1;
            __IM uint8_t PLL2SF : 1;
            uint8_t             : 1;
        } OSCSF_b;
    };
    __IM uint8_t RESERVED14;

    union
    {
        __IOM uint8_t CKOCR;

        struct
        {
            uint8_t              : 4;
            __IOM uint8_t CKODIV : 3;
            __IOM uint8_t CKOEN  : 1;
        } CKOCR_b;
    };

    union
    {
        __IOM uint8_t TRCKCR;

        struct
        {
            __IOM uint8_t TRCK    : 4;
            __IOM uint8_t TRCKSEL : 1;
            uint8_t               : 2;
            __IOM uint8_t TRCKEN  : 1;
        } TRCKCR_b;
    };

    union
    {
        __IOM uint8_t OSTDCR;

        struct
        {
            __IOM uint8_t OSTDIE : 1;
            uint8_t              : 6;
            __IOM uint8_t OSTDE  : 1;
        } OSTDCR_b;
    };

    union
    {
        __IOM uint8_t OSTDSR;

        struct
        {
            __IOM uint8_t OSTDF : 1;
            uint8_t             : 7;
        } OSTDSR_b;
    };
    __IM uint8_t RESERVED15;

    union
    {
        __IM uint8_t OSCMONR;

        struct
        {
            uint8_t              : 1;
            __IM uint8_t MOCOMON : 1;
            __IM uint8_t LOCOMON : 1;
            uint8_t              : 5;
        } OSCMONR_b;
    };
    __IM uint32_t RESERVED16;

    union
    {
        __IOM uint16_t PLL2CCR;

        struct
        {
            __IOM uint16_t PL2IDIV   : 2;
            uint16_t                 : 2;
            __IOM uint16_t PL2SRCSEL : 1;
            uint16_t                 : 1;
            __IOM uint16_t PLL2MULNF : 2;
            __IOM uint16_t PLL2MUL   : 8;
        } PLL2CCR_b;
    };

    union
    {
        __IOM uint8_t PLL2CR;

        struct
        {
            __IOM uint8_t PLL2STP : 1;
            uint8_t               : 7;
        } PLL2CR_b;
    };
    __IM uint8_t RESERVED17;

    union
    {
        __IOM uint16_t PLLCCR2;

        struct
        {
            __IOM uint16_t PLODIVP : 4; /*!< [3..0] PLL1 Output Frequency Division Ratio Select for output
                                         *   clock P                                                                   */
            __IOM uint16_t PLODIVQ : 4; /*!< [7..4] PLL1 Output Frequency Division Ratio Select for output
                                         *   clock Q                                                                   */
            __IOM uint16_t PLODIVR : 4; /*!< [11..8] PLL1 Output Frequency Division Ratio Select for output
                                         *   clock R                                                                   */
            uint16_t : 4;
        } PLLCCR2_b;
    };

    union
    {
        __IOM uint16_t PLL2CCR2;

        struct
        {
            __IOM uint16_t PL2ODIVP : 4; /*!< [3..0] PLL2 Output Frequency Division Ratio Select for output
                                          *   clock P                                                                   */
            __IOM uint16_t PL2ODIVQ : 4; /*!< [7..4] PLL2 Output Frequency Division Ratio Select for output
                                          *   clock Q                                                                   */
            __IOM uint16_t PL2ODIVR : 4; /*!< [11..8] PLL2 Output Frequency Division Ratio Select for output
                                          *   clock R                                                                   */
            uint16_t : 4;
        } PLL2CCR2_b;
    };
    __IM uint16_t RESERVED18;

    union
    {
        __IOM uint8_t EBCKOCR;

        struct
        {
            __IOM uint8_t EBCKOEN : 1;
            uint8_t               : 7;
        } EBCKOCR_b;
    };

    union
    {
        __IOM uint8_t SDCKOCR;

        struct
        {
            __IOM uint8_t SDCKOEN : 1;
            uint8_t               : 7;
        } SDCKOCR_b;
    };

    union
    {
        __IOM uint8_t SCICKDIVCR;

        struct
        {
            __IOM uint8_t CKDIV : 3;
            uint8_t             : 5;
        } SCICKDIVCR_b;
    };

    union
    {
        __IOM uint8_t SCICKCR;

        struct
        {
            __IOM uint8_t SCICKSEL : 4;
            uint8_t                : 2;
            __IOM uint8_t CKSREQ   : 1;
            __IM uint8_t  CKSRDY   : 1;
        } SCICKCR_b;
    };

    union
    {
        __IOM uint8_t SPICKDIVCR;

        struct
        {
            __IOM uint8_t CKDIV : 3;
            uint8_t             : 5;
        } SPICKDIVCR_b;
    };

    union
    {
        __IOM uint8_t SPICKCR;

        struct
        {
            __IOM uint8_t CKSEL  : 4;
            uint8_t              : 2;
            __IOM uint8_t CKSREQ : 1;
            __IM uint8_t  CKSRDY : 1;
        } SPICKCR_b;
    };
    __IM uint16_t RESERVED19;

    union
    {
        __IOM uint8_t ADCCKDIVCR;

        struct
        {
            __IOM uint8_t CKDIV : 3;
            uint8_t             : 5;
        } ADCCKDIVCR_b;
    };

    union
    {
        __IOM uint8_t ADCCKCR;

        struct
        {
            __IOM uint8_t CKSEL  : 4;
            uint8_t              : 2;
            __IOM uint8_t CKSREQ : 1;
            __IM uint8_t  CKSRDY : 1;
        } ADCCKCR_b;
    };

    union
    {
        __IOM uint8_t GPTCKDIVCR;

        struct
        {
            __IOM uint8_t CKDIV : 3;
            uint8_t             : 5;
        } GPTCKDIVCR_b;
    };

    union
    {
        __IOM uint8_t GPTCKCR;

        struct
        {
            __IOM uint8_t CKSEL  : 4;
            uint8_t              : 2;
            __IOM uint8_t CKSREQ : 1;
            __IM uint8_t  CKSRDY : 1;
        } GPTCKCR_b;
    };

    union
    {
        __IOM uint8_t LCDCKDIVCR;

        struct
        {
            __IOM uint8_t CKDIV : 3;
            uint8_t             : 5;
        } LCDCKDIVCR_b;
    };

    union
    {
        __IOM uint8_t LCDCKCR;

        struct
        {
            __IOM uint8_t CKSEL  : 4;
            uint8_t              : 2;
            __IOM uint8_t CKSREQ : 1;
            __IM uint8_t  CKSRDY : 1;
        } LCDCKCR_b;
    };
    __IM uint8_t RESERVED20;

    union
    {
        __IOM uint8_t MOCOUTCR;

        struct
        {
            __IOM uint8_t MOCOUTRM : 8; /*!< [7..0] MOCO User Trimming 1000_0000 : -128 1000_0001 : -127
                                         *   1000_0010 : -126 . . . 1111_1111 : -1 0000_0000 : Center
                                         *   Code 0000_0001 : +1 . . . 0111_1101 : +125 0111_1110 :
                                         +126 0111_1111 : +127These bits are added to original MOCO
                                         *   trimming bits                                                             */
        } MOCOUTCR_b;
    };

    union
    {
        __IOM uint8_t HOCOUTCR;

        struct
        {
            __IOM uint8_t HOCOUTRM : 8; /*!< [7..0] HOCO User Trimming 1000_0000 : -128 1000_0001 : -127
                                         *   1000_0010 : -126 . . . 1111_1111 : -1 0000_0000 : Center
                                         *   Code 0000_0001 : +1 . . . 0111_1101 : +125 0111_1110 :
                                         +126 0111_1111 : +127These bits are added to original HOCO
                                         *   trimming bits                                                             */
        } HOCOUTCR_b;
    };
    __IM uint8_t  RESERVED21;
    __IM uint32_t RESERVED22[2];

    union
    {
        __IOM uint8_t USBCKDIVCR;

        struct
        {
            __IOM uint8_t USBCKDIV : 3;
            uint8_t                : 5;
        } USBCKDIVCR_b;
    };

    union
    {
        __IOM uint8_t OCTACKDIVCR;

        struct
        {
            __IOM uint8_t OCTACKDIV : 3;
            uint8_t                 : 5;
        } OCTACKDIVCR_b;
    };

    union
    {
        __IOM uint8_t CANFDCKDIVCR;

        struct
        {
            __IOM uint8_t CANFDCKDIV : 3;
            uint8_t                  : 5;
        } CANFDCKDIVCR_b;
    };

    union
    {
        __IOM uint8_t USB60CKDIVCR;

        struct
        {
            __IOM uint8_t USB60CKDIV : 3;
            uint8_t                  : 5;
        } USB60CKDIVCR_b;
    };

    union
    {
        __IOM uint8_t I3CCKDIVCR;

        struct
        {
            __IOM uint8_t I3CCKDIV : 3;
            uint8_t                : 5;
        } I3CCKDIVCR_b;
    };
    __IM uint8_t  RESERVED23;
    __IM uint16_t RESERVED24;

    union
    {
        __IOM uint8_t USBCKCR;

        struct
        {
            __IOM uint8_t USBCKSEL  : 4;
            uint8_t                 : 2;
            __IOM uint8_t USBCKSREQ : 1;
            __IOM uint8_t USBCKSRDY : 1;
        } USBCKCR_b;
    };

    union
    {
        __IOM uint8_t OCTACKCR;

        struct
        {
            __IOM uint8_t OCTACKSEL  : 4;
            uint8_t                  : 2;
            __IOM uint8_t OCTACKSREQ : 1;
            __IOM uint8_t OCTACKSRDY : 1;
        } OCTACKCR_b;
    };

    union
    {
        __IOM uint8_t CANFDCKCR;

        struct
        {
            __IOM uint8_t CANFDCKSEL  : 4;
            uint8_t                   : 2;
            __IOM uint8_t CANFDCKSREQ : 1;
            __IOM uint8_t CANFDCKSRDY : 1;
        } CANFDCKCR_b;
    };

    union
    {
        __IOM uint8_t USB60CKCR;

        struct
        {
            __IOM uint8_t USB60CKSEL  : 4;
            uint8_t                   : 2;
            __IOM uint8_t USB60CKSREQ : 1;
            __IOM uint8_t USB60CKSRDY : 1;
        } USB60CKCR_b;
    };

    union
    {
        __IOM uint8_t I3CCKCR;

        struct
        {
            __IOM uint8_t I3CCKSEL  : 4;
            uint8_t                 : 2;
            __IOM uint8_t I3CCKREQ  : 1;
            __IOM uint8_t I3CCKSRDY : 1;
        } I3CCKCR_b;
    };
    __IM uint8_t  RESERVED25;
    __IM uint16_t RESERVED26;

    union
    {
        __IOM uint8_t MOSCSCR;

        struct
        {
            __IOM uint8_t MOSCSOKP : 1;
            uint8_t                : 7;
        } MOSCSCR_b;
    };

    union
    {
        __IOM uint8_t HOCOSCR;          /*!< (@ 0x0000007D) High-Speed On-Chip Oscillator Standby Control
                                         *                  Register                                                   */

        struct
        {
            __IOM uint8_t HOCOSOKP : 1;
            uint8_t                : 7;
        } HOCOSCR_b;
    };
    __IM uint16_t RESERVED27;
    __IM uint32_t RESERVED28[8];

    union
    {
        __IOM uint8_t OPCCR;

        struct
        {
            __IOM uint8_t OPCM   : 2;
            uint8_t              : 2;
            __IM uint8_t OPCMTSF : 1;
            uint8_t              : 3;
        } OPCCR_b;
    };
    __IM uint8_t RESERVED29;

    union
    {
        __IOM uint8_t MOSCWTCR;

        struct
        {
            __IOM uint8_t MSTS : 4;
            uint8_t            : 4;
        } MOSCWTCR_b;
    };
    __IM uint8_t RESERVED30[2];

    union
    {
        __IOM uint8_t HOCOWTCR;

        struct
        {
            __IOM uint8_t HSTS : 3;    /*!< [2..0] HOCO wait time settingWaiting time (sec) = setting of
                                        *   the HSTS[2:0] bits/fLOCO(Trimmed) + 3/fLOC(Untrimmed)                     */
            uint8_t : 5;
        } HOCOWTCR_b;
    };
    __IM uint16_t RESERVED31[2];

    union
    {
        __IOM uint8_t SOPCCR;

        struct
        {
            __IOM uint8_t SOPCM   : 1;
            uint8_t               : 3;
            __IM uint8_t SOPCMTSF : 1;
            uint8_t               : 3;
        } SOPCCR_b;
    };
    __IM uint8_t  RESERVED32;
    __IM uint32_t RESERVED33[5];

    union
    {
        __IOM uint32_t RSTSR1;

        struct
        {
            __IOM uint32_t IWDTRF : 1; /*!< [0..0] Independent Watchdog Timer Reset Detect Flag. NOTE: Writable
                                        *   only to clear the flag. Confirm the value is 1 and then
                                        *   write 0.                                                                  */
            __IOM uint32_t WDTRF : 1;  /*!< [1..1] Watchdog Timer0 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint32_t SWRF : 1;   /*!< [2..2] Software Reset Detect Flag. NOTE: Writable only to clear
                                        *   the flag. Confirm the value is 1 and then write 0.                        */
            uint32_t              : 1;
            __IOM uint32_t CLU0RF : 1; /*!< [4..4] CPU0 Lockup Reset Detect Flag. NOTE: Writable only to
                                        *   clear the flag. Confirm the value is 1 and then write 0.                  */
            __IOM uint32_t LM0RF : 1;  /*!< [5..5] Local memory 0 error Reset Detect Flag. NOTE: Writable
                                        *   only to clear the flag. Confirm the value is 1 and then
                                        *   write 0.                                                                  */
            uint32_t             : 4;
            __IOM uint32_t BUSRF : 1;  /*!< [10..10] Bus error Reset Detect Flag. NOTE: Writable only to
                                        *   clear the flag. Confirm the value is 1 and then write 0.                  */
            uint32_t            : 3;
            __IOM uint32_t CMRF : 1;   /*!< [14..14] Common memory error Reset Detect Flag. NOTE: Writable
                                        *   only to clear the flag. Confirm the value is 1 and then
                                        *   write 0.                                                                  */
            uint32_t              : 2;
            __IOM uint32_t WDT1RF : 1; /*!< [17..17] Watchdog Timer1 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            uint32_t              : 2;
            __IOM uint32_t CLU1RF : 1; /*!< [20..20] CPU1 Lockup Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint32_t LM1RF : 1;  /*!< [21..21] Local memory 1 error Reset Detect Flag. NOTE: Writable
                                        *   only to clear the flag. Confirm the value is 1 and then
                                        *   write 0.                                                                  */
            __IOM uint32_t NWRF : 1;   /*!< [22..22] Network Reset Detect Flag. NOTE: Writable only to clear
                                        *   the flag. Confirm the value is 1 and then write 0.                        */
            uint32_t : 9;
        } RSTSR1_b;
    };
    __IM uint32_t RESERVED34[2];

    union
    {
        __IOM uint8_t SYRACCR;

        struct
        {
            __IOM uint8_t BUSY : 1;
            uint8_t            : 7;
        } SYRACCR_b;
    };
    __IM uint8_t  RESERVED35;
    __IM uint16_t RESERVED36;
    __IM uint32_t RESERVED37[4];

    union
    {
        __IOM uint8_t LVD1CR1;

        struct
        {
            __IOM uint8_t IDTSEL : 2;
            __IOM uint8_t IRQSEL : 1;
            uint8_t              : 5;
        } LVD1CR1_b;
    };

    union
    {
        __IOM uint8_t LVD1SR;

        struct
        {
            __IOM uint8_t DET : 1;     /*!< [0..0] Voltage Monitor Voltage Change Detection Flag NOTE: Only
                                        *   0 can be written to this bit. After writing 0 to this bit,
                                        *   it takes 2 system clock cycles for the bit to be read as
                                        *   0.                                                                        */
            __IM uint8_t MON : 1;
            uint8_t          : 6;
        } LVD1SR_b;
    };

    union
    {
        __IOM uint8_t LVD2CR1;

        struct
        {
            __IOM uint8_t IDTSEL : 2;
            __IOM uint8_t IRQSEL : 1;
            uint8_t              : 5;
        } LVD2CR1_b;
    };

    union
    {
        __IOM uint8_t LVD2SR;

        struct
        {
            __IOM uint8_t DET : 1;     /*!< [0..0] Voltage Monitor Voltage Change Detection Flag NOTE: Only
                                        *   0 can be written to this bit. After writing 0 to this bit,
                                        *   it takes 2 system clock cycles for the bit to be read as
                                        *   0.                                                                        */
            __IM uint8_t MON : 1;
            uint8_t          : 6;
        } LVD2SR_b;
    };
    __IM uint32_t RESERVED38[3];

    union
    {
        __IOM uint8_t CRVSYSCR;

        struct
        {
            __IOM uint8_t CRVEN : 1;
            uint8_t             : 7;
        } CRVSYSCR_b;
    };
    __IM uint8_t  RESERVED39;
    __IM uint16_t RESERVED40;
    __IM uint32_t RESERVED41[7];

    union
    {
        __IOM uint8_t PDCTRGD;

        struct
        {
            __IOM uint8_t PDDE  : 1;
            uint8_t             : 5;
            __IM uint8_t PDCSF  : 1;
            __IM uint8_t PDPGSF : 1;
        } PDCTRGD_b;
    };
    __IM uint8_t   RESERVED42;
    __IM uint16_t  RESERVED43;
    __IM uint32_t  RESERVED44[11];
    __IOM uint16_t PDRAMSCR0;
    __IOM uint8_t  PDRAMSCR1;
    __IM uint8_t   RESERVED45;
    __IM uint32_t  RESERVED46[155];

    union
    {
        __IOM uint16_t VBRSABAR;       /*!< (@ 0x000003B0) VBATT Backup Register Security Attribute Boundary
                                        *                  Address Register                                           */

        struct
        {
            __IOM uint16_t SABA : 16;
        } VBRSABAR_b;
    };
    __IM uint16_t RESERVED47;

    union
    {
        __IOM uint16_t VBRPABARS;      /*!< (@ 0x000003B4) VBATT Backup Register Privilege Attribute Boundary
                                        *                  Address Register for Secure Region                         */

        struct
        {
            __IOM uint16_t PABAS : 16;
        } VBRPABARS_b;
    };
    __IM uint16_t RESERVED48;

    union
    {
        __IOM uint16_t VBRPABARNS;      /*!< (@ 0x000003B8) VBATT Backup Register Privilege Attribute Boundary
                                         *                  Address Register for Non-secure Region                     */

        struct
        {
            __IOM uint16_t PABANS : 16; /*!< [15..0] Privilege Attribute Boundary Address for Non-secure
                                         *   Region                                                                    */
        } VBRPABARNS_b;
    };
    __IM uint16_t RESERVED49;
    __IM uint32_t RESERVED50;

    union
    {
        __IOM uint32_t CGFSAR;           /*!< (@ 0x000003C0) Clock Generation Function Security Attribute
                                          *                  Register                                                   */

        struct
        {
            __IOM uint32_t NONSEC00 : 1;
            uint32_t                : 1;
            __IOM uint32_t NONSEC02 : 1;
            __IOM uint32_t NONSEC03 : 1;
            __IOM uint32_t NONSEC04 : 1;
            __IOM uint32_t NONSEC05 : 1;
            __IOM uint32_t NONSEC06 : 1;
            __IOM uint32_t NONSEC07 : 1;
            __IOM uint32_t NONSEC08 : 1;
            __IOM uint32_t NONSEC09 : 1;
            uint32_t                : 1;
            __IOM uint32_t NONSEC11 : 1;
            __IOM uint32_t NONSEC12 : 1;
            __IOM uint32_t NONSEC13 : 1;
            uint32_t                : 2;
            __IOM uint32_t NONSEC16 : 1;
            __IOM uint32_t NONSEC17 : 1;
            __IOM uint32_t NONSEC18 : 1;
            __IOM uint32_t NONSEC19 : 1;
            __IOM uint32_t NONSEC20 : 1;
            __IOM uint32_t NONSEC21 : 1;
            __IOM uint32_t NONSEC22 : 1;
            uint32_t                : 1;
            __IOM uint32_t NONSEC24 : 1;
            __IOM uint32_t NONSEC25 : 1;
            __IOM uint32_t NONSEC26 : 1;
            uint32_t                : 5;
        } CGFSAR_b;
    };

    union
    {
        __IOM uint32_t RSTSAR;

        struct
        {
            __IOM uint32_t NONSEC0 : 1;
            __IOM uint32_t NONSEC1 : 1;
            __IOM uint32_t NONSEC2 : 1;
            __IOM uint32_t NONSEC3 : 1;
            uint32_t               : 28;
        } RSTSAR_b;
    };

    union
    {
        __IOM uint32_t LPMSAR;

        struct
        {
            __IOM uint32_t NONSEC0  : 1;
            __IOM uint32_t NONSEC1  : 1;
            __IOM uint32_t NONSEC2  : 1;
            __IOM uint32_t NONSEC3  : 1;
            uint32_t                : 4;
            __IOM uint32_t NONSEC8  : 1;
            uint32_t                : 7;
            __IOM uint32_t NONSEC16 : 1;
            __IOM uint32_t NONSEC17 : 1;
            __IOM uint32_t NONSEC18 : 1;
            __IOM uint32_t NONSEC19 : 1;
            uint32_t                : 1;
            __IOM uint32_t NONSEC21 : 1;
            uint32_t                : 10;
        } LPMSAR_b;
    };

    union
    {
        __IOM uint32_t LVDSAR;          /*!< (@ 0x000003CC) Programable Voltage Detection Security Attribution
                                         *                  Register                                                   */

        struct
        {
            __IOM uint32_t NONSEC0 : 1;
            __IOM uint32_t NONSEC1 : 1;
            uint32_t               : 30;
        } LVDSAR_b;
    };

    union
    {
        __IOM uint32_t BBFSAR;

        struct
        {
            __IOM uint32_t NONSEC0 : 1;
            __IOM uint32_t NONSEC1 : 1;
            __IOM uint32_t NONSEC2 : 1;
            __IOM uint32_t NONSEC3 : 1;
            __IOM uint32_t NONSEC4 : 1;
            uint32_t               : 27;
        } BBFSAR_b;
    };
    __IM uint32_t RESERVED51;

    union
    {
        __IOM uint32_t PGCSAR;

        struct
        {
            uint32_t               : 1;
            __IOM uint32_t NONSEC1 : 1;
            __IOM uint32_t NONSEC2 : 1;
            uint32_t               : 29;
        } PGCSAR_b;
    };
    __IM uint32_t RESERVED52;

    union
    {
        __IOM uint32_t DPFSAR;         /*!< (@ 0x000003E0) Deep Standby Interrupt Factor Security Attribution
                                        *                  Register                                                   */

        struct
        {
            uint32_t               : 16;
            __IOM uint32_t DPFSA16 : 1; /*!< [16..16] Deep Standby Interrupt Factor Security Attribute bit
                                         *   16                                                                        */
            __IOM uint32_t DPFSA17 : 1; /*!< [17..17] Deep Standby Interrupt Factor Security Attribute bit
                                         *   17                                                                        */
            __IOM uint32_t DPFSA18 : 1; /*!< [18..18] Deep Standby Interrupt Factor Security Attribute bit
                                         *   18                                                                        */
            __IOM uint32_t DPFSA19 : 1; /*!< [19..19] Deep Standby Interrupt Factor Security Attribute bit
                                         *   19                                                                        */
            __IOM uint32_t DPFSA20 : 1; /*!< [20..20] Deep Standby Interrupt Factor Security Attribute bit
                                         *   20                                                                        */
            uint32_t               : 3;
            __IOM uint32_t DPFSA24 : 1; /*!< [24..24] Deep Standby Interrupt Factor Security Attribute bit
                                         *   24                                                                        */
            __IOM uint32_t DPFSA25 : 1; /*!< [25..25] Deep Standby Interrupt Factor Security Attribute bit
                                         *   25                                                                        */
            __IOM uint32_t DPFSA26 : 1; /*!< [26..26] Deep Standby Interrupt Factor Security Attribute bit
                                         *   26                                                                        */
            __IOM uint32_t DPFSA27 : 1; /*!< [27..27] Deep Standby Interrupt Factor Security Attribute bit
                                         *   27                                                                        */
            uint32_t               : 1;
            __IOM uint32_t DPFSA29 : 1; /*!< [29..29] Deep Standby Interrupt Factor Security Attribute bit
                                         *   29                                                                        */
            uint32_t               : 1;
            __IOM uint32_t DPFSA31 : 1; /*!< [31..31] Deep Standby Interrupt Factor Security Attribute bit
                                         *   31                                                                        */
        } DPFSAR_b;
    };

    union
    {
        __IOM uint32_t RSCSAR;

        struct
        {
            __IOM uint32_t RSCSA0  : 1;
            __IOM uint32_t RSCSA1  : 1;
            __IOM uint32_t RSCSA2  : 1;
            __IOM uint32_t RSCSA3  : 1;
            __IOM uint32_t RSCSA4  : 1;
            __IOM uint32_t RSCSA5  : 1;
            __IOM uint32_t RSCSA6  : 1;
            __IOM uint32_t RSCSA7  : 1;
            __IOM uint32_t RSCSA8  : 1;
            __IOM uint32_t RSCSA9  : 1;
            __IOM uint32_t RSCSA10 : 1;
            __IOM uint32_t RSCSA11 : 1;
            __IOM uint32_t RSCSA12 : 1;
            __IOM uint32_t RSCSA13 : 1;
            __IOM uint32_t RSCSA14 : 1;
            uint32_t               : 1;
            __IOM uint32_t RSCSA16 : 1;
            __IOM uint32_t RSCSA17 : 1;
            uint32_t               : 14;
        } RSCSAR_b;
    };
    __IM uint32_t RESERVED53[4];
    __IM uint16_t RESERVED54;

    union
    {
        __IOM uint16_t PRCR;

        struct
        {
            __IOM uint16_t PRC0 : 1;   /*!< [0..0] Enables writing to the registers related to the clock
                                        *   generation circuit.                                                       */
            __IOM uint16_t PRC1 : 1;   /*!< [1..1] Enables writing to the registers related to the operating
                                        *   modes, the low power modes, and the battery backup function.              */
            uint16_t            : 1;
            __IOM uint16_t PRC3 : 1;
            __IOM uint16_t PRC4 : 1;   /*!< [4..4] Enables writing to the registers related to the security
                                        *   and privilege setting registers.                                          */
            __IOM uint16_t PRC5 : 1;
            uint16_t            : 2;
            __OM uint16_t PRKEY : 8;
        } PRCR_b;
    };
    __IM uint16_t RESERVED55;

    union
    {
        __IOM uint16_t PRCR_NS;

        struct
        {
            __IOM uint16_t PRC0 : 1;   /*!< [0..0] Enables writing to the registers related to the clock
                                        *   generation circuit.                                                       */
            __IOM uint16_t PRC1 : 1;   /*!< [1..1] Enables writing to the registers related to the operating
                                        *   modes, the low power modes, and the battery backup function.              */
            uint16_t            : 1;
            __IOM uint16_t PRC3 : 1;
            __IOM uint16_t PRC4 : 1;   /*!< [4..4] Enables writing to the registers related to the privilege
                                        *   setting registers.                                                        */
            uint16_t            : 3;
            __OM uint16_t PRKEY : 8;
        } PRCR_NS_b;
    };

    union
    {
        __IOM uint8_t LOCOCR;

        struct
        {
            __IOM uint8_t LCSTP : 1;
            uint8_t             : 7;
        } LOCOCR_b;
    };
    __IM uint8_t RESERVED56;

    union
    {
        __IOM uint8_t LOCOUTCR;

        struct
        {
            __IOM uint8_t LOCOUTRM : 8;
        } LOCOUTCR_b;
    };
    __IM uint8_t  RESERVED57;
    __IM uint32_t RESERVED58[2];
    __IM uint16_t RESERVED59;
    __IM uint8_t  RESERVED60;

    union
    {
        __IOM uint8_t STCONR;

        struct
        {
            __IOM uint8_t STCON : 2;
            uint8_t             : 6;
        } STCONR_b;
    };
    __IM uint32_t RESERVED61[380];

    union
    {
        __IOM uint8_t DPSBYCR;

        struct
        {
            uint8_t                : 2;
            __IOM uint8_t DCSSMODE : 1;
            uint8_t                : 1;
            __IOM uint8_t SRKEEP   : 1;
            uint8_t                : 1;
            __IOM uint8_t IOKEEP   : 1;
            __IOM uint8_t DPSBY    : 1;
        } DPSBYCR_b;
    };
    __IM uint8_t  RESERVED62;
    __IM uint16_t RESERVED63;

    union
    {
        __IOM uint8_t DPSWCR;

        struct
        {
            __IOM uint8_t WTSTS : 8;
        } DPSWCR_b;
    };
    __IM uint8_t  RESERVED64;
    __IM uint16_t RESERVED65;

    union
    {
        __IOM uint8_t DPSIER0;

        struct
        {
            __IOM uint8_t DIRQ0E : 1;
            __IOM uint8_t DIRQ1E : 1;
            __IOM uint8_t DIRQ2E : 1;
            __IOM uint8_t DIRQ3E : 1;
            __IOM uint8_t DIRQ4E : 1;
            __IOM uint8_t DIRQ5E : 1;
            __IOM uint8_t DIRQ6E : 1;
            __IOM uint8_t DIRQ7E : 1;
        } DPSIER0_b;
    };
    __IM uint8_t  RESERVED66;
    __IM uint16_t RESERVED67;

    union
    {
        __IOM uint8_t DPSIER1;

        struct
        {
            __IOM uint8_t DIRQ8E  : 1;
            __IOM uint8_t DIRQ9E  : 1;
            __IOM uint8_t DIRQ10E : 1;
            __IOM uint8_t DIRQ11E : 1;
            __IOM uint8_t DIRQ12E : 1;
            __IOM uint8_t DIRQ13E : 1;
            __IOM uint8_t DIRQ14E : 1;
            __IOM uint8_t DIRQ15E : 1;
        } DPSIER1_b;
    };
    __IM uint8_t  RESERVED68;
    __IM uint16_t RESERVED69;

    union
    {
        __IOM uint8_t DPSIER2;

        struct
        {
            __IOM uint8_t DPVD1IE  : 1;
            __IOM uint8_t DPVD2IE  : 1;
            __IOM uint8_t DTRTCIIE : 1;
            __IOM uint8_t DRTCAIE  : 1;
            __IOM uint8_t DNMIE    : 1;
            uint8_t                : 3;
        } DPSIER2_b;
    };
    __IM uint8_t  RESERVED70;
    __IM uint16_t RESERVED71;

    union
    {
        __IOM uint8_t DPSIER3;

        struct
        {
            __IOM uint8_t DUSBFSIE   : 1;
            __IOM uint8_t DUSBHSIE   : 1;
            __IOM uint8_t DULPT0IE   : 1;
            __IOM uint8_t DULPT1IE   : 1;
            uint8_t                  : 1;
            __IOM uint8_t DIWDTIE    : 1;
            uint8_t                  : 1;
            __IOM uint8_t DVBATTADIE : 1;
        } DPSIER3_b;
    };
    __IM uint8_t  RESERVED72;
    __IM uint16_t RESERVED73;

    union
    {
        __IOM uint8_t DPSIFR0;

        struct
        {
            __IOM uint8_t DIRQ0F : 1;
            __IOM uint8_t DIRQ1F : 1;
            __IOM uint8_t DIRQ2F : 1;
            __IOM uint8_t DIRQ3F : 1;
            __IOM uint8_t DIRQ4F : 1;
            __IOM uint8_t DIRQ5F : 1;
            __IOM uint8_t DIRQ6F : 1;
            __IOM uint8_t DIRQ7F : 1;
        } DPSIFR0_b;
    };
    __IM uint8_t  RESERVED74;
    __IM uint16_t RESERVED75;

    union
    {
        __IOM uint8_t DPSIFR1;

        struct
        {
            __IOM uint8_t DIRQ8F  : 1;
            __IOM uint8_t DIRQ9F  : 1;
            __IOM uint8_t DIRQ10F : 1;
            __IOM uint8_t DIRQ11F : 1;
            __IOM uint8_t DIRQ12F : 1;
            __IOM uint8_t DIRQ13F : 1;
            __IOM uint8_t DIRQ14F : 1;
            __IOM uint8_t DIRQ15F : 1;
        } DPSIFR1_b;
    };
    __IM uint8_t  RESERVED76;
    __IM uint16_t RESERVED77;

    union
    {
        __IOM uint8_t DPSIFR2;

        struct
        {
            __IOM uint8_t DPVD1IF  : 1;
            __IOM uint8_t DPVD2IF  : 1;
            __IOM uint8_t DTRTCIIF : 1;
            __IOM uint8_t DRTCAIF  : 1;
            __IOM uint8_t DNMIF    : 1;
            uint8_t                : 3;
        } DPSIFR2_b;
    };
    __IM uint8_t  RESERVED78;
    __IM uint16_t RESERVED79;

    union
    {
        __IOM uint8_t DPSIFR3;

        struct
        {
            __IOM uint8_t DUSBFSIF   : 1;
            __IOM uint8_t DUSBHSIF   : 1;
            __IOM uint8_t DULPT0IF   : 1;
            __IOM uint8_t DULPT1IF   : 1;
            uint8_t                  : 1;
            __IOM uint8_t DIWDTIF    : 1;
            uint8_t                  : 1;
            __IOM uint8_t DVBATTADIF : 1;
        } DPSIFR3_b;
    };
    __IM uint8_t  RESERVED80;
    __IM uint16_t RESERVED81;

    union
    {
        __IOM uint8_t DPSIEGR0;

        struct
        {
            __IOM uint8_t DIRQ0EG : 1;
            __IOM uint8_t DIRQ1EG : 1;
            __IOM uint8_t DIRQ2EG : 1;
            __IOM uint8_t DIRQ3EG : 1;
            __IOM uint8_t DIRQ4EG : 1;
            __IOM uint8_t DIRQ5EG : 1;
            __IOM uint8_t DIRQ6EG : 1;
            __IOM uint8_t DIRQ7EG : 1;
        } DPSIEGR0_b;
    };
    __IM uint8_t  RESERVED82;
    __IM uint16_t RESERVED83;

    union
    {
        __IOM uint8_t DPSIEGR1;

        struct
        {
            __IOM uint8_t DIRQ8EG  : 1;
            __IOM uint8_t DIRQ9EG  : 1;
            __IOM uint8_t DIRQ10EG : 1;
            __IOM uint8_t DIRQ11EG : 1;
            __IOM uint8_t DIRQ12EG : 1;
            __IOM uint8_t DIRQ13EG : 1;
            __IOM uint8_t DIRQ14EG : 1;
            __IOM uint8_t DIRQ15EG : 1;
        } DPSIEGR1_b;
    };
    __IM uint8_t  RESERVED84;
    __IM uint16_t RESERVED85;

    union
    {
        __IOM uint8_t DPSIEGR2;

        struct
        {
            __IOM uint8_t DPVD1EG : 1;
            __IOM uint8_t DPVD2EG : 1;
            uint8_t               : 2;
            __IOM uint8_t DNMIEG  : 1;
            uint8_t               : 3;
        } DPSIEGR2_b;
    };
    __IM uint8_t  RESERVED86;
    __IM uint16_t RESERVED87;
    __IM uint32_t RESERVED88;

    union
    {
        __IOM uint8_t SYOCDCR;

        struct
        {
            __IOM uint8_t DOCDF : 1;
            uint8_t             : 6;
            __IOM uint8_t DBGEN : 1;
        } SYOCDCR_b;
    };
    __IM uint8_t  RESERVED89;
    __IM uint16_t RESERVED90;
    __IM uint32_t RESERVED91;

    union
    {
        __IOM uint8_t RSTSR0;

        struct
        {
            __IOM uint8_t PORF : 1;    /*!< [0..0] Power-On Reset Detect Flag. NOTE: Writable only to clear
                                        *   the flag. Confirm the value is 1 and then write 0.                        */
            __IOM uint8_t LVD0RF : 1;  /*!< [1..1] Voltage Monitor 0 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint8_t LVD1RF : 1;  /*!< [2..2] Voltage Monitor 1 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint8_t LVD2RF : 1;  /*!< [3..3] Voltage Monitor 2 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint8_t LVD3RF : 1;  /*!< [4..4] Voltage Monitor 3 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint8_t LVD4RF : 1;  /*!< [5..5] Voltage Monitor 4 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint8_t LVD5RF : 1;  /*!< [6..6] Voltage Monitor 5 Reset Detect Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
            __IOM uint8_t DPSRSTF : 1; /*!< [7..7] Deep Software Standby Reset Flag. NOTE: Writable only
                                        *   to clear the flag. Confirm the value is 1 and then write
                                        *   0.                                                                        */
        } RSTSR0_b;
    };
    __IM uint8_t  RESERVED92;
    __IM uint16_t RESERVED93;

    union
    {
        __IOM uint8_t RSTSR2;

        struct
        {
            __IOM uint8_t CWSF : 1;
            uint8_t            : 7;
        } RSTSR2_b;
    };
    __IM uint8_t  RESERVED94;
    __IM uint16_t RESERVED95;

    union
    {
        __IOM uint8_t RSTSR3;

        struct
        {
            uint8_t             : 4;
            __IOM uint8_t OCPRF : 1;
            uint8_t             : 3;
        } RSTSR3_b;
    };
    __IM uint8_t  RESERVED96;
    __IM uint16_t RESERVED97;
    __IM uint32_t RESERVED98;

    union
    {
        __IOM uint8_t MOMCR;           /*!< (@ 0x00000A50) Main Clock Oscillator Mode Oscillation Control
                                        *                  Register                                                   */

        struct
        {
            uint8_t              : 1;
            __IOM uint8_t MODRV0 : 3;
            uint8_t              : 2;
            __IOM uint8_t MOSEL  : 1;
            uint8_t              : 1;
        } MOMCR_b;
    };
    __IM uint8_t  RESERVED99;
    __IM uint16_t RESERVED100;

    union
    {
        __IOM uint8_t FWEPROR;

        struct
        {
            __IOM uint8_t FLWE : 2;
            uint8_t            : 6;
        } FWEPROR_b;
    };
    __IM uint8_t  RESERVED101;
    __IM uint16_t RESERVED102;

    union
    {
        union
        {
            __IOM uint8_t LVCMPCR;

            struct
            {
                uint8_t             : 5;
                __IOM uint8_t LVD1E : 1;
                __IOM uint8_t LVD2E : 1;
                uint8_t             : 1;
            } LVCMPCR_b;
        };

        union
        {
            __IOM uint8_t LVD1CMPCR;

            struct
            {
                __IOM uint8_t LVD1LVL : 5; /*!< [4..0] Detection Voltage 1 Level Select(Standard voltage during
                                            *   drop in voltage)                                                          */
                uint8_t             : 2;
                __IOM uint8_t LVD1E : 1;
            } LVD1CMPCR_b;
        };
    };
    __IM uint8_t  RESERVED103;
    __IM uint16_t RESERVED104;

    union
    {
        __IOM uint8_t LVD2CMPCR;

        struct
        {
            __IOM uint8_t LVD2LVL : 5; /*!< [4..0] Detection Voltage 2 Level Select(Standard voltage during
                                        *   drop in voltage)                                                          */
            uint8_t             : 2;
            __IOM uint8_t LVD2E : 1;
        } LVD2CMPCR_b;
    };
    __IM uint8_t  RESERVED105;
    __IM uint16_t RESERVED106;
    __IM uint32_t RESERVED107[4];

    union
    {
        __IOM uint8_t LVD1CR0;

        struct
        {
            __IOM uint8_t RIE   : 1;
            __IOM uint8_t DFDIS : 1;
            __IOM uint8_t CMPE  : 1;
            uint8_t             : 1;
            __IOM uint8_t FSAMP : 2;
            __IOM uint8_t RI    : 1;
            __IOM uint8_t RN    : 1;
        } LVD1CR0_b;
    };
    __IM uint8_t  RESERVED108;
    __IM uint16_t RESERVED109;

    union
    {
        __IOM uint8_t LVD2CR0;

        struct
        {
            __IOM uint8_t RIE   : 1;
            __IOM uint8_t DFDIS : 1;
            __IOM uint8_t CMPE  : 1;
            uint8_t             : 1;
            __IOM uint8_t FSAMP : 2;
            __IOM uint8_t RI    : 1;
            __IOM uint8_t RN    : 1;
        } LVD2CR0_b;
    };
    __IM uint8_t  RESERVED110;
    __IM uint16_t RESERVED111;
    __IM uint32_t RESERVED112[3];

    union
    {
        __IOM uint8_t VBATTMNSELR;        /*!< (@ 0x00000A84) Battery Backup Voltage Monitor Function Select
                                           *                  Register                                                   */

        struct
        {
            __IOM uint8_t VBATTMNSEL : 1;
            uint8_t                  : 7;
        } VBATTMNSELR_b;
    };
    __IM uint8_t  RESERVED113;
    __IM uint16_t RESERVED114;

    union
    {
        __IOM uint8_t VBTBPCR1;

        struct
        {
            __IOM uint8_t BPWSWSTP : 1;
            uint8_t                : 7;
        } VBTBPCR1_b;
    };
    __IM uint8_t  RESERVED115;
    __IM uint16_t RESERVED116;
    __IM uint32_t RESERVED117;

    union
    {
        __IOM uint8_t LPSCR;

        struct
        {
            __IOM uint8_t LPMD : 4;
            uint8_t            : 4;
        } LPSCR_b;
    };
    __IM uint8_t  RESERVED118;
    __IM uint16_t RESERVED119;
    __IM uint32_t RESERVED120;

    union
    {
        __IOM uint8_t SSCR1;

        struct
        {
            __IOM uint8_t SS1FR : 1;
            uint8_t             : 7;
        } SSCR1_b;
    };
    __IM uint8_t  RESERVED121;
    __IM uint16_t RESERVED122;
    __IM uint32_t RESERVED123[5];

    union
    {
        __IOM uint8_t LVOCR;

        struct
        {
            __IOM uint8_t LVO0E : 1;
            __IOM uint8_t LVO1E : 1;
            uint8_t             : 6;
        } LVOCR_b;
    };
    __IM uint8_t  RESERVED124;
    __IM uint16_t RESERVED125;
    __IM uint32_t RESERVED126[7];

    union
    {
        __IOM uint8_t SYRSTMSK0;

        struct
        {
            __IOM uint8_t IWDTMASK  : 1;
            __IOM uint8_t WDT0MASK  : 1;
            __IOM uint8_t SWMASK    : 1;
            uint8_t                 : 1;
            __IOM uint8_t CLUP0MASK : 1;
            __IOM uint8_t LM0MASK   : 1;
            __IOM uint8_t CMMASK    : 1;
            __IOM uint8_t BUSMASK   : 1;
        } SYRSTMSK0_b;
    };
    __IM uint8_t  RESERVED127;
    __IM uint16_t RESERVED128;

    union
    {
        __IOM uint8_t SYRSTMSK1;

        struct
        {
            uint8_t                 : 1;
            __IOM uint8_t WDT1MASK  : 1;
            uint8_t                 : 2;
            __IOM uint8_t CLUP1MASK : 1;
            __IOM uint8_t LM1MASK   : 1;
            uint8_t                 : 1;
            __IOM uint8_t NWMASK    : 1;
        } SYRSTMSK1_b;
    };
    __IM uint8_t  RESERVED129;
    __IM uint16_t RESERVED130;

    union
    {
        __IOM uint8_t SYRSTMSK2;

        struct
        {
            __IOM uint8_t LVD1MASK : 1;
            __IOM uint8_t LVD2MASK : 1;
            __IOM uint8_t LVD3MASK : 1;
            __IOM uint8_t LVD4MASK : 1;
            __IOM uint8_t LVD5MASK : 1;
            uint8_t                : 3;
        } SYRSTMSK2_b;
    };
    __IM uint8_t  RESERVED131;
    __IM uint16_t RESERVED132;
    __IM uint32_t RESERVED133[10];

    union
    {
        __IOM uint8_t PLL1LDOCR;

        struct
        {
            __IOM uint8_t LDOSTP : 1;
            __IOM uint8_t SKEEP  : 1;
            uint8_t              : 6;
        } PLL1LDOCR_b;
    };
    __IM uint8_t  RESERVED134;
    __IM uint16_t RESERVED135;

    union
    {
        __IOM uint8_t PLL2LDOCR;

        struct
        {
            __IOM uint8_t LDOSTP : 1;
            __IOM uint8_t SKEEP  : 1;
            uint8_t              : 6;
        } PLL2LDOCR_b;
    };
    __IM uint8_t  RESERVED136;
    __IM uint16_t RESERVED137;

    union
    {
        __IOM uint8_t HOCOLDOCR;

        struct
        {
            __IOM uint8_t LDOSTP : 1;
            __IOM uint8_t SKEEP  : 1;
            uint8_t              : 6;
        } HOCOLDOCR_b;
    };
    __IM uint8_t  RESERVED138;
    __IM uint16_t RESERVED139;
    __IM uint32_t RESERVED140[4];

    union
    {
        __IOM uint8_t LVD1FCR;

        struct
        {
            __IOM uint8_t RHSEL : 1;
            uint8_t             : 7;
        } LVD1FCR_b;
    };
    __IM uint8_t  RESERVED141;
    __IM uint16_t RESERVED142;

    union
    {
        __IOM uint8_t LVD2FCR;

        struct
        {
            __IOM uint8_t RHSEL : 1;
            uint8_t             : 7;
        } LVD2FCR_b;
    };
    __IM uint8_t  RESERVED143;
    __IM uint16_t RESERVED144;
    __IM uint32_t RESERVED145[54];

    union
    {
        __IOM uint8_t SOSCCR;

        struct
        {
            __IOM uint8_t SOSTP : 1;
            uint8_t             : 7;
        } SOSCCR_b;
    };

    union
    {
        __IOM uint8_t SOMCR;

        struct
        {
            __IOM uint8_t SODRV : 2;
            uint8_t             : 4;
            __IOM uint8_t SOSEL : 1;
            uint8_t             : 1;
        } SOMCR_b;
    };
    __IM uint16_t RESERVED146;
    __IM uint32_t RESERVED147[15];

    union
    {
        __IOM uint8_t VBTBER;

        struct
        {
            uint8_t            : 3;
            __IOM uint8_t VBAE : 1;
            uint8_t            : 4;
        } VBTBER_b;
    };
    __IM uint8_t  RESERVED148;
    __IM uint16_t RESERVED149;
    __IM uint8_t  RESERVED150;

    union
    {
        __IOM uint8_t VBTBPCR2;

        struct
        {
            __IOM uint8_t VDETLVL : 3;
            uint8_t               : 1;
            __IOM uint8_t VDETE   : 1;
            uint8_t               : 3;
        } VBTBPCR2_b;
    };

    union
    {
        __IOM uint8_t VBTBPSR;

        struct
        {
            __IOM uint8_t VBPORF : 1;
            uint8_t              : 3;
            __IOM uint8_t VBPORM : 1;
            __IOM uint8_t BPWSWM : 1;
            uint8_t              : 2;
        } VBTBPSR_b;
    };
    __IM uint8_t RESERVED151;

    union
    {
        __IOM uint8_t VBTADSR;

        struct
        {
            __IOM uint8_t VBTADF0 : 1;
            __IOM uint8_t VBTADF1 : 1;
            __IOM uint8_t VBTADF2 : 1;
            uint8_t               : 5;
        } VBTADSR_b;
    };

    union
    {
        __IOM uint8_t VBTADCR1;

        struct
        {
            __IOM uint8_t VBTADIE0  : 1;
            __IOM uint8_t VBTADIE1  : 1;
            __IOM uint8_t VBTADIE2  : 1;
            uint8_t                 : 1;
            __IOM uint8_t VBTADCLE0 : 1;
            __IOM uint8_t VBTADCLE1 : 1;
            __IOM uint8_t VBTADCLE2 : 1;
            uint8_t                 : 1;
        } VBTADCR1_b;
    };

    union
    {
        __IOM uint8_t VBTADCR2;

        struct
        {
            __IOM uint8_t VBRTCES0 : 1;
            __IOM uint8_t VBRTCES1 : 1;
            __IOM uint8_t VBRTCES2 : 1;
            uint8_t                : 5;
        } VBTADCR2_b;
    };
    __IM uint8_t RESERVED152;

    union
    {
        __IOM uint8_t VBTICTLR;

        struct
        {
            __IOM uint8_t VCH0INEN : 1;
            __IOM uint8_t VCH1INEN : 1;
            __IOM uint8_t VCH2INEN : 1;
            uint8_t                : 5;
        } VBTICTLR_b;
    };

    union
    {
        __IOM uint8_t VBTICTLR2;

        struct
        {
            __IOM uint8_t VCH0NCE : 1;
            __IOM uint8_t VCH1NCE : 1;
            __IOM uint8_t VCH2NCE : 1;
            uint8_t               : 1;
            __IOM uint8_t VCH0EG  : 1;
            __IOM uint8_t VCH1EG  : 1;
            __IOM uint8_t VCH2EG  : 1;
            uint8_t               : 1;
        } VBTICTLR2_b;
    };

    union
    {
        __IOM uint8_t VBTIMONR;

        struct
        {
            __IOM uint8_t VCH0MON : 1;
            __IOM uint8_t VCH1MON : 1;
            __IOM uint8_t VCH2MON : 1;
            uint8_t               : 5;
        } VBTIMONR_b;
    };
    __IM uint8_t  RESERVED153;
    __IM uint32_t RESERVED154[44];

    union
    {
        __IOM uint8_t VBTBKR0;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR0_b;
    };

    union
    {
        __IOM uint8_t VBTBKR1;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR1_b;
    };

    union
    {
        __IOM uint8_t VBTBKR2;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR2_b;
    };

    union
    {
        __IOM uint8_t VBTBKR3;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR3_b;
    };

    union
    {
        __IOM uint8_t VBTBKR4;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR4_b;
    };

    union
    {
        __IOM uint8_t VBTBKR5;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR5_b;
    };

    union
    {
        __IOM uint8_t VBTBKR6;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR6_b;
    };

    union
    {
        __IOM uint8_t VBTBKR7;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR7_b;
    };

    union
    {
        __IOM uint8_t VBTBKR8;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR8_b;
    };

    union
    {
        __IOM uint8_t VBTBKR9;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR9_b;
    };

    union
    {
        __IOM uint8_t VBTBKR10;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR10_b;
    };

    union
    {
        __IOM uint8_t VBTBKR11;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR11_b;
    };

    union
    {
        __IOM uint8_t VBTBKR12;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR12_b;
    };

    union
    {
        __IOM uint8_t VBTBKR13;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR13_b;
    };

    union
    {
        __IOM uint8_t VBTBKR14;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR14_b;
    };

    union
    {
        __IOM uint8_t VBTBKR15;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR15_b;
    };

    union
    {
        __IOM uint8_t VBTBKR16;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR16_b;
    };

    union
    {
        __IOM uint8_t VBTBKR17;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR17_b;
    };

    union
    {
        __IOM uint8_t VBTBKR18;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR18_b;
    };

    union
    {
        __IOM uint8_t VBTBKR19;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR19_b;
    };

    union
    {
        __IOM uint8_t VBTBKR20;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR20_b;
    };

    union
    {
        __IOM uint8_t VBTBKR21;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR21_b;
    };

    union
    {
        __IOM uint8_t VBTBKR22;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR22_b;
    };

    union
    {
        __IOM uint8_t VBTBKR23;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR23_b;
    };

    union
    {
        __IOM uint8_t VBTBKR24;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR24_b;
    };

    union
    {
        __IOM uint8_t VBTBKR25;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR25_b;
    };

    union
    {
        __IOM uint8_t VBTBKR26;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR26_b;
    };

    union
    {
        __IOM uint8_t VBTBKR27;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR27_b;
    };

    union
    {
        __IOM uint8_t VBTBKR28;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR28_b;
    };

    union
    {
        __IOM uint8_t VBTBKR29;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR29_b;
    };

    union
    {
        __IOM uint8_t VBTBKR30;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR30_b;
    };

    union
    {
        __IOM uint8_t VBTBKR31;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR31_b;
    };

    union
    {
        __IOM uint8_t VBTBKR32;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR32_b;
    };

    union
    {
        __IOM uint8_t VBTBKR33;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR33_b;
    };

    union
    {
        __IOM uint8_t VBTBKR34;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR34_b;
    };

    union
    {
        __IOM uint8_t VBTBKR35;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR35_b;
    };

    union
    {
        __IOM uint8_t VBTBKR36;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR36_b;
    };

    union
    {
        __IOM uint8_t VBTBKR37;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR37_b;
    };

    union
    {
        __IOM uint8_t VBTBKR38;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR38_b;
    };

    union
    {
        __IOM uint8_t VBTBKR39;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR39_b;
    };

    union
    {
        __IOM uint8_t VBTBKR40;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR40_b;
    };

    union
    {
        __IOM uint8_t VBTBKR41;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR41_b;
    };

    union
    {
        __IOM uint8_t VBTBKR42;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR42_b;
    };

    union
    {
        __IOM uint8_t VBTBKR43;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR43_b;
    };

    union
    {
        __IOM uint8_t VBTBKR44;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR44_b;
    };

    union
    {
        __IOM uint8_t VBTBKR45;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR45_b;
    };

    union
    {
        __IOM uint8_t VBTBKR46;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR46_b;
    };

    union
    {
        __IOM uint8_t VBTBKR47;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR47_b;
    };

    union
    {
        __IOM uint8_t VBTBKR48;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR48_b;
    };

    union
    {
        __IOM uint8_t VBTBKR49;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR49_b;
    };

    union
    {
        __IOM uint8_t VBTBKR50;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR50_b;
    };

    union
    {
        __IOM uint8_t VBTBKR51;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR51_b;
    };

    union
    {
        __IOM uint8_t VBTBKR52;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR52_b;
    };

    union
    {
        __IOM uint8_t VBTBKR53;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR53_b;
    };

    union
    {
        __IOM uint8_t VBTBKR54;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR54_b;
    };

    union
    {
        __IOM uint8_t VBTBKR55;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR55_b;
    };

    union
    {
        __IOM uint8_t VBTBKR56;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR56_b;
    };

    union
    {
        __IOM uint8_t VBTBKR57;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR57_b;
    };

    union
    {
        __IOM uint8_t VBTBKR58;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR58_b;
    };

    union
    {
        __IOM uint8_t VBTBKR59;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR59_b;
    };

    union
    {
        __IOM uint8_t VBTBKR60;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR60_b;
    };

    union
    {
        __IOM uint8_t VBTBKR61;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR61_b;
    };

    union
    {
        __IOM uint8_t VBTBKR62;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR62_b;
    };

    union
    {
        __IOM uint8_t VBTBKR63;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR63_b;
    };

    union
    {
        __IOM uint8_t VBTBKR64;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR64_b;
    };

    union
    {
        __IOM uint8_t VBTBKR65;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR65_b;
    };

    union
    {
        __IOM uint8_t VBTBKR66;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR66_b;
    };

    union
    {
        __IOM uint8_t VBTBKR67;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR67_b;
    };

    union
    {
        __IOM uint8_t VBTBKR68;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR68_b;
    };

    union
    {
        __IOM uint8_t VBTBKR69;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR69_b;
    };

    union
    {
        __IOM uint8_t VBTBKR70;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR70_b;
    };

    union
    {
        __IOM uint8_t VBTBKR71;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR71_b;
    };

    union
    {
        __IOM uint8_t VBTBKR72;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR72_b;
    };

    union
    {
        __IOM uint8_t VBTBKR73;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR73_b;
    };

    union
    {
        __IOM uint8_t VBTBKR74;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR74_b;
    };

    union
    {
        __IOM uint8_t VBTBKR75;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR75_b;
    };

    union
    {
        __IOM uint8_t VBTBKR76;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR76_b;
    };

    union
    {
        __IOM uint8_t VBTBKR77;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR77_b;
    };

    union
    {
        __IOM uint8_t VBTBKR78;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR78_b;
    };

    union
    {
        __IOM uint8_t VBTBKR79;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR79_b;
    };

    union
    {
        __IOM uint8_t VBTBKR80;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR80_b;
    };

    union
    {
        __IOM uint8_t VBTBKR81;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR81_b;
    };

    union
    {
        __IOM uint8_t VBTBKR82;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR82_b;
    };

    union
    {
        __IOM uint8_t VBTBKR83;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR83_b;
    };

    union
    {
        __IOM uint8_t VBTBKR84;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR84_b;
    };

    union
    {
        __IOM uint8_t VBTBKR85;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR85_b;
    };

    union
    {
        __IOM uint8_t VBTBKR86;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR86_b;
    };

    union
    {
        __IOM uint8_t VBTBKR87;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR87_b;
    };

    union
    {
        __IOM uint8_t VBTBKR88;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR88_b;
    };

    union
    {
        __IOM uint8_t VBTBKR89;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR89_b;
    };

    union
    {
        __IOM uint8_t VBTBKR90;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR90_b;
    };

    union
    {
        __IOM uint8_t VBTBKR91;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR91_b;
    };

    union
    {
        __IOM uint8_t VBTBKR92;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR92_b;
    };

    union
    {
        __IOM uint8_t VBTBKR93;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR93_b;
    };

    union
    {
        __IOM uint8_t VBTBKR94;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR94_b;
    };

    union
    {
        __IOM uint8_t VBTBKR95;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR95_b;
    };

    union
    {
        __IOM uint8_t VBTBKR96;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR96_b;
    };

    union
    {
        __IOM uint8_t VBTBKR97;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR97_b;
    };

    union
    {
        __IOM uint8_t VBTBKR98;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR98_b;
    };

    union
    {
        __IOM uint8_t VBTBKR99;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR99_b;
    };

    union
    {
        __IOM uint8_t VBTBKR100;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR100_b;
    };

    union
    {
        __IOM uint8_t VBTBKR101;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR101_b;
    };

    union
    {
        __IOM uint8_t VBTBKR102;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR102_b;
    };

    union
    {
        __IOM uint8_t VBTBKR103;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR103_b;
    };

    union
    {
        __IOM uint8_t VBTBKR104;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR104_b;
    };

    union
    {
        __IOM uint8_t VBTBKR105;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR105_b;
    };

    union
    {
        __IOM uint8_t VBTBKR106;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR106_b;
    };

    union
    {
        __IOM uint8_t VBTBKR107;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR107_b;
    };

    union
    {
        __IOM uint8_t VBTBKR108;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR108_b;
    };

    union
    {
        __IOM uint8_t VBTBKR109;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR109_b;
    };

    union
    {
        __IOM uint8_t VBTBKR110;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR110_b;
    };

    union
    {
        __IOM uint8_t VBTBKR111;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR111_b;
    };

    union
    {
        __IOM uint8_t VBTBKR112;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR112_b;
    };

    union
    {
        __IOM uint8_t VBTBKR113;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR113_b;
    };

    union
    {
        __IOM uint8_t VBTBKR114;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR114_b;
    };

    union
    {
        __IOM uint8_t VBTBKR115;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR115_b;
    };

    union
    {
        __IOM uint8_t VBTBKR116;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR116_b;
    };

    union
    {
        __IOM uint8_t VBTBKR117;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR117_b;
    };

    union
    {
        __IOM uint8_t VBTBKR118;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR118_b;
    };

    union
    {
        __IOM uint8_t VBTBKR119;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR119_b;
    };

    union
    {
        __IOM uint8_t VBTBKR120;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR120_b;
    };

    union
    {
        __IOM uint8_t VBTBKR121;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR121_b;
    };

    union
    {
        __IOM uint8_t VBTBKR122;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR122_b;
    };

    union
    {
        __IOM uint8_t VBTBKR123;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR123_b;
    };

    union
    {
        __IOM uint8_t VBTBKR124;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR124_b;
    };

    union
    {
        __IOM uint8_t VBTBKR125;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR125_b;
    };

    union
    {
        __IOM uint8_t VBTBKR126;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR126_b;
    };

    union
    {
        __IOM uint8_t VBTBKR127;

        struct
        {
            __IOM uint8_t VBTBKR : 8;
        } VBTBKR127_b;
    };
} R_SYSTEM_Type;

/* =========================================================================================================================== */
/* ================                                         R_TSN_CAL                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief Temperature Sensor (R_TSN_CAL)
 */

typedef struct
{
    union
    {
        __IM uint32_t TSCDR;

        struct
        {
            __IM uint32_t TSCDR : 32;  /*!< [31..0] The 32 bit TSCDR register stores temperature sensor
                                        *   calibration converted value.                                              */
        } TSCDR_b;
    };
} R_TSN_CAL_Type;

/* =========================================================================================================================== */
/* ================                                        R_TSN_CTRL                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief Temperature Sensor (R_TSN_CTRL)
 */

typedef struct
{
    union
    {
        __IOM uint8_t TSCR;

        struct
        {
            uint8_t            : 4;
            __IOM uint8_t TSOE : 1;
            uint8_t            : 2;
            __IOM uint8_t TSEN : 1;
        } TSCR_b;
    };
} R_TSN_CTRL_Type;

/* =========================================================================================================================== */
/* ================                                         R_USB_FS0                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief USB 2.0 Module (R_USB_FS0)
 */

typedef struct
{
    union
    {
        __IOM uint16_t SYSCFG;

        struct
        {
            __IOM uint16_t USBE  : 1;
            uint16_t             : 2;
            __IOM uint16_t DMRPU : 1;
            __IOM uint16_t DPRPU : 1;
            __IOM uint16_t DRPD  : 1;
            __IOM uint16_t DCFM  : 1;
            uint16_t             : 1;
            __IOM uint16_t CNEN  : 1;
            uint16_t             : 1;
            __IOM uint16_t SCKE  : 1;
            uint16_t             : 5;
        } SYSCFG_b;
    };

    union
    {
        __IOM uint16_t BUSWAIT;

        struct
        {
            __IOM uint16_t BWAIT : 4;  /*!< [3..0] CPU Bus Access Wait Specification BWAIT waits (BWAIT+2
                                        *   access cycles)                                                            */
            uint16_t : 12;
        } BUSWAIT_b;
    };

    union
    {
        __IM uint16_t SYSSTS0;

        struct
        {
            __IM uint16_t LNST  : 2;
            __IM uint16_t IDMON : 1;
            uint16_t            : 2;
            __IM uint16_t SOFEA : 1;   /*!< [5..5] SOF Active Monitor While Host Controller Function is
                                        *   Selected.                                                                 */
            __IM uint16_t HTACT  : 1;
            uint16_t             : 7;
            __IM uint16_t OVCMON : 2;  /*!< [15..14] External USB0_OVRCURA/ USB0_OVRCURB Input Pin MonitorThe
                                        *   OCVMON[1] bit indicates the status of the USBHS_OVRCURA
                                        *   pin. The OCVMON[0] bit indicates the status of the USBHS_OVRCURB
                                        *   pin.                                                                      */
        } SYSSTS0_b;
    };

    union
    {
        __IM uint16_t PLLSTA;

        struct
        {
            __IM uint16_t PLLLOCK : 1;
            uint16_t              : 15;
        } PLLSTA_b;
    };

    union
    {
        __IOM uint16_t DVSTCTR0;

        struct
        {
            __IM uint16_t RHST     : 3;
            uint16_t               : 1;
            __IOM uint16_t UACT    : 1;
            __IOM uint16_t RESUME  : 1;
            __IOM uint16_t USBRST  : 1;
            __IOM uint16_t RWUPE   : 1;
            __IOM uint16_t WKUP    : 1;
            __IOM uint16_t VBUSEN  : 1;
            __IOM uint16_t EXICEN  : 1;
            __IOM uint16_t HNPBTOA : 1; /*!< [11..11] Host Negotiation Protocol (HNP) Control This bit is
                                         *   used when switching from device B to device A while in
                                         *   OTG mode. If the HNPBTOA bit is 1, the internal function
                                         *   control keeps the suspended state until the HNP processing
                                         *   ends even though SYSCFG.DPRPU = 0 or SYSCFG.DCFM = 1 is
                                         *   set.                                                                      */
            uint16_t : 4;
        } DVSTCTR0_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t TESTMODE;

        struct
        {
            __IOM uint16_t UTST : 4;
            uint16_t            : 12;
        } TESTMODE_b;
    };
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t CFIFO;

        struct
        {
            union
            {
                __IOM uint16_t CFIFOL;
                __IOM uint8_t  CFIFOLL;
            };

            union
            {
                __IOM uint16_t CFIFOH;

                struct
                {
                    __IM uint8_t  RESERVED3;
                    __IOM uint8_t CFIFOHH;
                };
            };
        };
    };

    union
    {
        __IOM uint32_t D0FIFO;

        struct
        {
            union
            {
                __IOM uint16_t D0FIFOL;
                __IOM uint8_t  D0FIFOLL;
            };

            union
            {
                __IOM uint16_t D0FIFOH;

                struct
                {
                    __IM uint8_t  RESERVED4;
                    __IOM uint8_t D0FIFOHH;
                };
            };
        };
    };

    union
    {
        __IOM uint32_t D1FIFO;

        struct
        {
            union
            {
                __IOM uint16_t D1FIFOL;
                __IOM uint8_t  D1FIFOLL;
            };

            union
            {
                __IOM uint16_t D1FIFOH;

                struct
                {
                    __IM uint8_t  RESERVED5;
                    __IOM uint8_t D1FIFOHH;
                };
            };
        };
    };

    union
    {
        __IOM uint16_t CFIFOSEL;

        struct
        {
            __IOM uint16_t CURPIPE : 4;
            uint16_t               : 1;
            __IOM uint16_t ISEL    : 1;
            uint16_t               : 2;
            __IOM uint16_t BIGEND  : 1;
            uint16_t               : 1;
            __IOM uint16_t MBW     : 2;
            uint16_t               : 2;
            __IOM uint16_t REW     : 1;
            __IOM uint16_t RCNT    : 1;
        } CFIFOSEL_b;
    };

    union
    {
        __IOM uint16_t CFIFOCTR;

        struct
        {
            __IM uint16_t DTLN : 12;   /*!< [11..0] Receive Data LengthIndicates the length of the receive
                                        *   data.                                                                     */
            uint16_t            : 1;
            __IM uint16_t  FRDY : 1;
            __IOM uint16_t BCLR : 1;
            __IOM uint16_t BVAL : 1;
        } CFIFOCTR_b;
    };
    __IM uint32_t RESERVED6;

    union
    {
        __IOM uint16_t D0FIFOSEL;

        struct
        {
            __IOM uint16_t CURPIPE : 4;
            uint16_t               : 4;
            __IOM uint16_t BIGEND  : 1;
            uint16_t               : 1;
            __IOM uint16_t MBW     : 2;
            __IOM uint16_t DREQE   : 1;
            __IOM uint16_t DCLRM   : 1; /*!< [13..13] Auto Buffer Memory Clear Mode Accessed after Specified
                                         *   Pipe Data is Read                                                         */
            __IOM uint16_t REW  : 1;
            __IOM uint16_t RCNT : 1;
        } D0FIFOSEL_b;
    };

    union
    {
        __IOM uint16_t D0FIFOCTR;

        struct
        {
            __IM uint16_t DTLN : 12;   /*!< [11..0] Receive Data LengthIndicates the length of the receive
                                        *   data.                                                                     */
            uint16_t            : 1;
            __IM uint16_t  FRDY : 1;
            __IOM uint16_t BCLR : 1;
            __IOM uint16_t BVAL : 1;
        } D0FIFOCTR_b;
    };

    union
    {
        __IOM uint16_t D1FIFOSEL;

        struct
        {
            __IOM uint16_t CURPIPE : 4;
            uint16_t               : 4;
            __IOM uint16_t BIGEND  : 1;
            uint16_t               : 1;
            __IOM uint16_t MBW     : 2;
            __IOM uint16_t DREQE   : 1;
            __IOM uint16_t DCLRM   : 1; /*!< [13..13] Auto Buffer Memory Clear Mode Accessed after Specified
                                         *   Pipe Data is Read                                                         */
            __IOM uint16_t REW  : 1;
            __IOM uint16_t RCNT : 1;
        } D1FIFOSEL_b;
    };

    union
    {
        __IOM uint16_t D1FIFOCTR;

        struct
        {
            __IM uint16_t DTLN : 12;   /*!< [11..0] Receive Data LengthIndicates the length of the receive
                                        *   data.                                                                     */
            uint16_t            : 1;
            __IM uint16_t  FRDY : 1;
            __IOM uint16_t BCLR : 1;
            __IOM uint16_t BVAL : 1;
        } D1FIFOCTR_b;
    };

    union
    {
        __IOM uint16_t INTENB0;

        struct
        {
            uint16_t             : 8;
            __IOM uint16_t BRDYE : 1;
            __IOM uint16_t NRDYE : 1;
            __IOM uint16_t BEMPE : 1;
            __IOM uint16_t CTRE  : 1;
            __IOM uint16_t DVSE  : 1;
            __IOM uint16_t SOFE  : 1;
            __IOM uint16_t RSME  : 1;
            __IOM uint16_t VBSE  : 1;
        } INTENB0_b;
    };

    union
    {
        __IOM uint16_t INTENB1;

        struct
        {
            __IOM uint16_t PDDETINTE0 : 1;
            uint16_t                  : 3;
            __IOM uint16_t SACKE      : 1;
            __IOM uint16_t SIGNE      : 1;
            __IOM uint16_t EOFERRE    : 1;
            uint16_t                  : 4;
            __IOM uint16_t ATTCHE     : 1;
            __IOM uint16_t DTCHE      : 1;
            uint16_t                  : 1;
            __IOM uint16_t BCHGE      : 1;
            __IOM uint16_t OVRCRE     : 1;
        } INTENB1_b;
    };
    __IM uint16_t RESERVED7;

    union
    {
        __IOM uint16_t BRDYENB;

        struct
        {
            __IOM uint16_t PIPE0BRDYE : 1;
            __IOM uint16_t PIPE1BRDYE : 1;
            __IOM uint16_t PIPE2BRDYE : 1;
            __IOM uint16_t PIPE3BRDYE : 1;
            __IOM uint16_t PIPE4BRDYE : 1;
            __IOM uint16_t PIPE5BRDYE : 1;
            __IOM uint16_t PIPE6BRDYE : 1;
            __IOM uint16_t PIPE7BRDYE : 1;
            __IOM uint16_t PIPE8BRDYE : 1;
            __IOM uint16_t PIPE9BRDYE : 1;
            uint16_t                  : 6;
        } BRDYENB_b;
    };

    union
    {
        __IOM uint16_t NRDYENB;

        struct
        {
            __IOM uint16_t PIPE0NRDYE : 1;
            __IOM uint16_t PIPE1NRDYE : 1;
            __IOM uint16_t PIPE2NRDYE : 1;
            __IOM uint16_t PIPE3NRDYE : 1;
            __IOM uint16_t PIPE4NRDYE : 1;
            __IOM uint16_t PIPE5NRDYE : 1;
            __IOM uint16_t PIPE6NRDYE : 1;
            __IOM uint16_t PIPE7NRDYE : 1;
            __IOM uint16_t PIPE8NRDYE : 1;
            __IOM uint16_t PIPE9NRDYE : 1;
            uint16_t                  : 6;
        } NRDYENB_b;
    };

    union
    {
        __IOM uint16_t BEMPENB;

        struct
        {
            __IOM uint16_t PIPE0BEMPE : 1;
            __IOM uint16_t PIPE1BEMPE : 1;
            __IOM uint16_t PIPE2BEMPE : 1;
            __IOM uint16_t PIPE3BEMPE : 1;
            __IOM uint16_t PIPE4BEMPE : 1;
            __IOM uint16_t PIPE5BEMPE : 1;
            __IOM uint16_t PIPE6BEMPE : 1;
            __IOM uint16_t PIPE7BEMPE : 1;
            __IOM uint16_t PIPE8BEMPE : 1;
            __IOM uint16_t PIPE9BEMPE : 1;
            uint16_t                  : 6;
        } BEMPENB_b;
    };

    union
    {
        __IOM uint16_t SOFCFG;

        struct
        {
            uint16_t                : 4;
            __IM uint16_t  EDGESTS  : 1;
            __IOM uint16_t INTL     : 1;
            __IOM uint16_t BRDYM    : 1;
            uint16_t                : 1;
            __IOM uint16_t TRNENSEL : 1;
            uint16_t                : 7;
        } SOFCFG_b;
    };

    union
    {
        __IOM uint16_t PHYSET;

        struct
        {
            __IOM uint16_t DIRPD    : 1;
            __IOM uint16_t PLLRESET : 1;
            uint16_t                : 1;
            __IOM uint16_t CDPEN    : 1;
            __IOM uint16_t CLKSEL   : 2;
            uint16_t                : 2;
            __IOM uint16_t REPSEL   : 2;
            uint16_t                : 1;
            __IOM uint16_t REPSTART : 1;
            uint16_t                : 3;
            __IOM uint16_t HSEB     : 1;
        } PHYSET_b;
    };

    union
    {
        __IOM uint16_t INTSTS0;

        struct
        {
            __IM uint16_t  CTSQ  : 3;
            __IOM uint16_t VALID : 1;
            __IM uint16_t  DVSQ  : 3;
            __IM uint16_t  VBSTS : 1;
            __IM uint16_t  BRDY  : 1;
            __IM uint16_t  NRDY  : 1;
            __IM uint16_t  BEMP  : 1;
            __IOM uint16_t CTRT  : 1;
            __IOM uint16_t DVST  : 1;
            __IOM uint16_t SOFR  : 1;
            __IOM uint16_t RESM  : 1;
            __IOM uint16_t VBINT : 1;
        } INTSTS0_b;
    };

    union
    {
        __IOM uint16_t INTSTS1;

        struct
        {
            __IOM uint16_t PDDETINT0 : 1;
            uint16_t                 : 3;
            __IOM uint16_t SACK      : 1;
            __IOM uint16_t SIGN      : 1;
            __IOM uint16_t EOFERR    : 1;
            uint16_t                 : 1;
            __IOM uint16_t LPMEND    : 1;
            __IOM uint16_t L1RSMEND  : 1;
            uint16_t                 : 1;
            __IOM uint16_t ATTCH     : 1;
            __IOM uint16_t DTCH      : 1;
            uint16_t                 : 1;
            __IOM uint16_t BCHG      : 1;
            __IOM uint16_t OVRCR     : 1;
        } INTSTS1_b;
    };
    __IM uint16_t RESERVED8;

    union
    {
        __IOM uint16_t BRDYSTS;

        struct
        {
            __IOM uint16_t PIPE0BRDY : 1;
            __IOM uint16_t PIPE1BRDY : 1;
            __IOM uint16_t PIPE2BRDY : 1;
            __IOM uint16_t PIPE3BRDY : 1;
            __IOM uint16_t PIPE4BRDY : 1;
            __IOM uint16_t PIPE5BRDY : 1;
            __IOM uint16_t PIPE6BRDY : 1;
            __IOM uint16_t PIPE7BRDY : 1;
            __IOM uint16_t PIPE8BRDY : 1;
            __IOM uint16_t PIPE9BRDY : 1;
            uint16_t                 : 6;
        } BRDYSTS_b;
    };

    union
    {
        __IOM uint16_t NRDYSTS;

        struct
        {
            __IOM uint16_t PIPE0NRDY : 1;
            __IOM uint16_t PIPE1NRDY : 1;
            __IOM uint16_t PIPE2NRDY : 1;
            __IOM uint16_t PIPE3NRDY : 1;
            __IOM uint16_t PIPE4NRDY : 1;
            __IOM uint16_t PIPE5NRDY : 1;
            __IOM uint16_t PIPE6NRDY : 1;
            __IOM uint16_t PIPE7NRDY : 1;
            __IOM uint16_t PIPE8NRDY : 1;
            __IOM uint16_t PIPE9NRDY : 1;
            uint16_t                 : 6;
        } NRDYSTS_b;
    };

    union
    {
        __IOM uint16_t BEMPSTS;

        struct
        {
            __IOM uint16_t PIPE0BEMP : 1;
            __IOM uint16_t PIPE1BEMP : 1;
            __IOM uint16_t PIPE2BEMP : 1;
            __IOM uint16_t PIPE3BEMP : 1;
            __IOM uint16_t PIPE4BEMP : 1;
            __IOM uint16_t PIPE5BEMP : 1;
            __IOM uint16_t PIPE6BEMP : 1;
            __IOM uint16_t PIPE7BEMP : 1;
            __IOM uint16_t PIPE8BEMP : 1;
            __IOM uint16_t PIPE9BEMP : 1;
            uint16_t                 : 6;
        } BEMPSTS_b;
    };

    union
    {
        __IOM uint16_t FRMNUM;

        struct
        {
            __IM uint16_t FRNM  : 11;
            uint16_t            : 3;
            __IOM uint16_t CRCE : 1;
            __IOM uint16_t OVRN : 1;
        } FRMNUM_b;
    };

    union
    {
        __IOM uint16_t UFRMNUM;

        struct
        {
            __IM uint16_t UFRNM  : 3;
            uint16_t             : 12;
            __IOM uint16_t DVCHG : 1;
        } UFRMNUM_b;
    };

    union
    {
        __IOM uint16_t USBADDR;

        struct
        {
            __IM uint16_t USBADDR : 7;    /*!< [6..0] USB Address In device controller mode, these flags indicate
                                           *   the USB address assigned by the host when the USBHS processed
                                           *   the SET_ADDRESS request successfully.                                     */
            uint16_t                 : 1;
            __IOM uint16_t STSRECOV0 : 3;
            uint16_t                 : 5;
        } USBADDR_b;
    };
    __IM uint16_t RESERVED9;

    union
    {
        __IOM uint16_t USBREQ;

        struct
        {
            __IOM uint16_t BMREQUESTTYPE : 8; /*!< [7..0] Request TypeThese bits store the USB request bmRequestType
                                               *   value.                                                                    */
            __IOM uint16_t BREQUEST : 8;
        } USBREQ_b;
    };

    union
    {
        __IOM uint16_t USBVAL;

        struct
        {
            __IOM uint16_t WVALUE : 16;
        } USBVAL_b;
    };

    union
    {
        __IOM uint16_t USBINDX;

        struct
        {
            __IOM uint16_t WINDEX : 16;
        } USBINDX_b;
    };

    union
    {
        __IOM uint16_t USBLENG;

        struct
        {
            __IOM uint16_t WLENGTH : 16;
        } USBLENG_b;
    };

    union
    {
        __IOM uint16_t DCPCFG;

        struct
        {
            uint16_t              : 4;
            __IOM uint16_t DIR    : 1;
            uint16_t              : 2;
            __IOM uint16_t SHTNAK : 1;
            __IOM uint16_t CNTMD  : 1;
            uint16_t              : 7;
        } DCPCFG_b;
    };

    union
    {
        __IOM uint16_t DCPMAXP;

        struct
        {
            __IOM uint16_t MXPS : 7;   /*!< [6..0] Maximum Packet SizeThese bits set the maximum amount
                                        *   of data (maximum packet size) in payloads for the DCP.                    */
            uint16_t              : 5;
            __IOM uint16_t DEVSEL : 4;
        } DCPMAXP_b;
    };

    union
    {
        __IOM uint16_t DCPCTR;

        struct
        {
            __IOM uint16_t PID      : 2;
            __IOM uint16_t CCPL     : 1;
            uint16_t                : 2;
            __IM uint16_t  PBUSY    : 1;
            __IM uint16_t  SQMON    : 1;
            __IOM uint16_t SQSET    : 1;
            __IOM uint16_t SQCLR    : 1;
            uint16_t                : 2;
            __IOM uint16_t SUREQCLR : 1;
            uint16_t                : 2;
            __IOM uint16_t SUREQ    : 1;
            __IM uint16_t  BSTS     : 1;
        } DCPCTR_b;
    };
    __IM uint16_t RESERVED10;

    union
    {
        __IOM uint16_t PIPESEL;

        struct
        {
            __IOM uint16_t PIPESEL : 4;
            uint16_t               : 12;
        } PIPESEL_b;
    };
    __IM uint16_t RESERVED11;

    union
    {
        __IOM uint16_t PIPECFG;

        struct
        {
            __IOM uint16_t EPNUM : 4;  /*!< [3..0] Endpoint NumberThese bits specify the endpoint number
                                        *   for the selected pipe.Setting 0000b means unused pipe.                    */
            __IOM uint16_t DIR    : 1;
            uint16_t              : 2;
            __IOM uint16_t SHTNAK : 1;
            uint16_t              : 1;
            __IOM uint16_t DBLB   : 1;
            __IOM uint16_t BFRE   : 1;
            uint16_t              : 3;
            __IOM uint16_t TYPE   : 2;
        } PIPECFG_b;
    };
    __IM uint16_t RESERVED12;

    union
    {
        __IOM uint16_t PIPEMAXP;

        struct
        {
            __IOM uint16_t MXPS : 9;   /*!< [8..0] Maximum Packet SizePIPE1 and PIPE2: 1 byte (001h) to
                                        *   256 bytes (100h)PIPE3 to PIPE5: 8 bytes (008h), 16 bytes
                                        *   (010h), 32 bytes (020h), 64 bytes (040h) (Bits [8:7] and
                                        *   [2:0] are not provided.)PIPE6 to PIPE9: 1 byte (001h) to
                                        *   64 bytes (040h) (Bits [8:7] are not provided.)                            */
            uint16_t              : 3;
            __IOM uint16_t DEVSEL : 4;
        } PIPEMAXP_b;
    };

    union
    {
        __IOM uint16_t PIPEPERI;

        struct
        {
            __IOM uint16_t IITV : 3;   /*!< [2..0] Interval Error Detection IntervalSpecifies the interval
                                        *   error detection timing for the selected pipe in terms of
                                        *   frames, which is expressed as nth power of 2.                             */
            uint16_t            : 9;
            __IOM uint16_t IFIS : 1;
            uint16_t            : 3;
        } PIPEPERI_b;
    };

    union
    {
        __IOM uint16_t PIPE_CTR[9];

        struct
        {
            __IOM uint16_t PID    : 2;
            uint16_t              : 3;
            __IM uint16_t  PBUSY  : 1;
            __IM uint16_t  SQMON  : 1;
            __IOM uint16_t SQSET  : 1;
            __IOM uint16_t SQCLR  : 1;
            __IOM uint16_t ACLRM  : 1;
            __IOM uint16_t ATREPM : 1;
            uint16_t              : 1;
            __IM uint16_t CSSTS   : 1; /*!< [12..12] CSSTS StatusThis bit indicates the CSPLIT status of
                                        *   Split Transaction of the relevant pipe                                    */
            __IOM uint16_t CSCLR : 1;  /*!< [13..13] CSPLIT Status ClearSet this bit to 1 when clearing
                                        *   the CSSTS bit of the relevant pipe                                        */
            __IM uint16_t INBUFM : 1;
            __IM uint16_t BSTS   : 1;
        } PIPE_CTR_b[9];
    };
    __IM uint16_t                RESERVED13;
    __IM uint32_t                RESERVED14[3];
    __IOM R_USB_FS0_PIPE_TR_Type PIPE_TR[5];
    __IM uint32_t                RESERVED15[3];

    union
    {
        __IOM uint16_t USBBCCTRL0;

        struct
        {
            __IOM uint16_t RPDME0     : 1;
            __IOM uint16_t IDPSRCE0   : 1;
            __IOM uint16_t IDMSINKE0  : 1;
            __IOM uint16_t VDPSRCE0   : 1;
            __IOM uint16_t IDPSINKE0  : 1;
            __IOM uint16_t VDMSRCE0   : 1;
            uint16_t                  : 1;
            __IOM uint16_t BATCHGE0   : 1;
            __IM uint16_t  CHGDETSTS0 : 1;
            __IM uint16_t  PDDETSTS0  : 1;
            uint16_t                  : 6;
        } USBBCCTRL0_b;
    };
    __IM uint16_t RESERVED16;
    __IM uint32_t RESERVED17[4];

    union
    {
        __IOM uint16_t UCKSEL;

        struct
        {
            __IOM uint16_t UCKSELC : 1;
            uint16_t               : 15;
        } UCKSEL_b;
    };
    __IM uint16_t RESERVED18;
    __IM uint32_t RESERVED19;

    union
    {
        __IOM uint16_t USBMC;

        struct
        {
            __IOM uint16_t VDDUSBE : 1;
            uint16_t               : 6;
            __IOM uint16_t VDCEN   : 1;
            uint16_t               : 8;
        } USBMC_b;
    };
    __IM uint16_t RESERVED20;

    union
    {
        __IOM uint16_t DEVADD[10];

        struct
        {
            uint16_t               : 6;
            __IOM uint16_t USBSPD  : 2;
            __IOM uint16_t HUBPORT : 3;
            __IOM uint16_t UPPHUB  : 4;
            uint16_t               : 1;
        } DEVADD_b[10];
    };
    __IM uint32_t RESERVED21[3];

    union
    {
        __IOM uint32_t PHYSLEW;

        struct
        {
            __IOM uint32_t SLEWR00 : 1;
            __IOM uint32_t SLEWR01 : 1;
            __IOM uint32_t SLEWF00 : 1;
            __IOM uint32_t SLEWF01 : 1;
            uint32_t               : 28;
        } PHYSLEW_b;
    };
    __IM uint32_t RESERVED22[3];

    union
    {
        __IOM uint16_t LPCTRL;

        struct
        {
            uint16_t             : 7;
            __IOM uint16_t HWUPM : 1;
            uint16_t             : 8;
        } LPCTRL_b;
    };

    union
    {
        __IOM uint16_t LPSTS;

        struct
        {
            uint16_t                : 14;
            __IOM uint16_t SUSPENDM : 1;
            uint16_t                : 1;
        } LPSTS_b;
    };
    __IM uint32_t RESERVED23[15];

    union
    {
        __IOM uint16_t BCCTRL;

        struct
        {
            __IOM uint16_t IDPSRCE  : 1;
            __IOM uint16_t IDMSINKE : 1;
            __IOM uint16_t VDPSRCE  : 1;
            __IOM uint16_t IDPSINKE : 1;
            __IOM uint16_t VDMSRCE  : 1;
            __IOM uint16_t DCPMODE  : 1;
            uint16_t                : 2;
            __IM uint16_t CHGDETSTS : 1;
            __IM uint16_t PDDETSTS  : 1;
            uint16_t                : 6;
        } BCCTRL_b;
    };
    __IM uint16_t RESERVED24;

    union
    {
        __IOM uint16_t PL1CTRL1;

        struct
        {
            __IOM uint16_t L1RESPEN : 1;
            __IOM uint16_t L1RESPMD : 2;
            __IOM uint16_t L1NEGOMD : 1; /*!< [3..3] L1 Response Negotiation Control.NOTE: This bit is valid
                                          *   only when the L1RESPMD[1:0] value is 2'b11.                               */
            __IM uint16_t DVSQ : 4;      /*!< [7..4] DVSQ Extension.DVSQ[3] is Mirror of DVSQ[2:0] in INTSTS0.Indicates
                                          *   the L1 state together with the device state bits DVSQ[2:0].               */
            __IOM uint16_t HIRDTHR : 4;  /*!< [11..8] L1 Response Negotiation Threshold ValueHIRD threshold
                                          *   value used for L1NEGOMD.The format is the same as the HIRD
                                          *   field in HL1CTRL.                                                         */
            uint16_t               : 2;
            __IOM uint16_t L1EXTMD : 1;
            uint16_t               : 1;
        } PL1CTRL1_b;
    };

    union
    {
        __IOM uint16_t PL1CTRL2;

        struct
        {
            uint16_t               : 8;
            __IOM uint16_t HIRDMON : 4;
            __IOM uint16_t RWEMON  : 1;
            uint16_t               : 3;
        } PL1CTRL2_b;
    };

    union
    {
        __IOM uint16_t HL1CTRL1;

        struct
        {
            __IOM uint16_t L1REQ    : 1;
            __IM uint16_t  L1STATUS : 2;
            uint16_t                : 13;
        } HL1CTRL1_b;
    };

    union
    {
        __IOM uint16_t HL1CTRL2;

        struct
        {
            __IOM uint16_t L1ADDR : 4; /*!< [3..0] LPM Token DeviceAddressThese bits specify the value to
                                        *   be set in the ADDR field of LPM token.                                    */
            uint16_t             : 4;
            __IOM uint16_t HIRD  : 4;
            __IOM uint16_t L1RWE : 1;  /*!< [12..12] LPM Token L1 RemoteWake EnableThese bits specify the
                                        *   value to be set in the RWE field of LPM token.                            */
            uint16_t            : 2;
            __IOM uint16_t BESL : 1;   /*!< [15..15] BESL & Alternate HIRDThis bit selects the K-State drive
                                        *   period at the time of L1 Resume.                                          */
        } HL1CTRL2_b;
    };
    __IM uint32_t RESERVED25[5];

    union
    {
        __IM uint32_t DPUSR0R;         /*!< (@ 0x00000160) Deep Standby USB Transceiver Control/Pin Monitor
                                        *                  Register                                                   */

        struct
        {
            uint32_t              : 20;
            __IM uint32_t DOVCAHM : 1;  /*!< [20..20] OVRCURA InputIndicates OVRCURA input signal on the
                                         *   HS side of USB port.                                                      */
            __IM uint32_t DOVCBHM : 1;  /*!< [21..21] OVRCURB InputIndicates OVRCURB input signal on the
                                         *   HS side of USB port.                                                      */
            uint32_t               : 1;
            __IM uint32_t DVBSTSHM : 1; /*!< [23..23] VBUS InputIndicates VBUS input signal on the HS side
                                         *   of USB port.                                                              */
            uint32_t : 8;
        } DPUSR0R_b;
    };

    union
    {
        __IOM uint32_t DPUSR1R;

        struct
        {
            uint32_t                : 4;
            __IOM uint32_t DOVCAHE  : 1;
            __IOM uint32_t DOVCBHE  : 1;
            uint32_t                : 1;
            __IOM uint32_t DVBSTSHE : 1;
            uint32_t                : 12;
            __IM uint32_t DOVCAH    : 1;
            __IM uint32_t DOVCBH    : 1;
            uint32_t                : 1;
            __IM uint32_t DVBSTSH   : 1;
            uint32_t                : 8;
        } DPUSR1R_b;
    };

    union
    {
        __IOM uint16_t DPUSR2R;

        struct
        {
            __IM uint16_t DPINT : 1;
            __IM uint16_t DMINT : 1;
            uint16_t            : 2;
            __IM uint16_t DPVAL : 1;   /*!< [4..4] DP InputIndicates DP input signal on the HS side of USB
                                        *   port.                                                                     */
            __IM uint16_t DMVAL : 1;   /*!< [5..5] DM InputIndicates DM input signal on the HS side of USB
                                        *   port.                                                                     */
            uint16_t              : 2;
            __IOM uint16_t DPINTE : 1;
            __IOM uint16_t DMINTE : 1;
            uint16_t              : 6;
        } DPUSR2R_b;
    };

    union
    {
        __IOM uint16_t DPUSRCR;

        struct
        {
            __IOM uint16_t FIXPHY   : 1;
            __IOM uint16_t FIXPHYPD : 1;
            uint16_t                : 14;
        } DPUSRCR_b;
    };
    __IM uint32_t RESERVED26[165];

    union
    {
        __IOM uint32_t DPUSR0R_FS;      /*!< (@ 0x00000400) Deep Software Standby USB Transceiver Control/Pin
                                         *                  Monitor Register                                           */

        struct
        {
            __IOM uint32_t SRPC0   : 1;
            __IOM uint32_t RPUE0   : 1;
            uint32_t               : 1;
            __IOM uint32_t DRPD0   : 1;
            __IOM uint32_t FIXPHY0 : 1;
            uint32_t               : 11;
            __IM uint32_t DP0      : 1;
            __IM uint32_t DM0      : 1;
            uint32_t               : 2;
            __IM uint32_t DOVCA0   : 1; /*!< [20..20] USB OVRCURA InputIndicates the OVRCURA input signal
                                         *   of the USB.                                                               */
            __IM uint32_t DOVCB0 : 1;   /*!< [21..21] USB OVRCURB InputIndicates the OVRCURB input signal
                                         *   of the USB.                                                               */
            uint32_t              : 1;
            __IM uint32_t DVBSTS0 : 1;  /*!< [23..23] USB VBUS InputIndicates the VBUS input signal of the
                                         *   USB.                                                                      */
            uint32_t : 8;
        } DPUSR0R_FS_b;
    };

    union
    {
        __IOM uint32_t DPUSR1R_FS;        /*!< (@ 0x00000404) Deep Software Standby USB Suspend/Resume Interrupt
                                           *                  Register                                                   */

        struct
        {
            __IOM uint32_t DPINTE0   : 1;
            __IOM uint32_t DMINTE0   : 1;
            uint32_t                 : 2;
            __IOM uint32_t DOVRCRAE0 : 1;
            __IOM uint32_t DOVRCRBE0 : 1;
            uint32_t                 : 1;
            __IOM uint32_t DVBSE0    : 1;
            uint32_t                 : 8;
            __IM uint32_t DPINT0     : 1;
            __IM uint32_t DMINT0     : 1;
            uint32_t                 : 2;
            __IM uint32_t DOVRCRA0   : 1;
            __IM uint32_t DOVRCRB0   : 1;
            uint32_t                 : 1;
            __IM uint32_t DVBINT0    : 1;
            uint32_t                 : 8;
        } DPUSR1R_FS_b;
    };
} R_USB_FS0_Type;

/* =========================================================================================================================== */
/* ================                                           R_WDT                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Watchdog Timer (R_WDT)
 */

typedef struct
{
    union
    {
        __IOM uint8_t WDTRR;

        struct
        {
            __IOM uint8_t WDTRR : 8;   /*!< [7..0] WDTRR is an 8-bit register that refreshes the down-counter
                                        *   of the WDT.                                                               */
        } WDTRR_b;
    };
    __IM uint8_t RESERVED;

    union
    {
        __IOM uint16_t WDTCR;

        struct
        {
            __IOM uint16_t TOPS : 2;
            uint16_t            : 2;
            __IOM uint16_t CKS  : 4;
            __IOM uint16_t RPES : 2;
            uint16_t            : 2;
            __IOM uint16_t RPSS : 2;
            uint16_t            : 2;
        } WDTCR_b;
    };

    union
    {
        __IOM uint16_t WDTSR;

        struct
        {
            __IM uint16_t  CNTVAL : 14;
            __IOM uint16_t UNDFF  : 1;
            __IOM uint16_t REFEF  : 1;
        } WDTSR_b;
    };

    union
    {
        __IOM uint8_t WDTRCR;

        struct
        {
            uint8_t               : 7;
            __IOM uint8_t RSTIRQS : 1;
        } WDTRCR_b;
    };
    __IM uint8_t RESERVED1;

    union
    {
        __IOM uint8_t WDTCSTPR;

        struct
        {
            uint8_t              : 7;
            __IOM uint8_t SLCSTP : 1;
        } WDTCSTPR_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3;
} R_WDT_Type;

/* =========================================================================================================================== */
/* ================                                           R_TZF                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief TrustZone Filter (R_TZF)
 */

typedef struct
{
    __IM uint16_t RESERVED[8];

    union
    {
        __IOM uint16_t TZFOAD;

        struct
        {
            __IOM uint16_t OAD : 1;
            uint16_t           : 7;
            __OM uint16_t KEY  : 8;
        } TZFOAD_b;
    };
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint16_t TZFPT;

        struct
        {
            __IOM uint16_t PROTECT : 1;
            uint16_t               : 7;
            __OM uint16_t KEY      : 8;
        } TZFPT_b;
    };
} R_TZF_Type;

/* =========================================================================================================================== */
/* ================                                          R_CPSCU                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief CPU System Security Control Unit (R_CPSCU)
 */

typedef struct
{
    union
    {
        __IOM uint32_t CSAR;

        struct
        {
            __IOM uint32_t CACHESA  : 1;
            __IOM uint32_t CACHELSA : 1;
            __IOM uint32_t CACHEESA : 1;
            uint32_t                : 29;
        } CSAR_b;
    };
    __IM uint32_t RESERVED[3];

    union
    {
        __IOM uint32_t SRAMSAR;

        struct
        {
            __IOM uint32_t SRAMSA0 : 1;
            __IOM uint32_t SRAMSA1 : 1; /*!< [1..1] Security attributes of registers for SRAM Protection
                                         *   2                                                                         */
            __IOM uint32_t SRAMSA2 : 1;
            uint32_t               : 29;
        } SRAMSAR_b;
    };

    union
    {
        __IOM uint32_t STBRAMSAR;

        struct
        {
            __IOM uint32_t NSBSTBR : 4;
            uint32_t               : 28;
        } STBRAMSAR_b;
    };
    __IM uint32_t RESERVED1[6];

    union
    {
        __IOM uint32_t DTCSAR;

        struct
        {
            __IOM uint32_t DTCSTSA : 1;
            uint32_t               : 31;
        } DTCSAR_b;
    };

    union
    {
        __IOM uint32_t DMACSAR;

        struct
        {
            __IOM uint32_t DMASTSA : 1;
            uint32_t               : 31;
        } DMACSAR_b;
    };
    __IM uint32_t RESERVED2[2];

    union
    {
        __IOM uint32_t ICUSARA;

        struct
        {
            __IOM uint32_t SAIRQCRn : 16;
            uint32_t                : 16;
        } ICUSARA_b;
    };

    union
    {
        __IOM uint32_t ICUSARB;

        struct
        {
            __IOM uint32_t SANMI : 1;
            uint32_t             : 31;
        } ICUSARB_b;
    };

    union
    {
        __IOM uint32_t ICUSARC;

        struct
        {
            __IOM uint32_t SADMACn : 8;
            uint32_t               : 24;
        } ICUSARC_b;
    };

    union
    {
        __IOM uint32_t ICUSARD;

        struct
        {
            __IOM uint32_t SASELSR0 : 1;
            uint32_t                : 31;
        } ICUSARD_b;
    };

    union
    {
        __IOM uint32_t ICUSARE;

        struct
        {
            uint32_t                   : 16;
            __IOM uint32_t SAIWDTWUP   : 1;
            uint32_t                   : 1;
            __IOM uint32_t SALVD1WUP   : 1;
            __IOM uint32_t SALVD2WUP   : 1;
            __IOM uint32_t SAVBATTWUP  : 1;
            uint32_t                   : 3;
            __IOM uint32_t SARTCALMWUP : 1;
            __IOM uint32_t SARTCPRDWUP : 1;
            uint32_t                   : 1;
            __IOM uint32_t SAUSBFS0WUP : 1;
            __IOM uint32_t SAAGT1UDWUP : 1;
            __IOM uint32_t SAAGT1CAWUP : 1;
            __IOM uint32_t SAAGT1CBWUP : 1;
            __IOM uint32_t SAIIC0WUP   : 1;
        } ICUSARE_b;
    };

    union
    {
        __IOM uint32_t ICUSARF;

        struct
        {
            __IOM uint32_t SAAGT3UDWUP  : 1;
            __IOM uint32_t SAAGT3CAWUP  : 1;
            __IOM uint32_t SAAGT3CBWUP  : 1;
            __IOM uint32_t SACOMPHS0WUP : 1;
            uint32_t                    : 4;
            __IOM uint32_t SAULP0UWUP   : 1;
            __IOM uint32_t SAULP0AWUP   : 1;
            __IOM uint32_t SAULP0BWUP   : 1;
            __IOM uint32_t SAI3CWUP     : 1;
            __IOM uint32_t SAULP1UWUP   : 1;
            __IOM uint32_t SAULP1AWUP   : 1;
            __IOM uint32_t SAULP1BWUP   : 1;
            uint32_t                    : 17;
        } ICUSARF_b;
    };
    __IM uint32_t RESERVED3[6];

    union
    {
        __IOM uint32_t ICUSARG;

        struct
        {
            __IOM uint32_t SAIELSRn : 32;
        } ICUSARG_b;
    };

    union
    {
        __IOM uint32_t ICUSARH;

        struct
        {
            __IOM uint32_t SAIELSRn : 32;
        } ICUSARH_b;
    };

    union
    {
        __IOM uint32_t ICUSARI;

        struct
        {
            __IOM uint32_t SAIELSRn : 32;
        } ICUSARI_b;
    };
    __IM uint32_t RESERVED4[33];

    union
    {
        __IOM uint32_t BUSSARA;

        struct
        {
            __IOM uint32_t BUSSA0 : 1;
            uint32_t              : 31;
        } BUSSARA_b;
    };

    union
    {
        __IOM uint32_t BUSSARB;

        struct
        {
            __IOM uint32_t BUSSB0 : 1;
            uint32_t              : 31;
        } BUSSARB_b;
    };
    __IM uint32_t RESERVED5[10];

    union
    {
        __IOM uint32_t MMPUSARA;         /*!< (@ 0x00000130) Master Memory Protection Unit Security Attribution
                                          *                  Register A                                                 */

        struct
        {
            __IOM uint32_t MMPUAnSA : 8;
            uint32_t                : 24;
        } MMPUSARA_b;
    };

    union
    {
        __IOM uint32_t MMPUSARB;         /*!< (@ 0x00000134) Master Memory Protection Unit Security Attribution
                                          *                  Register B                                                 */

        struct
        {
            __IOM uint32_t MMPUB0SA : 1;
            uint32_t                : 31;
        } MMPUSARB_b;
    };
    __IM uint32_t RESERVED6[26];

    union
    {
        __IOM uint32_t DMACCHSAR;

        struct
        {
            __IOM uint32_t DMACCHSARn : 8; /*!< [7..0] Security attributes of output and registers for DMAC
                                            *   channel                                                                   */
            uint32_t : 24;
        } DMACCHSAR_b;
    };
    __IM uint32_t RESERVED7[3];

    union
    {
        __IOM uint32_t CPUDSAR;

        struct
        {
            __IOM uint32_t CPUDSA0 : 1;
            uint32_t               : 31;
        } CPUDSAR_b;
    };
    __IM uint32_t RESERVED8[147];

    union
    {
        __IOM uint32_t SRAMSABAR0;     /*!< (@ 0x00000400) SRAM Security Attribute Boundary Address Register
                                        *                  0                                                          */

        struct
        {
            uint32_t                 : 13;
            __IOM uint32_t SRAMSABAR : 8; /*!< [20..13] Boundary address between secure and non-secure (Start
                                           *   address of non-secure region).                                            */
            uint32_t : 11;
        } SRAMSABAR0_b;
    };

    union
    {
        __IOM uint32_t SRAMSABAR1;     /*!< (@ 0x00000404) SRAM Security Attribute Boundary Address Register
                                        *                  1                                                          */

        struct
        {
            uint32_t                 : 13;
            __IOM uint32_t SRAMSABAR : 8; /*!< [20..13] Boundary address between secure and non-secure (Start
                                           *   address of non-secure region).                                            */
            uint32_t : 11;
        } SRAMSABAR1_b;
    };
    __IM uint32_t RESERVED9[126];

    union
    {
        __IOM uint32_t TEVTRCR;

        struct
        {
            __IOM uint32_t TEVTE : 1;  /*!< [0..0] Trusted Event Route Control Register for IELSRn, DELSRn
                                        *   and ELCSRn                                                                */
            uint32_t : 31;
        } TEVTRCR_b;
    };
} R_CPSCU_Type;

/* =========================================================================================================================== */
/* ================                                          R_DOC_B                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Data Operation Circuit (R_DOC_B)
 */

typedef struct
{
    union
    {
        __IOM uint8_t DOCR;

        struct
        {
            __IOM uint8_t OMS   : 2;
            uint8_t             : 1;
            __IOM uint8_t DOBW  : 1;
            __IOM uint8_t DCSEL : 3;
            uint8_t             : 1;
        } DOCR_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint8_t DOSR;

        struct
        {
            __IM uint8_t DOPCF : 1;
            uint8_t            : 7;
        } DOSR_b;
    };
    __IM uint8_t  RESERVED2;
    __IM uint16_t RESERVED3;

    union
    {
        __IOM uint8_t DOSCR;

        struct
        {
            __OM uint8_t DOPCFCL : 1;
            uint8_t              : 7;
        } DOSCR_b;
    };
    __IM uint8_t   RESERVED4;
    __IM uint16_t  RESERVED5;
    __IOM uint32_t DODIR;
    __IOM uint32_t DODSR0;
    __IOM uint32_t DODSR1;
} R_DOC_B_Type;

/* =========================================================================================================================== */
/* ================                                         R_SCI_B0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Serial Communication Interface 0 (R_SCI_B0)
 */

typedef struct
{
    union
    {
        union
        {
            __IM uint32_t RDR;

            struct
            {
                __IM uint32_t RDAT : 9;
                __IM uint32_t MPB  : 1;
                __IM uint32_t DR   : 1;
                __IM uint32_t FPER : 1;
                __IM uint32_t FFER : 1;
                uint32_t           : 11;
                __IM uint32_t ORER : 1;
                uint32_t           : 2;
                __IM uint32_t PER  : 1;
                __IM uint32_t FER  : 1;
                uint32_t           : 3;
            } RDR_b;
        };

        union
        {
            __IOM uint8_t RDR_BY;

            struct
            {
                __IOM uint8_t RDAT : 8;
            } RDR_BY_b;
        };
    };

    union
    {
        union
        {
            __IOM uint32_t TDR;

            struct
            {
                __IOM uint32_t TDAT  : 9;
                __IOM uint32_t MPBT  : 1;
                uint32_t             : 2;
                __IOM uint32_t TSYNC : 1;
                uint32_t             : 19;
            } TDR_b;
        };

        union
        {
            __IOM uint8_t TDR_BY;

            struct
            {
                __IOM uint8_t TDAT : 8;
            } TDR_BY_b;
        };
    };

    union
    {
        __IOM uint32_t CCR0;

        struct
        {
            __IOM uint32_t RE    : 1;
            uint32_t             : 3;
            __IOM uint32_t TE    : 1;
            uint32_t             : 3;
            __IOM uint32_t MPIE  : 1;
            __IOM uint32_t DCME  : 1;
            __IOM uint32_t IDSEL : 1;
            uint32_t             : 5;
            __IOM uint32_t RIE   : 1;
            uint32_t             : 3;
            __IOM uint32_t TIE   : 1;
            __IOM uint32_t TEIE  : 1;
            uint32_t             : 2;
            __IOM uint32_t SSE   : 1;
            uint32_t             : 7;
        } CCR0_b;
    };

    union
    {
        __IOM uint32_t CCR1;

        struct
        {
            __IOM uint32_t CTSE   : 1;
            __IOM uint32_t CTSPEN : 1;
            uint32_t              : 2;
            __IOM uint32_t SPB2DT : 1;
            __IOM uint32_t SPB2IO : 1;
            uint32_t              : 2;
            __IOM uint32_t PE     : 1;
            __IOM uint32_t PM     : 1;
            uint32_t              : 2;
            __IOM uint32_t TINV   : 1;
            __IOM uint32_t RINV   : 1;
            uint32_t              : 2;
            __IOM uint32_t SPLP   : 1;
            uint32_t              : 3;
            __IOM uint32_t SHARPS : 1;
            uint32_t              : 3;
            __IOM uint32_t NFCS   : 3;
            uint32_t              : 1;
            __IOM uint32_t NFEN   : 1;
            uint32_t              : 3;
        } CCR1_b;
    };

    union
    {
        __IOM uint32_t CCR2;

        struct
        {
            __IOM uint32_t BCP   : 3;
            uint32_t             : 1;
            __IOM uint32_t BGDM  : 1;
            __IOM uint32_t ABCS  : 1;
            __IOM uint32_t ABCSE : 1;
            uint32_t             : 1;
            __IOM uint32_t BRR   : 8;
            __IOM uint32_t BRME  : 1;
            uint32_t             : 3;
            __IOM uint32_t CKS   : 2;
            uint32_t             : 2;
            __IOM uint32_t MDDR  : 8;
        } CCR2_b;
    };

    union
    {
        __IOM uint32_t CCR3;

        struct
        {
            __IOM uint32_t CPHA    : 1;
            __IOM uint32_t CPOL    : 1;
            uint32_t               : 5;
            __IOM uint32_t BPEN    : 1;
            __IOM uint32_t CHR     : 2;
            uint32_t               : 2;
            __IOM uint32_t LSBF    : 1;
            __IOM uint32_t SINV    : 1;
            __IOM uint32_t STP     : 1;
            __IOM uint32_t RXDESEL : 1;
            __IOM uint32_t MOD     : 3;
            __IOM uint32_t MP      : 1;
            __IOM uint32_t FM      : 1;
            __IOM uint32_t DEN     : 1;
            uint32_t               : 2;
            __IOM uint32_t CKE     : 2;
            uint32_t               : 2;
            __IOM uint32_t GM      : 1;
            __IOM uint32_t BLK     : 1;
            uint32_t               : 2;
        } CCR3_b;
    };

    union
    {
        __IOM uint32_t CCR4;

        struct
        {
            __IOM uint32_t CMPD   : 9;
            uint32_t              : 7;
            __IOM uint32_t ASEN   : 1;
            __IOM uint32_t ATEN   : 1;
            uint32_t              : 1;
            __IOM uint32_t SCKSEL : 1;
            uint32_t              : 4;
            __IOM uint32_t AST    : 3;
            __IOM uint32_t AJD    : 1;
            __IOM uint32_t ATT    : 3;
            __IOM uint32_t AET    : 1;
        } CCR4_b;
    };

    union
    {
        __IM uint8_t CESR;

        struct
        {
            __IM uint8_t RIST : 1;
            uint8_t           : 3;
            __IM uint8_t TIST : 1;
            uint8_t           : 3;
        } CESR_b;
    };
    __IM uint8_t  RESERVED;
    __IM uint16_t RESERVED1;

    union
    {
        __IOM uint32_t ICR;

        struct
        {
            __IOM uint32_t IICDL      : 5;
            uint32_t                  : 3;
            __IOM uint32_t IICINTM    : 1;
            __IOM uint32_t IICCSC     : 1;
            uint32_t                  : 3;
            __IOM uint32_t IICACKT    : 1;
            uint32_t                  : 2;
            __IOM uint32_t IICSTAREQ  : 1;
            __IOM uint32_t IICRSTAREQ : 1;
            __IOM uint32_t IICSTPREQ  : 1;
            uint32_t                  : 1;
            __IOM uint32_t IICSDAS    : 2;
            __IOM uint32_t IICSCLS    : 2;
            uint32_t                  : 8;
        } ICR_b;
    };

    union
    {
        __IOM uint32_t FCR;

        struct
        {
            __IOM uint32_t DRES  : 1;
            uint32_t             : 7;
            __IOM uint32_t TTRG  : 5;
            uint32_t             : 2;
            __OM uint32_t  TFRST : 1;
            __IOM uint32_t RTRG  : 5;
            uint32_t             : 2;
            __OM uint32_t  RFRST : 1;
            __IOM uint32_t RSTRG : 5;
            uint32_t             : 3;
        } FCR_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IOM uint32_t MCR;

        struct
        {
            __IOM uint32_t RMPOL  : 1;
            __IOM uint32_t TMPOL  : 1;
            __IOM uint32_t ERTEN  : 1;
            uint32_t              : 1;
            __IOM uint32_t SYNVAL : 1;
            __IOM uint32_t SYNSEL : 1;
            __IOM uint32_t SBSEL  : 1;
            uint32_t              : 1;
            __IOM uint32_t TPLEN  : 4;
            __IOM uint32_t TPPAT  : 2;
            uint32_t              : 2;
            __IOM uint32_t RPLEN  : 4;
            __IOM uint32_t RPPAT  : 2;
            uint32_t              : 2;
            __IOM uint32_t PFEREN : 1;
            __IOM uint32_t SYEREN : 1;
            __IOM uint32_t SBEREN : 1;
            uint32_t              : 5;
        } MCR_b;
    };

    union
    {
        __IOM uint32_t DCR;

        struct
        {
            __IOM uint32_t DEPOL : 1;
            uint32_t             : 7;
            __IOM uint32_t DEAST : 5;
            uint32_t             : 3;
            __IOM uint32_t DENGT : 5;
            uint32_t             : 11;
        } DCR_b;
    };

    union
    {
        __IOM uint32_t XCR0;

        struct
        {
            __IOM uint32_t TCSS  : 2;
            uint32_t             : 6;
            __IOM uint32_t BFE   : 1;
            __IOM uint32_t CF0RE : 1;
            __IOM uint32_t CF1DS : 2;
            __IOM uint32_t PIBE  : 1;
            __IOM uint32_t PIBS  : 3;
            __IOM uint32_t BFOIE : 1;
            __IOM uint32_t BCDIE : 1;
            uint32_t             : 2;
            __IOM uint32_t BFDIE : 1;
            __IOM uint32_t COFIE : 1;
            __IOM uint32_t AEDIE : 1;
            uint32_t             : 1;
            __IOM uint32_t BCCS  : 2;
            uint32_t             : 6;
        } XCR0_b;
    };

    union
    {
        __IOM uint32_t XCR1;

        struct
        {
            __IOM uint32_t TCST  : 1;
            uint32_t             : 3;
            __IOM uint32_t SDST  : 1;
            __IOM uint32_t BMEN  : 1;
            uint32_t             : 2;
            __IOM uint32_t PCF1D : 8;
            __IOM uint32_t SCF1D : 8;
            __IOM uint32_t CF1CE : 8;
        } XCR1_b;
    };

    union
    {
        __IOM uint32_t XCR2;

        struct
        {
            __IOM uint32_t CF0D  : 8;
            __IOM uint32_t CF0CE : 8;
            __IOM uint32_t BFLW  : 16;
        } XCR2_b;
    };
    __IM uint32_t RESERVED3[2];

    union
    {
        __IM uint32_t CSR;

        struct
        {
            uint32_t             : 4;
            __IM uint32_t ERS    : 1;
            uint32_t             : 10;
            __IM uint32_t RXDMON : 1;
            __IM uint32_t DCMF   : 1;
            __IM uint32_t DPER   : 1;
            __IM uint32_t DFER   : 1;
            uint32_t             : 5;
            __IM uint32_t ORER   : 1;
            uint32_t             : 1;
            __IM uint32_t MFF    : 1;
            __IM uint32_t PER    : 1;
            __IM uint32_t FER    : 1;
            __IM uint32_t TDRE   : 1;
            __IM uint32_t TEND   : 1;
            __IM uint32_t RDRF   : 1;
        } CSR_b;
    };

    union
    {
        __IM uint32_t ISR;

        struct
        {
            __IM uint32_t IICACKR : 1;
            uint32_t              : 2;
            __IM uint32_t IICSTIF : 1; /*!< [3..3] Issuing of Start, Restart, or Stop Condition Completed
                                        *   Flag                                                                      */
            uint32_t : 28;
        } ISR_b;
    };

    union
    {
        __IM uint32_t FRSR;

        struct
        {
            __IM uint32_t DR   : 1;
            uint32_t           : 7;
            __IM uint32_t R    : 6;
            uint32_t           : 2;
            __IM uint32_t PNUM : 6;
            uint32_t           : 2;
            __IM uint32_t FNUM : 6;
            uint32_t           : 2;
        } FRSR_b;
    };

    union
    {
        __IM uint32_t FTSR;

        struct
        {
            __IM uint32_t T : 6;
            uint32_t        : 26;
        } FTSR_b;
    };

    union
    {
        __IM uint32_t MSR;

        struct
        {
            __IM uint32_t PFER  : 1;
            __IM uint32_t SYER  : 1;
            __IM uint32_t SBER  : 1;
            uint32_t            : 1;
            __IM uint32_t MER   : 1;
            uint32_t            : 1;
            __IM uint32_t RSYNC : 1;
            uint32_t            : 25;
        } MSR_b;
    };

    union
    {
        __IM uint32_t XSR0;

        struct
        {
            __IM uint32_t SFSF  : 1;
            __IM uint32_t RXDSF : 1;
            uint32_t            : 6;
            __IM uint32_t BFOF  : 1;
            __IM uint32_t BCDF  : 1;
            __IM uint32_t BFDF  : 1;
            __IM uint32_t CF0MF : 1;
            __IM uint32_t CF1MF : 1;
            __IM uint32_t PIBDF : 1;
            __IM uint32_t COF   : 1;
            __IM uint32_t AEDF  : 1;
            __IM uint32_t CF0RD : 8;
            __IM uint32_t CF1RD : 8;
        } XSR0_b;
    };

    union
    {
        __IM uint32_t XSR1;

        struct
        {
            __IM uint32_t TCNT : 16;
            uint32_t           : 16;
        } XSR1_b;
    };
    __IM uint32_t RESERVED4;

    union
    {
        __OM uint32_t CFCLR;

        struct
        {
            uint32_t            : 4;
            __OM uint32_t ERSC  : 1;
            uint32_t            : 11;
            __OM uint32_t DCMFC : 1;
            __OM uint32_t DPERC : 1;
            __OM uint32_t DFERC : 1;
            uint32_t            : 5;
            __OM uint32_t ORERC : 1;
            uint32_t            : 1;
            __OM uint32_t MFFC  : 1;
            __OM uint32_t PERC  : 1;
            __OM uint32_t FERC  : 1;
            __OM uint32_t TDREC : 1;
            uint32_t            : 1;
            __OM uint32_t RDRFC : 1;
        } CFCLR_b;
    };

    union
    {
        __OM uint32_t ICFCLR;

        struct
        {
            uint32_t               : 3;
            __OM uint32_t IICSTIFC : 1;
            uint32_t               : 28;
        } ICFCLR_b;
    };

    union
    {
        __OM uint32_t FFCLR;

        struct
        {
            __OM uint32_t DRC : 1;
            uint32_t          : 31;
        } FFCLR_b;
    };

    union
    {
        __OM uint32_t MFCLR;

        struct
        {
            __OM uint32_t PFERC : 1;
            __OM uint32_t SYERC : 1;
            __OM uint32_t SBERC : 1;
            uint32_t            : 1;
            __OM uint32_t MERC  : 1;
            uint32_t            : 27;
        } MFCLR_b;
    };

    union
    {
        __OM uint32_t XFCLR;

        struct
        {
            uint32_t            : 8;
            __OM uint32_t BFOC  : 1;
            __OM uint32_t BCDC  : 1;
            __OM uint32_t BFDC  : 1;
            __OM uint32_t CF0MC : 1;
            __OM uint32_t CF1MC : 1;
            __OM uint32_t PIBDC : 1;
            __OM uint32_t COFC  : 1;
            __OM uint32_t AEDC  : 1;
            uint32_t            : 16;
        } XFCLR_b;
    };
} R_SCI_B0_Type;

/* =========================================================================================================================== */
/* ================                                         R_SPI_B0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Serial Peripheral Interface 0 (R_SPI_B0)
 */

typedef struct
{
    __IOM uint32_t SPDR;

    union
    {
        __IOM uint32_t SPDECR;

        struct
        {
            __IOM uint32_t SCKDL : 3;
            uint32_t             : 5;
            __IOM uint32_t SLNDL : 3;
            uint32_t             : 5;
            __IOM uint32_t SPNDL : 3;
            uint32_t             : 5;
            __IOM uint32_t ARST  : 3;
            uint32_t             : 5;
        } SPDECR_b;
    };

    union
    {
        __IOM uint32_t SPCR;

        struct
        {
            __IOM uint32_t SPE      : 1;
            uint32_t                : 6;
            __IOM uint32_t SPSCKSEL : 1;
            __IOM uint32_t SPPE     : 1;
            __IOM uint32_t SPOE     : 1;
            uint32_t                : 1;
            __IOM uint32_t PTE      : 1;
            __IOM uint32_t SCKASE   : 1;
            __IOM uint32_t BFDS     : 1;
            __IOM uint32_t MODFEN   : 1;
            uint32_t                : 1;
            __IOM uint32_t SPEIE    : 1;
            __IOM uint32_t SPRIE    : 1;
            __IOM uint32_t SPIIE    : 1;
            __IOM uint32_t SPDRES   : 1;
            __IOM uint32_t SPTIE    : 1;
            __IOM uint32_t CENDIE   : 1;
            uint32_t                : 2;
            __IOM uint32_t SPMS     : 1;
            __IOM uint32_t SPFRF    : 1;
            uint32_t                : 2;
            __IOM uint32_t TXMD     : 2;
            __IOM uint32_t MSTR     : 1;
            __IOM uint32_t BPEN     : 1;
        } SPCR_b;
    };

    union
    {
        __IOM uint32_t SPCR2;

        struct
        {
            __IOM uint32_t RMFM   : 5;
            uint32_t              : 1;
            __OM uint32_t  RMEDTG : 1;
            __OM uint32_t  RMSTTG : 1;
            __IOM uint32_t SPDRC  : 8;
            __IOM uint32_t SPLP   : 1;
            __IOM uint32_t SPLP2  : 1;
            uint32_t              : 2;
            __IOM uint32_t MOIFV  : 1;
            __IOM uint32_t MOIFE  : 1;
            uint32_t              : 10;
        } SPCR2_b;
    };

    union
    {
        __IOM uint32_t SPCR3;

        struct
        {
            __IOM uint32_t SSL0P : 1;
            __IOM uint32_t SSL1P : 1;
            __IOM uint32_t SSL2P : 1;
            __IOM uint32_t SSL3P : 1;
            uint32_t             : 4;
            __IOM uint32_t SPBR  : 8;
            uint32_t             : 8;
            __IOM uint32_t SPSLN : 3;
            uint32_t             : 5;
        } SPCR3_b;
    };

    union
    {
        __IOM uint32_t SPCMD0;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD0_b;
    };

    union
    {
        __IOM uint32_t SPCMD1;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD1_b;
    };

    union
    {
        __IOM uint32_t SPCMD2;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD2_b;
    };

    union
    {
        __IOM uint32_t SPCMD3;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD3_b;
    };

    union
    {
        __IOM uint32_t SPCMD4;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD4_b;
    };

    union
    {
        __IOM uint32_t SPCMD5;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD5_b;
    };

    union
    {
        __IOM uint32_t SPCMD6;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD6_b;
    };

    union
    {
        __IOM uint32_t SPCMD7;

        struct
        {
            __IOM uint32_t CPHA   : 1;
            __IOM uint32_t CPOL   : 1;
            __IOM uint32_t BRDV   : 2;
            uint32_t              : 3;
            __IOM uint32_t SSLKP  : 1;
            uint32_t              : 4;
            __IOM uint32_t LSBF   : 1;
            __IOM uint32_t SPNDEN : 1;
            __IOM uint32_t SLNDEN : 1;
            __IOM uint32_t SCKDEN : 1;
            __IOM uint32_t SPB    : 5;
            uint32_t              : 3;
            __IOM uint32_t SSLA   : 3;
            uint32_t              : 5;
        } SPCMD7_b;
    };
    __IM uint32_t RESERVED[3];

    union
    {
        __IOM uint32_t SPDCR;

        struct
        {
            __IOM uint32_t BYSW   : 1;
            uint32_t              : 2;
            __IOM uint32_t SPRDTD : 1;
            __IOM uint32_t SINV   : 1;
            uint32_t              : 3;
            __IOM uint32_t SPFC   : 2;
            uint32_t              : 22;
        } SPDCR_b;
    };

    union
    {
        __IOM uint32_t SPDCR2;

        struct
        {
            __IOM uint32_t RTRG : 2;
            uint32_t            : 6;
            __IOM uint32_t TTRG : 2;
            uint32_t            : 22;
        } SPDCR2_b;
    };
    __IM uint32_t RESERVED1[2];

    union
    {
        __IM uint32_t SPSR;

        struct
        {
            uint32_t            : 8;
            __IM uint32_t SPCP  : 3;
            uint32_t            : 1;
            __IM uint32_t SPECM : 3;
            uint32_t            : 8;
            __IM uint32_t SPDRF : 1;
            __IM uint32_t OVRF  : 1;
            __IM uint32_t IDLNF : 1;
            __IM uint32_t MODF  : 1;
            __IM uint32_t PERF  : 1;
            __IM uint32_t UDRF  : 1;
            __IM uint32_t SPTEF : 1;
            __IM uint32_t CENDF : 1;
            __IM uint32_t SPRF  : 1;
        } SPSR_b;
    };
    __IM uint32_t RESERVED2;

    union
    {
        __IM uint32_t SPTFSR;

        struct
        {
            __IM uint32_t TFDN : 3;
            uint32_t           : 29;
        } SPTFSR_b;
    };

    union
    {
        __IM uint32_t SPRFSR;

        struct
        {
            __IM uint32_t RFDN : 3;
            uint32_t           : 29;
        } SPRFSR_b;
    };

    union
    {
        __IM uint32_t SPPSR;

        struct
        {
            __IM uint32_t SPEPS : 1;
            uint32_t            : 31;
        } SPPSR_b;
    };
    __IM uint32_t RESERVED3;

    union
    {
        __IOM uint32_t SPSRC;

        struct
        {
            uint32_t             : 23;
            __OM uint32_t SPDRFC : 1;
            __OM uint32_t OVRFC  : 1;
            uint32_t             : 1;
            __OM uint32_t MODFC  : 1;
            __OM uint32_t PERFC  : 1;
            __OM uint32_t UDRFC  : 1;
            __OM uint32_t SPTEFC : 1;
            __OM uint32_t CENDFC : 1;
            __OM uint32_t SPRFC  : 1;
        } SPSRC_b;
    };

    union
    {
        __IOM uint32_t SPFCR;

        struct
        {
            __OM uint32_t SPFRST : 1;
            uint32_t             : 31;
        } SPFCR_b;
    };
} R_SPI_B0_Type;

/* =========================================================================================================================== */
/* ================                                         R_USB_HS0                                         ================ */
/* =========================================================================================================================== */

/**
 * @brief USB 2.0 High-Speed Module (R_USB_HS0)
 */

typedef struct
{
    union
    {
        __IOM uint16_t SYSCFG;

        struct
        {
            __IOM uint16_t USBE  : 1;
            uint16_t             : 3;
            __IOM uint16_t DPRPU : 1;
            __IOM uint16_t DRPD  : 1;
            __IOM uint16_t DCFM  : 1;
            __IOM uint16_t HSE   : 1;
            __IOM uint16_t CNEN  : 1;
            uint16_t             : 7;
        } SYSCFG_b;
    };

    union
    {
        __IOM uint16_t BUSWAIT;

        struct
        {
            __IOM uint16_t BWAIT : 4;  /*!< [3..0] CPU Bus Access Wait Specification BWAIT waits (BWAIT+2
                                        *   access cycles)                                                            */
            uint16_t : 12;
        } BUSWAIT_b;
    };

    union
    {
        __IM uint16_t SYSSTS0;

        struct
        {
            __IM uint16_t LNST  : 2;
            __IM uint16_t IDMON : 1;
            uint16_t            : 2;
            __IM uint16_t SOFEA : 1;   /*!< [5..5] SOF Active Monitor While Host Controller Function is
                                        *   Selected.                                                                 */
            __IM uint16_t HTACT  : 1;
            uint16_t             : 7;
            __IM uint16_t OVCMON : 2;  /*!< [15..14] External USB1_OVRCURA/USB1_OVRCURB Input Pin MonitorThe
                                        *   OCVMON[1] bit indicates the status of the USBHS_OVRCURA
                                        *   pin. The OCVMON[0] bit indicates the status of the USBHS_OVRCURB
                                        *   pin.                                                                      */
        } SYSSTS0_b;
    };

    union
    {
        __IM uint16_t PLLSTA;

        struct
        {
            __IM uint16_t PLLLOCK : 1;
            uint16_t              : 15;
        } PLLSTA_b;
    };

    union
    {
        __IOM uint16_t DVSTCTR0;

        struct
        {
            __IM uint16_t RHST    : 3;
            uint16_t              : 1;
            __IOM uint16_t UACT   : 1;
            __IOM uint16_t RESUME : 1;
            __IOM uint16_t USBRST : 1;
            __IOM uint16_t RWUPE  : 1;  /*!< [7..7] Remote Wakeup Detection Enable for the Host Controller
                                         *   Operation                                                                 */
            __IOM uint16_t WKUP    : 1;
            __IOM uint16_t VBUSEN  : 1;
            __IOM uint16_t EXICEN  : 1;
            __IOM uint16_t HNPBTOA : 1; /*!< [11..11] Host Negotiation Protocol (HNP) Control Use this bit
                                         *   when switching from device B to device A in OTGmode. If
                                         *   the HNPBTOA bit is 1, the internal function controlremains
                                         *   in the Suspend state until the HNP processing endseven
                                         *   if SYSCFG.DPRPU = 0 or SYSCFG.DCFM = 1 is set.                            */
            uint16_t : 4;
        } DVSTCTR0_b;
    };
    __IM uint16_t RESERVED;

    union
    {
        __IOM uint16_t TESTMODE;

        struct
        {
            __IOM uint16_t UTST : 4;
            uint16_t            : 12;
        } TESTMODE_b;
    };
    __IM uint16_t RESERVED1;
    __IM uint32_t RESERVED2;

    union
    {
        union
        {
            __IOM uint32_t CFIFO;

            struct
            {
                __IOM uint32_t FIFOPORT : 32; /*!< [31..0] FIFO Port.Read receive data from the FIFO buffer or
                                               *   write transmit data to the FIFO buffer by accessing these
                                               *   bits.                                                                     */
            } CFIFO_b;
        };

        struct
        {
            union
            {
                __IOM uint16_t CFIFOL;
                __IOM uint8_t  CFIFOLL;
            };

            union
            {
                __IOM uint16_t CFIFOH;

                struct
                {
                    __IM uint8_t  RESERVED3;
                    __IOM uint8_t CFIFOHH;
                };
            };
        };
    };

    union
    {
        union
        {
            __IOM uint32_t D0FIFO;

            struct
            {
                __IOM uint32_t FIFOPORT : 32; /*!< [31..0] FIFO Port Read receive data from the FIFO buffer or
                                               *   write transmit data to the FIFO buffer by accessing these
                                               *   bits.                                                                     */
            } D0FIFO_b;
        };

        struct
        {
            union
            {
                __IOM uint16_t D0FIFOL;
                __IOM uint8_t  D0FIFOLL;
            };

            union
            {
                __IOM uint16_t D0FIFOH;

                struct
                {
                    __IM uint8_t  RESERVED4;
                    __IOM uint8_t D0FIFOHH;
                };
            };
        };
    };

    union
    {
        union
        {
            __IOM uint32_t D1FIFO;

            struct
            {
                __IOM uint32_t FIFOPORT : 32; /*!< [31..0] FIFO PortRead receive data from the FIFO buffer or write
                                               *   transmit data to the FIFO buffer by accessing these bits.                 */
            } D1FIFO_b;
        };

        struct
        {
            union
            {
                __IOM uint16_t D1FIFOL;
                __IOM uint8_t  D1FIFOLL;
            };

            union
            {
                __IOM uint16_t D1FIFOH;

                struct
                {
                    __IM uint8_t  RESERVED5;
                    __IOM uint8_t D1FIFOHH;
                };
            };
        };
    };

    union
    {
        __IOM uint16_t CFIFOSEL;

        struct
        {
            __IOM uint16_t CURPIPE : 4;
            uint16_t               : 1;
            __IOM uint16_t ISEL    : 1;
            uint16_t               : 2;
            __IOM uint16_t BIGEND  : 1;
            uint16_t               : 1;
            __IOM uint16_t MBW     : 2;
            uint16_t               : 2;
            __OM uint16_t  REW     : 1;
            __IOM uint16_t RCNT    : 1;
        } CFIFOSEL_b;
    };

    union
    {
        __IOM uint16_t CFIFOCTR;

        struct
        {
            __IM uint16_t DTLN : 12;   /*!< [11..0] Receive Data Length.Indicates the length of the receive
                                        *   data.                                                                     */
            uint16_t           : 1;
            __IM uint16_t FRDY : 1;    /*!< [13..13] FIFO Port ReadyIndicates whether the FIFO port can
                                        *   be accessed.                                                              */
            __OM uint16_t  BCLR : 1;
            __IOM uint16_t BVAL : 1;
        } CFIFOCTR_b;
    };
    __IM uint32_t RESERVED6;

    union
    {
        __IOM uint16_t D0FIFOSEL;

        struct
        {
            __IOM uint16_t CURPIPE : 4;
            uint16_t               : 4;
            __IOM uint16_t BIGEND  : 1;
            uint16_t               : 1;
            __IOM uint16_t MBW     : 2;
            __IOM uint16_t DREQE   : 1;
            __IOM uint16_t DCLRM   : 1; /*!< [13..13] Auto Buffer Memory Clear Mode Accessed after Specified
                                         *   Pipe Data is Read                                                         */
            __OM uint16_t  REW  : 1;
            __IOM uint16_t RCNT : 1;
        } D0FIFOSEL_b;
    };

    union
    {
        __IOM uint16_t D0FIFOCTR;

        struct
        {
            __IM uint16_t DTLN : 12;   /*!< [11..0] Receive Data Length.Indicates the length of the receive
                                        *   data.                                                                     */
            uint16_t           : 1;
            __IM uint16_t FRDY : 1;    /*!< [13..13] FIFO Port ReadyIndicates whether the FIFO port can
                                        *   be accessed.                                                              */
            __OM uint16_t  BCLR : 1;
            __IOM uint16_t BVAL : 1;
        } D0FIFOCTR_b;
    };

    union
    {
        __IOM uint16_t D1FIFOSEL;

        struct
        {
            __IOM uint16_t CURPIPE : 4;
            uint16_t               : 4;
            __IOM uint16_t BIGEND  : 1;
            uint16_t               : 1;
            __IOM uint16_t MBW     : 2;
            __IOM uint16_t DREQE   : 1;
            __IOM uint16_t DCLRM   : 1; /*!< [13..13] Auto Buffer Memory Clear Mode Accessed after Specified
                                         *   Pipe Data is Read                                                         */
            __OM uint16_t  REW  : 1;
            __IOM uint16_t RCNT : 1;
        } D1FIFOSEL_b;
    };

    union
    {
        __IOM uint16_t D1FIFOCTR;

        struct
        {
            __IM uint16_t DTLN : 12;   /*!< [11..0] Receive Data Length.Indicates the length of the receive
                                        *   data.                                                                     */
            uint16_t           : 1;
            __IM uint16_t FRDY : 1;    /*!< [13..13] FIFO Port ReadyIndicates whether the FIFO port can
                                        *   be accessed.                                                              */
            __OM uint16_t  BCLR : 1;
            __IOM uint16_t BVAL : 1;
        } D1FIFOCTR_b;
    };

    union
    {
        __IOM uint16_t INTENB0;

        struct
        {
            uint16_t             : 8;
            __IOM uint16_t BRDYE : 1;
            __IOM uint16_t NRDYE : 1;
            __IOM uint16_t BEMPE : 1;
            __IOM uint16_t CTRE  : 1;
            __IOM uint16_t DVSE  : 1;
            __IOM uint16_t SOFE  : 1;
            __IOM uint16_t RSME  : 1;
            __IOM uint16_t VBSE  : 1;
        } INTENB0_b;
    };

    union
    {
        __IOM uint16_t INTENB1;

        struct
        {
            __IOM uint16_t PDDETINTE0 : 1;
            uint16_t                  : 3;
            __IOM uint16_t SACKE      : 1;
            __IOM uint16_t SIGNE      : 1;
            __IOM uint16_t EOFERRE    : 1;
            uint16_t                  : 1;
            __IOM uint16_t LPMENDE    : 1;
            __IOM uint16_t L1RSMENDE  : 1;
            uint16_t                  : 1;
            __IOM uint16_t ATTCHE     : 1;
            __IOM uint16_t DTCHE      : 1;
            uint16_t                  : 1;
            __IOM uint16_t BCHGE      : 1;
            __IOM uint16_t OVRCRE     : 1;
        } INTENB1_b;
    };
    __IM uint16_t RESERVED7;

    union
    {
        __IOM uint16_t BRDYENB;

        struct
        {
            __IOM uint16_t PIPEBRDYE : 10;
            uint16_t                 : 6;
        } BRDYENB_b;
    };

    union
    {
        __IOM uint16_t NRDYENB;

        struct
        {
            __IOM uint16_t PIPENRDYE : 10;
            uint16_t                 : 6;
        } NRDYENB_b;
    };

    union
    {
        __IOM uint16_t BEMPENB;

        struct
        {
            __IOM uint16_t PIPEBEMPE : 10;
            uint16_t                 : 6;
        } BEMPENB_b;
    };

    union
    {
        __IOM uint16_t SOFCFG;

        struct
        {
            uint16_t               : 4;
            __IM uint16_t  EDGESTS : 1;
            __IOM uint16_t INTL    : 1;
            __IOM uint16_t BRDYM   : 1;  /*!< [6..6] PIPEBRDY Interrupt Status Clear Timing.This bit can be
                                          *   set only in the initial setting (before communications).The
                                          *   setting cannot be changed once communication starts.                      */
            uint16_t                : 1;
            __IOM uint16_t TRNENSEL : 1; /*!< [8..8] Transaction-Enabled Time Select.The transfer efficiency
                                          *   can be improved by setting this bit to 1 if no low-speed
                                          *   device is connected directly or via FS-HUB to the USB port.               */
            uint16_t : 7;
        } SOFCFG_b;
    };

    union
    {
        __IOM uint16_t PHYSET;

        struct
        {
            __IOM uint16_t DIRPD    : 1;
            __IOM uint16_t PLLRESET : 1;
            uint16_t                : 1;
            __IOM uint16_t CDPEN    : 1;
            __IOM uint16_t CLKSEL   : 2;
            uint16_t                : 2;
            __IOM uint16_t REPSEL   : 2;
            uint16_t                : 1;
            __IOM uint16_t REPSTART : 1;
            uint16_t                : 3;
            __IOM uint16_t HSEB     : 1;
        } PHYSET_b;
    };

    union
    {
        __IOM uint16_t INTSTS0;

        struct
        {
            __IM uint16_t  CTSQ  : 3;
            __IOM uint16_t VALID : 1;
            __IM uint16_t  DVSQ  : 3;
            __IM uint16_t  VBSTS : 1;
            __IM uint16_t  BRDY  : 1;
            __IM uint16_t  NRDY  : 1;
            __IM uint16_t  BEMP  : 1;
            __IOM uint16_t CTRT  : 1;
            __IOM uint16_t DVST  : 1;
            __IOM uint16_t SOFR  : 1;
            __IOM uint16_t RESM  : 1;
            __IOM uint16_t VBINT : 1;
        } INTSTS0_b;
    };

    union
    {
        __IOM uint16_t INTSTS1;

        struct
        {
            __IOM uint16_t PDDETINT0 : 1;
            uint16_t                 : 3;
            __IOM uint16_t SACK      : 1;
            __IOM uint16_t SIGN      : 1;
            __IOM uint16_t EOFERR    : 1;
            uint16_t                 : 1;
            __IOM uint16_t LPMEND    : 1;
            __IOM uint16_t L1RSMEND  : 1;
            uint16_t                 : 1;
            __IOM uint16_t ATTCH     : 1;
            __IOM uint16_t DTCH      : 1;
            uint16_t                 : 1;
            __IOM uint16_t BCHG      : 1;
            __IOM uint16_t OVRCR     : 1;
        } INTSTS1_b;
    };
    __IM uint16_t RESERVED8;

    union
    {
        __IOM uint16_t BRDYSTS;

        struct
        {
            __IOM uint16_t PIPEBRDY : 10;
            uint16_t                : 6;
        } BRDYSTS_b;
    };

    union
    {
        __IOM uint16_t NRDYSTS;

        struct
        {
            __IOM uint16_t PIPENRDY : 10;
            uint16_t                : 6;
        } NRDYSTS_b;
    };

    union
    {
        __IOM uint16_t BEMPSTS;

        struct
        {
            __IOM uint16_t PIPEBEMP : 10;
            uint16_t                : 6;
        } BEMPSTS_b;
    };

    union
    {
        __IOM uint16_t FRMNUM;

        struct
        {
            __IM uint16_t FRNM  : 11;
            uint16_t            : 3;
            __IOM uint16_t CRCE : 1;
            __IOM uint16_t OVRN : 1;
        } FRMNUM_b;
    };

    union
    {
        __IOM uint16_t UFRMNUM;

        struct
        {
            __IM uint16_t UFRNM  : 3;
            uint16_t             : 12;
            __IOM uint16_t DVCHG : 1;
        } UFRMNUM_b;
    };

    union
    {
        __IOM uint16_t USBADDR;

        struct
        {
            uint16_t                 : 8;
            __IOM uint16_t STSRECOV0 : 3;
            uint16_t                 : 5;
        } USBADDR_b;
    };
    __IM uint16_t RESERVED9;

    union
    {
        __IOM uint16_t USBREQ;

        struct
        {
            __IOM uint16_t BMREQUESTTYPE : 8; /*!< [7..0] USB request bmRequestType value Finction controller selected
                                               *   : read-only Host controller selected : read-write                         */
            __IOM uint16_t BREQUEST : 8;      /*!< [15..8] USB request bRequest value Finction controller selected
                                               *   : read-only Host controller selected : read-write                         */
        } USBREQ_b;
    };

    union
    {
        __IOM uint16_t USBVAL;

        struct
        {
            __IOM uint16_t WVALUE : 16; /*!< [15..0] Value of USB request wValue Finction controller selected
                                         *   : read-only Host controller selected : read-write                         */
        } USBVAL_b;
    };

    union
    {
        __IOM uint16_t USBINDX;

        struct
        {
            __IOM uint16_t WINDEX : 16; /*!< [15..0] Value of USB request wIndex Finction controller selected
                                         *   : read-only Host controller selected : read-write                         */
        } USBINDX_b;
    };

    union
    {
        __IOM uint16_t USBLENG;

        struct
        {
            __IOM uint16_t WLENGTH : 16; /*!< [15..0] Value of USB request wLength Finction controller selected
                                          *   : read-only Host controller selected : read-write                         */
        } USBLENG_b;
    };

    union
    {
        __IOM uint16_t DCPCFG;

        struct
        {
            uint16_t              : 4;
            __IOM uint16_t DIR    : 1;
            uint16_t              : 2;
            __IOM uint16_t SHTNAK : 1;
            __IOM uint16_t CNTMD  : 1;
            uint16_t              : 7;
        } DCPCFG_b;
    };

    union
    {
        __IOM uint16_t DCPMAXP;

        struct
        {
            __IOM uint16_t MXPS : 7;   /*!< [6..0] Maximum Packet SizeThese bits specify the maximum data
                                        *   payload (maximum packet size) for the DCP.                                */
            uint16_t              : 5;
            __IOM uint16_t DEVSEL : 4; /*!< [15..12] Device SelectThese bits specify the address of the
                                        *   destination function device for control transfer when the
                                        *   host controller function is selected.                                     */
        } DCPMAXP_b;
    };

    union
    {
        __IOM uint16_t DCPCTR;

        struct
        {
            __IOM uint16_t PID      : 2;
            __IOM uint16_t CCPL     : 1;
            uint16_t                : 1;
            __IOM uint16_t PINGE    : 1;
            __IM uint16_t  PBUSY    : 1;
            __IM uint16_t  SQMON    : 1;
            __IOM uint16_t SQSET    : 1;
            __IOM uint16_t SQCLR    : 1;
            uint16_t                : 2;
            __IOM uint16_t SUREQCLR : 1;
            __IM uint16_t  CSSTS    : 1;
            __IOM uint16_t CSCLR    : 1;
            __IOM uint16_t SUREQ    : 1;
            __IM uint16_t  BSTS     : 1;
        } DCPCTR_b;
    };
    __IM uint16_t  RESERVED10;
    __IOM uint16_t PIPESEL;
    __IM uint16_t  RESERVED11;

    union
    {
        __IOM uint16_t PIPECFG;

        struct
        {
            __IOM uint16_t EPNUM  : 4;
            __IOM uint16_t DIR    : 1;
            uint16_t              : 2;
            __IOM uint16_t SHTNAK : 1;
            __IOM uint16_t CNTMD  : 1;
            __IOM uint16_t DBLB   : 1;
            __IOM uint16_t BFRE   : 1;
            uint16_t              : 3;
            __IOM uint16_t TYPE   : 2;
        } PIPECFG_b;
    };

    union
    {
        __IOM uint16_t PIPEBUF;

        struct
        {
            __IOM uint16_t BUFNMB : 8;  /*!< [7..0] Buffer NumberThese bits specify the FIFO buffer number
                                         *   of the selected pipe (04h to 87h).                                        */
            uint16_t               : 2;
            __IOM uint16_t BUFSIZE : 5;
            uint16_t               : 1;
        } PIPEBUF_b;
    };

    union
    {
        __IOM uint16_t PIPEMAXP;

        struct
        {
            __IOM uint16_t MXPS : 11;  /*!< [10..0] Maximum Packet SizeThese bits specify the maximum data
                                        *   payload (maximum packet size) for the selected pipe.A size
                                        *   of 1h to 40h bytes can be set for PIPE6 to PIPE9.                         */
            uint16_t              : 1;
            __IOM uint16_t DEVSEL : 4; /*!< [15..12] Device SelectThese bits specify the address of the
                                        *   peripheral device when the host controller function is
                                        *   selected.                                                                 */
        } PIPEMAXP_b;
    };

    union
    {
        __IOM uint16_t PIPEPERI;

        struct
        {
            __IOM uint16_t IITV : 3;   /*!< [2..0] Interval Error Detection IntervalThese bits specify the
                                        *   transfer interval timing for the selected pipe as n-th
                                        *   power of 2 of the frame timing.                                           */
            uint16_t            : 9;
            __IOM uint16_t IFIS : 1;
            uint16_t            : 3;
        } PIPEPERI_b;
    };

    union
    {
        __IOM uint16_t PIPE_CTR[9];

        struct
        {
            __IOM uint16_t PID : 2;    /*!< [1..0] Response PIDThese bits specify the response type for
                                        *   the next transaction of the relevant pipe.                                */
            uint16_t            : 3;
            __IM uint16_t PBUSY : 1;   /*!< [5..5] Pipe BusyThis bit indicates whether the relevant pipe
                                        *   is being used for the USB bus                                             */
            __IM uint16_t SQMON : 1;   /*!< [6..6] Toggle Bit ConfirmationThis bit indicates the expected
                                        *   value of the sequence toggle bit for the next transaction
                                        *   of the relevant pipe                                                      */
            __IOM uint16_t SQSET : 1;  /*!< [7..7] Toggle Bit SetThis bit is set to 1 when the expected
                                        *   value of the sequence toggle bit for the next transaction
                                        *   of the relevant pipe is set for DATA1                                     */
            __IOM uint16_t SQCLR : 1;  /*!< [8..8] Toggle Bit ClearThis bit is set to 1 when the expected
                                        *   value of the sequence toggle bit for the next transaction
                                        *   of the relevant pipe is cleared to DATA0                                  */
            __IOM uint16_t ACLRM : 1;  /*!< [9..9] Auto Buffer Clear ModeThis bit enables or disables auto
                                        *   buffer clear mode for the relevant pipe                                   */
            __IOM uint16_t ATREPM : 1; /*!< [10..10] Auto Response ModeThis bit enables or disables auto
                                        *   response mode for the relevant pipe.                                      */
            uint16_t            : 1;
            __IM uint16_t CSSTS : 1;   /*!< [12..12] CSSTS StatusThis bit indicates the CSPLIT status of
                                        *   Split Transaction of the relevant pipe                                    */
            __IOM uint16_t CSCLR : 1;  /*!< [13..13] CSPLIT Status ClearSet this bit to 1 when clearing
                                        *   the CSSTS bit of the relevant pipe                                        */
            __IM uint16_t INBUFM : 1;  /*!< [14..14] Transmit Buffer MonitorThis bit indicates the FIFO
                                        *   buffer status for the relevant pipe in the transmitting
                                        *   direction.                                                                */
            __IM uint16_t BSTS : 1;    /*!< [15..15] Buffer StatusThis bit indicates the FIFO buffer status
                                        *   for the relevant pipe.                                                    */
        } PIPE_CTR_b[9];
    };
    __IM uint16_t                RESERVED12;
    __IM uint32_t                RESERVED13[3];
    __IOM R_USB_HS0_PIPE_TR_Type PIPE_TR[5];
    __IM uint32_t                RESERVED14[11];

    union
    {
        __IOM uint16_t DEVADD[10];

        struct
        {
            uint16_t               : 6;
            __IOM uint16_t USBSPD  : 2;
            __IOM uint16_t HUBPORT : 3;
            __IOM uint16_t UPPHUB  : 4;
            uint16_t               : 1;
        } DEVADD_b[10];
    };
    __IM uint32_t RESERVED15[7];

    union
    {
        __IOM uint16_t LPCTRL;

        struct
        {
            uint16_t             : 7;
            __IOM uint16_t HWUPM : 1;
            uint16_t             : 8;
        } LPCTRL_b;
    };

    union
    {
        __IOM uint16_t LPSTS;

        struct
        {
            uint16_t                : 14;
            __IOM uint16_t SUSPENDM : 1;
            uint16_t                : 1;
        } LPSTS_b;
    };
    __IM uint32_t RESERVED16[15];

    union
    {
        __IOM uint16_t BCCTRL;

        struct
        {
            __IOM uint16_t IDPSRCE  : 1;
            __IOM uint16_t IDMSINKE : 1;
            __IOM uint16_t VDPSRCE  : 1;
            __IOM uint16_t IDPSINKE : 1;
            __IOM uint16_t VDMSRCE  : 1;
            __IOM uint16_t DCPMODE  : 1;
            uint16_t                : 2;
            __IM uint16_t CHGDETSTS : 1;
            __IM uint16_t PDDETSTS  : 1;
            uint16_t                : 6;
        } BCCTRL_b;
    };
    __IM uint16_t RESERVED17;

    union
    {
        __IOM uint16_t PL1CTRL1;

        struct
        {
            __IOM uint16_t L1RESPEN : 1;
            __IOM uint16_t L1RESPMD : 2;
            __IOM uint16_t L1NEGOMD : 1; /*!< [3..3] L1 Response Negotiation Control.NOTE: This bit is valid
                                          *   only when the L1RESPMD[1:0] value is 2'b11.                               */
            __IM uint16_t DVSQ : 4;      /*!< [7..4] DVSQ Extension.DVSQ[3] is Mirror of DVSQ[2:0] in INTSTS0.Indicates
                                          *   the L1 state together with the device state bits DVSQ[2:0].               */
            __IOM uint16_t HIRDTHR : 4;  /*!< [11..8] L1 Response Negotiation Threshold ValueHIRD threshold
                                          *   value used for L1NEGOMD.The format is the same as the HIRD
                                          *   field in HL1CTRL.                                                         */
            uint16_t               : 2;
            __IOM uint16_t L1EXTMD : 1;
            uint16_t               : 1;
        } PL1CTRL1_b;
    };

    union
    {
        __IOM uint16_t PL1CTRL2;

        struct
        {
            uint16_t               : 8;
            __IOM uint16_t HIRDMON : 4;
            __IOM uint16_t RWEMON  : 1;
            uint16_t               : 3;
        } PL1CTRL2_b;
    };

    union
    {
        __IOM uint16_t HL1CTRL1;

        struct
        {
            __IOM uint16_t L1REQ    : 1;
            __IM uint16_t  L1STATUS : 2;
            uint16_t                : 13;
        } HL1CTRL1_b;
    };

    union
    {
        __IOM uint16_t HL1CTRL2;

        struct
        {
            __IOM uint16_t L1ADDR : 4; /*!< [3..0] LPM Token DeviceAddressThese bits specify the value to
                                        *   be set in the ADDR field of LPM token.                                    */
            uint16_t             : 4;
            __IOM uint16_t HIRD  : 4;
            __IOM uint16_t L1RWE : 1;  /*!< [12..12] LPM Token L1 RemoteWake EnableThese bits specify the
                                        *   value to be set in the RWE field of LPM token.                            */
            uint16_t            : 2;
            __IOM uint16_t BESL : 1;   /*!< [15..15] BESL & Alternate HIRDThis bit selects the K-State drive
                                        *   period at the time of L1 Resume.                                          */
        } HL1CTRL2_b;
    };
    __IM uint32_t RESERVED18;

    union
    {
        __IOM uint16_t PHYTRIM1;

        struct
        {
            __IOM uint16_t DRISE     : 2;
            __IOM uint16_t DFALL     : 2;
            uint16_t                 : 3;
            __IOM uint16_t PCOMPENB  : 1;
            __IOM uint16_t HSIUP     : 4;
            __IOM uint16_t IMPOFFSET : 3; /*!< [14..12] terminating resistance offset value setting.Offset
                                           *   value for adjusting the terminating resistance.                           */
            uint16_t : 1;
        } PHYTRIM1_b;
    };

    union
    {
        __IOM uint16_t PHYTRIM2;

        struct
        {
            __IOM uint16_t SQU      : 4;
            uint16_t                : 3;
            __IOM uint16_t HSRXENMO : 1;
            __IOM uint16_t PDR      : 2;
            uint16_t                : 2;
            __IOM uint16_t DIS      : 3;
            uint16_t                : 1;
        } PHYTRIM2_b;
    };
    __IM uint32_t RESERVED19[3];

    union
    {
        __IM uint32_t DPUSR0R;         /*!< (@ 0x00000160) Deep Standby USB Transceiver Control/Pin Monitor
                                        *                  Register                                                   */

        struct
        {
            uint32_t              : 20;
            __IM uint32_t DOVCAHM : 1;  /*!< [20..20] OVRCURA InputIndicates OVRCURA input signal on the
                                         *   HS side of USB port.                                                      */
            __IM uint32_t DOVCBHM : 1;  /*!< [21..21] OVRCURB InputIndicates OVRCURB input signal on the
                                         *   HS side of USB port.                                                      */
            uint32_t               : 1;
            __IM uint32_t DVBSTSHM : 1; /*!< [23..23] VBUS InputIndicates VBUS input signal on the HS side
                                         *   of USB port.                                                              */
            uint32_t : 8;
        } DPUSR0R_b;
    };

    union
    {
        __IOM uint32_t DPUSR1R;

        struct
        {
            uint32_t                : 4;
            __IOM uint32_t DOVCAHE  : 1;
            __IOM uint32_t DOVCBHE  : 1;
            uint32_t                : 1;
            __IOM uint32_t DVBSTSHE : 1;
            uint32_t                : 12;
            __IM uint32_t DOVCAH    : 1;
            __IM uint32_t DOVCBH    : 1;
            uint32_t                : 1;
            __IM uint32_t DVBSTSH   : 1;
            uint32_t                : 8;
        } DPUSR1R_b;
    };

    union
    {
        __IOM uint16_t DPUSR2R;

        struct
        {
            __IM uint16_t DPINT : 1;
            __IM uint16_t DMINT : 1;
            uint16_t            : 2;
            __IM uint16_t DPVAL : 1;   /*!< [4..4] DP InputIndicates DP input signal on the HS side of USB
                                        *   port.                                                                     */
            __IM uint16_t DMVAL : 1;   /*!< [5..5] DM InputIndicates DM input signal on the HS side of USB
                                        *   port.                                                                     */
            uint16_t              : 2;
            __IOM uint16_t DPINTE : 1;
            __IOM uint16_t DMINTE : 1;
            uint16_t              : 6;
        } DPUSR2R_b;
    };

    union
    {
        __IOM uint16_t DPUSRCR;

        struct
        {
            __IOM uint16_t FIXPHY   : 1;
            __IOM uint16_t FIXPHYPD : 1;
            uint16_t                : 14;
        } DPUSRCR_b;
    };
} R_USB_HS0_Type;

/* =========================================================================================================================== */
/* ================                                          R_XSPI                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief eXpanded SPI (R_XSPI)
 */

typedef struct
{
    union
    {
        __IOM uint32_t WRAPCFG;

        struct
        {
            __IOM uint32_t CKSFTCS0 : 5;
            uint32_t                : 3;
            __IOM uint32_t DSSFTCS0 : 5;
            uint32_t                : 3;
            __IOM uint32_t CKSFTCS1 : 5;
            uint32_t                : 3;
            __IOM uint32_t DSSFTCS1 : 5;
            uint32_t                : 3;
        } WRAPCFG_b;
    };

    union
    {
        __IOM uint32_t COMCFG;

        struct
        {
            __IOM uint32_t ARBMD       : 2;
            uint32_t                   : 2;
            __IOM uint32_t ECSINTOUTEN : 2;
            uint32_t                   : 10;
            __IOM uint32_t OEASTEX     : 1;
            __IOM uint32_t OENEGEX     : 1;
            uint32_t                   : 14;
        } COMCFG_b;
    };

    union
    {
        __IOM uint32_t BMCFGCH[2];

        struct
        {
            __IOM uint32_t WRMD    : 1;
            uint32_t               : 6;
            __IOM uint32_t MWRCOMB : 1;
            __IOM uint32_t MWRSIZE : 8;
            __IOM uint32_t PREEN   : 1;
            uint32_t               : 7;
            __IOM uint32_t CMBTIM  : 8;
        } BMCFGCH_b[2];
    };
    __IOM R_XSPI_CMCFGCS_Type CMCFGCS[2];
    __IM uint32_t             RESERVED[8];

    union
    {
        __IOM uint32_t LIOCFGCS[2];

        struct
        {
            __IOM uint32_t PRTMD     : 10;
            __IOM uint32_t LATEMD    : 1;
            __IOM uint32_t WRMSKMD   : 1;
            uint32_t                 : 4;
            __IOM uint32_t CSMIN     : 4;
            __IOM uint32_t CSASTEX   : 1;
            __IOM uint32_t CSNEGEX   : 1;
            __IOM uint32_t SDRDRV    : 1;
            __IOM uint32_t SDRSMPMD  : 1;
            __IOM uint32_t SDRSMPSFT : 4;
            __IOM uint32_t DDRSMPEX  : 4;
        } LIOCFGCS_b[2];
    };

    union
    {
        __IOM uint32_t ABMCFG;

        struct
        {
            __IOM uint32_t ODRMD : 2;
            uint32_t             : 14;
            __IOM uint32_t CHSEL : 16;
        } ABMCFG_b;
    };
    __IM uint32_t RESERVED1;

    union
    {
        __IOM uint32_t BMCTL0;

        struct
        {
            __IOM uint32_t CH0CS0ACC : 2;
            __IOM uint32_t CH0CS1ACC : 2;
            __IOM uint32_t CH1CS0ACC : 2;
            __IOM uint32_t CH1CS1ACC : 2;
            uint32_t                 : 24;
        } BMCTL0_b;
    };

    union
    {
        __OM uint32_t BMCTL1;

        struct
        {
            uint32_t                 : 8;
            __OM uint32_t MWRPUSHCH0 : 1;
            __OM uint32_t MWRPUSHCH1 : 1;
            __OM uint32_t PBUFCLRCH0 : 1;
            __OM uint32_t PBUFCLRCH1 : 1;
            uint32_t                 : 20;
        } BMCTL1_b;
    };

    union
    {
        __IOM uint32_t CMCTLCH[2];

        struct
        {
            __IOM uint32_t XIPENCODE : 8;
            __IOM uint32_t XIPEXCODE : 8;
            __IOM uint32_t XIPEN     : 1;
            uint32_t                 : 15;
        } CMCTLCH_b[2];
    };

    union
    {
        __IOM uint32_t CDCTL0;

        struct
        {
            __IOM uint32_t TRREQ  : 1;
            __IOM uint32_t PERMD  : 1;
            uint32_t              : 1;
            __IOM uint32_t CSSEL  : 1;
            __IOM uint32_t TRNUM  : 2;
            uint32_t              : 10;
            __IOM uint32_t PERITV : 5;
            uint32_t              : 3;
            __IOM uint32_t PERREP : 4;
            uint32_t              : 4;
        } CDCTL0_b;
    };

    union
    {
        __IOM uint32_t CDCTL1;

        struct
        {
            __IOM uint32_t PEREXP : 32;
        } CDCTL1_b;
    };

    union
    {
        __IOM uint32_t CDCTL2;

        struct
        {
            __IOM uint32_t PERMSK : 32;
        } CDCTL2_b;
    };
    __IM uint32_t           RESERVED2;
    __IOM R_XSPI_CDBUF_Type CDBUF[4];
    __IM uint32_t           RESERVED3[16];

    union
    {
        __IOM uint32_t LPCTL0;

        struct
        {
            __IOM uint32_t PATREQ : 1;
            uint32_t              : 2;
            __IOM uint32_t CSSEL  : 1;
            __IOM uint32_t XDPIN  : 2;
            uint32_t              : 10;
            __IOM uint32_t XD1LEN : 5;
            uint32_t              : 2;
            __IOM uint32_t XD1VAL : 1;
            __IOM uint32_t XD2LEN : 5;
            uint32_t              : 2;
            __IOM uint32_t XD2VAL : 1;
        } LPCTL0_b;
    };

    union
    {
        __IOM uint32_t LPCTL1;

        struct
        {
            __IOM uint32_t PATREQ : 2;
            uint32_t              : 1;
            __IOM uint32_t CSSEL  : 1;
            __IOM uint32_t RSTREP : 2;
            uint32_t              : 2;
            __IOM uint32_t RSTWID : 3;
            uint32_t              : 1;
            __IOM uint32_t RSTSU  : 3;
            uint32_t              : 17;
        } LPCTL1_b;
    };

    union
    {
        __IOM uint32_t LIOCTL;

        struct
        {
            __IOM uint32_t WPCS0  : 1;
            __IOM uint32_t WPCS1  : 1;
            uint32_t              : 14;
            __IOM uint32_t RSTCS0 : 1;
            __IOM uint32_t RSTCS1 : 1;
            uint32_t              : 14;
        } LIOCTL_b;
    };
    __IM uint32_t             RESERVED4[9];
    __IOM R_XSPI_CCCTLCS_Type CCCTLCS[2];
    __IM uint32_t             RESERVED5[4];

    union
    {
        __IM uint32_t VERSTT;

        struct
        {
            __IM uint32_t VER : 32;
        } VERSTT_b;
    };

    union
    {
        __IM uint32_t COMSTT;

        struct
        {
            __IM uint32_t MEMACCCH0  : 1;
            __IM uint32_t MEMACCCH1  : 1;
            uint32_t                 : 2;
            __IM uint32_t PBUFNECH0  : 1;
            __IM uint32_t PBUFNECH1  : 1;
            __IM uint32_t WRBUFNECH0 : 1;
            __IM uint32_t WRBUFNECH1 : 1;
            uint32_t                 : 8;
            __IM uint32_t ECSCS0     : 1;
            __IM uint32_t INTCS0     : 1;
            __IM uint32_t RSTOCS0    : 1;
            uint32_t                 : 1;
            __IM uint32_t ECSCS1     : 1;
            __IM uint32_t INTCS1     : 1;
            __IM uint32_t RSTOCS1    : 1;
            uint32_t                 : 9;
        } COMSTT_b;
    };

    union
    {
        __IM uint32_t CASTTCS[2];

        struct
        {
            __IM uint32_t CASUC : 32;
        } CASTTCS_b[2];
    };

    union
    {
        __IM uint32_t INTS;

        struct
        {
            __IM uint32_t CMDCMP    : 1;
            __IM uint32_t PATCMP    : 1;
            __IM uint32_t INICMP    : 1;
            __IM uint32_t PERTO     : 1;
            __IM uint32_t DSTOCS0   : 1;
            __IM uint32_t DSTOCS1   : 1;
            uint32_t                : 2;
            __IM uint32_t ECSCS0    : 1;
            __IM uint32_t ECSCS1    : 1;
            uint32_t                : 2;
            __IM uint32_t INTCS0    : 1;
            __IM uint32_t INTCS1    : 1;
            uint32_t                : 2;
            __IM uint32_t BRGOFCH0  : 1;
            __IM uint32_t BRGOFCH1  : 1;
            __IM uint32_t BRGUFCH0  : 1;
            __IM uint32_t BRGUFCH1  : 1;
            __IM uint32_t BUSERRCH0 : 1;
            __IM uint32_t BUSERRCH1 : 1;
            uint32_t                : 6;
            __IM uint32_t CAFAILCS0 : 1;
            __IM uint32_t CAFAILCS1 : 1;
            __IM uint32_t CASUCCS0  : 1;
            __IM uint32_t CASUCCS1  : 1;
        } INTS_b;
    };

    union
    {
        __OM uint32_t INTC;

        struct
        {
            __OM uint32_t CMDCMPC    : 1;
            __OM uint32_t PATCMPC    : 1;
            __OM uint32_t INICMPC    : 1;
            __OM uint32_t PERTOC     : 1;
            __OM uint32_t DSTOCS0C   : 1;
            __OM uint32_t DSTOCS1C   : 1;
            uint32_t                 : 2;
            __OM uint32_t ECSCS0C    : 1;
            __OM uint32_t ECSCS1C    : 1;
            uint32_t                 : 2;
            __OM uint32_t INTCS0C    : 1;
            __OM uint32_t INTCS1C    : 1;
            uint32_t                 : 2;
            __OM uint32_t BRGOFCH0C  : 1;
            __OM uint32_t BRGOFCH1C  : 1;
            __OM uint32_t BRGUFCH0C  : 1;
            __OM uint32_t BRGUFCH1C  : 1;
            __OM uint32_t BUSERRCH0C : 1;
            __OM uint32_t BUSERRCH1C : 1;
            uint32_t                 : 6;
            __OM uint32_t CAFAILCS0C : 1;
            __OM uint32_t CAFAILCS1C : 1;
            __OM uint32_t CASUCCS0C  : 1;
            __OM uint32_t CASUCCS1C  : 1;
        } INTC_b;
    };

    union
    {
        __IOM uint32_t INTE;

        struct
        {
            __IOM uint32_t CMDCMPE    : 1;
            __IOM uint32_t PATCMPE    : 1;
            __IOM uint32_t INICMPE    : 1;
            __IOM uint32_t PERTOE     : 1;
            __IOM uint32_t DSTOCS0E   : 1;
            __IOM uint32_t DSTOCS1E   : 1;
            uint32_t                  : 2;
            __IOM uint32_t ECSCS0E    : 1;
            __IOM uint32_t ECSCS1E    : 1;
            uint32_t                  : 2;
            __IOM uint32_t INTCS0E    : 1;
            __IOM uint32_t INTCS1E    : 1;
            uint32_t                  : 2;
            __IOM uint32_t BRGOFCH0E  : 1;
            __IOM uint32_t BRGOFCH1E  : 1;
            __IOM uint32_t BRGUFCH0E  : 1;
            __IOM uint32_t BRGUFCH1E  : 1;
            __IOM uint32_t BUSERRCH0E : 1;
            __IOM uint32_t BUSERRCH1E : 1;
            uint32_t                  : 6;
            __IOM uint32_t CAFAILCS0E : 1;
            __IOM uint32_t CAFAILCS1E : 1;
            __IOM uint32_t CASUCCS0E  : 1;
            __IOM uint32_t CASUCCS1E  : 1;
        } INTE_b;
    };
} R_XSPI_Type;

/* =========================================================================================================================== */
/* ================                                           R_CEU                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Capture Engine Unit (R_CEU)
 */

typedef struct
{
    union
    {
        __IOM uint32_t CAPSR;

        struct
        {
            __IOM uint32_t CE    : 1;
            uint32_t             : 15;
            __IOM uint32_t CPKIL : 1;  /*!< [16..16] Write 1 to this bit to perform a software reset of
                                        *   capturing.                                                                */
            uint32_t : 15;
        } CAPSR_b;
    };

    union
    {
        __IOM uint32_t CAPCR;

        struct
        {
            uint32_t             : 16;
            __IOM uint32_t CTNCP : 1;  /*!< [16..16] When capturing is started with this bit set to 1, capturing
                                        *   continues until the CE bit in CAPSR is cleared to 0 or
                                        *   a software reset is initiated by the CPKIL bit in CAPSR
                                        *   (see ). Continuous capture must be set before capturing
                                        *   is started.                                                               */
            uint32_t            : 3;
            __IOM uint32_t MTCM : 2;   /*!< [21..20] Specify the unit for transferring data to a bus bridge
                                        *   module.                                                                   */
            uint32_t            : 2;
            __IOM uint32_t FDRP : 8;
        } CAPCR_b;
    };

    union
    {
        __IOM uint32_t CAMCR;

        struct
        {
            __IOM uint32_t HDPOL : 1;  /*!< [0..0] Sets the polarity for detection of the horizontal sync
                                        *   signal input from an external module.                                     */
            __IOM uint32_t VDPOL : 1;  /*!< [1..1] Sets the polarity for detection of the vertical sync
                                        *   signal input from an external module.                                     */
            uint32_t             : 2;
            __IOM uint32_t JPG   : 2;
            uint32_t             : 2;
            __IOM uint32_t DTARY : 2;  /*!< [9..8] Set the input order of the luminance component and chrominance
                                        *   component.                                                                */
            uint32_t            : 2;
            __IOM uint32_t DTIF : 1;   /*!< [12..12] Sets the digital image input pins from which data is
                                        *   to be captured.                                                           */
            uint32_t              : 3;
            __IOM uint32_t FLDPOL : 1; /*!< [16..16] Sets the polarity of the field identification signal
                                        *   (FLD) from an external module.                                            */
            uint32_t            : 7;
            __IOM uint32_t DSEL : 1;   /*!< [24..24] Sets the edge for fetching the image data (D7 to D0)
                                        *   from an external module.                                                  */
            __IOM uint32_t FLDSEL : 1; /*!< [25..25] Sets the edge for capturing the field identification
                                        *   signal (FLD) from an external module.                                     */
            __IOM uint32_t HDSEL : 1;  /*!< [26..26] Sets the edge for capturing the horizontal sync signal
                                        *   (HD) from an external module.                                             */
            __IOM uint32_t VDSEL : 1;  /*!< [27..27] Sets the edge for capturing the vertical sync signal
                                        *   (VD) from an external module.                                             */
            uint32_t : 4;
        } CAMCR_b;
    };

    union
    {
        __IOM uint32_t CMCYR;

        struct
        {
            __IOM uint32_t HCYL : 14;
            uint32_t            : 2;
            __IOM uint32_t VCYL : 14;
            uint32_t            : 2;
        } CMCYR_b;
    };

    union
    {
        __IOM uint32_t CAMOR;

        struct
        {
            __IOM uint32_t HOFST : 13; /*!< [12..0] Specify the capture start location in terms of the number
                                        *   of clock cycles from a horizontal sync signal (1-cycle
                                        *   units).                                                                   */
            uint32_t             : 3;
            __IOM uint32_t VOFST : 12; /*!< [27..16] Specify the capture start location in terms of the
                                        *   HD count from a vertical sync signal (1-HD units).                        */
            uint32_t : 4;
        } CAMOR_b;
    };

    union
    {
        __IOM uint32_t CAPWR;

        struct
        {
            __IOM uint32_t HWDTH : 13;
            uint32_t             : 3;
            __IOM uint32_t VWDTH : 12;
            uint32_t             : 4;
        } CAPWR_b;
    };

    union
    {
        __IOM uint32_t CAIFR;

        struct
        {
            __IOM uint32_t FCI : 2;
            uint32_t           : 2;
            __IOM uint32_t CIM : 1;
            uint32_t           : 3;
            __IOM uint32_t IFS : 1;
            uint32_t           : 23;
        } CAIFR_b;
    };
    __IM uint32_t RESERVED[3];

    union
    {
        __IOM uint32_t CRCNTR;

        struct
        {
            __IOM uint32_t RC : 1;     /*!< [0..0] Specifies switching of the register plane used by the
                                        *   CEU in synchronization with VD.                                           */
            __IOM uint32_t RS : 1;     /*!< [1..1] Specifies which register plane is used by the CEU in
                                        *   synchronization with VD.                                                  */
            uint32_t           : 2;
            __IOM uint32_t RVS : 1;    /*!< [4..4] Sets the timing to switch the register plane in both-field
                                        *   capture.                                                                  */
            uint32_t : 27;
        } CRCNTR_b;
    };

    union
    {
        __IOM uint32_t CRCMPR;

        struct
        {
            __IOM uint32_t RA : 1;
            uint32_t          : 31;
        } CRCMPR_b;
    };

    union
    {
        __IOM uint32_t CFLCR;

        struct
        {
            __IOM uint32_t HFRAC : 12;
            __IOM uint32_t HMANT : 4;
            __IOM uint32_t VFRAC : 12;
            __IOM uint32_t VMANT : 4;
        } CFLCR_b;
    };

    union
    {
        __IOM uint32_t CFSZR;

        struct
        {
            __IOM uint32_t HFCLP : 12; /*!< [11..0] Specify the horizontal clipping value of the filter
                                        *   output size (4-pixel units).                                              */
            uint32_t             : 4;
            __IOM uint32_t VFCLP : 12; /*!< [27..16] Set the vertical clipping value of the filter output
                                        *   size (4-pixel units).                                                     */
            uint32_t : 4;
        } CFSZR_b;
    };

    union
    {
        __IOM uint32_t CDWDR;

        struct
        {
            __IOM uint32_t CHDW : 13;  /*!< [12..0] Specify the horizontal image size in the memory area
                                        *   where the captured image is to be stored (4-byte units).                  */
            uint32_t : 19;
        } CDWDR_b;
    };

    union
    {
        __IOM uint32_t CDAYR;

        struct
        {
            __IOM uint32_t CAYR : 32;
        } CDAYR_b;
    };

    union
    {
        __IOM uint32_t CDACR;

        struct
        {
            __IOM uint32_t CACR : 32;
        } CDACR_b;
    };

    union
    {
        __IOM uint32_t CDBYR;

        struct
        {
            __IOM uint32_t CBYR : 32;  /*!< [31..0] Set the address for storing the Y (luminance) component
                                        *   data of the captured bottom-field data (4-pixel units).                   */
        } CDBYR_b;
    };

    union
    {
        __IOM uint32_t CDBCR;

        struct
        {
            __IOM uint32_t CBCR : 32;  /*!< [31..0] Set the address for storing the C (chrominance) component
                                        *   data of the captured bottom-field data (4-pixel units).                   */
        } CDBCR_b;
    };

    union
    {
        __IOM uint32_t CBDSR;

        struct
        {
            __IOM uint32_t CBVS : 23;  /*!< [22..0] Select the number of lines or number of bytes for output
                                        *   to the memory in a bundle write.                                          */
            uint32_t : 9;
        } CBDSR_b;
    };
    __IM uint32_t RESERVED1[3];

    union
    {
        __IOM uint32_t CFWCR;

        struct
        {
            __IOM uint32_t FWE : 1;    /*!< [0..0] With the setting of FWE = 1, when an address exceeds
                                        *   the value set with FWV, the address is retained and an
                                        *   interrupt source FWF is set. After this, the address is
                                        *   not incremented and data is overwritten on the upper limit
                                        *   address.                                                                  */
            uint32_t           : 4;
            __IOM uint32_t FWV : 27;
        } CFWCR_b;
    };

    union
    {
        __IOM uint32_t CLFCR;

        struct
        {
            __IOM uint32_t LPF : 1;
            uint32_t           : 31;
        } CLFCR_b;
    };

    union
    {
        __IOM uint32_t CDOCR;

        struct
        {
            __IOM uint32_t COBS : 1;   /*!< [0..0] Controls swapping in 8-bit units for data output from
                                        *   the CEU.                                                                  */
            __IOM uint32_t COWS : 1;   /*!< [1..1] Controls swapping in 16-bit units for data output from
                                        *   the CEU.                                                                  */
            __IOM uint32_t COLS : 1;   /*!< [2..2] Controls swapping in 32-bit units for data output from
                                        *   the CEU.                                                                  */
            uint32_t           : 1;
            __IOM uint32_t CDS : 1;    /*!< [4..4] Sets the image format when outputting the image data
                                        *   captured in the YCbCr422 format to the memory.                            */
            uint32_t           : 11;
            __IOM uint32_t CBE : 1;    /*!< [16..16] Controls the number of lines of captured data to be
                                        *   written to the memory.                                                    */
            uint32_t : 15;
        } CDOCR_b;
    };
    __IM uint32_t RESERVED2[2];

    union
    {
        __IOM uint32_t CEIER;

        struct
        {
            __IOM uint32_t CPEIE   : 1;
            __IOM uint32_t CFEIE   : 1;
            uint32_t               : 2;
            __IOM uint32_t IGRWIE  : 1;
            uint32_t               : 3;
            __IOM uint32_t HDIE    : 1;
            __IOM uint32_t VDIE    : 1;
            uint32_t               : 2;
            __IOM uint32_t CPBE1IE : 1;
            __IOM uint32_t CPBE2IE : 1;
            __IOM uint32_t CPBE3IE : 1;
            __IOM uint32_t CPBE4IE : 1;
            __IOM uint32_t CDTOFIE : 1;
            __IOM uint32_t IGHSIE  : 1;
            __IOM uint32_t IGVSIE  : 1;
            uint32_t               : 1;
            __IOM uint32_t VBPIE   : 1;
            uint32_t               : 2;
            __IOM uint32_t FWFIE   : 1;
            __IOM uint32_t NHDIE   : 1;
            __IOM uint32_t NVDIE   : 1;
            uint32_t               : 6;
        } CEIER_b;
    };

    union
    {
        __IOM uint32_t CETCR;

        struct
        {
            __IOM uint32_t CPE : 1;    /*!< [0..0] An interrupt indicating that capturing of one frame from
                                        *   an external module has finished.                                          */
            __IOM uint32_t CFE : 1;    /*!< [1..1] An interrupt indicating that capturing of one field from
                                        *   an external module has finished.                                          */
            uint32_t            : 2;
            __IOM uint32_t IGRW : 1;   /*!< [4..4] An interrupt indicating that during capturing, access
                                        *   was attempted to a register to which writing during operation
                                        *   is prohibited.                                                            */
            uint32_t          : 3;
            __IOM uint32_t HD : 1;     /*!< [8..8] An interrupt indicating that HD (horizontal sync signal)
                                        *   was input from an external module.                                        */
            __IOM uint32_t VD : 1;     /*!< [9..9] An interrupt indicating that VD (vertical sync signal)
                                        *   was input from an external module.                                        */
            uint32_t             : 2;
            __IOM uint32_t CPBE1 : 1;  /*!< [12..12] An interrupt indicating that writing to CDAYR and CDACR
                                        *   in a bundle write has finished.                                           */
            __IOM uint32_t CPBE2 : 1;  /*!< [13..13] An interrupt indicating that writing to CDAYR2 and
                                        *   CDACR2 in a bundle write has finished.                                    */
            __IOM uint32_t CPBE3 : 1;  /*!< [14..14] An interrupt indicating that writing to CDBYR and CDBCR
                                        *   in a bundle write has finished.                                           */
            __IOM uint32_t CPBE4 : 1;  /*!< [15..15] An interrupt indicating that writing to CDBYR2 and
                                        *   CDBCR2 in a bundle write has finished.                                    */
            __IOM uint32_t CDTOF : 1;  /*!< [16..16] An interrupt indicating that data overflowed in the
                                        *   CRAM of the write buffer                                                  */
            __IOM uint32_t IGHS : 1;   /*!< [17..17] An interrupt generated when the number of HD cycles
                                        *   set in CMCYR differ from the number of HD cycles input
                                        *   from an external module.                                                  */
            __IOM uint32_t IGVS : 1;   /*!< [18..18] An interrupt generated when the number of VD cycles
                                        *   set in CMCYR differ from the number of VD cycles input
                                        *   from an external module.                                                  */
            uint32_t           : 1;
            __IOM uint32_t VBP : 1;    /*!< [20..20] An interrupt indicating that VD has been input while
                                        *   the CEU holds data (insufficient vertical-sync front porch).              */
            uint32_t           : 2;
            __IOM uint32_t FWF : 1;    /*!< [23..23] The interrupt is generated when data is written to
                                        *   the address that exceeds the value specified with CFWCR.FMV.              */
            __IOM uint32_t NHD : 1;
            __IOM uint32_t NVD : 1;
            uint32_t           : 6;
        } CETCR_b;
    };
    __IM uint32_t RESERVED3;

    union
    {
        __IM uint32_t CSTSR;

        struct
        {
            __IM uint32_t CPTON : 1;
            uint32_t            : 15;
            __IM uint32_t CPFLD : 1;
            uint32_t            : 7;
            __IM uint32_t CRST  : 1;
            uint32_t            : 7;
        } CSTSR_b;
    };
    __IM uint32_t RESERVED4;

    union
    {
        __IM uint32_t CDSSR;

        struct
        {
            __IM uint32_t CDSS : 32;   /*!< [31..0] Indicate the size of data written to the memory in data
                                        *   enable fetch.                                                             */
        } CDSSR_b;
    };
    __IM uint32_t RESERVED5[2];

    union
    {
        __IOM uint32_t CDAYR2;

        struct
        {
            __IOM uint32_t CAYR2 : 32;
        } CDAYR2_b;
    };

    union
    {
        __IOM uint32_t CDACR2;

        struct
        {
            __IOM uint32_t CACR2 : 32;
        } CDACR2_b;
    };

    union
    {
        __IOM uint32_t CDBYR2;         /*!< (@ 0x00000098) Capture Data Bottom-Field Address Y Register
                                        *                  2                                                          */

        struct
        {
            __IOM uint32_t CBYR2 : 32; /*!< [31..0] Set the address for storing the Y component data of
                                        *   the captured bottom-field data (4-pixel units).                           */
        } CDBYR2_b;
    };

    union
    {
        __IOM uint32_t CDBCR2;         /*!< (@ 0x0000009C) Capture Data Bottom-Field Address C Register
                                        *                  2                                                          */

        struct
        {
            __IOM uint32_t CBCR2 : 32; /*!< [31..0] Set the address for storing the C component data of
                                        *   the captured bottom-field data (4-pixel units).                           */
        } CDBCR2_b;
    };

    union
    {
        __IOM uint32_t AXIBUSCTL2;

        struct
        {
            __IOM uint32_t AWCACHE : 4;
            uint32_t               : 28;
        } AXIBUSCTL2_b;
    };
    __IM uint32_t RESERVED6[987];

    union
    {
        __IOM uint32_t CAMOR_B;

        struct
        {
            __IOM uint32_t HOFST : 13; /*!< [12..0] Specify the capture start location in terms of the number
                                        *   of clock cycles from a horizontal sync signal (1-cycle
                                        *   units).                                                                   */
            uint32_t             : 3;
            __IOM uint32_t VOFST : 12; /*!< [27..16] Specify the capture start location in terms of the
                                        *   HD count from a vertical sync signal (1-HD units).                        */
            uint32_t : 4;
        } CAMOR_B_b;
    };

    union
    {
        __IOM uint32_t CAPWR_B;

        struct
        {
            __IOM uint32_t HWDTH : 13;
            uint32_t             : 3;
            __IOM uint32_t VWDTH : 12;
            uint32_t             : 4;
        } CAPWR_B_b;
    };
    __IM uint32_t RESERVED7[6];

    union
    {
        __IOM uint32_t CFLCR_B;

        struct
        {
            __IOM uint32_t HFRAC : 12;
            __IOM uint32_t HMANT : 4;
            __IOM uint32_t VFRAC : 12;
            __IOM uint32_t VMANT : 4;
        } CFLCR_B_b;
    };

    union
    {
        __IOM uint32_t CFSZR_B;

        struct
        {
            __IOM uint32_t HFCLP : 12; /*!< [11..0] Specify the horizontal clipping value of the filter
                                        *   output size (4-pixel units).                                              */
            uint32_t             : 4;
            __IOM uint32_t VFCLP : 12; /*!< [27..16] Set the vertical clipping value of the filter output
                                        *   size (4-pixel units).                                                     */
            uint32_t : 4;
        } CFSZR_B_b;
    };

    union
    {
        __IOM uint32_t CDWDR_B;

        struct
        {
            __IOM uint32_t CHDW : 13;  /*!< [12..0] Specify the horizontal image size in the memory area
                                        *   where the captured image is to be stored (4-byte units).                  */
            uint32_t : 19;
        } CDWDR_B_b;
    };

    union
    {
        __IOM uint32_t CDAYR_B;

        struct
        {
            __IOM uint32_t CAYR : 32;
        } CDAYR_B_b;
    };

    union
    {
        __IOM uint32_t CDACR_B;

        struct
        {
            __IOM uint32_t CACR : 32;
        } CDACR_B_b;
    };

    union
    {
        __IOM uint32_t CDBYR_B;

        struct
        {
            __IOM uint32_t CBYR : 32;  /*!< [31..0] Set the address for storing the Y (luminance) component
                                        *   data of the captured bottom-field data (4-pixel units).                   */
        } CDBYR_B_b;
    };

    union
    {
        __IOM uint32_t CDBCR_B;

        struct
        {
            __IOM uint32_t CBCR : 32;  /*!< [31..0] Set the address for storing the C (chrominance) component
                                        *   data of the captured bottom-field data (4-pixel units).                   */
        } CDBCR_B_b;
    };

    union
    {
        __IOM uint32_t CBDSR_B;

        struct
        {
            __IOM uint32_t CBVS : 23;  /*!< [22..0] Select the number of lines or number of bytes for output
                                        *   to the memory in a bundle write.                                          */
            uint32_t : 9;
        } CBDSR_B_b;
    };
    __IM uint32_t RESERVED8[4];

    union
    {
        __IOM uint32_t CLFCR_B;

        struct
        {
            __IOM uint32_t LPF : 1;
            uint32_t           : 31;
        } CLFCR_B_b;
    };

    union
    {
        __IOM uint32_t CDOCR_B;

        struct
        {
            __IOM uint32_t COBS : 1;   /*!< [0..0] Controls swapping in 8-bit units for data output from
                                        *   the CEU.                                                                  */
            __IOM uint32_t COWS : 1;   /*!< [1..1] Controls swapping in 16-bit units for data output from
                                        *   the CEU.                                                                  */
            __IOM uint32_t COLS : 1;   /*!< [2..2] Controls swapping in 32-bit units for data output from
                                        *   the CEU.                                                                  */
            uint32_t           : 1;
            __IOM uint32_t CDS : 1;    /*!< [4..4] Sets the image format when outputting the image data
                                        *   captured in the YCbCr422 format to the memory.                            */
            uint32_t           : 11;
            __IOM uint32_t CBE : 1;    /*!< [16..16] Controls the number of lines of captured data to be
                                        *   written to the memory.                                                    */
            uint32_t : 15;
        } CDOCR_B_b;
    };
    __IM uint32_t RESERVED9[10];

    union
    {
        __IOM uint32_t CDAYR2_B;

        struct
        {
            __IOM uint32_t CAYR2 : 32;
        } CDAYR2_B_b;
    };

    union
    {
        __IOM uint32_t CDACR2_B;

        struct
        {
            __IOM uint32_t CACR2 : 32;
        } CDACR2_B_b;
    };

    union
    {
        __IOM uint32_t CDBYR2_B;       /*!< (@ 0x00001098) Capture Data Bottom-Field Address Y Register
                                        *                  2                                                          */

        struct
        {
            __IOM uint32_t CBYR2 : 32; /*!< [31..0] Set the address for storing the Y component data of
                                        *   the captured bottom-field data (4-pixel units).                           */
        } CDBYR2_B_b;
    };

    union
    {
        __IOM uint32_t CDBCR2_B;       /*!< (@ 0x0000109C) Capture Data Bottom-Field Address C Register
                                        *                  2                                                          */

        struct
        {
            __IOM uint32_t CBCR2 : 32; /*!< [31..0] Set the address for storing the C component data of
                                        *   the captured bottom-field data (4-pixel units).                           */
        } CDBCR2_B_b;
    };
    __IM uint32_t RESERVED10[988];

    union
    {
        __IOM uint32_t CAMOR_M;

        struct
        {
            __IOM uint32_t HOFST : 13; /*!< [12..0] Specify the capture start location in terms of the number
                                        *   of clock cycles from a horizontal sync signal (1-cycle
                                        *   units).                                                                   */
            uint32_t             : 3;
            __IOM uint32_t VOFST : 12; /*!< [27..16] Specify the capture start location in terms of the
                                        *   HD count from a vertical sync signal (1-HD units).                        */
            uint32_t : 4;
        } CAMOR_M_b;
    };

    union
    {
        __IOM uint32_t CAPWR_M;

        struct
        {
            __IOM uint32_t HWDTH : 13;
            uint32_t             : 3;
            __IOM uint32_t VWDTH : 12;
            uint32_t             : 4;
        } CAPWR_M_b;
    };
    __IM uint32_t RESERVED11[6];

    union
    {
        __IOM uint32_t CFLCR_M;

        struct
        {
            __IOM uint32_t HFRAC : 12;
            __IOM uint32_t HMANT : 4;
            __IOM uint32_t VFRAC : 12;
            __IOM uint32_t VMANT : 4;
        } CFLCR_M_b;
    };

    union
    {
        __IOM uint32_t CFSZR_M;

        struct
        {
            __IOM uint32_t HFCLP : 12; /*!< [11..0] Specify the horizontal clipping value of the filter
                                        *   output size (4-pixel units).                                              */
            uint32_t             : 4;
            __IOM uint32_t VFCLP : 12; /*!< [27..16] Set the vertical clipping value of the filter output
                                        *   size (4-pixel units).                                                     */
            uint32_t : 4;
        } CFSZR_M_b;
    };

    union
    {
        __IOM uint32_t CDWDR_M;

        struct
        {
            __IOM uint32_t CHDW : 13;  /*!< [12..0] Specify the horizontal image size in the memory area
                                        *   where the captured image is to be stored (4-byte units).                  */
            uint32_t : 19;
        } CDWDR_M_b;
    };

    union
    {
        __IOM uint32_t CDAYR_M;

        struct
        {
            __IOM uint32_t CAYR : 32;
        } CDAYR_M_b;
    };

    union
    {
        __IOM uint32_t CDACR_M;

        struct
        {
            __IOM uint32_t CACR : 32;
        } CDACR_M_b;
    };

    union
    {
        __IOM uint32_t CDBYR_M;

        struct
        {
            __IOM uint32_t CBYR : 32;  /*!< [31..0] Set the address for storing the Y (luminance) component
                                        *   data of the captured bottom-field data (4-pixel units).                   */
        } CDBYR_M_b;
    };

    union
    {
        __IOM uint32_t CDBCR_M;

        struct
        {
            __IOM uint32_t CBCR : 32;  /*!< [31..0] Set the address for storing the C (chrominance) component
                                        *   data of the captured bottom-field data (4-pixel units).                   */
        } CDBCR_M_b;
    };

    union
    {
        __IOM uint32_t CBDSR_M;

        struct
        {
            __IOM uint32_t CBVS : 23;  /*!< [22..0] Select the number of lines or number of bytes for output
                                        *   to the memory in a bundle write.                                          */
            uint32_t : 9;
        } CBDSR_M_b;
    };
    __IM uint32_t RESERVED12[4];

    union
    {
        __IOM uint32_t CLFCR_M;

        struct
        {
            __IOM uint32_t LPF : 1;
            uint32_t           : 31;
        } CLFCR_M_b;
    };

    union
    {
        __IOM uint32_t CDOCR_M;

        struct
        {
            __IOM uint32_t COBS : 1;   /*!< [0..0] Controls swapping in 8-bit units for data output from
                                        *   the CEU.                                                                  */
            __IOM uint32_t COWS : 1;   /*!< [1..1] Controls swapping in 16-bit units for data output from
                                        *   the CEU.                                                                  */
            __IOM uint32_t COLS : 1;   /*!< [2..2] Controls swapping in 32-bit units for data output from
                                        *   the CEU.                                                                  */
            uint32_t           : 1;
            __IOM uint32_t CDS : 1;    /*!< [4..4] Sets the image format when outputting the image data
                                        *   captured in the YCbCr422 format to the memory.                            */
            uint32_t           : 11;
            __IOM uint32_t CBE : 1;    /*!< [16..16] Controls the number of lines of captured data to be
                                        *   written to the memory.                                                    */
            uint32_t : 15;
        } CDOCR_M_b;
    };
    __IM uint32_t RESERVED13[10];

    union
    {
        __IOM uint32_t CDAYR2_M;

        struct
        {
            __IOM uint32_t CAYR2 : 32;
        } CDAYR2_M_b;
    };

    union
    {
        __IOM uint32_t CDACR2_M;

        struct
        {
            __IOM uint32_t CACR2 : 32;
        } CDACR2_M_b;
    };

    union
    {
        __IOM uint32_t CDBYR2_M;       /*!< (@ 0x00002098) Capture Data Bottom-Field Address Y Register
                                        *                  2                                                          */

        struct
        {
            __IOM uint32_t CBYR2 : 32; /*!< [31..0] Set the address for storing the Y component data of
                                        *   the captured bottom-field data (4-pixel units).                           */
        } CDBYR2_M_b;
    };

    union
    {
        __IOM uint32_t CDBCR2_M;       /*!< (@ 0x0000209C) Capture Data Bottom-Field Address C Register
                                        *                  2                                                          */

        struct
        {
            __IOM uint32_t CBCR2 : 32; /*!< [31..0] Set the address for storing the C component data of
                                        *   the captured bottom-field data (4-pixel units).                           */
        } CDBCR2_M_b;
    };
} R_CEU_Type;

/* =========================================================================================================================== */
/* ================                                          R_ULPT0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Ultra-Low Power Timer 0 (R_ULPT0)
 */

typedef struct
{
    union
    {
        __IOM uint32_t ULPTCNT;

        struct
        {
            __IOM uint32_t ULPTCNT : 32; /*!< [31..0] 32bit counter and reload registerNOTE : When 1 is written
                                          *   to the TSTOP bit in the ULPTCR register, the 32-bit counter
                                          *   is forcibly stopped and set to FFFFFFFFH.                                 */
        } ULPTCNT_b;
    };

    union
    {
        __IOM uint32_t ULPTCMA;

        struct
        {
            __IOM uint32_t ULPTCMA : 32; /*!< [31..0] ULPT Compare Match A RegisterNOTE : When 1 is written
                                          *   to the TSTOP bit in the ULPTCR register, set to FFFFFFFFH                 */
        } ULPTCMA_b;
    };

    union
    {
        __IOM uint32_t ULPTCMB;

        struct
        {
            __IOM uint32_t ULPTCMB : 32; /*!< [31..0] AGT Compare Match B RegisterNOTE : When 1 is written
                                          *   to the TSTOP bit in the ULPTCR register, set to FFFFFFFFH                 */
        } ULPTCMB_b;
    };

    union
    {
        __IOM uint8_t ULPTCR;

        struct
        {
            __IOM uint8_t TSTART : 1;
            __IM uint8_t  TCSTF  : 1;
            __OM uint8_t  TSTOP  : 1;
            uint8_t              : 2;
            __IOM uint8_t TUNDF  : 1;
            __IOM uint8_t TCMAF  : 1;
            __IOM uint8_t TCMBF  : 1;
        } ULPTCR_b;
    };

    union
    {
        __IOM uint8_t ULPTMR1;

        struct
        {
            uint8_t              : 1;
            __IOM uint8_t TMOD1  : 1;
            uint8_t              : 1;
            __IOM uint8_t TEDGPL : 1;
            uint8_t              : 1;
            __IOM uint8_t TCK1   : 1;
            uint8_t              : 2;
        } ULPTMR1_b;
    };

    union
    {
        __IOM uint8_t ULPTMR2;

        struct
        {
            __IOM uint8_t CKS : 3;     /*!< [2..0] fsub/LOCO count source clock frequency division ratio
                                        *   select                                                                    */
            uint8_t           : 4;
            __IOM uint8_t LPM : 1;
        } ULPTMR2_b;
    };

    union
    {
        __IOM uint8_t ULPTMR3;

        struct
        {
            __IOM uint8_t TCNTCTL : 1;
            __IOM uint8_t TEVPOL  : 1;
            __IOM uint8_t TOPOL   : 1;
            uint8_t               : 1;
            __IOM uint8_t TEECTL  : 2;
            __IOM uint8_t TEEPOL  : 2;
        } ULPTMR3_b;
    };

    union
    {
        __IOM uint8_t ULPTIOC;

        struct
        {
            uint8_t              : 2;
            __IOM uint8_t TOE    : 1;
            uint8_t              : 1;
            __IOM uint8_t TIPF   : 2;
            __IOM uint8_t TIOGT0 : 1;
            uint8_t              : 1;
        } ULPTIOC_b;
    };

    union
    {
        __IOM uint8_t ULPTISR;

        struct
        {
            uint8_t                : 2;
            __IOM uint8_t RCCPSEL2 : 1;
            uint8_t                : 5;
        } ULPTISR_b;
    };

    union
    {
        __IOM uint8_t ULPTCMSR;

        struct
        {
            __IOM uint8_t TCMEA  : 1;
            __IOM uint8_t TOEA   : 1;
            __IOM uint8_t TOPOLA : 1;
            uint8_t              : 1;
            __IOM uint8_t TCMEB  : 1;
            __IOM uint8_t TOEB   : 1;
            __IOM uint8_t TOPOLB : 1;
            uint8_t              : 1;
        } ULPTCMSR_b;
    };
    __IM uint8_t RESERVED;
} R_ULPT0_Type;

/* =========================================================================================================================== */
/* ================                                        R_DEBUG_OCD                                        ================ */
/* =========================================================================================================================== */

/**
 * @brief On-Chip Debug Function (R_DEBUG_OCD)
 */

typedef struct
{
    __IM uint32_t RESERVED[192];

    union
    {
        __IM uint32_t FSBLSTATM;

        struct
        {
            __IM uint32_t CS : 1;
            __IM uint32_t RS : 1;
            uint32_t         : 30;
        } FSBLSTATM_b;
    };
} R_DEBUG_OCD_Type;

/* =========================================================================================================================== */
/* ================                                          R_DOTF                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Decryption On The Fly (R_DOTF)
 */

typedef struct
{
    union
    {
        __IOM uint32_t CONVAREAST;

        struct
        {
            uint32_t                  : 12;
            __IOM uint32_t CONVAREAST : 20;
        } CONVAREAST_b;
    };

    union
    {
        __IOM uint32_t CONVAREAD;

        struct
        {
            uint32_t                 : 12;
            __IOM uint32_t CONVAREAD : 20;
        } CONVAREAD_b;
    };
    __IM uint32_t RESERVED[30];

    union
    {
        __IOM uint32_t REG00;

        struct
        {
            uint32_t           : 9;
            __IOM uint32_t B09 : 1;
            uint32_t           : 6;
            __IOM uint32_t B16 : 1;
            __IOM uint32_t B17 : 1;
            uint32_t           : 2;
            __IOM uint32_t B20 : 1;
            uint32_t           : 3;
            __IOM uint32_t B24 : 2;
            uint32_t           : 2;
            __IOM uint32_t B28 : 2;
            uint32_t           : 2;
        } REG00_b;
    };
    __IM uint32_t RESERVED1[2];

    union
    {
        __IOM uint32_t REG03;

        struct
        {
            __IOM uint32_t B00 : 32;
        } REG03_b;
    };
} R_DOTF_Type;

/* =========================================================================================================================== */
/* ================                                          R_AGTX0                                          ================ */
/* =========================================================================================================================== */

/**
 * @brief Asynchronous General Purpose Timer (R_AGTX0)
 */

typedef struct
{
    union
    {
        __IOM R_AGTX0_AGT32_Type AGT32;
        __IOM R_AGTX0_AGT16_Type AGT16;
    };
} R_AGTX0_Type;

/* =========================================================================================================================== */
/* ================                                          R_FLAD                                           ================ */
/* =========================================================================================================================== */

/**
 * @brief Data Flash (R_FLAD)
 */

typedef struct
{
    __IM uint8_t RESERVED[64];

    union
    {
        __IOM uint8_t FCKMHZ;

        struct
        {
            __IOM uint8_t FCKMHZ : 8;
        } FCKMHZ_b;
    };
} R_FLAD_Type;

/* =========================================================================================================================== */
/* ================                                      R_OFS_DATAFLASH                                      ================ */
/* =========================================================================================================================== */

/**
 * @brief Data Flash Option-Setting Memory (R_OFS_DATAFLASH)
 */

typedef struct
{
    __IM uint32_t RESERVED[32];

    union
    {
        __IM uint32_t FSBLCTRL0;

        struct
        {
            __IM uint32_t FSBLEN     : 3;
            __IM uint32_t FSBLSKIPSW : 3;
            __IM uint32_t FSBLSKIPDS : 3;
            __IM uint32_t FSBLCLK    : 3;
            uint32_t                 : 20;
        } FSBLCTRL0_b;
    };

    union
    {
        __IM uint32_t FSBLCTRL1;

        struct
        {
            __IM uint32_t FSBLEXMD : 2;
            uint32_t               : 30;
        } FSBLCTRL1_b;
    };

    union
    {
        __IM uint32_t FSBLCTRL2;

        struct
        {
            __IM uint32_t PORTPN : 4;
            __IM uint32_t PORTGN : 5;
            uint32_t             : 23;
        } FSBLCTRL2_b;
    };
    __IOM uint32_t SACC0;
    __IOM uint32_t SACC1;
    __IOM uint32_t SAMR;
    __IM uint32_t  RESERVED1[178];
    __IM uint32_t  HOEMRTPK;
    __IM uint32_t  RESERVED2[7];
    __IOM R_OFS_DATAFLASH_CFGDLOCK_Type CFGDLOCK;
    __IM uint32_t RESERVED3[11];

    union
    {
        __IOM uint16_t ARCLS;

        struct
        {
            __IOM uint16_t ARCS_LK  : 1;
            __IOM uint16_t ARCNS_LK : 4;
            __IOM uint16_t ARCBL_LK : 1;
            uint16_t                : 10;
        } ARCLS_b;
    };

    union
    {
        __IOM uint16_t ARCCS;

        struct
        {
            __IOM uint16_t CNF_ARCNS : 2;
            uint16_t                 : 14;
        } ARCCS_b;
    };
    __IM uint32_t RESERVED4[291];

    union
    {
        __IOM uint32_t ARC_SEC[2];       /*!< (@ 0x00000850) Anti-Rollback Counter for Secure Application
                                          *                  n                                                          */

        struct
        {
            __IOM uint32_t ARC_SEC : 32;
        } ARC_SEC_b[2];
    };

    union
    {
        __IOM uint32_t ARC_NSEC[8];

        struct
        {
            __IOM uint32_t ARC_NSEC : 32;
        } ARC_NSEC_b[8];
    };

    union
    {
        __IOM uint32_t ARC_OEMBL[2];

        struct
        {
            __IOM uint32_t ARC_OEMBL : 32;
        } ARC_OEMBL_b[2];
    };
} R_OFS_DATAFLASH_Type;

/** @} */ /* End of group Device_Peripheral_peripherals */

/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */

/** @addtogroup Device_Peripheral_peripheralAddr
 * @{
 */

 #if defined(_RA_TZ_NONSECURE)
  #define BASE_NS_OFFSET         (BSP_FEATURE_TZ_NS_OFFSET)
 #else
  #define BASE_NS_OFFSET         0U
 #endif

 #define R_ACMPHS0_BASE          (0x40236000UL + BASE_NS_OFFSET)
 #define R_ACMPHS1_BASE          (0x40236100UL + BASE_NS_OFFSET)
 #define R_ACMPHS2_BASE          (0x40236200UL + BASE_NS_OFFSET)
 #define R_ACMPHS3_BASE          (0x40236300UL + BASE_NS_OFFSET)
 #define R_ACMPHS4_BASE          (0x40236400UL + BASE_NS_OFFSET)
 #define R_ACMPHS5_BASE          (0x40236500UL + BASE_NS_OFFSET)
 #define R_ADC0_BASE             (0x40332000UL + BASE_NS_OFFSET)
 #define R_ADC1_BASE             (0x40332200UL + BASE_NS_OFFSET)
 #define R_PSCU_BASE             (0x40204000UL + BASE_NS_OFFSET)
 #define R_BUS_BASE              (0x40003000UL + BASE_NS_OFFSET)
 #define R_CAC_BASE              (0x40202400UL + BASE_NS_OFFSET)
 #define R_CANFD_BASE            (0x40380000UL + BASE_NS_OFFSET)
 #define R_CANFD1_BASE           (0x40382000UL + BASE_NS_OFFSET)
 #define R_CRC_BASE              (0x40310000UL + BASE_NS_OFFSET)
 #define R_DAC_BASE              (0x40333000UL + BASE_NS_OFFSET)
 #define R_DAC1_BASE             (0x40333100UL + BASE_NS_OFFSET)
 #define R_DEBUG_BASE            (0x4001B000UL + BASE_NS_OFFSET)
 #define R_DMA_BASE              (0x4000A800UL + BASE_NS_OFFSET)
 #define R_DMAC0_BASE            (0x4000A000UL + BASE_NS_OFFSET)
 #define R_DMAC1_BASE            (0x4000A040UL + BASE_NS_OFFSET)
 #define R_DMAC2_BASE            (0x4000A080UL + BASE_NS_OFFSET)
 #define R_DMAC3_BASE            (0x4000A0C0UL + BASE_NS_OFFSET)
 #define R_DMAC4_BASE            (0x4000A100UL + BASE_NS_OFFSET)
 #define R_DMAC5_BASE            (0x4000A140UL + BASE_NS_OFFSET)
 #define R_DMAC6_BASE            (0x4000A180UL + BASE_NS_OFFSET)
 #define R_DMAC7_BASE            (0x4000A1C0UL + BASE_NS_OFFSET)
 #define R_DOC_BASE              (0x40311000UL + BASE_NS_OFFSET)
 #define R_DTC_BASE              (0x4000AC00UL + BASE_NS_OFFSET)
 #define R_ELC_BASE              (0x40201000UL + BASE_NS_OFFSET)
 #define R_ETHERC0_BASE          (0x40354100UL + BASE_NS_OFFSET)
 #define R_ETHERC_EDMAC_BASE     (0x40354000UL + BASE_NS_OFFSET)
 #define R_FACI_HP_CMD_BASE      (0x40100000UL + BASE_NS_OFFSET)
 #define R_FACI_HP_BASE          (0x4011E000UL + BASE_NS_OFFSET)
 #define R_FCACHE_BASE           (0x4001C100UL + BASE_NS_OFFSET)
 #define R_GPT0_BASE             (0x40322000UL + BASE_NS_OFFSET)
 #define R_GPT1_BASE             (0x40322100UL + BASE_NS_OFFSET)
 #define R_GPT2_BASE             (0x40322200UL + BASE_NS_OFFSET)
 #define R_GPT3_BASE             (0x40322300UL + BASE_NS_OFFSET)
 #define R_GPT4_BASE             (0x40322400UL + BASE_NS_OFFSET)
 #define R_GPT5_BASE             (0x40322500UL + BASE_NS_OFFSET)
 #define R_GPT6_BASE             (0x40322600UL + BASE_NS_OFFSET)
 #define R_GPT7_BASE             (0x40322700UL + BASE_NS_OFFSET)
 #define R_GPT8_BASE             (0x40322800UL + BASE_NS_OFFSET)
 #define R_GPT9_BASE             (0x40322900UL + BASE_NS_OFFSET)
 #define R_GPT10_BASE            (0x40322A00UL + BASE_NS_OFFSET)
 #define R_GPT11_BASE            (0x40322B00UL + BASE_NS_OFFSET)
 #define R_GPT12_BASE            (0x40322C00UL + BASE_NS_OFFSET)
 #define R_GPT13_BASE            (0x40322D00UL + BASE_NS_OFFSET)
 #define R_GPT_OPS_BASE          (0x40323F00UL + BASE_NS_OFFSET)
 #define R_GPT_POEG0_BASE        (0x40212000UL + BASE_NS_OFFSET)
 #define R_GPT_POEG1_BASE        (0x40212100UL + BASE_NS_OFFSET)
 #define R_GPT_POEG2_BASE        (0x40212200UL + BASE_NS_OFFSET)
 #define R_GPT_POEG3_BASE        (0x40212300UL + BASE_NS_OFFSET)
 #define R_ICU_BASE              (0x40006000UL + BASE_NS_OFFSET)
 #define R_IIC0_BASE             (0x4025E000UL + BASE_NS_OFFSET)
 #define R_IIC1_BASE             (0x4025E100UL + BASE_NS_OFFSET)
 #define R_IIC2_BASE             (0x4025E200UL + BASE_NS_OFFSET)
 #define R_IWDT_BASE             (0x40202200UL + BASE_NS_OFFSET)
 #define R_I3C0_BASE             (0x4035F000UL + BASE_NS_OFFSET)
 #define R_I3C1_BASE             (0x4035F100UL + BASE_NS_OFFSET)
 #define R_MPU_MMPU_BASE         (0x40000000UL + BASE_NS_OFFSET)
 #define R_MPU_SPMON_BASE        (0x40000D00UL + BASE_NS_OFFSET)
 #define R_MSTP_BASE             (0x40203000UL + BASE_NS_OFFSET)
 #define R_PORT0_BASE            (0x40400000UL + BASE_NS_OFFSET)
 #define R_PORT1_BASE            (0x40400020UL + BASE_NS_OFFSET)
 #define R_PORT2_BASE            (0x40400040UL + BASE_NS_OFFSET)
 #define R_PORT3_BASE            (0x40400060UL + BASE_NS_OFFSET)
 #define R_PORT4_BASE            (0x40400080UL + BASE_NS_OFFSET)
 #define R_PORT5_BASE            (0x404000A0UL + BASE_NS_OFFSET)
 #define R_PORT6_BASE            (0x404000C0UL + BASE_NS_OFFSET)
 #define R_PORT7_BASE            (0x404000E0UL + BASE_NS_OFFSET)
 #define R_PORT8_BASE            (0x40400100UL + BASE_NS_OFFSET)
 #define R_PORT9_BASE            (0x40400120UL + BASE_NS_OFFSET)
 #define R_PORT10_BASE           (0x40400140UL + BASE_NS_OFFSET)
 #define R_PORT11_BASE           (0x40400160UL + BASE_NS_OFFSET)
 #define R_PORT12_BASE           (0x40400180UL + BASE_NS_OFFSET)
 #define R_PORT13_BASE           (0x404001A0UL + BASE_NS_OFFSET)
 #define R_PORT14_BASE           (0x404001C0UL + BASE_NS_OFFSET)
 #define R_PFS_BASE              (0x40400800UL + BASE_NS_OFFSET)
 #define R_PMISC_BASE            (0x40400D00UL + BASE_NS_OFFSET)
 #define R_RTC_BASE              (0x40202000UL + BASE_NS_OFFSET)
 #define R_SCI0_BASE             (0x40358000UL + BASE_NS_OFFSET)
 #define R_SCI1_BASE             (0x40358100UL + BASE_NS_OFFSET)
 #define R_SCI2_BASE             (0x40358200UL + BASE_NS_OFFSET)
 #define R_SCI3_BASE             (0x40358300UL + BASE_NS_OFFSET)
 #define R_SCI4_BASE             (0x40358400UL + BASE_NS_OFFSET)
 #define R_SCI5_BASE             (0x40358500UL + BASE_NS_OFFSET)
 #define R_SCI6_BASE             (0x40358600UL + BASE_NS_OFFSET)
 #define R_SCI7_BASE             (0x40358700UL + BASE_NS_OFFSET)
 #define R_SCI8_BASE             (0x40358800UL + BASE_NS_OFFSET)
 #define R_SCI9_BASE             (0x40358900UL + BASE_NS_OFFSET)
 #define R_SDHI0_BASE            (0x40252000UL + BASE_NS_OFFSET)
 #define R_SDHI1_BASE            (0x40252400UL + BASE_NS_OFFSET)
 #define R_SPI0_BASE             (0x4035C000UL + BASE_NS_OFFSET)
 #define R_SPI1_BASE             (0x4035C100UL + BASE_NS_OFFSET)
 #define R_SRAM_BASE             (0x40002000UL + BASE_NS_OFFSET)
 #define R_SSI0_BASE             (0x4025D000UL + BASE_NS_OFFSET)
 #define R_SSI1_BASE             (0x4025D100UL + BASE_NS_OFFSET)
 #define R_SYSTEM_BASE           (0x4001E000UL + BASE_NS_OFFSET)
 #define R_TSN_CAL_BASE          (0x4011B17CUL + BASE_NS_OFFSET)
 #define R_TSN_CTRL_BASE         (0x40235000UL + BASE_NS_OFFSET)
 #define R_USB_FS0_BASE          (0x40250000UL + BASE_NS_OFFSET)
 #define R_WDT_BASE              (0x40202600UL + BASE_NS_OFFSET)
 #define R_TZF_BASE              (0x40004000UL + BASE_NS_OFFSET)
 #define R_CPSCU_BASE            (0x40008000UL + BASE_NS_OFFSET)
 #define R_DOC_B_BASE            (0x40311000UL + BASE_NS_OFFSET)
 #define R_SCI_B0_BASE           (0x40358000UL + BASE_NS_OFFSET)
 #define R_SCI_B1_BASE           (0x40358100UL + BASE_NS_OFFSET)
 #define R_SCI_B2_BASE           (0x40358200UL + BASE_NS_OFFSET)
 #define R_SCI_B3_BASE           (0x40358300UL + BASE_NS_OFFSET)
 #define R_SCI_B4_BASE           (0x40358400UL + BASE_NS_OFFSET)
 #define R_SCI_B9_BASE           (0x40358900UL + BASE_NS_OFFSET)
 #define R_SPI_B0_BASE           (0x4035C000UL + BASE_NS_OFFSET)
 #define R_SPI_B1_BASE           (0x4035C100UL + BASE_NS_OFFSET)
 #define R_USB_HS0_BASE          (0x40351000UL + BASE_NS_OFFSET)
 #define R_XSPI_BASE             (0x40268000UL + BASE_NS_OFFSET)
 #define R_CEU_BASE              (0x40348000UL + BASE_NS_OFFSET)
 #define R_ULPT0_BASE            (0x40220000UL + BASE_NS_OFFSET)
 #define R_ULPT1_BASE            (0x40220100UL + BASE_NS_OFFSET)
 #define R_DEBUG_OCD_BASE        (0x40011000UL + BASE_NS_OFFSET)
 #define R_DOTF_BASE             (0x40268800UL + BASE_NS_OFFSET)
 #define R_AGTX0_BASE            (0x40221000UL + BASE_NS_OFFSET)
 #define R_AGTX1_BASE            (0x40221100UL + BASE_NS_OFFSET)
 #define R_AGTX2_BASE            (0x40221200UL + BASE_NS_OFFSET)
 #define R_AGTX3_BASE            (0x40221300UL + BASE_NS_OFFSET)
 #define R_AGTX4_BASE            (0x40221400UL + BASE_NS_OFFSET)
 #define R_AGTX5_BASE            (0x40221500UL + BASE_NS_OFFSET)
 #define R_AGTX6_BASE            (0x40221600UL + BASE_NS_OFFSET)
 #define R_AGTX7_BASE            (0x40221700UL + BASE_NS_OFFSET)
 #define R_AGTX8_BASE            (0x40221800UL + BASE_NS_OFFSET)
 #define R_AGTX9_BASE            (0x40221900UL + BASE_NS_OFFSET)
 #define R_FLAD_BASE             (0x4011C000UL + BASE_NS_OFFSET)
 #define R_OFS_DATAFLASH_BASE    (0x27030000UL + BASE_NS_OFFSET)

/** @} */ /* End of group Device_Peripheral_peripheralAddr */

/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */

/** @addtogroup Device_Peripheral_declaration
 * @{
 */

 #define R_ACMPHS0          ((R_ACMPHS0_Type *) R_ACMPHS0_BASE)
 #define R_ACMPHS1          ((R_ACMPHS0_Type *) R_ACMPHS1_BASE)
 #define R_ACMPHS2          ((R_ACMPHS0_Type *) R_ACMPHS2_BASE)
 #define R_ACMPHS3          ((R_ACMPHS0_Type *) R_ACMPHS3_BASE)
 #define R_ACMPHS4          ((R_ACMPHS0_Type *) R_ACMPHS4_BASE)
 #define R_ACMPHS5          ((R_ACMPHS0_Type *) R_ACMPHS5_BASE)
 #define R_ADC0             ((R_ADC0_Type *) R_ADC0_BASE)
 #define R_ADC1             ((R_ADC0_Type *) R_ADC1_BASE)
 #define R_PSCU             ((R_PSCU_Type *) R_PSCU_BASE)
 #define R_BUS              ((R_BUS_Type *) R_BUS_BASE)
 #define R_CAC              ((R_CAC_Type *) R_CAC_BASE)
 #define R_CANFD            ((R_CANFD_Type *) R_CANFD_BASE)
 #define R_CANFD0           ((R_CANFD_Type *) R_CANFD_BASE)
 #define R_CANFD1           ((R_CANFD_Type *) R_CANFD1_BASE)
 #define R_CRC              ((R_CRC_Type *) R_CRC_BASE)
 #define R_DAC              ((R_DAC_Type *) R_DAC_BASE)
 #define R_DAC1             ((R_DAC_Type *) R_DAC1_BASE)
 #define R_DEBUG            ((R_DEBUG_Type *) R_DEBUG_BASE)
 #define R_DMA              ((R_DMA_Type *) R_DMA_BASE)
 #define R_DMAC0            ((R_DMAC0_Type *) R_DMAC0_BASE)
 #define R_DMAC1            ((R_DMAC0_Type *) R_DMAC1_BASE)
 #define R_DMAC2            ((R_DMAC0_Type *) R_DMAC2_BASE)
 #define R_DMAC3            ((R_DMAC0_Type *) R_DMAC3_BASE)
 #define R_DMAC4            ((R_DMAC0_Type *) R_DMAC4_BASE)
 #define R_DMAC5            ((R_DMAC0_Type *) R_DMAC5_BASE)
 #define R_DMAC6            ((R_DMAC0_Type *) R_DMAC6_BASE)
 #define R_DMAC7            ((R_DMAC0_Type *) R_DMAC7_BASE)
 #define R_DOC              ((R_DOC_Type *) R_DOC_BASE)
 #define R_DTC              ((R_DTC_Type *) R_DTC_BASE)
 #define R_ELC              ((R_ELC_Type *) R_ELC_BASE)
 #define R_ETHERC0          ((R_ETHERC0_Type *) R_ETHERC0_BASE)
 #define R_ETHERC_EDMAC     ((R_ETHERC_EDMAC_Type *) R_ETHERC_EDMAC_BASE)
 #define R_FACI_HP_CMD      ((R_FACI_HP_CMD_Type *) R_FACI_HP_CMD_BASE)
 #define R_FACI_HP          ((R_FACI_HP_Type *) R_FACI_HP_BASE)
 #define R_FCACHE           ((R_FCACHE_Type *) R_FCACHE_BASE)
 #define R_GPT0             ((R_GPT0_Type *) R_GPT0_BASE)
 #define R_GPT1             ((R_GPT0_Type *) R_GPT1_BASE)
 #define R_GPT2             ((R_GPT0_Type *) R_GPT2_BASE)
 #define R_GPT3             ((R_GPT0_Type *) R_GPT3_BASE)
 #define R_GPT4             ((R_GPT0_Type *) R_GPT4_BASE)
 #define R_GPT5             ((R_GPT0_Type *) R_GPT5_BASE)
 #define R_GPT6             ((R_GPT0_Type *) R_GPT6_BASE)
 #define R_GPT7             ((R_GPT0_Type *) R_GPT7_BASE)
 #define R_GPT8             ((R_GPT0_Type *) R_GPT8_BASE)
 #define R_GPT9             ((R_GPT0_Type *) R_GPT9_BASE)
 #define R_GPT10            ((R_GPT0_Type *) R_GPT10_BASE)
 #define R_GPT11            ((R_GPT0_Type *) R_GPT11_BASE)
 #define R_GPT12            ((R_GPT0_Type *) R_GPT12_BASE)
 #define R_GPT13            ((R_GPT0_Type *) R_GPT13_BASE)
 #define R_GPT_OPS          ((R_GPT_OPS_Type *) R_GPT_OPS_BASE)
 #define R_GPT_POEG0        ((R_GPT_POEG0_Type *) R_GPT_POEG0_BASE)
 #define R_GPT_POEG1        ((R_GPT_POEG0_Type *) R_GPT_POEG1_BASE)
 #define R_GPT_POEG2        ((R_GPT_POEG0_Type *) R_GPT_POEG2_BASE)
 #define R_GPT_POEG3        ((R_GPT_POEG0_Type *) R_GPT_POEG3_BASE)
 #define R_ICU              ((R_ICU_Type *) R_ICU_BASE)
 #define R_IIC0             ((R_IIC0_Type *) R_IIC0_BASE)
 #define R_IIC1             ((R_IIC0_Type *) R_IIC1_BASE)
 #define R_IIC2             ((R_IIC0_Type *) R_IIC2_BASE)
 #define R_IWDT             ((R_IWDT_Type *) R_IWDT_BASE)
 #define R_I3C0             ((R_I3C0_Type *) R_I3C0_BASE)
 #define R_I3C1             ((R_I3C0_Type *) R_I3C1_BASE)
 #define R_MPU_MMPU         ((R_MPU_MMPU_Type *) R_MPU_MMPU_BASE)
 #define R_MPU_SPMON        ((R_MPU_SPMON_Type *) R_MPU_SPMON_BASE)
 #define R_MSTP             ((R_MSTP_Type *) R_MSTP_BASE)
 #define R_PORT0            ((R_PORT0_Type *) R_PORT0_BASE)
 #define R_PORT1            ((R_PORT0_Type *) R_PORT1_BASE)
 #define R_PORT2            ((R_PORT0_Type *) R_PORT2_BASE)
 #define R_PORT3            ((R_PORT0_Type *) R_PORT3_BASE)
 #define R_PORT4            ((R_PORT0_Type *) R_PORT4_BASE)
 #define R_PORT5            ((R_PORT0_Type *) R_PORT5_BASE)
 #define R_PORT6            ((R_PORT0_Type *) R_PORT6_BASE)
 #define R_PORT7            ((R_PORT0_Type *) R_PORT7_BASE)
 #define R_PORT8            ((R_PORT0_Type *) R_PORT8_BASE)
 #define R_PORT9            ((R_PORT0_Type *) R_PORT9_BASE)
 #define R_PORT10           ((R_PORT0_Type *) R_PORT10_BASE)
 #define R_PORT11           ((R_PORT0_Type *) R_PORT11_BASE)
 #define R_PORT12           ((R_PORT0_Type *) R_PORT12_BASE)
 #define R_PORT13           ((R_PORT0_Type *) R_PORT13_BASE)
 #define R_PORT14           ((R_PORT0_Type *) R_PORT14_BASE)
 #define R_PFS              ((R_PFS_Type *) R_PFS_BASE)
 #define R_PMISC            ((R_PMISC_Type *) R_PMISC_BASE)
 #define R_RTC              ((R_RTC_Type *) R_RTC_BASE)
 #define R_SCI0             ((R_SCI0_Type *) R_SCI0_BASE)
 #define R_SCI1             ((R_SCI0_Type *) R_SCI1_BASE)
 #define R_SCI2             ((R_SCI0_Type *) R_SCI2_BASE)
 #define R_SCI3             ((R_SCI0_Type *) R_SCI3_BASE)
 #define R_SCI4             ((R_SCI0_Type *) R_SCI4_BASE)
 #define R_SCI5             ((R_SCI0_Type *) R_SCI5_BASE)
 #define R_SCI6             ((R_SCI0_Type *) R_SCI6_BASE)
 #define R_SCI7             ((R_SCI0_Type *) R_SCI7_BASE)
 #define R_SCI8             ((R_SCI0_Type *) R_SCI8_BASE)
 #define R_SCI9             ((R_SCI0_Type *) R_SCI9_BASE)
 #define R_SDHI0            ((R_SDHI0_Type *) R_SDHI0_BASE)
 #define R_SDHI1            ((R_SDHI0_Type *) R_SDHI1_BASE)
 #define R_SPI0             ((R_SPI0_Type *) R_SPI0_BASE)
 #define R_SPI1             ((R_SPI0_Type *) R_SPI1_BASE)
 #define R_SRAM             ((R_SRAM_Type *) R_SRAM_BASE)
 #define R_SSI0             ((R_SSI0_Type *) R_SSI0_BASE)
 #define R_SSI1             ((R_SSI0_Type *) R_SSI1_BASE)
 #define R_SYSTEM           ((R_SYSTEM_Type *) R_SYSTEM_BASE)
 #define R_TSN_CAL          ((R_TSN_CAL_Type *) R_TSN_CAL_BASE)
 #define R_TSN_CTRL         ((R_TSN_CTRL_Type *) R_TSN_CTRL_BASE)
 #define R_USB_FS0          ((R_USB_FS0_Type *) R_USB_FS0_BASE)
 #define R_WDT              ((R_WDT_Type *) R_WDT_BASE)
 #define R_TZF              ((R_TZF_Type *) R_TZF_BASE)
 #define R_CPSCU            ((R_CPSCU_Type *) R_CPSCU_BASE)
 #define R_DOC_B            ((R_DOC_B_Type *) R_DOC_B_BASE)
 #define R_SCI_B0           ((R_SCI_B0_Type *) R_SCI_B0_BASE)
 #define R_SCI_B1           ((R_SCI_B0_Type *) R_SCI_B1_BASE)
 #define R_SCI_B2           ((R_SCI_B0_Type *) R_SCI_B2_BASE)
 #define R_SCI_B3           ((R_SCI_B0_Type *) R_SCI_B3_BASE)
 #define R_SCI_B4           ((R_SCI_B0_Type *) R_SCI_B4_BASE)
 #define R_SCI_B9           ((R_SCI_B0_Type *) R_SCI_B9_BASE)
 #define R_SPI_B0           ((R_SPI_B0_Type *) R_SPI_B0_BASE)
 #define R_SPI_B1           ((R_SPI_B0_Type *) R_SPI_B1_BASE)
 #define R_USB_HS0          ((R_USB_HS0_Type *) R_USB_HS0_BASE)
 #define R_XSPI             ((R_XSPI_Type *) R_XSPI_BASE)
 #define R_CEU              ((R_CEU_Type *) R_CEU_BASE)
 #define R_ULPT0            ((R_ULPT0_Type *) R_ULPT0_BASE)
 #define R_ULPT1            ((R_ULPT0_Type *) R_ULPT1_BASE)
 #define R_DEBUG_OCD        ((R_DEBUG_OCD_Type *) R_DEBUG_OCD_BASE)
 #define R_DOTF             ((R_DOTF_Type *) R_DOTF_BASE)
 #define R_AGT0             ((R_AGTX0_Type *) R_AGTX0_BASE)
 #define R_AGT1             ((R_AGTX0_Type *) R_AGTX1_BASE)
 #define R_AGT2             ((R_AGTX0_Type *) R_AGTX2_BASE)
 #define R_AGT3             ((R_AGTX0_Type *) R_AGTX3_BASE)
 #define R_AGT4             ((R_AGTX0_Type *) R_AGTX4_BASE)
 #define R_AGT5             ((R_AGTX0_Type *) R_AGTX5_BASE)
 #define R_AGT6             ((R_AGTX0_Type *) R_AGTX6_BASE)
 #define R_AGT7             ((R_AGTX0_Type *) R_AGTX7_BASE)
 #define R_AGT8             ((R_AGTX0_Type *) R_AGTX8_BASE)
 #define R_AGT9             ((R_AGTX0_Type *) R_AGTX9_BASE)
 #define R_FLAD             ((R_FLAD_Type *) R_FLAD_BASE)
 #define R_OFS_DATAFLASH    ((R_OFS_DATAFLASH_Type *) R_OFS_DATAFLASH_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */

/* =========================================  End of section using anonymous unions  ========================================= */
 #if defined(__CC_ARM)
  #pragma pop
 #elif defined(__ICCARM__)

/* leave anonymous unions enabled */
 #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
 #elif defined(__GNUC__)

/* anonymous unions are enabled by default */
 #elif defined(__TMS470__)

/* anonymous unions are enabled by default */
 #elif defined(__TASKING__)
  #pragma warning restore
 #elif defined(__CSMC__)

/* anonymous unions are enabled by default */
 #endif

/* =========================================================================================================================== */
/* ================                                 Pos/Mask Cluster Section                                  ================ */
/* =========================================================================================================================== */

/** @addtogroup PosMask_clusters
 * @{
 */

/* =========================================================================================================================== */
/* ================                                            CSa                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  MOD  ========================================================== */
 #define R_BUS_CSa_MOD_PRMOD_Pos        (15UL)
 #define R_BUS_CSa_MOD_PRMOD_Msk        (0x8000UL)
 #define R_BUS_CSa_MOD_PWENB_Pos        (9UL)
 #define R_BUS_CSa_MOD_PWENB_Msk        (0x200UL)
 #define R_BUS_CSa_MOD_PRENB_Pos        (8UL)
 #define R_BUS_CSa_MOD_PRENB_Msk        (0x100UL)
 #define R_BUS_CSa_MOD_EWENB_Pos        (3UL)
 #define R_BUS_CSa_MOD_EWENB_Msk        (0x8UL)
 #define R_BUS_CSa_MOD_WRMOD_Pos        (0UL)
 #define R_BUS_CSa_MOD_WRMOD_Msk        (0x1UL)
/* =========================================================  WCR1  ========================================================== */
 #define R_BUS_CSa_WCR1_CSRWAIT_Pos     (24UL)
 #define R_BUS_CSa_WCR1_CSRWAIT_Msk     (0x1f000000UL)
 #define R_BUS_CSa_WCR1_CSWWAIT_Pos     (16UL)
 #define R_BUS_CSa_WCR1_CSWWAIT_Msk     (0x1f0000UL)
 #define R_BUS_CSa_WCR1_CSPRWAIT_Pos    (8UL)
 #define R_BUS_CSa_WCR1_CSPRWAIT_Msk    (0x700UL)
 #define R_BUS_CSa_WCR1_CSPWWAIT_Pos    (0UL)
 #define R_BUS_CSa_WCR1_CSPWWAIT_Msk    (0x7UL)
/* =========================================================  WCR2  ========================================================== */
 #define R_BUS_CSa_WCR2_CSON_Pos        (28UL)
 #define R_BUS_CSa_WCR2_CSON_Msk        (0x70000000UL)
 #define R_BUS_CSa_WCR2_WDON_Pos        (24UL)
 #define R_BUS_CSa_WCR2_WDON_Msk        (0x7000000UL)
 #define R_BUS_CSa_WCR2_WRON_Pos        (20UL)
 #define R_BUS_CSa_WCR2_WRON_Msk        (0x700000UL)
 #define R_BUS_CSa_WCR2_RDON_Pos        (16UL)
 #define R_BUS_CSa_WCR2_RDON_Msk        (0x70000UL)
 #define R_BUS_CSa_WCR2_AWAIT_Pos       (12UL)
 #define R_BUS_CSa_WCR2_AWAIT_Msk       (0x3000UL)
 #define R_BUS_CSa_WCR2_WDOFF_Pos       (8UL)
 #define R_BUS_CSa_WCR2_WDOFF_Msk       (0x700UL)
 #define R_BUS_CSa_WCR2_CSWOFF_Pos      (4UL)
 #define R_BUS_CSa_WCR2_CSWOFF_Msk      (0x70UL)
 #define R_BUS_CSa_WCR2_CSROFF_Pos      (0UL)
 #define R_BUS_CSa_WCR2_CSROFF_Msk      (0x7UL)

/* =========================================================================================================================== */
/* ================                                            CSb                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
 #define R_BUS_CSb_CR_MPXEN_Pos    (12UL)
 #define R_BUS_CSb_CR_MPXEN_Msk    (0x1000UL)
 #define R_BUS_CSb_CR_EMODE_Pos    (8UL)
 #define R_BUS_CSb_CR_EMODE_Msk    (0x100UL)
 #define R_BUS_CSb_CR_BSIZE_Pos    (4UL)
 #define R_BUS_CSb_CR_BSIZE_Msk    (0x30UL)
 #define R_BUS_CSb_CR_EXENB_Pos    (0UL)
 #define R_BUS_CSb_CR_EXENB_Msk    (0x1UL)
/* ==========================================================  REC  ========================================================== */
 #define R_BUS_CSb_REC_WRCV_Pos    (8UL)
 #define R_BUS_CSb_REC_WRCV_Msk    (0xf00UL)
 #define R_BUS_CSb_REC_RRCV_Pos    (0UL)
 #define R_BUS_CSb_REC_RRCV_Msk    (0xfUL)

/* =========================================================================================================================== */
/* ================                                           SDRAM                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  SDCCR  ========================================================= */
 #define R_BUS_SDRAM_SDCCR_BSIZE_Pos     (4UL)
 #define R_BUS_SDRAM_SDCCR_BSIZE_Msk     (0x30UL)
 #define R_BUS_SDRAM_SDCCR_EXENB_Pos     (0UL)
 #define R_BUS_SDRAM_SDCCR_EXENB_Msk     (0x1UL)
/* ========================================================  SDCMOD  ========================================================= */
 #define R_BUS_SDRAM_SDCMOD_EMODE_Pos    (0UL)
 #define R_BUS_SDRAM_SDCMOD_EMODE_Msk    (0x1UL)
/* ========================================================  SDAMOD  ========================================================= */
 #define R_BUS_SDRAM_SDAMOD_BE_Pos       (0UL)
 #define R_BUS_SDRAM_SDAMOD_BE_Msk       (0x1UL)
/* ========================================================  SDSELF  ========================================================= */
 #define R_BUS_SDRAM_SDSELF_SFEN_Pos     (0UL)
 #define R_BUS_SDRAM_SDSELF_SFEN_Msk     (0x1UL)
/* ========================================================  SDRFCR  ========================================================= */
 #define R_BUS_SDRAM_SDRFCR_REFW_Pos     (12UL)
 #define R_BUS_SDRAM_SDRFCR_REFW_Msk     (0xf000UL)
 #define R_BUS_SDRAM_SDRFCR_RFC_Pos      (0UL)
 #define R_BUS_SDRAM_SDRFCR_RFC_Msk      (0xfffUL)
/* ========================================================  SDRFEN  ========================================================= */
 #define R_BUS_SDRAM_SDRFEN_RFEN_Pos     (0UL)
 #define R_BUS_SDRAM_SDRFEN_RFEN_Msk     (0x1UL)
/* =========================================================  SDICR  ========================================================= */
 #define R_BUS_SDRAM_SDICR_INIRQ_Pos     (0UL)
 #define R_BUS_SDRAM_SDICR_INIRQ_Msk     (0x1UL)
/* =========================================================  SDIR  ========================================================== */
 #define R_BUS_SDRAM_SDIR_PRC_Pos        (8UL)
 #define R_BUS_SDRAM_SDIR_PRC_Msk        (0x700UL)
 #define R_BUS_SDRAM_SDIR_ARFC_Pos       (4UL)
 #define R_BUS_SDRAM_SDIR_ARFC_Msk       (0xf0UL)
 #define R_BUS_SDRAM_SDIR_ARFI_Pos       (0UL)
 #define R_BUS_SDRAM_SDIR_ARFI_Msk       (0xfUL)
/* =========================================================  SDADR  ========================================================= */
 #define R_BUS_SDRAM_SDADR_MXC_Pos       (0UL)
 #define R_BUS_SDRAM_SDADR_MXC_Msk       (0x3UL)
/* =========================================================  SDTR  ========================================================== */
 #define R_BUS_SDRAM_SDTR_RAS_Pos        (16UL)
 #define R_BUS_SDRAM_SDTR_RAS_Msk        (0x70000UL)
 #define R_BUS_SDRAM_SDTR_RCD_Pos        (12UL)
 #define R_BUS_SDRAM_SDTR_RCD_Msk        (0x3000UL)
 #define R_BUS_SDRAM_SDTR_RP_Pos         (9UL)
 #define R_BUS_SDRAM_SDTR_RP_Msk         (0xe00UL)
 #define R_BUS_SDRAM_SDTR_WR_Pos         (8UL)
 #define R_BUS_SDRAM_SDTR_WR_Msk         (0x100UL)
 #define R_BUS_SDRAM_SDTR_CL_Pos         (0UL)
 #define R_BUS_SDRAM_SDTR_CL_Msk         (0x7UL)
/* =========================================================  SDMOD  ========================================================= */
 #define R_BUS_SDRAM_SDMOD_MR_Pos        (0UL)
 #define R_BUS_SDRAM_SDMOD_MR_Msk        (0x7fffUL)
/* =========================================================  SDSR  ========================================================== */
 #define R_BUS_SDRAM_SDSR_SRFST_Pos      (4UL)
 #define R_BUS_SDRAM_SDSR_SRFST_Msk      (0x10UL)
 #define R_BUS_SDRAM_SDSR_INIST_Pos      (3UL)
 #define R_BUS_SDRAM_SDSR_INIST_Msk      (0x8UL)
 #define R_BUS_SDRAM_SDSR_MRSST_Pos      (0UL)
 #define R_BUS_SDRAM_SDSR_MRSST_Msk      (0x1UL)

/* =========================================================================================================================== */
/* ================                                          BUSERRa                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  ADD  ========================================================== */
 #define R_BUS_BUSERRa_ADD_BERAD_Pos       (0UL)
 #define R_BUS_BUSERRa_ADD_BERAD_Msk       (0xffffffffUL)
/* =========================================================  STAT  ========================================================== */
 #define R_BUS_BUSERRa_STAT_ERRSTAT_Pos    (7UL)
 #define R_BUS_BUSERRa_STAT_ERRSTAT_Msk    (0x80UL)
 #define R_BUS_BUSERRa_STAT_ACCSTAT_Pos    (0UL)
 #define R_BUS_BUSERRa_STAT_ACCSTAT_Msk    (0x1UL)
/* ==========================================================  RW  =========================================================== */
 #define R_BUS_BUSERRa_RW_RWSTAT_Pos       (0UL)
 #define R_BUS_BUSERRa_RW_RWSTAT_Msk       (0x1UL)

/* =========================================================================================================================== */
/* ================                                          BTZFERR                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  ADD  ========================================================== */
 #define R_BUS_BTZFERR_ADD_BTZFERAD_Pos    (0UL)
 #define R_BUS_BTZFERR_ADD_BTZFERAD_Msk    (0xffffffffUL)
/* ==========================================================  RW  =========================================================== */
 #define R_BUS_BTZFERR_RW_TRWSTAT_Pos      (0UL)
 #define R_BUS_BTZFERR_RW_TRWSTAT_Msk      (0x1UL)

/* =========================================================================================================================== */
/* ================                                          BUSERRb                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  STAT  ========================================================== */
 #define R_BUS_BUSERRb_STAT_MSERRSTAT_Pos    (5UL)
 #define R_BUS_BUSERRb_STAT_MSERRSTAT_Msk    (0x20UL)
 #define R_BUS_BUSERRb_STAT_ILERRSTAT_Pos    (4UL)
 #define R_BUS_BUSERRb_STAT_ILERRSTAT_Msk    (0x10UL)
 #define R_BUS_BUSERRb_STAT_MMERRSTAT_Pos    (3UL)
 #define R_BUS_BUSERRb_STAT_MMERRSTAT_Msk    (0x8UL)
 #define R_BUS_BUSERRb_STAT_STERRSTAT_Pos    (1UL)
 #define R_BUS_BUSERRb_STAT_STERRSTAT_Msk    (0x2UL)
 #define R_BUS_BUSERRb_STAT_SLERRSTAT_Pos    (0UL)
 #define R_BUS_BUSERRb_STAT_SLERRSTAT_Msk    (0x1UL)
/* ==========================================================  CLR  ========================================================== */
 #define R_BUS_BUSERRb_CLR_MSERRCLR_Pos      (5UL)
 #define R_BUS_BUSERRb_CLR_MSERRCLR_Msk      (0x20UL)
 #define R_BUS_BUSERRb_CLR_ILERRCLR_Pos      (4UL)
 #define R_BUS_BUSERRb_CLR_ILERRCLR_Msk      (0x10UL)
 #define R_BUS_BUSERRb_CLR_MMERRCLR_Pos      (3UL)
 #define R_BUS_BUSERRb_CLR_MMERRCLR_Msk      (0x8UL)
 #define R_BUS_BUSERRb_CLR_STERRCLR_Pos      (1UL)
 #define R_BUS_BUSERRb_CLR_STERRCLR_Msk      (0x2UL)
 #define R_BUS_BUSERRb_CLR_SLERRCLR_Pos      (0UL)
 #define R_BUS_BUSERRb_CLR_SLERRCLR_Msk      (0x1UL)

/* =========================================================================================================================== */
/* ================                                        DMACDTCERR                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  STAT  ========================================================== */
 #define R_BUS_DMACDTCERR_STAT_MTERRSTAT_Pos    (0UL)
 #define R_BUS_DMACDTCERR_STAT_MTERRSTAT_Msk    (0x1UL)
/* ==========================================================  CLR  ========================================================== */
 #define R_BUS_DMACDTCERR_CLR_MTERRCLR_Pos      (0UL)
 #define R_BUS_DMACDTCERR_CLR_MTERRCLR_Msk      (0x1UL)

/* =========================================================================================================================== */
/* ================                                         BUSSABT0                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  FLBI  ========================================================== */
 #define R_BUS_BUSSABT0_FLBI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_FLBI_ARBS_Msk         (0x1UL)
/* ========================================================  MRE0BI  ========================================================= */
 #define R_BUS_BUSSABT0_MRE0BI_ARBS_Pos       (0UL)
 #define R_BUS_BUSSABT0_MRE0BI_ARBS_Msk       (0x1UL)
/* =========================================================  S0BI  ========================================================== */
 #define R_BUS_BUSSABT0_S0BI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_S0BI_ARBS_Msk         (0x1UL)
/* =========================================================  S1BI  ========================================================== */
 #define R_BUS_BUSSABT0_S1BI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_S1BI_ARBS_Msk         (0x1UL)
/* =========================================================  S2BI  ========================================================== */
 #define R_BUS_BUSSABT0_S2BI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_S2BI_ARBS_Msk         (0x1UL)
/* =========================================================  S3BI  ========================================================== */
 #define R_BUS_BUSSABT0_S3BI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_S3BI_ARBS_Msk         (0x1UL)
/* ========================================================  STBYSBI  ======================================================== */
 #define R_BUS_BUSSABT0_STBYSBI_ARBS_Pos      (0UL)
 #define R_BUS_BUSSABT0_STBYSBI_ARBS_Msk      (0x1UL)
/* =========================================================  ECBI  ========================================================== */
 #define R_BUS_BUSSABT0_ECBI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_ECBI_ARBS_Msk         (0x1UL)
/* =========================================================  EOBI  ========================================================== */
 #define R_BUS_BUSSABT0_EOBI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_EOBI_ARBS_Msk         (0x1UL)
/* ========================================================  SPI0BI  ========================================================= */
 #define R_BUS_BUSSABT0_SPI0BI_ARBS_Pos       (0UL)
 #define R_BUS_BUSSABT0_SPI0BI_ARBS_Msk       (0x1UL)
/* ========================================================  SPI1BI  ========================================================= */
 #define R_BUS_BUSSABT0_SPI1BI_ARBS_Pos       (0UL)
 #define R_BUS_BUSSABT0_SPI1BI_ARBS_Msk       (0x1UL)
/* =========================================================  PBBI  ========================================================== */
 #define R_BUS_BUSSABT0_PBBI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_PBBI_ARBS_Msk         (0x1UL)
/* =========================================================  PABI  ========================================================== */
 #define R_BUS_BUSSABT0_PABI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_PABI_ARBS_Msk         (0x1UL)
/* =========================================================  PIBI  ========================================================== */
 #define R_BUS_BUSSABT0_PIBI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_PIBI_ARBS_Msk         (0x1UL)
/* =========================================================  PSBI  ========================================================== */
 #define R_BUS_BUSSABT0_PSBI_ARBS_Pos         (0UL)
 #define R_BUS_BUSSABT0_PSBI_ARBS_Msk         (0x1UL)
/* =======================================================  CPU0SAHBI  ======================================================= */
 #define R_BUS_BUSSABT0_CPU0SAHBI_ARBS_Pos    (0UL)
 #define R_BUS_BUSSABT0_CPU0SAHBI_ARBS_Msk    (0x1UL)
/* =======================================================  CPU1TCMBI  ======================================================= */
 #define R_BUS_BUSSABT0_CPU1TCMBI_ARBS_Pos    (0UL)
 #define R_BUS_BUSSABT0_CPU1TCMBI_ARBS_Msk    (0x1UL)

/* =========================================================================================================================== */
/* ================                                         BUSSABT1                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  FHBI  ========================================================== */
 #define R_BUS_BUSSABT1_FHBI_ARBS_Pos      (0UL)
 #define R_BUS_BUSSABT1_FHBI_ARBS_Msk      (0x3UL)
/* ========================================================  MRC0BI  ========================================================= */
 #define R_BUS_BUSSABT1_MRC0BI_ARBS_Pos    (0UL)
 #define R_BUS_BUSSABT1_MRC0BI_ARBS_Msk    (0x3UL)
/* =========================================================  S0BI  ========================================================== */
 #define R_BUS_BUSSABT1_S0BI_ARBS_Pos      (0UL)
 #define R_BUS_BUSSABT1_S0BI_ARBS_Msk      (0x3UL)
/* =========================================================  S1BI  ========================================================== */
 #define R_BUS_BUSSABT1_S1BI_ARBS_Pos      (0UL)
 #define R_BUS_BUSSABT1_S1BI_ARBS_Msk      (0x3UL)

/* =========================================================================================================================== */
/* ================                                          BMSAERR                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  ADD  ========================================================== */
 #define R_BUS_BMSAERR_ADD_MSERAD_Pos      (0UL)
 #define R_BUS_BMSAERR_ADD_MSERAD_Msk      (0xffffffffUL)
/* ==========================================================  RW  =========================================================== */
 #define R_BUS_BMSAERR_RW_MSARWSTAT_Pos    (0UL)
 #define R_BUS_BMSAERR_RW_MSARWSTAT_Msk    (0x1UL)

/* =========================================================================================================================== */
/* ================                                            OAD                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  BUSOAD  ========================================================= */
 #define R_BUS_OAD_BUSOAD_BWERROAD_Pos     (2UL)
 #define R_BUS_OAD_BUSOAD_BWERROAD_Msk     (0x4UL)
 #define R_BUS_OAD_BUSOAD_SLERROAD_Pos     (1UL)
 #define R_BUS_OAD_BUSOAD_SLERROAD_Msk     (0x2UL)
 #define R_BUS_OAD_BUSOAD_ILERROAD_Pos     (0UL)
 #define R_BUS_OAD_BUSOAD_ILERROAD_Msk     (0x1UL)
/* =======================================================  BUSOADPT  ======================================================== */
 #define R_BUS_OAD_BUSOADPT_KEY_Pos        (8UL)
 #define R_BUS_OAD_BUSOADPT_KEY_Msk        (0xff00UL)
 #define R_BUS_OAD_BUSOADPT_PROTECT_Pos    (0UL)
 #define R_BUS_OAD_BUSOADPT_PROTECT_Msk    (0x1UL)
/* ========================================================  MSAOAD  ========================================================= */
 #define R_BUS_OAD_MSAOAD_KEY_Pos          (8UL)
 #define R_BUS_OAD_MSAOAD_KEY_Msk          (0xff00UL)
 #define R_BUS_OAD_MSAOAD_OAD_Pos          (0UL)
 #define R_BUS_OAD_MSAOAD_OAD_Msk          (0x1UL)
/* =========================================================  MSAPT  ========================================================= */
 #define R_BUS_OAD_MSAPT_KEY_Pos           (8UL)
 #define R_BUS_OAD_MSAPT_KEY_Msk           (0xff00UL)
 #define R_BUS_OAD_MSAPT_PROTECT_Pos       (0UL)
 #define R_BUS_OAD_MSAPT_PROTECT_Msk       (0x1UL)

/* =========================================================================================================================== */
/* ================                                          MBWERR                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  STAT  ========================================================== */
 #define R_BUS_MBWERR_STAT_BWERR_Pos    (0UL)
 #define R_BUS_MBWERR_STAT_BWERR_Msk    (0x1UL)
/* ==========================================================  CLR  ========================================================== */
 #define R_BUS_MBWERR_CLR_BWERR_Pos     (0UL)
 #define R_BUS_MBWERR_CLR_BWERR_Msk     (0x1UL)

/* =========================================================================================================================== */
/* ================                                           BUSM                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CNT  ========================================================== */
 #define R_BUS_BUSM_CNT_IERES_Pos    (15UL)
 #define R_BUS_BUSM_CNT_IERES_Msk    (0x8000UL)

/* =========================================================================================================================== */
/* ================                                           BUSS                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CNT  ========================================================== */
 #define R_BUS_BUSS_CNT_ARBMET_Pos    (4UL)
 #define R_BUS_BUSS_CNT_ARBMET_Msk    (0x30UL)
 #define R_BUS_BUSS_CNT_ARBS_Pos      (0UL)
 #define R_BUS_BUSS_CNT_ARBS_Msk      (0x3UL)

/* =========================================================================================================================== */
/* ================                                           CFDC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  NCFG  ========================================================== */
 #define R_CANFD_CFDC_NCFG_NBRP_Pos      (0UL)
 #define R_CANFD_CFDC_NCFG_NBRP_Msk      (0x3ffUL)
 #define R_CANFD_CFDC_NCFG_NSJW_Pos      (10UL)
 #define R_CANFD_CFDC_NCFG_NSJW_Msk      (0x1fc00UL)
 #define R_CANFD_CFDC_NCFG_NTSEG1_Pos    (17UL)
 #define R_CANFD_CFDC_NCFG_NTSEG1_Msk    (0x1fe0000UL)
 #define R_CANFD_CFDC_NCFG_NTSEG2_Pos    (25UL)
 #define R_CANFD_CFDC_NCFG_NTSEG2_Msk    (0xfe000000UL)
/* ==========================================================  CTR  ========================================================== */
 #define R_CANFD_CFDC_CTR_CHMDC_Pos      (0UL)
 #define R_CANFD_CFDC_CTR_CHMDC_Msk      (0x3UL)
 #define R_CANFD_CFDC_CTR_CSLPR_Pos      (2UL)
 #define R_CANFD_CFDC_CTR_CSLPR_Msk      (0x4UL)
 #define R_CANFD_CFDC_CTR_RTBO_Pos       (3UL)
 #define R_CANFD_CFDC_CTR_RTBO_Msk       (0x8UL)
 #define R_CANFD_CFDC_CTR_BEIE_Pos       (8UL)
 #define R_CANFD_CFDC_CTR_BEIE_Msk       (0x100UL)
 #define R_CANFD_CFDC_CTR_EWIE_Pos       (9UL)
 #define R_CANFD_CFDC_CTR_EWIE_Msk       (0x200UL)
 #define R_CANFD_CFDC_CTR_EPIE_Pos       (10UL)
 #define R_CANFD_CFDC_CTR_EPIE_Msk       (0x400UL)
 #define R_CANFD_CFDC_CTR_BOEIE_Pos      (11UL)
 #define R_CANFD_CFDC_CTR_BOEIE_Msk      (0x800UL)
 #define R_CANFD_CFDC_CTR_BORIE_Pos      (12UL)
 #define R_CANFD_CFDC_CTR_BORIE_Msk      (0x1000UL)
 #define R_CANFD_CFDC_CTR_OLIE_Pos       (13UL)
 #define R_CANFD_CFDC_CTR_OLIE_Msk       (0x2000UL)
 #define R_CANFD_CFDC_CTR_BLIE_Pos       (14UL)
 #define R_CANFD_CFDC_CTR_BLIE_Msk       (0x4000UL)
 #define R_CANFD_CFDC_CTR_ALIE_Pos       (15UL)
 #define R_CANFD_CFDC_CTR_ALIE_Msk       (0x8000UL)
 #define R_CANFD_CFDC_CTR_TAIE_Pos       (16UL)
 #define R_CANFD_CFDC_CTR_TAIE_Msk       (0x10000UL)
 #define R_CANFD_CFDC_CTR_EOCOIE_Pos     (17UL)
 #define R_CANFD_CFDC_CTR_EOCOIE_Msk     (0x20000UL)
 #define R_CANFD_CFDC_CTR_SOCOIE_Pos     (18UL)
 #define R_CANFD_CFDC_CTR_SOCOIE_Msk     (0x40000UL)
 #define R_CANFD_CFDC_CTR_TDCVFIE_Pos    (19UL)
 #define R_CANFD_CFDC_CTR_TDCVFIE_Msk    (0x80000UL)
 #define R_CANFD_CFDC_CTR_BOM_Pos        (21UL)
 #define R_CANFD_CFDC_CTR_BOM_Msk        (0x600000UL)
 #define R_CANFD_CFDC_CTR_ERRD_Pos       (23UL)
 #define R_CANFD_CFDC_CTR_ERRD_Msk       (0x800000UL)
 #define R_CANFD_CFDC_CTR_CTME_Pos       (24UL)
 #define R_CANFD_CFDC_CTR_CTME_Msk       (0x1000000UL)
 #define R_CANFD_CFDC_CTR_CTMS_Pos       (25UL)
 #define R_CANFD_CFDC_CTR_CTMS_Msk       (0x6000000UL)
 #define R_CANFD_CFDC_CTR_CRCT_Pos       (30UL)
 #define R_CANFD_CFDC_CTR_CRCT_Msk       (0x40000000UL)
 #define R_CANFD_CFDC_CTR_ROM_Pos        (31UL)
 #define R_CANFD_CFDC_CTR_ROM_Msk        (0x80000000UL)
/* ==========================================================  STS  ========================================================== */
 #define R_CANFD_CFDC_STS_CRSTSTS_Pos    (0UL)
 #define R_CANFD_CFDC_STS_CRSTSTS_Msk    (0x1UL)
 #define R_CANFD_CFDC_STS_CHLTSTS_Pos    (1UL)
 #define R_CANFD_CFDC_STS_CHLTSTS_Msk    (0x2UL)
 #define R_CANFD_CFDC_STS_CSLPSTS_Pos    (2UL)
 #define R_CANFD_CFDC_STS_CSLPSTS_Msk    (0x4UL)
 #define R_CANFD_CFDC_STS_EPSTS_Pos      (3UL)
 #define R_CANFD_CFDC_STS_EPSTS_Msk      (0x8UL)
 #define R_CANFD_CFDC_STS_BOSTS_Pos      (4UL)
 #define R_CANFD_CFDC_STS_BOSTS_Msk      (0x10UL)
 #define R_CANFD_CFDC_STS_TRMSTS_Pos     (5UL)
 #define R_CANFD_CFDC_STS_TRMSTS_Msk     (0x20UL)
 #define R_CANFD_CFDC_STS_RECSTS_Pos     (6UL)
 #define R_CANFD_CFDC_STS_RECSTS_Msk     (0x40UL)
 #define R_CANFD_CFDC_STS_COMSTS_Pos     (7UL)
 #define R_CANFD_CFDC_STS_COMSTS_Msk     (0x80UL)
 #define R_CANFD_CFDC_STS_ESIF_Pos       (8UL)
 #define R_CANFD_CFDC_STS_ESIF_Msk       (0x100UL)
 #define R_CANFD_CFDC_STS_REC_Pos        (16UL)
 #define R_CANFD_CFDC_STS_REC_Msk        (0xff0000UL)
 #define R_CANFD_CFDC_STS_TEC_Pos        (24UL)
 #define R_CANFD_CFDC_STS_TEC_Msk        (0xff000000UL)
/* =========================================================  ERFL  ========================================================== */
 #define R_CANFD_CFDC_ERFL_BEF_Pos       (0UL)
 #define R_CANFD_CFDC_ERFL_BEF_Msk       (0x1UL)
 #define R_CANFD_CFDC_ERFL_EWF_Pos       (1UL)
 #define R_CANFD_CFDC_ERFL_EWF_Msk       (0x2UL)
 #define R_CANFD_CFDC_ERFL_EPF_Pos       (2UL)
 #define R_CANFD_CFDC_ERFL_EPF_Msk       (0x4UL)
 #define R_CANFD_CFDC_ERFL_BOEF_Pos      (3UL)
 #define R_CANFD_CFDC_ERFL_BOEF_Msk      (0x8UL)
 #define R_CANFD_CFDC_ERFL_BORF_Pos      (4UL)
 #define R_CANFD_CFDC_ERFL_BORF_Msk      (0x10UL)
 #define R_CANFD_CFDC_ERFL_OVLF_Pos      (5UL)
 #define R_CANFD_CFDC_ERFL_OVLF_Msk      (0x20UL)
 #define R_CANFD_CFDC_ERFL_BLF_Pos       (6UL)
 #define R_CANFD_CFDC_ERFL_BLF_Msk       (0x40UL)
 #define R_CANFD_CFDC_ERFL_ALF_Pos       (7UL)
 #define R_CANFD_CFDC_ERFL_ALF_Msk       (0x80UL)
 #define R_CANFD_CFDC_ERFL_SERR_Pos      (8UL)
 #define R_CANFD_CFDC_ERFL_SERR_Msk      (0x100UL)
 #define R_CANFD_CFDC_ERFL_FERR_Pos      (9UL)
 #define R_CANFD_CFDC_ERFL_FERR_Msk      (0x200UL)
 #define R_CANFD_CFDC_ERFL_AERR_Pos      (10UL)
 #define R_CANFD_CFDC_ERFL_AERR_Msk      (0x400UL)
 #define R_CANFD_CFDC_ERFL_CERR_Pos      (11UL)
 #define R_CANFD_CFDC_ERFL_CERR_Msk      (0x800UL)
 #define R_CANFD_CFDC_ERFL_B1ERR_Pos     (12UL)
 #define R_CANFD_CFDC_ERFL_B1ERR_Msk     (0x1000UL)
 #define R_CANFD_CFDC_ERFL_B0ERR_Pos     (13UL)
 #define R_CANFD_CFDC_ERFL_B0ERR_Msk     (0x2000UL)
 #define R_CANFD_CFDC_ERFL_ADERR_Pos     (14UL)
 #define R_CANFD_CFDC_ERFL_ADERR_Msk     (0x4000UL)
 #define R_CANFD_CFDC_ERFL_CRCREG_Pos    (16UL)
 #define R_CANFD_CFDC_ERFL_CRCREG_Msk    (0x7fff0000UL)

/* =========================================================================================================================== */
/* ================                                           CFDC2                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DCFG  ========================================================== */
 #define R_CANFD_CFDC2_DCFG_DBRP_Pos       (0UL)
 #define R_CANFD_CFDC2_DCFG_DBRP_Msk       (0xffUL)
 #define R_CANFD_CFDC2_DCFG_DTSEG1_Pos     (8UL)
 #define R_CANFD_CFDC2_DCFG_DTSEG1_Msk     (0x1f00UL)
 #define R_CANFD_CFDC2_DCFG_DTSEG2_Pos     (16UL)
 #define R_CANFD_CFDC2_DCFG_DTSEG2_Msk     (0xf0000UL)
 #define R_CANFD_CFDC2_DCFG_DSJW_Pos       (24UL)
 #define R_CANFD_CFDC2_DCFG_DSJW_Msk       (0xf000000UL)
/* =========================================================  FDCFG  ========================================================= */
 #define R_CANFD_CFDC2_FDCFG_EOCCFG_Pos    (0UL)
 #define R_CANFD_CFDC2_FDCFG_EOCCFG_Msk    (0x7UL)
 #define R_CANFD_CFDC2_FDCFG_TDCOC_Pos     (8UL)
 #define R_CANFD_CFDC2_FDCFG_TDCOC_Msk     (0x100UL)
 #define R_CANFD_CFDC2_FDCFG_TDCE_Pos      (9UL)
 #define R_CANFD_CFDC2_FDCFG_TDCE_Msk      (0x200UL)
 #define R_CANFD_CFDC2_FDCFG_ESIC_Pos      (10UL)
 #define R_CANFD_CFDC2_FDCFG_ESIC_Msk      (0x400UL)
 #define R_CANFD_CFDC2_FDCFG_TDCO_Pos      (16UL)
 #define R_CANFD_CFDC2_FDCFG_TDCO_Msk      (0xff0000UL)
 #define R_CANFD_CFDC2_FDCFG_FDOE_Pos      (28UL)
 #define R_CANFD_CFDC2_FDCFG_FDOE_Msk      (0x10000000UL)
 #define R_CANFD_CFDC2_FDCFG_REFE_Pos      (29UL)
 #define R_CANFD_CFDC2_FDCFG_REFE_Msk      (0x20000000UL)
 #define R_CANFD_CFDC2_FDCFG_CLOE_Pos      (30UL)
 #define R_CANFD_CFDC2_FDCFG_CLOE_Msk      (0x40000000UL)
/* =========================================================  FDCTR  ========================================================= */
 #define R_CANFD_CFDC2_FDCTR_EOCCLR_Pos    (0UL)
 #define R_CANFD_CFDC2_FDCTR_EOCCLR_Msk    (0x1UL)
 #define R_CANFD_CFDC2_FDCTR_SOCCLR_Pos    (1UL)
 #define R_CANFD_CFDC2_FDCTR_SOCCLR_Msk    (0x2UL)
/* =========================================================  FDSTS  ========================================================= */
 #define R_CANFD_CFDC2_FDSTS_TDCR_Pos      (0UL)
 #define R_CANFD_CFDC2_FDSTS_TDCR_Msk      (0xffUL)
 #define R_CANFD_CFDC2_FDSTS_EOCO_Pos      (8UL)
 #define R_CANFD_CFDC2_FDSTS_EOCO_Msk      (0x100UL)
 #define R_CANFD_CFDC2_FDSTS_SOCO_Pos      (9UL)
 #define R_CANFD_CFDC2_FDSTS_SOCO_Msk      (0x200UL)
 #define R_CANFD_CFDC2_FDSTS_TDCVF_Pos     (15UL)
 #define R_CANFD_CFDC2_FDSTS_TDCVF_Msk     (0x8000UL)
 #define R_CANFD_CFDC2_FDSTS_EOC_Pos       (16UL)
 #define R_CANFD_CFDC2_FDSTS_EOC_Msk       (0xff0000UL)
 #define R_CANFD_CFDC2_FDSTS_SOC_Pos       (24UL)
 #define R_CANFD_CFDC2_FDSTS_SOC_Msk       (0xff000000UL)
/* =========================================================  FDCRC  ========================================================= */
 #define R_CANFD_CFDC2_FDCRC_CRCREG_Pos    (0UL)
 #define R_CANFD_CFDC2_FDCRC_CRCREG_Msk    (0x1fffffUL)
 #define R_CANFD_CFDC2_FDCRC_SCNT_Pos      (24UL)
 #define R_CANFD_CFDC2_FDCRC_SCNT_Msk      (0xf000000UL)

/* =========================================================================================================================== */
/* ================                                          CFDGAFL                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  ID  =========================================================== */
 #define R_CANFD_CFDGAFL_ID_GAFLID_Pos      (0UL)
 #define R_CANFD_CFDGAFL_ID_GAFLID_Msk      (0x1fffffffUL)
 #define R_CANFD_CFDGAFL_ID_GAFLLB_Pos      (29UL)
 #define R_CANFD_CFDGAFL_ID_GAFLLB_Msk      (0x20000000UL)
 #define R_CANFD_CFDGAFL_ID_GAFLRTR_Pos     (30UL)
 #define R_CANFD_CFDGAFL_ID_GAFLRTR_Msk     (0x40000000UL)
 #define R_CANFD_CFDGAFL_ID_GAFLIDE_Pos     (31UL)
 #define R_CANFD_CFDGAFL_ID_GAFLIDE_Msk     (0x80000000UL)
/* ===========================================================  M  =========================================================== */
 #define R_CANFD_CFDGAFL_M_GAFLIDM_Pos      (0UL)
 #define R_CANFD_CFDGAFL_M_GAFLIDM_Msk      (0x1fffffffUL)
 #define R_CANFD_CFDGAFL_M_GAFLIFL1_Pos     (29UL)
 #define R_CANFD_CFDGAFL_M_GAFLIFL1_Msk     (0x20000000UL)
 #define R_CANFD_CFDGAFL_M_GAFLRTRM_Pos     (30UL)
 #define R_CANFD_CFDGAFL_M_GAFLRTRM_Msk     (0x40000000UL)
 #define R_CANFD_CFDGAFL_M_GAFLIDEM_Pos     (31UL)
 #define R_CANFD_CFDGAFL_M_GAFLIDEM_Msk     (0x80000000UL)
/* ==========================================================  P0  =========================================================== */
 #define R_CANFD_CFDGAFL_P0_GAFLDLC_Pos     (0UL)
 #define R_CANFD_CFDGAFL_P0_GAFLDLC_Msk     (0xfUL)
 #define R_CANFD_CFDGAFL_P0_GAFLIFL0_Pos    (7UL)
 #define R_CANFD_CFDGAFL_P0_GAFLIFL0_Msk    (0x80UL)
 #define R_CANFD_CFDGAFL_P0_GAFLRMDP_Pos    (8UL)
 #define R_CANFD_CFDGAFL_P0_GAFLRMDP_Msk    (0x1f00UL)
 #define R_CANFD_CFDGAFL_P0_GAFLRMV_Pos     (15UL)
 #define R_CANFD_CFDGAFL_P0_GAFLRMV_Msk     (0x8000UL)
 #define R_CANFD_CFDGAFL_P0_GAFLPTR_Pos     (16UL)
 #define R_CANFD_CFDGAFL_P0_GAFLPTR_Msk     (0xffff0000UL)
/* ==========================================================  P1  =========================================================== */
 #define R_CANFD_CFDGAFL_P1_GAFLFDP_Pos     (0UL)
 #define R_CANFD_CFDGAFL_P1_GAFLFDP_Msk     (0x1ffUL)

/* =========================================================================================================================== */
/* ================                                          CFDTHL                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ACC0  ========================================================== */
 #define R_CANFD_CFDTHL_ACC0_BT_Pos      (0UL)
 #define R_CANFD_CFDTHL_ACC0_BT_Msk      (0x7UL)
 #define R_CANFD_CFDTHL_ACC0_BN_Pos      (3UL)
 #define R_CANFD_CFDTHL_ACC0_BN_Msk      (0x3f8UL)
 #define R_CANFD_CFDTHL_ACC0_TMTS_Pos    (16UL)
 #define R_CANFD_CFDTHL_ACC0_TMTS_Msk    (0xffff0000UL)
/* =========================================================  ACC1  ========================================================== */
 #define R_CANFD_CFDTHL_ACC1_TID_Pos     (0UL)
 #define R_CANFD_CFDTHL_ACC1_TID_Msk     (0xffffUL)
 #define R_CANFD_CFDTHL_ACC1_TIFL_Pos    (16UL)
 #define R_CANFD_CFDTHL_ACC1_TIFL_Msk    (0x30000UL)

/* =========================================================================================================================== */
/* ================                                           CFDRF                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  ID  =========================================================== */
 #define R_CANFD_CFDRF_ID_RFID_Pos        (0UL)
 #define R_CANFD_CFDRF_ID_RFID_Msk        (0x1fffffffUL)
 #define R_CANFD_CFDRF_ID_RFRTR_Pos       (30UL)
 #define R_CANFD_CFDRF_ID_RFRTR_Msk       (0x40000000UL)
 #define R_CANFD_CFDRF_ID_RFIDE_Pos       (31UL)
 #define R_CANFD_CFDRF_ID_RFIDE_Msk       (0x80000000UL)
/* ==========================================================  PTR  ========================================================== */
 #define R_CANFD_CFDRF_PTR_RFTS_Pos       (0UL)
 #define R_CANFD_CFDRF_PTR_RFTS_Msk       (0xffffUL)
 #define R_CANFD_CFDRF_PTR_RFDLC_Pos      (28UL)
 #define R_CANFD_CFDRF_PTR_RFDLC_Msk      (0xf0000000UL)
/* =========================================================  FDSTS  ========================================================= */
 #define R_CANFD_CFDRF_FDSTS_RFESI_Pos    (0UL)
 #define R_CANFD_CFDRF_FDSTS_RFESI_Msk    (0x1UL)
 #define R_CANFD_CFDRF_FDSTS_RFBRS_Pos    (1UL)
 #define R_CANFD_CFDRF_FDSTS_RFBRS_Msk    (0x2UL)
 #define R_CANFD_CFDRF_FDSTS_RFFDF_Pos    (2UL)
 #define R_CANFD_CFDRF_FDSTS_RFFDF_Msk    (0x4UL)
 #define R_CANFD_CFDRF_FDSTS_RFIFL_Pos    (8UL)
 #define R_CANFD_CFDRF_FDSTS_RFIFL_Msk    (0x300UL)
 #define R_CANFD_CFDRF_FDSTS_RFPTR_Pos    (16UL)
 #define R_CANFD_CFDRF_FDSTS_RFPTR_Msk    (0xffff0000UL)
/* ==========================================================  DF  =========================================================== */
 #define R_CANFD_CFDRF_DF_RFDB_Pos        (0UL)
 #define R_CANFD_CFDRF_DF_RFDB_Msk        (0xffUL)

/* =========================================================================================================================== */
/* ================                                           CFDCF                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  ID  =========================================================== */
 #define R_CANFD_CFDCF_ID_CFID_Pos        (0UL)
 #define R_CANFD_CFDCF_ID_CFID_Msk        (0x1fffffffUL)
 #define R_CANFD_CFDCF_ID_CFRTR_Pos       (30UL)
 #define R_CANFD_CFDCF_ID_CFRTR_Msk       (0x40000000UL)
 #define R_CANFD_CFDCF_ID_CFIDE_Pos       (31UL)
 #define R_CANFD_CFDCF_ID_CFIDE_Msk       (0x80000000UL)
/* ==========================================================  PTR  ========================================================== */
 #define R_CANFD_CFDCF_PTR_CFTS_Pos       (0UL)
 #define R_CANFD_CFDCF_PTR_CFTS_Msk       (0xffffUL)
 #define R_CANFD_CFDCF_PTR_CFDLC_Pos      (28UL)
 #define R_CANFD_CFDCF_PTR_CFDLC_Msk      (0xf0000000UL)
/* =========================================================  FDSTS  ========================================================= */
 #define R_CANFD_CFDCF_FDSTS_CFESI_Pos    (0UL)
 #define R_CANFD_CFDCF_FDSTS_CFESI_Msk    (0x1UL)
 #define R_CANFD_CFDCF_FDSTS_CFBRS_Pos    (1UL)
 #define R_CANFD_CFDCF_FDSTS_CFBRS_Msk    (0x2UL)
 #define R_CANFD_CFDCF_FDSTS_CFFDF_Pos    (2UL)
 #define R_CANFD_CFDCF_FDSTS_CFFDF_Msk    (0x4UL)
 #define R_CANFD_CFDCF_FDSTS_CFIFL_Pos    (8UL)
 #define R_CANFD_CFDCF_FDSTS_CFIFL_Msk    (0x300UL)
 #define R_CANFD_CFDCF_FDSTS_CFPTR_Pos    (16UL)
 #define R_CANFD_CFDCF_FDSTS_CFPTR_Msk    (0xffff0000UL)
/* ==========================================================  DF  =========================================================== */
 #define R_CANFD_CFDCF_DF_CFDB_Pos        (0UL)
 #define R_CANFD_CFDCF_DF_CFDB_Msk        (0xffUL)

/* =========================================================================================================================== */
/* ================                                           CFDTM                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  ID  =========================================================== */
 #define R_CANFD_CFDTM_ID_TMID_Pos        (0UL)
 #define R_CANFD_CFDTM_ID_TMID_Msk        (0x1fffffffUL)
 #define R_CANFD_CFDTM_ID_TMRTR_Pos       (30UL)
 #define R_CANFD_CFDTM_ID_TMRTR_Msk       (0x40000000UL)
 #define R_CANFD_CFDTM_ID_TMIDE_Pos       (31UL)
 #define R_CANFD_CFDTM_ID_TMIDE_Msk       (0x80000000UL)
/* ==========================================================  PTR  ========================================================== */
 #define R_CANFD_CFDTM_PTR_TMTS_Pos       (0UL)
 #define R_CANFD_CFDTM_PTR_TMTS_Msk       (0xffffUL)
 #define R_CANFD_CFDTM_PTR_TMDLC_Pos      (28UL)
 #define R_CANFD_CFDTM_PTR_TMDLC_Msk      (0xf0000000UL)
/* =========================================================  FDCTR  ========================================================= */
 #define R_CANFD_CFDTM_FDCTR_TMESI_Pos    (0UL)
 #define R_CANFD_CFDTM_FDCTR_TMESI_Msk    (0x1UL)
 #define R_CANFD_CFDTM_FDCTR_TMBRS_Pos    (1UL)
 #define R_CANFD_CFDTM_FDCTR_TMBRS_Msk    (0x2UL)
 #define R_CANFD_CFDTM_FDCTR_TMFDF_Pos    (2UL)
 #define R_CANFD_CFDTM_FDCTR_TMFDF_Msk    (0x4UL)
 #define R_CANFD_CFDTM_FDCTR_TMIFL_Pos    (8UL)
 #define R_CANFD_CFDTM_FDCTR_TMIFL_Msk    (0x300UL)
 #define R_CANFD_CFDTM_FDCTR_TMPTR_Pos    (16UL)
 #define R_CANFD_CFDTM_FDCTR_TMPTR_Msk    (0xffff0000UL)
/* ==========================================================  DF  =========================================================== */
 #define R_CANFD_CFDTM_DF_TMDB_Pos        (0UL)
 #define R_CANFD_CFDTM_DF_TMDB_Msk        (0xffUL)

/* =========================================================================================================================== */
/* ================                                            RM                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  ID  =========================================================== */
 #define R_CANFD_CFDRM_RM_ID_RMID_Pos        (0UL)
 #define R_CANFD_CFDRM_RM_ID_RMID_Msk        (0x1fffffffUL)
 #define R_CANFD_CFDRM_RM_ID_RMRTR_Pos       (30UL)
 #define R_CANFD_CFDRM_RM_ID_RMRTR_Msk       (0x40000000UL)
 #define R_CANFD_CFDRM_RM_ID_RMIDE_Pos       (31UL)
 #define R_CANFD_CFDRM_RM_ID_RMIDE_Msk       (0x80000000UL)
/* ==========================================================  PTR  ========================================================== */
 #define R_CANFD_CFDRM_RM_PTR_RMTS_Pos       (0UL)
 #define R_CANFD_CFDRM_RM_PTR_RMTS_Msk       (0xffffUL)
 #define R_CANFD_CFDRM_RM_PTR_RMDLC_Pos      (28UL)
 #define R_CANFD_CFDRM_RM_PTR_RMDLC_Msk      (0xf0000000UL)
/* =========================================================  FDSTS  ========================================================= */
 #define R_CANFD_CFDRM_RM_FDSTS_RMESI_Pos    (0UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMESI_Msk    (0x1UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMBRS_Pos    (1UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMBRS_Msk    (0x2UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMFDF_Pos    (2UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMFDF_Msk    (0x4UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMIFL_Pos    (8UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMIFL_Msk    (0x300UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMPTR_Pos    (16UL)
 #define R_CANFD_CFDRM_RM_FDSTS_RMPTR_Msk    (0xffff0000UL)
/* ==========================================================  DF  =========================================================== */
 #define R_CANFD_CFDRM_RM_DF_RMDB_Pos        (0UL)
 #define R_CANFD_CFDRM_RM_DF_RMDB_Msk        (0xffUL)

/* =========================================================================================================================== */
/* ================                                           CFDRM                                           ================ */
/* =========================================================================================================================== */

/* =========================================================================================================================== */
/* ================                                          ELSEGR                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  BY  =========================================================== */
 #define R_ELC_ELSEGR_BY_WI_Pos     (7UL)
 #define R_ELC_ELSEGR_BY_WI_Msk     (0x80UL)
 #define R_ELC_ELSEGR_BY_WE_Pos     (6UL)
 #define R_ELC_ELSEGR_BY_WE_Msk     (0x40UL)
 #define R_ELC_ELSEGR_BY_SEG_Pos    (0UL)
 #define R_ELC_ELSEGR_BY_SEG_Msk    (0x1UL)

/* =========================================================================================================================== */
/* ================                                           ELSR                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  HA  =========================================================== */
 #define R_ELC_ELSR_HA_ELS_Pos    (0UL)
 #define R_ELC_ELSR_HA_ELS_Msk    (0x1ffUL)

/* =========================================================================================================================== */
/* ================                                            SAR                                            ================ */
/* =========================================================================================================================== */

/* ===========================================================  L  =========================================================== */
 #define R_IIC0_SAR_L_SVA_Pos     (0UL)
 #define R_IIC0_SAR_L_SVA_Msk     (0xffUL)
/* ===========================================================  U  =========================================================== */
 #define R_IIC0_SAR_U_SVA9_Pos    (2UL)
 #define R_IIC0_SAR_U_SVA9_Msk    (0x4UL)
 #define R_IIC0_SAR_U_SVA8_Pos    (1UL)
 #define R_IIC0_SAR_U_SVA8_Msk    (0x2UL)
 #define R_IIC0_SAR_U_FS_Pos      (0UL)
 #define R_IIC0_SAR_U_FS_Msk      (0x1UL)

/* =========================================================================================================================== */
/* ================                                          REGION                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  AC  =========================================================== */
 #define R_MPU_MMPU_GROUP_REGION_AC_PP_Pos        (3UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_PP_Msk        (0x8UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_WP_Pos        (2UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_WP_Msk        (0x4UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_RP_Pos        (1UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_RP_Msk        (0x2UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_ENABLE_Pos    (0UL)
 #define R_MPU_MMPU_GROUP_REGION_AC_ENABLE_Msk    (0x1UL)
/* ===========================================================  S  =========================================================== */
 #define R_MPU_MMPU_GROUP_REGION_S_MMPUS_Pos      (0UL)
 #define R_MPU_MMPU_GROUP_REGION_S_MMPUS_Msk      (0xffffffffUL)
/* ===========================================================  E  =========================================================== */
 #define R_MPU_MMPU_GROUP_REGION_E_MMPUE_Pos      (0UL)
 #define R_MPU_MMPU_GROUP_REGION_E_MMPUE_Msk      (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                           GROUP                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  EN  =========================================================== */
 #define R_MPU_MMPU_GROUP_EN_KEY_Pos             (8UL)
 #define R_MPU_MMPU_GROUP_EN_KEY_Msk             (0xff00UL)
 #define R_MPU_MMPU_GROUP_EN_ENABLE_Pos          (0UL)
 #define R_MPU_MMPU_GROUP_EN_ENABLE_Msk          (0x1UL)
/* =========================================================  ENPT  ========================================================== */
 #define R_MPU_MMPU_GROUP_ENPT_KEY_Pos           (8UL)
 #define R_MPU_MMPU_GROUP_ENPT_KEY_Msk           (0xff00UL)
 #define R_MPU_MMPU_GROUP_ENPT_PROTECT_Pos       (0UL)
 #define R_MPU_MMPU_GROUP_ENPT_PROTECT_Msk       (0x1UL)
/* ==========================================================  RPT  ========================================================== */
 #define R_MPU_MMPU_GROUP_RPT_KEY_Pos            (8UL)
 #define R_MPU_MMPU_GROUP_RPT_KEY_Msk            (0xff00UL)
 #define R_MPU_MMPU_GROUP_RPT_PROTECT_Pos        (0UL)
 #define R_MPU_MMPU_GROUP_RPT_PROTECT_Msk        (0x1UL)
/* ========================================================  RPT_SEC  ======================================================== */
 #define R_MPU_MMPU_GROUP_RPT_SEC_KEY_Pos        (8UL)
 #define R_MPU_MMPU_GROUP_RPT_SEC_KEY_Msk        (0xff00UL)
 #define R_MPU_MMPU_GROUP_RPT_SEC_PROTECT_Pos    (0UL)
 #define R_MPU_MMPU_GROUP_RPT_SEC_PROTECT_Msk    (0x1UL)

/* =========================================================================================================================== */
/* ================                                            SP                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  OAD  ========================================================== */
 #define R_MPU_SPMON_SP_OAD_KEY_Pos        (8UL)
 #define R_MPU_SPMON_SP_OAD_KEY_Msk        (0xff00UL)
 #define R_MPU_SPMON_SP_OAD_OAD_Pos        (0UL)
 #define R_MPU_SPMON_SP_OAD_OAD_Msk        (0x1UL)
/* ==========================================================  CTL  ========================================================== */
 #define R_MPU_SPMON_SP_CTL_ERROR_Pos      (8UL)
 #define R_MPU_SPMON_SP_CTL_ERROR_Msk      (0x100UL)
 #define R_MPU_SPMON_SP_CTL_ENABLE_Pos     (0UL)
 #define R_MPU_SPMON_SP_CTL_ENABLE_Msk     (0x1UL)
/* ==========================================================  PT  =========================================================== */
 #define R_MPU_SPMON_SP_PT_KEY_Pos         (8UL)
 #define R_MPU_SPMON_SP_PT_KEY_Msk         (0xff00UL)
 #define R_MPU_SPMON_SP_PT_PROTECT_Pos     (0UL)
 #define R_MPU_SPMON_SP_PT_PROTECT_Msk     (0x1UL)
/* ==========================================================  SA  =========================================================== */
 #define R_MPU_SPMON_SP_SA_MSPMPUSA_Pos    (0UL)
 #define R_MPU_SPMON_SP_SA_MSPMPUSA_Msk    (0xffffffffUL)
/* ==========================================================  EA  =========================================================== */
 #define R_MPU_SPMON_SP_EA_MSPMPUEA_Pos    (0UL)
 #define R_MPU_SPMON_SP_EA_MSPMPUEA_Msk    (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                            PIN                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  PmnPFS_BY  ======================================================= */
 #define R_PFS_PORT_PIN_PmnPFS_BY_PODR_Pos     (0UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PODR_Msk     (0x1UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PIDR_Pos     (1UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PIDR_Msk     (0x2UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PDR_Pos      (2UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PDR_Msk      (0x4UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PCR_Pos      (4UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_PCR_Msk      (0x10UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_NCODR_Pos    (6UL)
 #define R_PFS_PORT_PIN_PmnPFS_BY_NCODR_Msk    (0x40UL)
/* =======================================================  PmnPFS_HA  ======================================================= */
 #define R_PFS_PORT_PIN_PmnPFS_HA_PODR_Pos     (0UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PODR_Msk     (0x1UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PIDR_Pos     (1UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PIDR_Msk     (0x2UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PDR_Pos      (2UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PDR_Msk      (0x4UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PCR_Pos      (4UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_PCR_Msk      (0x10UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_NCODR_Pos    (6UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_NCODR_Msk    (0x40UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_DSCR_Pos     (10UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_DSCR_Msk     (0xc00UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_EOFR_Pos     (12UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_EOFR_Msk     (0x3000UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_ISEL_Pos     (14UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_ISEL_Msk     (0x4000UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_ASEL_Pos     (15UL)
 #define R_PFS_PORT_PIN_PmnPFS_HA_ASEL_Msk     (0x8000UL)
/* ========================================================  PmnPFS  ========================================================= */
 #define R_PFS_PORT_PIN_PmnPFS_PODR_Pos        (0UL)
 #define R_PFS_PORT_PIN_PmnPFS_PODR_Msk        (0x1UL)
 #define R_PFS_PORT_PIN_PmnPFS_PIDR_Pos        (1UL)
 #define R_PFS_PORT_PIN_PmnPFS_PIDR_Msk        (0x2UL)
 #define R_PFS_PORT_PIN_PmnPFS_PDR_Pos         (2UL)
 #define R_PFS_PORT_PIN_PmnPFS_PDR_Msk         (0x4UL)
 #define R_PFS_PORT_PIN_PmnPFS_PCR_Pos         (4UL)
 #define R_PFS_PORT_PIN_PmnPFS_PCR_Msk         (0x10UL)
 #define R_PFS_PORT_PIN_PmnPFS_NCODR_Pos       (6UL)
 #define R_PFS_PORT_PIN_PmnPFS_NCODR_Msk       (0x40UL)
 #define R_PFS_PORT_PIN_PmnPFS_DSCR_Pos        (10UL)
 #define R_PFS_PORT_PIN_PmnPFS_DSCR_Msk        (0xc00UL)
 #define R_PFS_PORT_PIN_PmnPFS_EOFR_Pos        (12UL)
 #define R_PFS_PORT_PIN_PmnPFS_EOFR_Msk        (0x3000UL)
 #define R_PFS_PORT_PIN_PmnPFS_ISEL_Pos        (14UL)
 #define R_PFS_PORT_PIN_PmnPFS_ISEL_Msk        (0x4000UL)
 #define R_PFS_PORT_PIN_PmnPFS_ASEL_Pos        (15UL)
 #define R_PFS_PORT_PIN_PmnPFS_ASEL_Msk        (0x8000UL)
 #define R_PFS_PORT_PIN_PmnPFS_PMR_Pos         (16UL)
 #define R_PFS_PORT_PIN_PmnPFS_PMR_Msk         (0x10000UL)
 #define R_PFS_PORT_PIN_PmnPFS_PSEL_Pos        (24UL)
 #define R_PFS_PORT_PIN_PmnPFS_PSEL_Msk        (0x1f000000UL)

/* =========================================================================================================================== */
/* ================                                           PORT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================================================================================== */
/* ================                                           PMSAR                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  PMSAR  ========================================================= */

/* =========================================================================================================================== */
/* ================                                           RTCCR                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  RTCCR  ========================================================= */
 #define R_RTC_RTCCR_RTCCR_TCEN_Pos    (7UL)
 #define R_RTC_RTCCR_RTCCR_TCEN_Msk    (0x80UL)
 #define R_RTC_RTCCR_RTCCR_TCNF_Pos    (4UL)
 #define R_RTC_RTCCR_RTCCR_TCNF_Msk    (0x30UL)
 #define R_RTC_RTCCR_RTCCR_TCST_Pos    (2UL)
 #define R_RTC_RTCCR_RTCCR_TCST_Msk    (0x4UL)
 #define R_RTC_RTCCR_RTCCR_TCCT_Pos    (0UL)
 #define R_RTC_RTCCR_RTCCR_TCCT_Msk    (0x3UL)

/* =========================================================================================================================== */
/* ================                                            CP                                             ================ */
/* =========================================================================================================================== */

/* =========================================================  RSEC  ========================================================== */
 #define R_RTC_CP_RSEC_SEC10_Pos       (4UL)
 #define R_RTC_CP_RSEC_SEC10_Msk       (0x70UL)
 #define R_RTC_CP_RSEC_SEC1_Pos        (0UL)
 #define R_RTC_CP_RSEC_SEC1_Msk        (0xfUL)
/* =========================================================  BCNT0  ========================================================= */
 #define R_RTC_CP_BCNT0_BCNT0CP_Pos    (0UL)
 #define R_RTC_CP_BCNT0_BCNT0CP_Msk    (0xffUL)
/* =========================================================  RMIN  ========================================================== */
 #define R_RTC_CP_RMIN_MIN10_Pos       (4UL)
 #define R_RTC_CP_RMIN_MIN10_Msk       (0x70UL)
 #define R_RTC_CP_RMIN_MIN1_Pos        (0UL)
 #define R_RTC_CP_RMIN_MIN1_Msk        (0xfUL)
/* =========================================================  BCNT1  ========================================================= */
 #define R_RTC_CP_BCNT1_BCNT1CP_Pos    (0UL)
 #define R_RTC_CP_BCNT1_BCNT1CP_Msk    (0xffUL)
/* ==========================================================  RHR  ========================================================== */
 #define R_RTC_CP_RHR_PM_Pos           (6UL)
 #define R_RTC_CP_RHR_PM_Msk           (0x40UL)
 #define R_RTC_CP_RHR_HR10_Pos         (4UL)
 #define R_RTC_CP_RHR_HR10_Msk         (0x30UL)
 #define R_RTC_CP_RHR_HR1_Pos          (0UL)
 #define R_RTC_CP_RHR_HR1_Msk          (0xfUL)
/* =========================================================  BCNT2  ========================================================= */
 #define R_RTC_CP_BCNT2_BCNT2CP_Pos    (0UL)
 #define R_RTC_CP_BCNT2_BCNT2CP_Msk    (0xffUL)
/* =========================================================  RDAY  ========================================================== */
 #define R_RTC_CP_RDAY_DATE10_Pos      (4UL)
 #define R_RTC_CP_RDAY_DATE10_Msk      (0x30UL)
 #define R_RTC_CP_RDAY_DATE1_Pos       (0UL)
 #define R_RTC_CP_RDAY_DATE1_Msk       (0xfUL)
/* =========================================================  BCNT3  ========================================================= */
 #define R_RTC_CP_BCNT3_BCNT3CP_Pos    (0UL)
 #define R_RTC_CP_BCNT3_BCNT3CP_Msk    (0xffUL)
/* =========================================================  RMON  ========================================================== */
 #define R_RTC_CP_RMON_MON10_Pos       (4UL)
 #define R_RTC_CP_RMON_MON10_Msk       (0x10UL)
 #define R_RTC_CP_RMON_MON1_Pos        (0UL)
 #define R_RTC_CP_RMON_MON1_Msk        (0xfUL)

/* =========================================================================================================================== */
/* ================                                          PIPE_TR                                          ================ */
/* =========================================================================================================================== */

/* ===========================================================  E  =========================================================== */
 #define R_USB_FS0_PIPE_TR_E_TRENB_Pos     (9UL)
 #define R_USB_FS0_PIPE_TR_E_TRENB_Msk     (0x200UL)
 #define R_USB_FS0_PIPE_TR_E_TRCLR_Pos     (8UL)
 #define R_USB_FS0_PIPE_TR_E_TRCLR_Msk     (0x100UL)
/* ===========================================================  N  =========================================================== */
 #define R_USB_FS0_PIPE_TR_N_TRNCNT_Pos    (0UL)
 #define R_USB_FS0_PIPE_TR_N_TRNCNT_Msk    (0xffffUL)

/* =========================================================================================================================== */
/* ================                                          PIPE_TR                                          ================ */
/* =========================================================================================================================== */

/* ===========================================================  E  =========================================================== */
 #define R_USB_HS0_PIPE_TR_E_TRENB_Pos     (9UL)
 #define R_USB_HS0_PIPE_TR_E_TRENB_Msk     (0x200UL)
 #define R_USB_HS0_PIPE_TR_E_TRCLR_Pos     (8UL)
 #define R_USB_HS0_PIPE_TR_E_TRCLR_Msk     (0x100UL)
/* ===========================================================  N  =========================================================== */
 #define R_USB_HS0_PIPE_TR_N_TRNCNT_Pos    (0UL)
 #define R_USB_HS0_PIPE_TR_N_TRNCNT_Msk    (0xffffUL)

/* =========================================================================================================================== */
/* ================                                          CMCFGCS                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  CMCFG0  ========================================================= */
 #define R_XSPI_CMCFGCS_CMCFG0_FFMT_Pos       (0UL)
 #define R_XSPI_CMCFGCS_CMCFG0_FFMT_Msk       (0x3UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ADDSIZE_Pos    (2UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ADDSIZE_Msk    (0xcUL)
 #define R_XSPI_CMCFGCS_CMCFG0_WPBSTMD_Pos    (4UL)
 #define R_XSPI_CMCFGCS_CMCFG0_WPBSTMD_Msk    (0x10UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ARYAMD_Pos     (5UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ARYAMD_Msk     (0x20UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ADDRPEN_Pos    (16UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ADDRPEN_Msk    (0xff0000UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ADDRPCD_Pos    (24UL)
 #define R_XSPI_CMCFGCS_CMCFG0_ADDRPCD_Msk    (0xff000000UL)
/* ========================================================  CMCFG1  ========================================================= */
 #define R_XSPI_CMCFGCS_CMCFG1_RDCMD_Pos      (0UL)
 #define R_XSPI_CMCFGCS_CMCFG1_RDCMD_Msk      (0xffffUL)
 #define R_XSPI_CMCFGCS_CMCFG1_RDLATE_Pos     (16UL)
 #define R_XSPI_CMCFGCS_CMCFG1_RDLATE_Msk     (0x1f0000UL)
/* ========================================================  CMCFG2  ========================================================= */
 #define R_XSPI_CMCFGCS_CMCFG2_WRCMD_Pos      (0UL)
 #define R_XSPI_CMCFGCS_CMCFG2_WRCMD_Msk      (0xffffUL)
 #define R_XSPI_CMCFGCS_CMCFG2_WRLATE_Pos     (16UL)
 #define R_XSPI_CMCFGCS_CMCFG2_WRLATE_Msk     (0x1f0000UL)

/* =========================================================================================================================== */
/* ================                                           CDBUF                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CDT  ========================================================== */
 #define R_XSPI_CDBUF_CDT_CMDSIZE_Pos     (0UL)
 #define R_XSPI_CDBUF_CDT_CMDSIZE_Msk     (0x3UL)
 #define R_XSPI_CDBUF_CDT_ADDSIZE_Pos     (2UL)
 #define R_XSPI_CDBUF_CDT_ADDSIZE_Msk     (0x1cUL)
 #define R_XSPI_CDBUF_CDT_DATASIZE_Pos    (5UL)
 #define R_XSPI_CDBUF_CDT_DATASIZE_Msk    (0x1e0UL)
 #define R_XSPI_CDBUF_CDT_LATE_Pos        (9UL)
 #define R_XSPI_CDBUF_CDT_LATE_Msk        (0x3e00UL)
 #define R_XSPI_CDBUF_CDT_TRTYPE_Pos      (15UL)
 #define R_XSPI_CDBUF_CDT_TRTYPE_Msk      (0x8000UL)
 #define R_XSPI_CDBUF_CDT_CMD_Pos         (16UL)
 #define R_XSPI_CDBUF_CDT_CMD_Msk         (0xffff0000UL)
/* ==========================================================  CDA  ========================================================== */
 #define R_XSPI_CDBUF_CDA_ADD_Pos         (0UL)
 #define R_XSPI_CDBUF_CDA_ADD_Msk         (0xffffffffUL)
/* =========================================================  CDD0  ========================================================== */
 #define R_XSPI_CDBUF_CDD0_DATA_Pos       (0UL)
 #define R_XSPI_CDBUF_CDD0_DATA_Msk       (0xffffffffUL)
/* =========================================================  CDD1  ========================================================== */
 #define R_XSPI_CDBUF_CDD1_DATA_Pos       (0UL)
 #define R_XSPI_CDBUF_CDD1_DATA_Msk       (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                          CCCTLCS                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  CCCTL0  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL0_CAEN_Pos          (0UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CAEN_Msk          (0x1UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CANOWR_Pos        (1UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CANOWR_Msk        (0x2UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CAITV_Pos         (8UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CAITV_Msk         (0x1f00UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CASFTSTA_Pos      (16UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CASFTSTA_Msk      (0x1f0000UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CASFTEND_Pos      (24UL)
 #define R_XSPI_CCCTLCS_CCCTL0_CASFTEND_Msk      (0x1f000000UL)
/* ========================================================  CCCTL1  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL1_CACMDSIZE_Pos     (0UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CACMDSIZE_Msk     (0x3UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CAADDSIZE_Pos     (2UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CAADDSIZE_Msk     (0x1cUL)
 #define R_XSPI_CCCTLCS_CCCTL1_CADATASIZE_Pos    (5UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CADATASIZE_Msk    (0x1e0UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CAWRLATE_Pos      (16UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CAWRLATE_Msk      (0x1f0000UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CARDLATE_Pos      (24UL)
 #define R_XSPI_CCCTLCS_CCCTL1_CARDLATE_Msk      (0x1f000000UL)
/* ========================================================  CCCTL2  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL2_CAWRCMD_Pos       (0UL)
 #define R_XSPI_CCCTLCS_CCCTL2_CAWRCMD_Msk       (0xffffUL)
 #define R_XSPI_CCCTLCS_CCCTL2_CARDCMD_Pos       (16UL)
 #define R_XSPI_CCCTLCS_CCCTL2_CARDCMD_Msk       (0xffff0000UL)
/* ========================================================  CCCTL3  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL3_CAADD_Pos         (0UL)
 #define R_XSPI_CCCTLCS_CCCTL3_CAADD_Msk         (0xffffffffUL)
/* ========================================================  CCCTL4  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL4_CADATA_Pos        (0UL)
 #define R_XSPI_CCCTLCS_CCCTL4_CADATA_Msk        (0xffffffffUL)
/* ========================================================  CCCTL5  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL5_CADATA_Pos        (0UL)
 #define R_XSPI_CCCTLCS_CCCTL5_CADATA_Msk        (0xffffffffUL)
/* ========================================================  CCCTL6  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL6_CADATA_Pos        (0UL)
 #define R_XSPI_CCCTLCS_CCCTL6_CADATA_Msk        (0xffffffffUL)
/* ========================================================  CCCTL7  ========================================================= */
 #define R_XSPI_CCCTLCS_CCCTL7_CADATA_Pos        (0UL)
 #define R_XSPI_CCCTLCS_CCCTL7_CADATA_Msk        (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                           CTRL                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  AGTCR  ========================================================= */
 #define R_AGTX0_AGT16_CTRL_AGTCR_TCMBF_Pos          (7UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TCMBF_Msk          (0x80UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TCMAF_Pos          (6UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TCMAF_Msk          (0x40UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TUNDF_Pos          (5UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TUNDF_Msk          (0x20UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TEDGF_Pos          (4UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TEDGF_Msk          (0x10UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TSTOP_Pos          (2UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TSTOP_Msk          (0x4UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TCSTF_Pos          (1UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TCSTF_Msk          (0x2UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TSTART_Pos         (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTCR_TSTART_Msk         (0x1UL)
/* ========================================================  AGTMR1  ========================================================= */
 #define R_AGTX0_AGT16_CTRL_AGTMR1_TCK_Pos           (4UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR1_TCK_Msk           (0x70UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR1_TEDGPL_Pos        (3UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR1_TEDGPL_Msk        (0x8UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR1_TMOD_Pos          (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR1_TMOD_Msk          (0x7UL)
/* ========================================================  AGTMR2  ========================================================= */
 #define R_AGTX0_AGT16_CTRL_AGTMR2_LPM_Pos           (7UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR2_LPM_Msk           (0x80UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR2_CKS_Pos           (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTMR2_CKS_Msk           (0x7UL)
/* =====================================================  AGTIOSEL_ALT  ====================================================== */
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_ALT_TIES_Pos    (4UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_ALT_TIES_Msk    (0x10UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_ALT_SEL_Pos     (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_ALT_SEL_Msk     (0x3UL)
/* ========================================================  AGTIOC  ========================================================= */
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TIOGT_Pos         (6UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TIOGT_Msk         (0xc0UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TIPF_Pos          (4UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TIPF_Msk          (0x30UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TOE_Pos           (2UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TOE_Msk           (0x4UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TEDGSEL_Pos       (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOC_TEDGSEL_Msk       (0x1UL)
/* ========================================================  AGTISR  ========================================================= */
 #define R_AGTX0_AGT16_CTRL_AGTISR_EEPS_Pos          (2UL)
 #define R_AGTX0_AGT16_CTRL_AGTISR_EEPS_Msk          (0x4UL)
/* ========================================================  AGTCMSR  ======================================================== */
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOPOLB_Pos       (6UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOPOLB_Msk       (0x40UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOEB_Pos         (5UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOEB_Msk         (0x20UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TCMEB_Pos        (4UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TCMEB_Msk        (0x10UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOPOLA_Pos       (2UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOPOLA_Msk       (0x4UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOEA_Pos         (1UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TOEA_Msk         (0x2UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TCMEA_Pos        (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTCMSR_TCMEA_Msk        (0x1UL)
/* =======================================================  AGTIOSEL  ======================================================== */
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_TIES_Pos        (4UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_TIES_Msk        (0x10UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_SEL_Pos         (0UL)
 #define R_AGTX0_AGT16_CTRL_AGTIOSEL_SEL_Msk         (0x3UL)

/* =========================================================================================================================== */
/* ================                                           AGT16                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  AGT  ========================================================== */
 #define R_AGTX0_AGT16_AGT_AGT_Pos          (0UL)
 #define R_AGTX0_AGT16_AGT_AGT_Msk          (0xffffUL)
/* ========================================================  AGTCMA  ========================================================= */
 #define R_AGTX0_AGT16_AGTCMA_AGTCMA_Pos    (0UL)
 #define R_AGTX0_AGT16_AGTCMA_AGTCMA_Msk    (0xffffUL)
/* ========================================================  AGTCMB  ========================================================= */
 #define R_AGTX0_AGT16_AGTCMB_AGTCMB_Pos    (0UL)
 #define R_AGTX0_AGT16_AGTCMB_AGTCMB_Msk    (0xffffUL)

/* =========================================================================================================================== */
/* ================                                           AGT32                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  AGT  ========================================================== */
 #define R_AGTX0_AGT32_AGT_AGT_Pos          (0UL)
 #define R_AGTX0_AGT32_AGT_AGT_Msk          (0xffffffffUL)
/* ========================================================  AGTCMA  ========================================================= */
 #define R_AGTX0_AGT32_AGTCMA_AGTCMA_Pos    (0UL)
 #define R_AGTX0_AGT32_AGTCMA_AGTCMA_Msk    (0xffffffffUL)
/* ========================================================  AGTCMB  ========================================================= */
 #define R_AGTX0_AGT32_AGTCMB_AGTCMB_Pos    (0UL)
 #define R_AGTX0_AGT32_AGTCMB_AGTCMB_Msk    (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                           CFGD                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CFGD_L  ========================================================= */
 #define R_OFS_DATAFLASH_CFGDLOCK_CFGD_CFGD_L_CDLK_Pos    (0UL)
 #define R_OFS_DATAFLASH_CFGDLOCK_CFGD_CFGD_L_CDLK_Msk    (0x1UL)
/* ========================================================  CFGD_H  ========================================================= */
 #define R_OFS_DATAFLASH_CFGDLOCK_CFGD_CFGD_H_CDLK_Pos    (0UL)
 #define R_OFS_DATAFLASH_CFGDLOCK_CFGD_CFGD_H_CDLK_Msk    (0x1UL)

/* =========================================================================================================================== */
/* ================                                         CFGDLOCK                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  CFGD2  ========================================================= */
 #define R_OFS_DATAFLASH_CFGDLOCK_CFGD2_CDLK_Pos    (0UL)
 #define R_OFS_DATAFLASH_CFGDLOCK_CFGD2_CDLK_Msk    (0x1UL)

/** @} */ /* End of group PosMask_clusters */

/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */

/** @addtogroup PosMask_peripherals
 * @{
 */

/* =========================================================================================================================== */
/* ================                                         R_ACMPHS0                                         ================ */
/* =========================================================================================================================== */

/* ========================================================  CMPCTL  ========================================================= */
 #define R_ACMPHS0_CMPCTL_HCMPON_Pos     (7UL)
 #define R_ACMPHS0_CMPCTL_HCMPON_Msk     (0x80UL)
 #define R_ACMPHS0_CMPCTL_CDFS_Pos       (5UL)
 #define R_ACMPHS0_CMPCTL_CDFS_Msk       (0x60UL)
 #define R_ACMPHS0_CMPCTL_CEG_Pos        (3UL)
 #define R_ACMPHS0_CMPCTL_CEG_Msk        (0x18UL)
 #define R_ACMPHS0_CMPCTL_CSTEN_Pos      (2UL)
 #define R_ACMPHS0_CMPCTL_CSTEN_Msk      (0x4UL)
 #define R_ACMPHS0_CMPCTL_COE_Pos        (1UL)
 #define R_ACMPHS0_CMPCTL_COE_Msk        (0x2UL)
 #define R_ACMPHS0_CMPCTL_CINV_Pos       (0UL)
 #define R_ACMPHS0_CMPCTL_CINV_Msk       (0x1UL)
/* ========================================================  CMPSEL0  ======================================================== */
 #define R_ACMPHS0_CMPSEL0_CMPSEL_Pos    (0UL)
 #define R_ACMPHS0_CMPSEL0_CMPSEL_Msk    (0xfUL)
/* ========================================================  CMPSEL1  ======================================================== */
 #define R_ACMPHS0_CMPSEL1_CRVS_Pos      (0UL)
 #define R_ACMPHS0_CMPSEL1_CRVS_Msk      (0x3fUL)
/* ========================================================  CMPMON  ========================================================= */
 #define R_ACMPHS0_CMPMON_CMPMON_Pos     (0UL)
 #define R_ACMPHS0_CMPMON_CMPMON_Msk     (0x1UL)
/* =========================================================  CPIOC  ========================================================= */
 #define R_ACMPHS0_CPIOC_VREFEN_Pos      (7UL)
 #define R_ACMPHS0_CPIOC_VREFEN_Msk      (0x80UL)
 #define R_ACMPHS0_CPIOC_CPOE_Pos        (0UL)
 #define R_ACMPHS0_CPIOC_CPOE_Msk        (0x1UL)

/* =========================================================================================================================== */
/* ================                                          R_ADC0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ADCSR  ========================================================= */
 #define R_ADC0_ADCSR_ADST_Pos              (15UL)
 #define R_ADC0_ADCSR_ADST_Msk              (0x8000UL)
 #define R_ADC0_ADCSR_ADCS_Pos              (13UL)
 #define R_ADC0_ADCSR_ADCS_Msk              (0x6000UL)
 #define R_ADC0_ADCSR_ADHSC_Pos             (10UL)
 #define R_ADC0_ADCSR_ADHSC_Msk             (0x400UL)
 #define R_ADC0_ADCSR_TRGE_Pos              (9UL)
 #define R_ADC0_ADCSR_TRGE_Msk              (0x200UL)
 #define R_ADC0_ADCSR_EXTRG_Pos             (8UL)
 #define R_ADC0_ADCSR_EXTRG_Msk             (0x100UL)
 #define R_ADC0_ADCSR_DBLE_Pos              (7UL)
 #define R_ADC0_ADCSR_DBLE_Msk              (0x80UL)
 #define R_ADC0_ADCSR_GBADIE_Pos            (6UL)
 #define R_ADC0_ADCSR_GBADIE_Msk            (0x40UL)
 #define R_ADC0_ADCSR_DBLANS_Pos            (0UL)
 #define R_ADC0_ADCSR_DBLANS_Msk            (0x1fUL)
 #define R_ADC0_ADCSR_ADIE_Pos              (12UL)
 #define R_ADC0_ADCSR_ADIE_Msk              (0x1000UL)
/* ========================================================  ADANSA  ========================================================= */
 #define R_ADC0_ADANSA_ANSA_Pos             (0UL)
 #define R_ADC0_ADANSA_ANSA_Msk             (0x1UL)
/* =========================================================  ADADS  ========================================================= */
 #define R_ADC0_ADADS_ADS_Pos               (0UL)
 #define R_ADC0_ADADS_ADS_Msk               (0x1UL)
/* =========================================================  ADADC  ========================================================= */
 #define R_ADC0_ADADC_ADC_Pos               (0UL)
 #define R_ADC0_ADADC_ADC_Msk               (0x7UL)
 #define R_ADC0_ADADC_AVEE_Pos              (7UL)
 #define R_ADC0_ADADC_AVEE_Msk              (0x80UL)
/* =========================================================  ADCER  ========================================================= */
 #define R_ADC0_ADCER_ADRFMT_Pos            (15UL)
 #define R_ADC0_ADCER_ADRFMT_Msk            (0x8000UL)
 #define R_ADC0_ADCER_ADINV_Pos             (14UL)
 #define R_ADC0_ADCER_ADINV_Msk             (0x4000UL)
 #define R_ADC0_ADCER_DIAGM_Pos             (11UL)
 #define R_ADC0_ADCER_DIAGM_Msk             (0x800UL)
 #define R_ADC0_ADCER_DIAGLD_Pos            (10UL)
 #define R_ADC0_ADCER_DIAGLD_Msk            (0x400UL)
 #define R_ADC0_ADCER_DIAGVAL_Pos           (8UL)
 #define R_ADC0_ADCER_DIAGVAL_Msk           (0x300UL)
 #define R_ADC0_ADCER_ACE_Pos               (5UL)
 #define R_ADC0_ADCER_ACE_Msk               (0x20UL)
 #define R_ADC0_ADCER_ADPRC_Pos             (1UL)
 #define R_ADC0_ADCER_ADPRC_Msk             (0x6UL)
 #define R_ADC0_ADCER_DCE_Pos               (4UL)
 #define R_ADC0_ADCER_DCE_Msk               (0x10UL)
/* ========================================================  ADSTRGR  ======================================================== */
 #define R_ADC0_ADSTRGR_TRSA_Pos            (8UL)
 #define R_ADC0_ADSTRGR_TRSA_Msk            (0x3f00UL)
 #define R_ADC0_ADSTRGR_TRSB_Pos            (0UL)
 #define R_ADC0_ADSTRGR_TRSB_Msk            (0x3fUL)
/* ========================================================  ADEXICR  ======================================================== */
 #define R_ADC0_ADEXICR_OCSB_Pos            (11UL)
 #define R_ADC0_ADEXICR_OCSB_Msk            (0x800UL)
 #define R_ADC0_ADEXICR_TSSB_Pos            (10UL)
 #define R_ADC0_ADEXICR_TSSB_Msk            (0x400UL)
 #define R_ADC0_ADEXICR_OCSA_Pos            (9UL)
 #define R_ADC0_ADEXICR_OCSA_Msk            (0x200UL)
 #define R_ADC0_ADEXICR_TSSA_Pos            (8UL)
 #define R_ADC0_ADEXICR_TSSA_Msk            (0x100UL)
 #define R_ADC0_ADEXICR_OCSAD_Pos           (1UL)
 #define R_ADC0_ADEXICR_OCSAD_Msk           (0x2UL)
 #define R_ADC0_ADEXICR_TSSAD_Pos           (0UL)
 #define R_ADC0_ADEXICR_TSSAD_Msk           (0x1UL)
 #define R_ADC0_ADEXICR_EXSEL_Pos           (14UL)
 #define R_ADC0_ADEXICR_EXSEL_Msk           (0x4000UL)
 #define R_ADC0_ADEXICR_EXOEN_Pos           (15UL)
 #define R_ADC0_ADEXICR_EXOEN_Msk           (0x8000UL)
/* ========================================================  ADANSB  ========================================================= */
 #define R_ADC0_ADANSB_ANSB_Pos             (0UL)
 #define R_ADC0_ADANSB_ANSB_Msk             (0x1UL)
/* ========================================================  ADDBLDR  ======================================================== */
 #define R_ADC0_ADDBLDR_ADDBLDR_Pos         (0UL)
 #define R_ADC0_ADDBLDR_ADDBLDR_Msk         (0xffffUL)
/* ========================================================  ADTSDR  ========================================================= */
 #define R_ADC0_ADTSDR_ADTSDR_Pos           (0UL)
 #define R_ADC0_ADTSDR_ADTSDR_Msk           (0xffffUL)
/* ========================================================  ADOCDR  ========================================================= */
 #define R_ADC0_ADOCDR_ADOCDR_Pos           (0UL)
 #define R_ADC0_ADOCDR_ADOCDR_Msk           (0xffffUL)
/* ======================================================  ADRD_RIGHT  ======================================================= */
 #define R_ADC0_ADRD_RIGHT_DIAGST_Pos       (14UL)
 #define R_ADC0_ADRD_RIGHT_DIAGST_Msk       (0xc000UL)
 #define R_ADC0_ADRD_RIGHT_AD_Pos           (0UL)
 #define R_ADC0_ADRD_RIGHT_AD_Msk           (0x3fffUL)
/* =======================================================  ADRD_LEFT  ======================================================= */
 #define R_ADC0_ADRD_LEFT_AD_Pos            (2UL)
 #define R_ADC0_ADRD_LEFT_AD_Msk            (0xfffcUL)
 #define R_ADC0_ADRD_LEFT_DIAGST_Pos        (0UL)
 #define R_ADC0_ADRD_LEFT_DIAGST_Msk        (0x3UL)
/* =========================================================  ADDR  ========================================================== */
 #define R_ADC0_ADDR_ADDR_Pos               (0UL)
 #define R_ADC0_ADDR_ADDR_Msk               (0xffffUL)
/* ========================================================  ADSHCR  ========================================================= */
 #define R_ADC0_ADSHCR_SHANS2_Pos           (10UL)
 #define R_ADC0_ADSHCR_SHANS2_Msk           (0x400UL)
 #define R_ADC0_ADSHCR_SHANS1_Pos           (9UL)
 #define R_ADC0_ADSHCR_SHANS1_Msk           (0x200UL)
 #define R_ADC0_ADSHCR_SHANS0_Pos           (8UL)
 #define R_ADC0_ADSHCR_SHANS0_Msk           (0x100UL)
 #define R_ADC0_ADSHCR_SSTSH_Pos            (0UL)
 #define R_ADC0_ADSHCR_SSTSH_Msk            (0xffUL)
/* ========================================================  ADDISCR  ======================================================== */
 #define R_ADC0_ADDISCR_CHARGE_Pos          (4UL)
 #define R_ADC0_ADDISCR_CHARGE_Msk          (0x10UL)
 #define R_ADC0_ADDISCR_ADNDIS_Pos          (0UL)
 #define R_ADC0_ADDISCR_ADNDIS_Msk          (0xfUL)
/* ========================================================  ADSHMSR  ======================================================== */
 #define R_ADC0_ADSHMSR_SHMD_Pos            (0UL)
 #define R_ADC0_ADSHMSR_SHMD_Msk            (0x1UL)
/* ========================================================  ADACSR  ========================================================= */
 #define R_ADC0_ADACSR_ADSAC_Pos            (1UL)
 #define R_ADC0_ADACSR_ADSAC_Msk            (0x2UL)
/* ========================================================  ADGSPCR  ======================================================== */
 #define R_ADC0_ADGSPCR_GBRP_Pos            (15UL)
 #define R_ADC0_ADGSPCR_GBRP_Msk            (0x8000UL)
 #define R_ADC0_ADGSPCR_GBRSCN_Pos          (1UL)
 #define R_ADC0_ADGSPCR_GBRSCN_Msk          (0x2UL)
 #define R_ADC0_ADGSPCR_PGS_Pos             (0UL)
 #define R_ADC0_ADGSPCR_PGS_Msk             (0x1UL)
 #define R_ADC0_ADGSPCR_GBEXTRG_Pos         (8UL)
 #define R_ADC0_ADGSPCR_GBEXTRG_Msk         (0x100UL)
/* =========================================================  ADICR  ========================================================= */
 #define R_ADC0_ADICR_ADIC_Pos              (0UL)
 #define R_ADC0_ADICR_ADIC_Msk              (0x3UL)
/* =======================================================  ADDBLDRA  ======================================================== */
 #define R_ADC0_ADDBLDRA_ADDBLDRA_Pos       (0UL)
 #define R_ADC0_ADDBLDRA_ADDBLDRA_Msk       (0xffffUL)
/* =======================================================  ADDBLDRB  ======================================================== */
 #define R_ADC0_ADDBLDRB_ADDBLDRB_Pos       (0UL)
 #define R_ADC0_ADDBLDRB_ADDBLDRB_Msk       (0xffffUL)
/* ======================================================  ADHVREFCNT  ======================================================= */
 #define R_ADC0_ADHVREFCNT_ADSLP_Pos        (7UL)
 #define R_ADC0_ADHVREFCNT_ADSLP_Msk        (0x80UL)
 #define R_ADC0_ADHVREFCNT_LVSEL_Pos        (4UL)
 #define R_ADC0_ADHVREFCNT_LVSEL_Msk        (0x10UL)
 #define R_ADC0_ADHVREFCNT_HVSEL_Pos        (0UL)
 #define R_ADC0_ADHVREFCNT_HVSEL_Msk        (0x3UL)
/* =======================================================  ADWINMON  ======================================================== */
 #define R_ADC0_ADWINMON_MONCMPB_Pos        (5UL)
 #define R_ADC0_ADWINMON_MONCMPB_Msk        (0x20UL)
 #define R_ADC0_ADWINMON_MONCMPA_Pos        (4UL)
 #define R_ADC0_ADWINMON_MONCMPA_Msk        (0x10UL)
 #define R_ADC0_ADWINMON_MONCOMB_Pos        (0UL)
 #define R_ADC0_ADWINMON_MONCOMB_Msk        (0x1UL)
/* ========================================================  ADCMPCR  ======================================================== */
 #define R_ADC0_ADCMPCR_CMPAIE_Pos          (15UL)
 #define R_ADC0_ADCMPCR_CMPAIE_Msk          (0x8000UL)
 #define R_ADC0_ADCMPCR_WCMPE_Pos           (14UL)
 #define R_ADC0_ADCMPCR_WCMPE_Msk           (0x4000UL)
 #define R_ADC0_ADCMPCR_CMPBIE_Pos          (13UL)
 #define R_ADC0_ADCMPCR_CMPBIE_Msk          (0x2000UL)
 #define R_ADC0_ADCMPCR_CMPAE_Pos           (11UL)
 #define R_ADC0_ADCMPCR_CMPAE_Msk           (0x800UL)
 #define R_ADC0_ADCMPCR_CMPBE_Pos           (9UL)
 #define R_ADC0_ADCMPCR_CMPBE_Msk           (0x200UL)
 #define R_ADC0_ADCMPCR_CMPAB_Pos           (0UL)
 #define R_ADC0_ADCMPCR_CMPAB_Msk           (0x3UL)
/* ======================================================  ADCMPANSER  ======================================================= */
 #define R_ADC0_ADCMPANSER_CMPOCA_Pos       (1UL)
 #define R_ADC0_ADCMPANSER_CMPOCA_Msk       (0x2UL)
 #define R_ADC0_ADCMPANSER_CMPTSA_Pos       (0UL)
 #define R_ADC0_ADCMPANSER_CMPTSA_Msk       (0x1UL)
/* =======================================================  ADCMPLER  ======================================================== */
 #define R_ADC0_ADCMPLER_CMPLOCA_Pos        (1UL)
 #define R_ADC0_ADCMPLER_CMPLOCA_Msk        (0x2UL)
 #define R_ADC0_ADCMPLER_CMPLTSA_Pos        (0UL)
 #define R_ADC0_ADCMPLER_CMPLTSA_Msk        (0x1UL)
/* =======================================================  ADCMPANSR  ======================================================= */
 #define R_ADC0_ADCMPANSR_CMPCHA_Pos        (0UL)
 #define R_ADC0_ADCMPANSR_CMPCHA_Msk        (0x1UL)
/* ========================================================  ADCMPLR  ======================================================== */
 #define R_ADC0_ADCMPLR_CMPLCHA_Pos         (0UL)
 #define R_ADC0_ADCMPLR_CMPLCHA_Msk         (0x1UL)
/* =======================================================  ADCMPDR0  ======================================================== */
 #define R_ADC0_ADCMPDR0_ADCMPDR0_Pos       (0UL)
 #define R_ADC0_ADCMPDR0_ADCMPDR0_Msk       (0xffffUL)
/* =======================================================  ADCMPDR1  ======================================================== */
 #define R_ADC0_ADCMPDR1_ADCMPDR1_Pos       (0UL)
 #define R_ADC0_ADCMPDR1_ADCMPDR1_Msk       (0xffffUL)
/* ========================================================  ADCMPSR  ======================================================== */
 #define R_ADC0_ADCMPSR_CMPSTCHA_Pos        (0UL)
 #define R_ADC0_ADCMPSR_CMPSTCHA_Msk        (0x1UL)
/* =======================================================  ADCMPSER  ======================================================== */
 #define R_ADC0_ADCMPSER_CMPSTOCA_Pos       (1UL)
 #define R_ADC0_ADCMPSER_CMPSTOCA_Msk       (0x2UL)
 #define R_ADC0_ADCMPSER_CMPSTTSA_Pos       (0UL)
 #define R_ADC0_ADCMPSER_CMPSTTSA_Msk       (0x1UL)
/* =======================================================  ADCMPBNSR  ======================================================= */
 #define R_ADC0_ADCMPBNSR_CMPLB_Pos         (7UL)
 #define R_ADC0_ADCMPBNSR_CMPLB_Msk         (0x80UL)
 #define R_ADC0_ADCMPBNSR_CMPCHB_Pos        (0UL)
 #define R_ADC0_ADCMPBNSR_CMPCHB_Msk        (0x3fUL)
/* =======================================================  ADWINLLB  ======================================================== */
 #define R_ADC0_ADWINLLB_ADWINLLB_Pos       (0UL)
 #define R_ADC0_ADWINLLB_ADWINLLB_Msk       (0xffffUL)
/* =======================================================  ADWINULB  ======================================================== */
 #define R_ADC0_ADWINULB_ADWINULB_Pos       (0UL)
 #define R_ADC0_ADWINULB_ADWINULB_Msk       (0xffffUL)
/* =======================================================  ADCMPBSR  ======================================================== */
 #define R_ADC0_ADCMPBSR_CMPSTB_Pos         (0UL)
 #define R_ADC0_ADCMPBSR_CMPSTB_Msk         (0x1UL)
/* ========================================================  ADSSTRL  ======================================================== */
 #define R_ADC0_ADSSTRL_SST_Pos             (0UL)
 #define R_ADC0_ADSSTRL_SST_Msk             (0xffUL)
/* ========================================================  ADSSTRT  ======================================================== */
 #define R_ADC0_ADSSTRT_SST_Pos             (0UL)
 #define R_ADC0_ADSSTRT_SST_Msk             (0xffUL)
/* ========================================================  ADSSTRO  ======================================================== */
 #define R_ADC0_ADSSTRO_SST_Pos             (0UL)
 #define R_ADC0_ADSSTRO_SST_Msk             (0xffUL)
/* ========================================================  ADSSTR  ========================================================= */
 #define R_ADC0_ADSSTR_SST_Pos              (0UL)
 #define R_ADC0_ADSSTR_SST_Msk              (0xffUL)
/* ========================================================  ADPGACR  ======================================================== */
 #define R_ADC0_ADPGACR_P002GEN_Pos         (11UL)
 #define R_ADC0_ADPGACR_P002GEN_Msk         (0x800UL)
 #define R_ADC0_ADPGACR_P002ENAMP_Pos       (10UL)
 #define R_ADC0_ADPGACR_P002ENAMP_Msk       (0x400UL)
 #define R_ADC0_ADPGACR_P002SEL1_Pos        (9UL)
 #define R_ADC0_ADPGACR_P002SEL1_Msk        (0x200UL)
 #define R_ADC0_ADPGACR_P002SEL0_Pos        (8UL)
 #define R_ADC0_ADPGACR_P002SEL0_Msk        (0x100UL)
 #define R_ADC0_ADPGACR_P001GEN_Pos         (7UL)
 #define R_ADC0_ADPGACR_P001GEN_Msk         (0x80UL)
 #define R_ADC0_ADPGACR_P001ENAMP_Pos       (6UL)
 #define R_ADC0_ADPGACR_P001ENAMP_Msk       (0x40UL)
 #define R_ADC0_ADPGACR_P001SEL1_Pos        (5UL)
 #define R_ADC0_ADPGACR_P001SEL1_Msk        (0x20UL)
 #define R_ADC0_ADPGACR_P001SEL0_Pos        (4UL)
 #define R_ADC0_ADPGACR_P001SEL0_Msk        (0x10UL)
 #define R_ADC0_ADPGACR_P000GEN_Pos         (3UL)
 #define R_ADC0_ADPGACR_P000GEN_Msk         (0x8UL)
 #define R_ADC0_ADPGACR_P000ENAMP_Pos       (2UL)
 #define R_ADC0_ADPGACR_P000ENAMP_Msk       (0x4UL)
 #define R_ADC0_ADPGACR_P000SEL1_Pos        (1UL)
 #define R_ADC0_ADPGACR_P000SEL1_Msk        (0x2UL)
 #define R_ADC0_ADPGACR_P000SEL0_Pos        (0UL)
 #define R_ADC0_ADPGACR_P000SEL0_Msk        (0x1UL)
 #define R_ADC0_ADPGACR_P003SEL0_Pos        (12UL)
 #define R_ADC0_ADPGACR_P003SEL0_Msk        (0x1000UL)
 #define R_ADC0_ADPGACR_P003SEL1_Pos        (13UL)
 #define R_ADC0_ADPGACR_P003SEL1_Msk        (0x2000UL)
 #define R_ADC0_ADPGACR_P003ENAMP_Pos       (14UL)
 #define R_ADC0_ADPGACR_P003ENAMP_Msk       (0x4000UL)
 #define R_ADC0_ADPGACR_P003GEN_Pos         (15UL)
 #define R_ADC0_ADPGACR_P003GEN_Msk         (0x8000UL)
/* =========================================================  ADRD  ========================================================== */
 #define R_ADC0_ADRD_AD_Pos                 (0UL)
 #define R_ADC0_ADRD_AD_Msk                 (0xffffUL)
/* =========================================================  ADRST  ========================================================= */
 #define R_ADC0_ADRST_DIAGST_Pos            (0UL)
 #define R_ADC0_ADRST_DIAGST_Msk            (0x3UL)
/* ======================================================  VREFAMPCNT  ======================================================= */
 #define R_ADC0_VREFAMPCNT_VREFADCG_Pos     (1UL)
 #define R_ADC0_VREFAMPCNT_VREFADCG_Msk     (0x6UL)
 #define R_ADC0_VREFAMPCNT_VREFADCEN_Pos    (3UL)
 #define R_ADC0_VREFAMPCNT_VREFADCEN_Msk    (0x8UL)
 #define R_ADC0_VREFAMPCNT_ADSLP_Pos        (7UL)
 #define R_ADC0_VREFAMPCNT_ADSLP_Msk        (0x80UL)
 #define R_ADC0_VREFAMPCNT_OLDETEN_Pos      (0UL)
 #define R_ADC0_VREFAMPCNT_OLDETEN_Msk      (0x1UL)
 #define R_ADC0_VREFAMPCNT_BGREN_Pos        (4UL)
 #define R_ADC0_VREFAMPCNT_BGREN_Msk        (0x10UL)
/* =======================================================  ADCALEXE  ======================================================== */
 #define R_ADC0_ADCALEXE_CALEXE_Pos         (7UL)
 #define R_ADC0_ADCALEXE_CALEXE_Msk         (0x80UL)
 #define R_ADC0_ADCALEXE_CALMON_Pos         (6UL)
 #define R_ADC0_ADCALEXE_CALMON_Msk         (0x40UL)
/* ========================================================  ADANIM  ========================================================= */
 #define R_ADC0_ADANIM_ANIM_Pos             (0UL)
 #define R_ADC0_ADANIM_ANIM_Msk             (0x1UL)
/* =======================================================  ADPGAGS0  ======================================================== */
 #define R_ADC0_ADPGAGS0_P002GAIN_Pos       (8UL)
 #define R_ADC0_ADPGAGS0_P002GAIN_Msk       (0xf00UL)
 #define R_ADC0_ADPGAGS0_P001GAIN_Pos       (4UL)
 #define R_ADC0_ADPGAGS0_P001GAIN_Msk       (0xf0UL)
 #define R_ADC0_ADPGAGS0_P000GAIN_Pos       (0UL)
 #define R_ADC0_ADPGAGS0_P000GAIN_Msk       (0xfUL)
 #define R_ADC0_ADPGAGS0_P003GAIN_Pos       (12UL)
 #define R_ADC0_ADPGAGS0_P003GAIN_Msk       (0xf000UL)
/* =======================================================  ADPGADCR0  ======================================================= */
 #define R_ADC0_ADPGADCR0_P003DG_Pos        (12UL)
 #define R_ADC0_ADPGADCR0_P003DG_Msk        (0x3000UL)
 #define R_ADC0_ADPGADCR0_P002DEN_Pos       (11UL)
 #define R_ADC0_ADPGADCR0_P002DEN_Msk       (0x800UL)
 #define R_ADC0_ADPGADCR0_P002DG_Pos        (8UL)
 #define R_ADC0_ADPGADCR0_P002DG_Msk        (0x300UL)
 #define R_ADC0_ADPGADCR0_P001DEN_Pos       (7UL)
 #define R_ADC0_ADPGADCR0_P001DEN_Msk       (0x80UL)
 #define R_ADC0_ADPGADCR0_P001DG_Pos        (4UL)
 #define R_ADC0_ADPGADCR0_P001DG_Msk        (0x30UL)
 #define R_ADC0_ADPGADCR0_P000DEN_Pos       (3UL)
 #define R_ADC0_ADPGADCR0_P000DEN_Msk       (0x8UL)
 #define R_ADC0_ADPGADCR0_P000DG_Pos        (0UL)
 #define R_ADC0_ADPGADCR0_P000DG_Msk        (0x3UL)
 #define R_ADC0_ADPGADCR0_P003DEN_Pos       (15UL)
 #define R_ADC0_ADPGADCR0_P003DEN_Msk       (0x8000UL)
/* =========================================================  ADREF  ========================================================= */
 #define R_ADC0_ADREF_ADF_Pos               (0UL)
 #define R_ADC0_ADREF_ADF_Msk               (0x1UL)
 #define R_ADC0_ADREF_ADSCACT_Pos           (7UL)
 #define R_ADC0_ADREF_ADSCACT_Msk           (0x80UL)
/* ========================================================  ADEXREF  ======================================================== */
 #define R_ADC0_ADEXREF_GBADF_Pos           (0UL)
 #define R_ADC0_ADEXREF_GBADF_Msk           (0x1UL)
/* =======================================================  ADAMPOFF  ======================================================== */
 #define R_ADC0_ADAMPOFF_OPOFF_Pos          (0UL)
 #define R_ADC0_ADAMPOFF_OPOFF_Msk          (0xffUL)
/* ========================================================  ADTSTPR  ======================================================== */
 #define R_ADC0_ADTSTPR_PRO_Pos             (0UL)
 #define R_ADC0_ADTSTPR_PRO_Msk             (0x1UL)
 #define R_ADC0_ADTSTPR_B0WI_Pos            (1UL)
 #define R_ADC0_ADTSTPR_B0WI_Msk            (0x2UL)
/* =======================================================  ADDDACER  ======================================================== */
 #define R_ADC0_ADDDACER_WRION_Pos          (0UL)
 #define R_ADC0_ADDDACER_WRION_Msk          (0x1fUL)
 #define R_ADC0_ADDDACER_WRIOFF_Pos         (8UL)
 #define R_ADC0_ADDDACER_WRIOFF_Msk         (0x1f00UL)
 #define R_ADC0_ADDDACER_ADHS_Pos           (15UL)
 #define R_ADC0_ADDDACER_ADHS_Msk           (0x8000UL)
/* =======================================================  ADEXTSTR  ======================================================== */
 #define R_ADC0_ADEXTSTR_SHTEST_Pos         (0UL)
 #define R_ADC0_ADEXTSTR_SHTEST_Msk         (0x7UL)
 #define R_ADC0_ADEXTSTR_SWTST_Pos          (4UL)
 #define R_ADC0_ADEXTSTR_SWTST_Msk          (0x30UL)
 #define R_ADC0_ADEXTSTR_SHTRM_Pos          (8UL)
 #define R_ADC0_ADEXTSTR_SHTRM_Msk          (0x300UL)
 #define R_ADC0_ADEXTSTR_ADTRM3_Pos         (11UL)
 #define R_ADC0_ADEXTSTR_ADTRM3_Msk         (0x800UL)
 #define R_ADC0_ADEXTSTR_ADTRM2_Pos         (12UL)
 #define R_ADC0_ADEXTSTR_ADTRM2_Msk         (0x3000UL)
 #define R_ADC0_ADEXTSTR_ADTRM1_Pos         (14UL)
 #define R_ADC0_ADEXTSTR_ADTRM1_Msk         (0xc000UL)
/* ========================================================  ADTSTRA  ======================================================== */
 #define R_ADC0_ADTSTRA_ATBUSSEL_Pos        (0UL)
 #define R_ADC0_ADTSTRA_ATBUSSEL_Msk        (0x1UL)
 #define R_ADC0_ADTSTRA_TSTSWREF_Pos        (1UL)
 #define R_ADC0_ADTSTRA_TSTSWREF_Msk        (0xeUL)
 #define R_ADC0_ADTSTRA_OCSW_Pos            (5UL)
 #define R_ADC0_ADTSTRA_OCSW_Msk            (0x20UL)
 #define R_ADC0_ADTSTRA_TSSW_Pos            (6UL)
 #define R_ADC0_ADTSTRA_TSSW_Msk            (0x40UL)
 #define R_ADC0_ADTSTRA_ADTEST_AD_Pos       (8UL)
 #define R_ADC0_ADTSTRA_ADTEST_AD_Msk       (0xf00UL)
 #define R_ADC0_ADTSTRA_ADTEST_IO_Pos       (12UL)
 #define R_ADC0_ADTSTRA_ADTEST_IO_Msk       (0xf000UL)
/* ========================================================  ADTSTRB  ======================================================== */
 #define R_ADC0_ADTSTRB_ADVAL_Pos           (0UL)
 #define R_ADC0_ADTSTRB_ADVAL_Msk           (0x7fffUL)
/* ========================================================  ADTSTRC  ======================================================== */
 #define R_ADC0_ADTSTRC_ADMD_Pos            (0UL)
 #define R_ADC0_ADTSTRC_ADMD_Msk            (0xffUL)
 #define R_ADC0_ADTSTRC_SYNCERR_Pos         (12UL)
 #define R_ADC0_ADTSTRC_SYNCERR_Msk         (0x1000UL)
/* ========================================================  ADTSTRD  ======================================================== */
 #define R_ADC0_ADTSTRD_ADVAL16_Pos         (0UL)
 #define R_ADC0_ADTSTRD_ADVAL16_Msk         (0x1UL)
/* =======================================================  ADSWTSTR0  ======================================================= */
 #define R_ADC0_ADSWTSTR0_CHSW00_Pos        (0UL)
 #define R_ADC0_ADSWTSTR0_CHSW00_Msk        (0x1UL)
 #define R_ADC0_ADSWTSTR0_CHSW01_Pos        (1UL)
 #define R_ADC0_ADSWTSTR0_CHSW01_Msk        (0x2UL)
 #define R_ADC0_ADSWTSTR0_CHSW02_Pos        (2UL)
 #define R_ADC0_ADSWTSTR0_CHSW02_Msk        (0x4UL)
 #define R_ADC0_ADSWTSTR0_CHSW03_Pos        (3UL)
 #define R_ADC0_ADSWTSTR0_CHSW03_Msk        (0x8UL)
 #define R_ADC0_ADSWTSTR0_CHSW04_Pos        (4UL)
 #define R_ADC0_ADSWTSTR0_CHSW04_Msk        (0x10UL)
 #define R_ADC0_ADSWTSTR0_CHSW05_Pos        (5UL)
 #define R_ADC0_ADSWTSTR0_CHSW05_Msk        (0x20UL)
/* =======================================================  ADSWTSTR1  ======================================================= */
 #define R_ADC0_ADSWTSTR1_CHSW16_Pos        (0UL)
 #define R_ADC0_ADSWTSTR1_CHSW16_Msk        (0x1UL)
 #define R_ADC0_ADSWTSTR1_CHSW17_Pos        (1UL)
 #define R_ADC0_ADSWTSTR1_CHSW17_Msk        (0x2UL)
 #define R_ADC0_ADSWTSTR1_CHSW18_Pos        (2UL)
 #define R_ADC0_ADSWTSTR1_CHSW18_Msk        (0x4UL)
 #define R_ADC0_ADSWTSTR1_CHSW19_Pos        (3UL)
 #define R_ADC0_ADSWTSTR1_CHSW19_Msk        (0x8UL)
 #define R_ADC0_ADSWTSTR1_CHSW20_Pos        (4UL)
 #define R_ADC0_ADSWTSTR1_CHSW20_Msk        (0x10UL)
 #define R_ADC0_ADSWTSTR1_CHSW21_Pos        (5UL)
 #define R_ADC0_ADSWTSTR1_CHSW21_Msk        (0x20UL)
/* =======================================================  ADSWTSTR2  ======================================================= */
 #define R_ADC0_ADSWTSTR2_EX0SW_Pos         (0UL)
 #define R_ADC0_ADSWTSTR2_EX0SW_Msk         (0x1UL)
 #define R_ADC0_ADSWTSTR2_EX1SW_Pos         (1UL)
 #define R_ADC0_ADSWTSTR2_EX1SW_Msk         (0x2UL)
 #define R_ADC0_ADSWTSTR2_SHBYPS0_Pos       (4UL)
 #define R_ADC0_ADSWTSTR2_SHBYPS0_Msk       (0x10UL)
 #define R_ADC0_ADSWTSTR2_SHBYPS1_Pos       (5UL)
 #define R_ADC0_ADSWTSTR2_SHBYPS1_Msk       (0x20UL)
 #define R_ADC0_ADSWTSTR2_SHBYPS2_Pos       (6UL)
 #define R_ADC0_ADSWTSTR2_SHBYPS2_Msk       (0x40UL)
 #define R_ADC0_ADSWTSTR2_GRP0SW_Pos        (8UL)
 #define R_ADC0_ADSWTSTR2_GRP0SW_Msk        (0x100UL)
 #define R_ADC0_ADSWTSTR2_GRP1SW_Pos        (9UL)
 #define R_ADC0_ADSWTSTR2_GRP1SW_Msk        (0x200UL)
 #define R_ADC0_ADSWTSTR2_GRP2SW_Pos        (10UL)
 #define R_ADC0_ADSWTSTR2_GRP2SW_Msk        (0x400UL)
 #define R_ADC0_ADSWTSTR2_GRP3SW_Pos        (11UL)
 #define R_ADC0_ADSWTSTR2_GRP3SW_Msk        (0x800UL)
 #define R_ADC0_ADSWTSTR2_GRPEX1SW_Pos      (12UL)
 #define R_ADC0_ADSWTSTR2_GRPEX1SW_Msk      (0x1000UL)
/* ========================================================  ADSWCR  ========================================================= */
 #define R_ADC0_ADSWCR_ADSWREF_Pos          (0UL)
 #define R_ADC0_ADSWCR_ADSWREF_Msk          (0x7UL)
 #define R_ADC0_ADSWCR_SHSWREF_Pos          (4UL)
 #define R_ADC0_ADSWCR_SHSWREF_Msk          (0x70UL)
/* ========================================================  ADGSCS  ========================================================= */
 #define R_ADC0_ADGSCS_CHSELGB_Pos          (0UL)
 #define R_ADC0_ADGSCS_CHSELGB_Msk          (0xffUL)
 #define R_ADC0_ADGSCS_CHSELGA_Pos          (8UL)
 #define R_ADC0_ADGSCS_CHSELGA_Msk          (0xff00UL)
/* =========================================================  ADSER  ========================================================= */
 #define R_ADC0_ADSER_SMPEX_Pos             (7UL)
 #define R_ADC0_ADSER_SMPEX_Msk             (0x80UL)
/* ========================================================  ADBUF0  ========================================================= */
 #define R_ADC0_ADBUF0_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF0_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF1  ========================================================= */
 #define R_ADC0_ADBUF1_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF1_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF2  ========================================================= */
 #define R_ADC0_ADBUF2_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF2_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF3  ========================================================= */
 #define R_ADC0_ADBUF3_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF3_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF4  ========================================================= */
 #define R_ADC0_ADBUF4_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF4_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF5  ========================================================= */
 #define R_ADC0_ADBUF5_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF5_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF6  ========================================================= */
 #define R_ADC0_ADBUF6_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF6_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF7  ========================================================= */
 #define R_ADC0_ADBUF7_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF7_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF8  ========================================================= */
 #define R_ADC0_ADBUF8_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF8_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF9  ========================================================= */
 #define R_ADC0_ADBUF9_ADBUF_Pos            (0UL)
 #define R_ADC0_ADBUF9_ADBUF_Msk            (0xffffUL)
/* ========================================================  ADBUF10  ======================================================== */
 #define R_ADC0_ADBUF10_ADBUF_Pos           (0UL)
 #define R_ADC0_ADBUF10_ADBUF_Msk           (0xffffUL)
/* ========================================================  ADBUF11  ======================================================== */
 #define R_ADC0_ADBUF11_ADBUF_Pos           (0UL)
 #define R_ADC0_ADBUF11_ADBUF_Msk           (0xffffUL)
/* ========================================================  ADBUF12  ======================================================== */
 #define R_ADC0_ADBUF12_ADBUF_Pos           (0UL)
 #define R_ADC0_ADBUF12_ADBUF_Msk           (0xffffUL)
/* ========================================================  ADBUF13  ======================================================== */
 #define R_ADC0_ADBUF13_ADBUF_Pos           (0UL)
 #define R_ADC0_ADBUF13_ADBUF_Msk           (0xffffUL)
/* ========================================================  ADBUF14  ======================================================== */
 #define R_ADC0_ADBUF14_ADBUF_Pos           (0UL)
 #define R_ADC0_ADBUF14_ADBUF_Msk           (0xffffUL)
/* ========================================================  ADBUF15  ======================================================== */
 #define R_ADC0_ADBUF15_ADBUF_Pos           (0UL)
 #define R_ADC0_ADBUF15_ADBUF_Msk           (0xffffUL)
/* ========================================================  ADBUFEN  ======================================================== */
 #define R_ADC0_ADBUFEN_BUFEN_Pos           (0UL)
 #define R_ADC0_ADBUFEN_BUFEN_Msk           (0x1UL)
/* =======================================================  ADBUFPTR  ======================================================== */
 #define R_ADC0_ADBUFPTR_BUFPTR_Pos         (0UL)
 #define R_ADC0_ADBUFPTR_BUFPTR_Msk         (0xfUL)
 #define R_ADC0_ADBUFPTR_PTROVF_Pos         (4UL)
 #define R_ADC0_ADBUFPTR_PTROVF_Msk         (0x10UL)
/* =======================================================  ADPGADBS0  ======================================================= */
 #define R_ADC0_ADPGADBS0_P0BIAS_Pos        (0UL)
 #define R_ADC0_ADPGADBS0_P0BIAS_Msk        (0x1UL)
/* =======================================================  ADPGADBS1  ======================================================= */
 #define R_ADC0_ADPGADBS1_P3BIAS_Pos        (0UL)
 #define R_ADC0_ADPGADBS1_P3BIAS_Msk        (0x1UL)
/* =======================================================  ADREFMON  ======================================================== */
 #define R_ADC0_ADREFMON_PGAMON_Pos         (0UL)
 #define R_ADC0_ADREFMON_PGAMON_Msk         (0x7UL)
 #define R_ADC0_ADREFMON_MONSEL_Pos         (16UL)
 #define R_ADC0_ADREFMON_MONSEL_Msk         (0xf0000UL)

/* =========================================================================================================================== */
/* ================                                          R_PSCU                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  PSARB  ========================================================= */
 #define R_PSCU_PSARB_PSARB4_Pos     (4UL)
 #define R_PSCU_PSARB_PSARB4_Msk     (0x10UL)
 #define R_PSCU_PSARB_PSARB8_Pos     (8UL)
 #define R_PSCU_PSARB_PSARB8_Msk     (0x100UL)
 #define R_PSCU_PSARB_PSARB9_Pos     (9UL)
 #define R_PSCU_PSARB_PSARB9_Msk     (0x200UL)
 #define R_PSCU_PSARB_PSARB11_Pos    (11UL)
 #define R_PSCU_PSARB_PSARB11_Msk    (0x800UL)
 #define R_PSCU_PSARB_PSARB12_Pos    (12UL)
 #define R_PSCU_PSARB_PSARB12_Msk    (0x1000UL)
 #define R_PSCU_PSARB_PSARB15_Pos    (15UL)
 #define R_PSCU_PSARB_PSARB15_Msk    (0x8000UL)
 #define R_PSCU_PSARB_PSARB16_Pos    (16UL)
 #define R_PSCU_PSARB_PSARB16_Msk    (0x10000UL)
 #define R_PSCU_PSARB_PSARB18_Pos    (18UL)
 #define R_PSCU_PSARB_PSARB18_Msk    (0x40000UL)
 #define R_PSCU_PSARB_PSARB19_Pos    (19UL)
 #define R_PSCU_PSARB_PSARB19_Msk    (0x80000UL)
 #define R_PSCU_PSARB_PSARB22_Pos    (22UL)
 #define R_PSCU_PSARB_PSARB22_Msk    (0x400000UL)
 #define R_PSCU_PSARB_PSARB27_Pos    (27UL)
 #define R_PSCU_PSARB_PSARB27_Msk    (0x8000000UL)
 #define R_PSCU_PSARB_PSARB28_Pos    (28UL)
 #define R_PSCU_PSARB_PSARB28_Msk    (0x10000000UL)
 #define R_PSCU_PSARB_PSARB29_Pos    (29UL)
 #define R_PSCU_PSARB_PSARB29_Msk    (0x20000000UL)
 #define R_PSCU_PSARB_PSARB30_Pos    (30UL)
 #define R_PSCU_PSARB_PSARB30_Msk    (0x40000000UL)
 #define R_PSCU_PSARB_PSARB31_Pos    (31UL)
 #define R_PSCU_PSARB_PSARB31_Msk    (0x80000000UL)
/* =========================================================  PSARC  ========================================================= */
 #define R_PSCU_PSARC_PSARC0_Pos     (0UL)
 #define R_PSCU_PSARC_PSARC0_Msk     (0x1UL)
 #define R_PSCU_PSARC_PSARC1_Pos     (1UL)
 #define R_PSCU_PSARC_PSARC1_Msk     (0x2UL)
 #define R_PSCU_PSARC_PSARC7_Pos     (7UL)
 #define R_PSCU_PSARC_PSARC7_Msk     (0x80UL)
 #define R_PSCU_PSARC_PSARC8_Pos     (8UL)
 #define R_PSCU_PSARC_PSARC8_Msk     (0x100UL)
 #define R_PSCU_PSARC_PSARC11_Pos    (11UL)
 #define R_PSCU_PSARC_PSARC11_Msk    (0x800UL)
 #define R_PSCU_PSARC_PSARC12_Pos    (12UL)
 #define R_PSCU_PSARC_PSARC12_Msk    (0x1000UL)
 #define R_PSCU_PSARC_PSARC13_Pos    (13UL)
 #define R_PSCU_PSARC_PSARC13_Msk    (0x2000UL)
 #define R_PSCU_PSARC_PSARC15_Pos    (15UL)
 #define R_PSCU_PSARC_PSARC15_Msk    (0x8000UL)
 #define R_PSCU_PSARC_PSARC16_Pos    (16UL)
 #define R_PSCU_PSARC_PSARC16_Msk    (0x10000UL)
 #define R_PSCU_PSARC_PSARC26_Pos    (26UL)
 #define R_PSCU_PSARC_PSARC26_Msk    (0x4000000UL)
 #define R_PSCU_PSARC_PSARC27_Pos    (27UL)
 #define R_PSCU_PSARC_PSARC27_Msk    (0x8000000UL)
 #define R_PSCU_PSARC_PSARC31_Pos    (31UL)
 #define R_PSCU_PSARC_PSARC31_Msk    (0x80000000UL)
/* =========================================================  PSARD  ========================================================= */
 #define R_PSCU_PSARD_PSARD4_Pos     (4UL)
 #define R_PSCU_PSARD_PSARD4_Msk     (0x10UL)
 #define R_PSCU_PSARD_PSARD5_Pos     (5UL)
 #define R_PSCU_PSARD_PSARD5_Msk     (0x20UL)
 #define R_PSCU_PSARD_PSARD11_Pos    (11UL)
 #define R_PSCU_PSARD_PSARD11_Msk    (0x800UL)
 #define R_PSCU_PSARD_PSARD12_Pos    (12UL)
 #define R_PSCU_PSARD_PSARD12_Msk    (0x1000UL)
 #define R_PSCU_PSARD_PSARD13_Pos    (13UL)
 #define R_PSCU_PSARD_PSARD13_Msk    (0x2000UL)
 #define R_PSCU_PSARD_PSARD14_Pos    (14UL)
 #define R_PSCU_PSARD_PSARD14_Msk    (0x4000UL)
 #define R_PSCU_PSARD_PSARD15_Pos    (15UL)
 #define R_PSCU_PSARD_PSARD15_Msk    (0x8000UL)
 #define R_PSCU_PSARD_PSARD16_Pos    (16UL)
 #define R_PSCU_PSARD_PSARD16_Msk    (0x10000UL)
 #define R_PSCU_PSARD_PSARD20_Pos    (20UL)
 #define R_PSCU_PSARD_PSARD20_Msk    (0x100000UL)
 #define R_PSCU_PSARD_PSARD22_Pos    (22UL)
 #define R_PSCU_PSARD_PSARD22_Msk    (0x400000UL)
 #define R_PSCU_PSARD_PSARD27_Pos    (27UL)
 #define R_PSCU_PSARD_PSARD27_Msk    (0x8000000UL)
 #define R_PSCU_PSARD_PSARD28_Pos    (28UL)
 #define R_PSCU_PSARD_PSARD28_Msk    (0x10000000UL)
/* =========================================================  PSARE  ========================================================= */
 #define R_PSCU_PSARE_PSARE1_Pos     (1UL)
 #define R_PSCU_PSARE_PSARE1_Msk     (0x2UL)
 #define R_PSCU_PSARE_PSARE2_Pos     (2UL)
 #define R_PSCU_PSARE_PSARE2_Msk     (0x4UL)
 #define R_PSCU_PSARE_PSARE3_Pos     (3UL)
 #define R_PSCU_PSARE_PSARE3_Msk     (0x8UL)
 #define R_PSCU_PSARE_PSARE8_Pos     (8UL)
 #define R_PSCU_PSARE_PSARE8_Msk     (0x100UL)
 #define R_PSCU_PSARE_PSARE9_Pos     (9UL)
 #define R_PSCU_PSARE_PSARE9_Msk     (0x200UL)
 #define R_PSCU_PSARE_PSARE18_Pos    (18UL)
 #define R_PSCU_PSARE_PSARE18_Msk    (0x40000UL)
 #define R_PSCU_PSARE_PSARE19_Pos    (19UL)
 #define R_PSCU_PSARE_PSARE19_Msk    (0x80000UL)
 #define R_PSCU_PSARE_PSARE20_Pos    (20UL)
 #define R_PSCU_PSARE_PSARE20_Msk    (0x100000UL)
 #define R_PSCU_PSARE_PSARE21_Pos    (21UL)
 #define R_PSCU_PSARE_PSARE21_Msk    (0x200000UL)
 #define R_PSCU_PSARE_PSARE22_Pos    (22UL)
 #define R_PSCU_PSARE_PSARE22_Msk    (0x400000UL)
 #define R_PSCU_PSARE_PSARE23_Pos    (23UL)
 #define R_PSCU_PSARE_PSARE23_Msk    (0x800000UL)
 #define R_PSCU_PSARE_PSARE24_Pos    (24UL)
 #define R_PSCU_PSARE_PSARE24_Msk    (0x1000000UL)
 #define R_PSCU_PSARE_PSARE25_Pos    (25UL)
 #define R_PSCU_PSARE_PSARE25_Msk    (0x2000000UL)
 #define R_PSCU_PSARE_PSARE26_Pos    (26UL)
 #define R_PSCU_PSARE_PSARE26_Msk    (0x4000000UL)
 #define R_PSCU_PSARE_PSARE27_Pos    (27UL)
 #define R_PSCU_PSARE_PSARE27_Msk    (0x8000000UL)
 #define R_PSCU_PSARE_PSARE28_Pos    (28UL)
 #define R_PSCU_PSARE_PSARE28_Msk    (0x10000000UL)
 #define R_PSCU_PSARE_PSARE29_Pos    (29UL)
 #define R_PSCU_PSARE_PSARE29_Msk    (0x20000000UL)
 #define R_PSCU_PSARE_PSARE30_Pos    (30UL)
 #define R_PSCU_PSARE_PSARE30_Msk    (0x40000000UL)
 #define R_PSCU_PSARE_PSARE31_Pos    (31UL)
 #define R_PSCU_PSARE_PSARE31_Msk    (0x80000000UL)
/* =========================================================  MSSAR  ========================================================= */
 #define R_PSCU_MSSAR_MSSAR0_Pos     (0UL)
 #define R_PSCU_MSSAR_MSSAR0_Msk     (0x1UL)
 #define R_PSCU_MSSAR_MSSAR1_Pos     (1UL)
 #define R_PSCU_MSSAR_MSSAR1_Msk     (0x2UL)
 #define R_PSCU_MSSAR_MSSAR11_Pos    (11UL)
 #define R_PSCU_MSSAR_MSSAR11_Msk    (0x800UL)
 #define R_PSCU_MSSAR_MSSAR13_Pos    (13UL)
 #define R_PSCU_MSSAR_MSSAR13_Msk    (0x2000UL)
 #define R_PSCU_MSSAR_MSSAR15_Pos    (15UL)
 #define R_PSCU_MSSAR_MSSAR15_Msk    (0x8000UL)
 #define R_PSCU_MSSAR_MSSAR22_Pos    (22UL)
 #define R_PSCU_MSSAR_MSSAR22_Msk    (0x400000UL)
 #define R_PSCU_MSSAR_MSSAR31_Pos    (31UL)
 #define R_PSCU_MSSAR_MSSAR31_Msk    (0x80000000UL)
/* =========================================================  PPARB  ========================================================= */
 #define R_PSCU_PPARB_PPARB4_Pos     (4UL)
 #define R_PSCU_PPARB_PPARB4_Msk     (0x10UL)
 #define R_PSCU_PPARB_PPARB8_Pos     (8UL)
 #define R_PSCU_PPARB_PPARB8_Msk     (0x100UL)
 #define R_PSCU_PPARB_PPARB9_Pos     (9UL)
 #define R_PSCU_PPARB_PPARB9_Msk     (0x200UL)
 #define R_PSCU_PPARB_PPARB11_Pos    (11UL)
 #define R_PSCU_PPARB_PPARB11_Msk    (0x800UL)
 #define R_PSCU_PPARB_PPARB12_Pos    (12UL)
 #define R_PSCU_PPARB_PPARB12_Msk    (0x1000UL)
 #define R_PSCU_PPARB_PPARB15_Pos    (15UL)
 #define R_PSCU_PPARB_PPARB15_Msk    (0x8000UL)
 #define R_PSCU_PPARB_PPARB16_Pos    (16UL)
 #define R_PSCU_PPARB_PPARB16_Msk    (0x10000UL)
 #define R_PSCU_PPARB_PPARB18_Pos    (18UL)
 #define R_PSCU_PPARB_PPARB18_Msk    (0x40000UL)
 #define R_PSCU_PPARB_PPARB19_Pos    (19UL)
 #define R_PSCU_PPARB_PPARB19_Msk    (0x80000UL)
 #define R_PSCU_PPARB_PPARB22_Pos    (22UL)
 #define R_PSCU_PPARB_PPARB22_Msk    (0x400000UL)
 #define R_PSCU_PPARB_PPARB27_Pos    (27UL)
 #define R_PSCU_PPARB_PPARB27_Msk    (0x8000000UL)
 #define R_PSCU_PPARB_PPARB28_Pos    (28UL)
 #define R_PSCU_PPARB_PPARB28_Msk    (0x10000000UL)
 #define R_PSCU_PPARB_PPARB29_Pos    (29UL)
 #define R_PSCU_PPARB_PPARB29_Msk    (0x20000000UL)
 #define R_PSCU_PPARB_PPARB30_Pos    (30UL)
 #define R_PSCU_PPARB_PPARB30_Msk    (0x40000000UL)
 #define R_PSCU_PPARB_PPARB31_Pos    (31UL)
 #define R_PSCU_PPARB_PPARB31_Msk    (0x80000000UL)
/* =========================================================  PPARC  ========================================================= */
 #define R_PSCU_PPARC_PPARC0_Pos     (0UL)
 #define R_PSCU_PPARC_PPARC0_Msk     (0x1UL)
 #define R_PSCU_PPARC_PPARC1_Pos     (1UL)
 #define R_PSCU_PPARC_PPARC1_Msk     (0x2UL)
 #define R_PSCU_PPARC_PPARC7_Pos     (7UL)
 #define R_PSCU_PPARC_PPARC7_Msk     (0x80UL)
 #define R_PSCU_PPARC_PPARC8_Pos     (8UL)
 #define R_PSCU_PPARC_PPARC8_Msk     (0x100UL)
 #define R_PSCU_PPARC_PPARC11_Pos    (11UL)
 #define R_PSCU_PPARC_PPARC11_Msk    (0x800UL)
 #define R_PSCU_PPARC_PPARC12_Pos    (12UL)
 #define R_PSCU_PPARC_PPARC12_Msk    (0x1000UL)
 #define R_PSCU_PPARC_PPARC13_Pos    (13UL)
 #define R_PSCU_PPARC_PPARC13_Msk    (0x2000UL)
 #define R_PSCU_PPARC_PPARC15_Pos    (15UL)
 #define R_PSCU_PPARC_PPARC15_Msk    (0x8000UL)
 #define R_PSCU_PPARC_PPARC16_Pos    (16UL)
 #define R_PSCU_PPARC_PPARC16_Msk    (0x10000UL)
 #define R_PSCU_PPARC_PPARC26_Pos    (26UL)
 #define R_PSCU_PPARC_PPARC26_Msk    (0x4000000UL)
 #define R_PSCU_PPARC_PPARC27_Pos    (27UL)
 #define R_PSCU_PPARC_PPARC27_Msk    (0x8000000UL)
 #define R_PSCU_PPARC_PPARC31_Pos    (31UL)
 #define R_PSCU_PPARC_PPARC31_Msk    (0x80000000UL)
/* =========================================================  PPARD  ========================================================= */
 #define R_PSCU_PPARD_PPARD4_Pos     (4UL)
 #define R_PSCU_PPARD_PPARD4_Msk     (0x10UL)
 #define R_PSCU_PPARD_PPARD5_Pos     (5UL)
 #define R_PSCU_PPARD_PPARD5_Msk     (0x20UL)
 #define R_PSCU_PPARD_PPARD11_Pos    (11UL)
 #define R_PSCU_PPARD_PPARD11_Msk    (0x800UL)
 #define R_PSCU_PPARD_PPARD12_Pos    (12UL)
 #define R_PSCU_PPARD_PPARD12_Msk    (0x1000UL)
 #define R_PSCU_PPARD_PPARD13_Pos    (13UL)
 #define R_PSCU_PPARD_PPARD13_Msk    (0x2000UL)
 #define R_PSCU_PPARD_PPARD14_Pos    (14UL)
 #define R_PSCU_PPARD_PPARD14_Msk    (0x4000UL)
 #define R_PSCU_PPARD_PPARD15_Pos    (15UL)
 #define R_PSCU_PPARD_PPARD15_Msk    (0x8000UL)
 #define R_PSCU_PPARD_PPARD16_Pos    (16UL)
 #define R_PSCU_PPARD_PPARD16_Msk    (0x10000UL)
 #define R_PSCU_PPARD_PPARD20_Pos    (20UL)
 #define R_PSCU_PPARD_PPARD20_Msk    (0x100000UL)
 #define R_PSCU_PPARD_PPARD22_Pos    (22UL)
 #define R_PSCU_PPARD_PPARD22_Msk    (0x400000UL)
 #define R_PSCU_PPARD_PPARD27_Pos    (27UL)
 #define R_PSCU_PPARD_PPARD27_Msk    (0x8000000UL)
 #define R_PSCU_PPARD_PPARD28_Pos    (28UL)
 #define R_PSCU_PPARD_PPARD28_Msk    (0x10000000UL)
/* =========================================================  PPARE  ========================================================= */
 #define R_PSCU_PPARE_PPARE1_Pos     (1UL)
 #define R_PSCU_PPARE_PPARE1_Msk     (0x2UL)
 #define R_PSCU_PPARE_PPARE2_Pos     (2UL)
 #define R_PSCU_PPARE_PPARE2_Msk     (0x4UL)
 #define R_PSCU_PPARE_PPARE3_Pos     (3UL)
 #define R_PSCU_PPARE_PPARE3_Msk     (0x8UL)
 #define R_PSCU_PPARE_PPARE8_Pos     (8UL)
 #define R_PSCU_PPARE_PPARE8_Msk     (0x100UL)
 #define R_PSCU_PPARE_PPARE9_Pos     (9UL)
 #define R_PSCU_PPARE_PPARE9_Msk     (0x200UL)
 #define R_PSCU_PPARE_PPARE18_Pos    (18UL)
 #define R_PSCU_PPARE_PPARE18_Msk    (0x40000UL)
 #define R_PSCU_PPARE_PPARE19_Pos    (19UL)
 #define R_PSCU_PPARE_PPARE19_Msk    (0x80000UL)
 #define R_PSCU_PPARE_PPARE20_Pos    (20UL)
 #define R_PSCU_PPARE_PPARE20_Msk    (0x100000UL)
 #define R_PSCU_PPARE_PPARE21_Pos    (21UL)
 #define R_PSCU_PPARE_PPARE21_Msk    (0x200000UL)
 #define R_PSCU_PPARE_PPARE22_Pos    (22UL)
 #define R_PSCU_PPARE_PPARE22_Msk    (0x400000UL)
 #define R_PSCU_PPARE_PPARE23_Pos    (23UL)
 #define R_PSCU_PPARE_PPARE23_Msk    (0x800000UL)
 #define R_PSCU_PPARE_PPARE24_Pos    (24UL)
 #define R_PSCU_PPARE_PPARE24_Msk    (0x1000000UL)
 #define R_PSCU_PPARE_PPARE25_Pos    (25UL)
 #define R_PSCU_PPARE_PPARE25_Msk    (0x2000000UL)
 #define R_PSCU_PPARE_PPARE26_Pos    (26UL)
 #define R_PSCU_PPARE_PPARE26_Msk    (0x4000000UL)
 #define R_PSCU_PPARE_PPARE27_Pos    (27UL)
 #define R_PSCU_PPARE_PPARE27_Msk    (0x8000000UL)
 #define R_PSCU_PPARE_PPARE28_Pos    (28UL)
 #define R_PSCU_PPARE_PPARE28_Msk    (0x10000000UL)
 #define R_PSCU_PPARE_PPARE29_Pos    (29UL)
 #define R_PSCU_PPARE_PPARE29_Msk    (0x20000000UL)
 #define R_PSCU_PPARE_PPARE30_Pos    (30UL)
 #define R_PSCU_PPARE_PPARE30_Msk    (0x40000000UL)
 #define R_PSCU_PPARE_PPARE31_Pos    (31UL)
 #define R_PSCU_PPARE_PPARE31_Msk    (0x80000000UL)
/* =========================================================  MSPAR  ========================================================= */
 #define R_PSCU_MSPAR_MSPAR31_Pos    (31UL)
 #define R_PSCU_MSPAR_MSPAR31_Msk    (0x80000000UL)
/* =======================================================  CFSAMONA  ======================================================== */
 #define R_PSCU_CFSAMONA_CFS2_Pos    (15UL)
 #define R_PSCU_CFSAMONA_CFS2_Msk    (0xff8000UL)
/* ========================================================  DFSAMON  ======================================================== */
 #define R_PSCU_DFSAMON_DFS_Pos      (10UL)
 #define R_PSCU_DFSAMON_DFS_Msk      (0xfc00UL)
/* ========================================================  DLMMON  ========================================================= */
 #define R_PSCU_DLMMON_DLMMON_Pos    (0UL)
 #define R_PSCU_DLMMON_DLMMON_Msk    (0xfUL)

/* =========================================================================================================================== */
/* ================                                           R_BUS                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  CSRECEN  ======================================================== */
 #define R_BUS_CSRECEN_RCVENM_Pos        (8UL)
 #define R_BUS_CSRECEN_RCVENM_Msk        (0x100UL)
 #define R_BUS_CSRECEN_RCVEN_Pos         (0UL)
 #define R_BUS_CSRECEN_RCVEN_Msk         (0x1UL)
/* ========================================================  BUSMABT  ======================================================== */
 #define R_BUS_BUSMABT_ARBS_Pos          (0UL)
 #define R_BUS_BUSMABT_ARBS_Msk          (0x1UL)
/* =======================================================  BUSDIVBYP  ======================================================= */
 #define R_BUS_BUSDIVBYP_CPU0SBPE_Pos    (16UL)
 #define R_BUS_BUSDIVBYP_CPU0SBPE_Msk    (0x10000UL)
 #define R_BUS_BUSDIVBYP_GDSSBPE_Pos     (3UL)
 #define R_BUS_BUSDIVBYP_GDSSBPE_Msk     (0x8UL)
 #define R_BUS_BUSDIVBYP_EDMABPE_Pos     (0UL)
 #define R_BUS_BUSDIVBYP_EDMABPE_Msk     (0x1UL)

/* =========================================================================================================================== */
/* ================                                           R_CAC                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CACR0  ========================================================= */
 #define R_CAC_CACR0_CFME_Pos         (0UL)
 #define R_CAC_CACR0_CFME_Msk         (0x1UL)
/* =========================================================  CACR1  ========================================================= */
 #define R_CAC_CACR1_EDGES_Pos        (6UL)
 #define R_CAC_CACR1_EDGES_Msk        (0xc0UL)
 #define R_CAC_CACR1_TCSS_Pos         (4UL)
 #define R_CAC_CACR1_TCSS_Msk         (0x30UL)
 #define R_CAC_CACR1_FMCS_Pos         (1UL)
 #define R_CAC_CACR1_FMCS_Msk         (0xeUL)
 #define R_CAC_CACR1_CACREFE_Pos      (0UL)
 #define R_CAC_CACR1_CACREFE_Msk      (0x1UL)
/* =========================================================  CACR2  ========================================================= */
 #define R_CAC_CACR2_DFS_Pos          (6UL)
 #define R_CAC_CACR2_DFS_Msk          (0xc0UL)
 #define R_CAC_CACR2_RCDS_Pos         (4UL)
 #define R_CAC_CACR2_RCDS_Msk         (0x30UL)
 #define R_CAC_CACR2_RSCS_Pos         (1UL)
 #define R_CAC_CACR2_RSCS_Msk         (0xeUL)
 #define R_CAC_CACR2_RPS_Pos          (0UL)
 #define R_CAC_CACR2_RPS_Msk          (0x1UL)
/* =========================================================  CAICR  ========================================================= */
 #define R_CAC_CAICR_OVFFCL_Pos       (6UL)
 #define R_CAC_CAICR_OVFFCL_Msk       (0x40UL)
 #define R_CAC_CAICR_MENDFCL_Pos      (5UL)
 #define R_CAC_CAICR_MENDFCL_Msk      (0x20UL)
 #define R_CAC_CAICR_FERRFCL_Pos      (4UL)
 #define R_CAC_CAICR_FERRFCL_Msk      (0x10UL)
 #define R_CAC_CAICR_OVFIE_Pos        (2UL)
 #define R_CAC_CAICR_OVFIE_Msk        (0x4UL)
 #define R_CAC_CAICR_MENDIE_Pos       (1UL)
 #define R_CAC_CAICR_MENDIE_Msk       (0x2UL)
 #define R_CAC_CAICR_FERRIE_Pos       (0UL)
 #define R_CAC_CAICR_FERRIE_Msk       (0x1UL)
/* =========================================================  CASTR  ========================================================= */
 #define R_CAC_CASTR_OVFF_Pos         (2UL)
 #define R_CAC_CASTR_OVFF_Msk         (0x4UL)
 #define R_CAC_CASTR_MENDF_Pos        (1UL)
 #define R_CAC_CASTR_MENDF_Msk        (0x2UL)
 #define R_CAC_CASTR_FERRF_Pos        (0UL)
 #define R_CAC_CASTR_FERRF_Msk        (0x1UL)
/* ========================================================  CAULVR  ========================================================= */
 #define R_CAC_CAULVR_CAULVR_Pos      (0UL)
 #define R_CAC_CAULVR_CAULVR_Msk      (0xffffUL)
/* ========================================================  CALLVR  ========================================================= */
 #define R_CAC_CALLVR_CALLVR_Pos      (0UL)
 #define R_CAC_CALLVR_CALLVR_Msk      (0xffffUL)
/* ========================================================  CACNTBR  ======================================================== */
 #define R_CAC_CACNTBR_CACNTBR_Pos    (0UL)
 #define R_CAC_CACNTBR_CACNTBR_Msk    (0xffffUL)

/* =========================================================================================================================== */
/* ================                                         R_CANFD0                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  CFDGCFG  ======================================================== */
 #define R_CANFD_CFDGCFG_TPRI_Pos                (0UL)
 #define R_CANFD_CFDGCFG_TPRI_Msk                (0x1UL)
 #define R_CANFD_CFDGCFG_DCE_Pos                 (1UL)
 #define R_CANFD_CFDGCFG_DCE_Msk                 (0x2UL)
 #define R_CANFD_CFDGCFG_DRE_Pos                 (2UL)
 #define R_CANFD_CFDGCFG_DRE_Msk                 (0x4UL)
 #define R_CANFD_CFDGCFG_MME_Pos                 (3UL)
 #define R_CANFD_CFDGCFG_MME_Msk                 (0x8UL)
 #define R_CANFD_CFDGCFG_DCS_Pos                 (4UL)
 #define R_CANFD_CFDGCFG_DCS_Msk                 (0x10UL)
 #define R_CANFD_CFDGCFG_CMPOC_Pos               (5UL)
 #define R_CANFD_CFDGCFG_CMPOC_Msk               (0x20UL)
 #define R_CANFD_CFDGCFG_TSP_Pos                 (8UL)
 #define R_CANFD_CFDGCFG_TSP_Msk                 (0xf00UL)
 #define R_CANFD_CFDGCFG_TSSS_Pos                (12UL)
 #define R_CANFD_CFDGCFG_TSSS_Msk                (0x1000UL)
 #define R_CANFD_CFDGCFG_ITRCP_Pos               (16UL)
 #define R_CANFD_CFDGCFG_ITRCP_Msk               (0xffff0000UL)
/* ========================================================  CFDGCTR  ======================================================== */
 #define R_CANFD_CFDGCTR_GMDC_Pos                (0UL)
 #define R_CANFD_CFDGCTR_GMDC_Msk                (0x3UL)
 #define R_CANFD_CFDGCTR_GSLPR_Pos               (2UL)
 #define R_CANFD_CFDGCTR_GSLPR_Msk               (0x4UL)
 #define R_CANFD_CFDGCTR_DEIE_Pos                (8UL)
 #define R_CANFD_CFDGCTR_DEIE_Msk                (0x100UL)
 #define R_CANFD_CFDGCTR_MEIE_Pos                (9UL)
 #define R_CANFD_CFDGCTR_MEIE_Msk                (0x200UL)
 #define R_CANFD_CFDGCTR_THLEIE_Pos              (10UL)
 #define R_CANFD_CFDGCTR_THLEIE_Msk              (0x400UL)
 #define R_CANFD_CFDGCTR_CMPOFIE_Pos             (11UL)
 #define R_CANFD_CFDGCTR_CMPOFIE_Msk             (0x800UL)
 #define R_CANFD_CFDGCTR_TSRST_Pos               (16UL)
 #define R_CANFD_CFDGCTR_TSRST_Msk               (0x10000UL)
/* ========================================================  CFDGSTS  ======================================================== */
 #define R_CANFD_CFDGSTS_GRSTSTS_Pos             (0UL)
 #define R_CANFD_CFDGSTS_GRSTSTS_Msk             (0x1UL)
 #define R_CANFD_CFDGSTS_GHLTSTS_Pos             (1UL)
 #define R_CANFD_CFDGSTS_GHLTSTS_Msk             (0x2UL)
 #define R_CANFD_CFDGSTS_GSLPSTS_Pos             (2UL)
 #define R_CANFD_CFDGSTS_GSLPSTS_Msk             (0x4UL)
 #define R_CANFD_CFDGSTS_GRAMINIT_Pos            (3UL)
 #define R_CANFD_CFDGSTS_GRAMINIT_Msk            (0x8UL)
/* =======================================================  CFDGERFL  ======================================================== */
 #define R_CANFD_CFDGERFL_DEF_Pos                (0UL)
 #define R_CANFD_CFDGERFL_DEF_Msk                (0x1UL)
 #define R_CANFD_CFDGERFL_MES_Pos                (1UL)
 #define R_CANFD_CFDGERFL_MES_Msk                (0x2UL)
 #define R_CANFD_CFDGERFL_THLES_Pos              (2UL)
 #define R_CANFD_CFDGERFL_THLES_Msk              (0x4UL)
 #define R_CANFD_CFDGERFL_CMPOF_Pos              (3UL)
 #define R_CANFD_CFDGERFL_CMPOF_Msk              (0x8UL)
 #define R_CANFD_CFDGERFL_EEF0_Pos               (16UL)
 #define R_CANFD_CFDGERFL_EEF0_Msk               (0x10000UL)
/* ========================================================  CFDGTSC  ======================================================== */
 #define R_CANFD_CFDGTSC_TS_Pos                  (0UL)
 #define R_CANFD_CFDGTSC_TS_Msk                  (0xffffUL)
/* ======================================================  CFDGAFLECTR  ====================================================== */
 #define R_CANFD_CFDGAFLECTR_AFLPN_Pos           (0UL)
 #define R_CANFD_CFDGAFLECTR_AFLPN_Msk           (0xfUL)
 #define R_CANFD_CFDGAFLECTR_AFLDAE_Pos          (8UL)
 #define R_CANFD_CFDGAFLECTR_AFLDAE_Msk          (0x100UL)
/* ======================================================  CFDGAFLCFG0  ====================================================== */
 #define R_CANFD_CFDGAFLCFG0_RNC1_Pos            (0UL)
 #define R_CANFD_CFDGAFLCFG0_RNC1_Msk            (0x1ffUL)
 #define R_CANFD_CFDGAFLCFG0_RNC0_Pos            (16UL)
 #define R_CANFD_CFDGAFLCFG0_RNC0_Msk            (0x1ff0000UL)
/* ========================================================  CFDRMNB  ======================================================== */
 #define R_CANFD_CFDRMNB_NRXMB_Pos               (0UL)
 #define R_CANFD_CFDRMNB_NRXMB_Msk               (0xffUL)
 #define R_CANFD_CFDRMNB_RMPLS_Pos               (8UL)
 #define R_CANFD_CFDRMNB_RMPLS_Msk               (0x700UL)
/* =======================================================  CFDRMND0  ======================================================== */
 #define R_CANFD_CFDRMND0_RMNSu_Pos              (0UL)
 #define R_CANFD_CFDRMND0_RMNSu_Msk              (0xffffffffUL)
/* =======================================================  CFDRMIEC  ======================================================== */
 #define R_CANFD_CFDRMIEC_RMIE_Pos               (0UL)
 #define R_CANFD_CFDRMIEC_RMIE_Msk               (0xffffffffUL)
/* ========================================================  CFDRFCC  ======================================================== */
 #define R_CANFD_CFDRFCC_RFE_Pos                 (0UL)
 #define R_CANFD_CFDRFCC_RFE_Msk                 (0x1UL)
 #define R_CANFD_CFDRFCC_RFIE_Pos                (1UL)
 #define R_CANFD_CFDRFCC_RFIE_Msk                (0x2UL)
 #define R_CANFD_CFDRFCC_RFPLS_Pos               (4UL)
 #define R_CANFD_CFDRFCC_RFPLS_Msk               (0x70UL)
 #define R_CANFD_CFDRFCC_RFDC_Pos                (8UL)
 #define R_CANFD_CFDRFCC_RFDC_Msk                (0x700UL)
 #define R_CANFD_CFDRFCC_RFIM_Pos                (12UL)
 #define R_CANFD_CFDRFCC_RFIM_Msk                (0x1000UL)
 #define R_CANFD_CFDRFCC_RFIGCV_Pos              (13UL)
 #define R_CANFD_CFDRFCC_RFIGCV_Msk              (0xe000UL)
/* =======================================================  CFDRFSTS  ======================================================== */
 #define R_CANFD_CFDRFSTS_RFEMP_Pos              (0UL)
 #define R_CANFD_CFDRFSTS_RFEMP_Msk              (0x1UL)
 #define R_CANFD_CFDRFSTS_RFFLL_Pos              (1UL)
 #define R_CANFD_CFDRFSTS_RFFLL_Msk              (0x2UL)
 #define R_CANFD_CFDRFSTS_RFMLT_Pos              (2UL)
 #define R_CANFD_CFDRFSTS_RFMLT_Msk              (0x4UL)
 #define R_CANFD_CFDRFSTS_RFIF_Pos               (3UL)
 #define R_CANFD_CFDRFSTS_RFIF_Msk               (0x8UL)
 #define R_CANFD_CFDRFSTS_RFMC_Pos               (8UL)
 #define R_CANFD_CFDRFSTS_RFMC_Msk               (0xff00UL)
/* =======================================================  CFDRFPCTR  ======================================================= */
 #define R_CANFD_CFDRFPCTR_RFPC_Pos              (0UL)
 #define R_CANFD_CFDRFPCTR_RFPC_Msk              (0xffUL)
/* ========================================================  CFDCFCC  ======================================================== */
 #define R_CANFD_CFDCFCC_CFE_Pos                 (0UL)
 #define R_CANFD_CFDCFCC_CFE_Msk                 (0x1UL)
 #define R_CANFD_CFDCFCC_CFRXIE_Pos              (1UL)
 #define R_CANFD_CFDCFCC_CFRXIE_Msk              (0x2UL)
 #define R_CANFD_CFDCFCC_CFTXIE_Pos              (2UL)
 #define R_CANFD_CFDCFCC_CFTXIE_Msk              (0x4UL)
 #define R_CANFD_CFDCFCC_CFPLS_Pos               (4UL)
 #define R_CANFD_CFDCFCC_CFPLS_Msk               (0x70UL)
 #define R_CANFD_CFDCFCC_CFM_Pos                 (8UL)
 #define R_CANFD_CFDCFCC_CFM_Msk                 (0x300UL)
 #define R_CANFD_CFDCFCC_CFITSS_Pos              (10UL)
 #define R_CANFD_CFDCFCC_CFITSS_Msk              (0x400UL)
 #define R_CANFD_CFDCFCC_CFITR_Pos               (11UL)
 #define R_CANFD_CFDCFCC_CFITR_Msk               (0x800UL)
 #define R_CANFD_CFDCFCC_CFIM_Pos                (12UL)
 #define R_CANFD_CFDCFCC_CFIM_Msk                (0x1000UL)
 #define R_CANFD_CFDCFCC_CFIGCV_Pos              (13UL)
 #define R_CANFD_CFDCFCC_CFIGCV_Msk              (0xe000UL)
 #define R_CANFD_CFDCFCC_CFTML_Pos               (16UL)
 #define R_CANFD_CFDCFCC_CFTML_Msk               (0x1f0000UL)
 #define R_CANFD_CFDCFCC_CFDC_Pos                (21UL)
 #define R_CANFD_CFDCFCC_CFDC_Msk                (0xe00000UL)
 #define R_CANFD_CFDCFCC_CFITT_Pos               (24UL)
 #define R_CANFD_CFDCFCC_CFITT_Msk               (0xff000000UL)
/* =======================================================  CFDCFSTS  ======================================================== */
 #define R_CANFD_CFDCFSTS_CFEMP_Pos              (0UL)
 #define R_CANFD_CFDCFSTS_CFEMP_Msk              (0x1UL)
 #define R_CANFD_CFDCFSTS_CFFLL_Pos              (1UL)
 #define R_CANFD_CFDCFSTS_CFFLL_Msk              (0x2UL)
 #define R_CANFD_CFDCFSTS_CFMLT_Pos              (2UL)
 #define R_CANFD_CFDCFSTS_CFMLT_Msk              (0x4UL)
 #define R_CANFD_CFDCFSTS_CFRXIF_Pos             (3UL)
 #define R_CANFD_CFDCFSTS_CFRXIF_Msk             (0x8UL)
 #define R_CANFD_CFDCFSTS_CFTXIF_Pos             (4UL)
 #define R_CANFD_CFDCFSTS_CFTXIF_Msk             (0x10UL)
 #define R_CANFD_CFDCFSTS_CFMC_Pos               (8UL)
 #define R_CANFD_CFDCFSTS_CFMC_Msk               (0xff00UL)
/* =======================================================  CFDCFPCTR  ======================================================= */
 #define R_CANFD_CFDCFPCTR_CFPC_Pos              (0UL)
 #define R_CANFD_CFDCFPCTR_CFPC_Msk              (0xffUL)
/* =======================================================  CFDFESTS  ======================================================== */
 #define R_CANFD_CFDFESTS_RFXEMP_Pos             (0UL)
 #define R_CANFD_CFDFESTS_RFXEMP_Msk             (0x3UL)
 #define R_CANFD_CFDFESTS_CFXEMP_Pos             (8UL)
 #define R_CANFD_CFDFESTS_CFXEMP_Msk             (0x100UL)
/* =======================================================  CFDFFSTS  ======================================================== */
 #define R_CANFD_CFDFFSTS_RFXFLL_Pos             (0UL)
 #define R_CANFD_CFDFFSTS_RFXFLL_Msk             (0x3UL)
 #define R_CANFD_CFDFFSTS_CFXFLL_Pos             (8UL)
 #define R_CANFD_CFDFFSTS_CFXFLL_Msk             (0x100UL)
/* =======================================================  CFDFMSTS  ======================================================== */
 #define R_CANFD_CFDFMSTS_RFXMLT_Pos             (0UL)
 #define R_CANFD_CFDFMSTS_RFXMLT_Msk             (0x3UL)
 #define R_CANFD_CFDFMSTS_CFXMLT_Pos             (8UL)
 #define R_CANFD_CFDFMSTS_CFXMLT_Msk             (0x100UL)
/* =======================================================  CFDRFISTS  ======================================================= */
 #define R_CANFD_CFDRFISTS_RFXIF_Pos             (0UL)
 #define R_CANFD_CFDRFISTS_RFXIF_Msk             (0x1UL)
/* ========================================================  CFDTMC  ========================================================= */
 #define R_CANFD_CFDTMC_TMTR_Pos                 (0UL)
 #define R_CANFD_CFDTMC_TMTR_Msk                 (0x1UL)
 #define R_CANFD_CFDTMC_TMTAR_Pos                (1UL)
 #define R_CANFD_CFDTMC_TMTAR_Msk                (0x2UL)
 #define R_CANFD_CFDTMC_TMOM_Pos                 (2UL)
 #define R_CANFD_CFDTMC_TMOM_Msk                 (0x4UL)
/* =======================================================  CFDTMSTS  ======================================================== */
 #define R_CANFD_CFDTMSTS_TMTSTS_Pos             (0UL)
 #define R_CANFD_CFDTMSTS_TMTSTS_Msk             (0x1UL)
 #define R_CANFD_CFDTMSTS_TMTRF_Pos              (1UL)
 #define R_CANFD_CFDTMSTS_TMTRF_Msk              (0x6UL)
 #define R_CANFD_CFDTMSTS_TMTRM_Pos              (3UL)
 #define R_CANFD_CFDTMSTS_TMTRM_Msk              (0x8UL)
 #define R_CANFD_CFDTMSTS_TMTARM_Pos             (4UL)
 #define R_CANFD_CFDTMSTS_TMTARM_Msk             (0x10UL)
/* ======================================================  CFDTMTRSTS  ======================================================= */
 #define R_CANFD_CFDTMTRSTS_CFDTMTRSTSg_Pos      (0UL)
 #define R_CANFD_CFDTMTRSTS_CFDTMTRSTSg_Msk      (0xfUL)
/* ======================================================  CFDTMTARSTS  ====================================================== */
 #define R_CANFD_CFDTMTARSTS_CFDTMTARSTSg_Pos    (0UL)
 #define R_CANFD_CFDTMTARSTS_CFDTMTARSTSg_Msk    (0xfUL)
/* ======================================================  CFDTMTCSTS  ======================================================= */
 #define R_CANFD_CFDTMTCSTS_CFDTMTCSTSg_Pos      (0UL)
 #define R_CANFD_CFDTMTCSTS_CFDTMTCSTSg_Msk      (0xfUL)
/* ======================================================  CFDTMTASTS  ======================================================= */
 #define R_CANFD_CFDTMTASTS_CFDTMTASTSg_Pos      (0UL)
 #define R_CANFD_CFDTMTASTS_CFDTMTASTSg_Msk      (0xfUL)
/* =======================================================  CFDTMIEC  ======================================================== */
 #define R_CANFD_CFDTMIEC_TMIEg_Pos              (0UL)
 #define R_CANFD_CFDTMIEC_TMIEg_Msk              (0xfUL)
/* =======================================================  CFDTXQCC0  ======================================================= */
 #define R_CANFD_CFDTXQCC0_TXQE_Pos              (0UL)
 #define R_CANFD_CFDTXQCC0_TXQE_Msk              (0x1UL)
 #define R_CANFD_CFDTXQCC0_TXQTXIE_Pos           (5UL)
 #define R_CANFD_CFDTXQCC0_TXQTXIE_Msk           (0x20UL)
 #define R_CANFD_CFDTXQCC0_TXQIM_Pos             (7UL)
 #define R_CANFD_CFDTXQCC0_TXQIM_Msk             (0x80UL)
 #define R_CANFD_CFDTXQCC0_TXQDC_Pos             (8UL)
 #define R_CANFD_CFDTXQCC0_TXQDC_Msk             (0x300UL)
/* ======================================================  CFDTXQSTS0  ======================================================= */
 #define R_CANFD_CFDTXQSTS0_TXQEMP_Pos           (0UL)
 #define R_CANFD_CFDTXQSTS0_TXQEMP_Msk           (0x1UL)
 #define R_CANFD_CFDTXQSTS0_TXQFLL_Pos           (1UL)
 #define R_CANFD_CFDTXQSTS0_TXQFLL_Msk           (0x2UL)
 #define R_CANFD_CFDTXQSTS0_TXQTXIF_Pos          (2UL)
 #define R_CANFD_CFDTXQSTS0_TXQTXIF_Msk          (0x4UL)
 #define R_CANFD_CFDTXQSTS0_TXQMC_Pos            (8UL)
 #define R_CANFD_CFDTXQSTS0_TXQMC_Msk            (0x3f00UL)
/* ======================================================  CFDTXQPCTR0  ====================================================== */
 #define R_CANFD_CFDTXQPCTR0_TXQPC_Pos           (0UL)
 #define R_CANFD_CFDTXQPCTR0_TXQPC_Msk           (0xffUL)
/* =======================================================  CFDTHLCC  ======================================================== */
 #define R_CANFD_CFDTHLCC_THLE_Pos               (0UL)
 #define R_CANFD_CFDTHLCC_THLE_Msk               (0x1UL)
 #define R_CANFD_CFDTHLCC_THLIE_Pos              (8UL)
 #define R_CANFD_CFDTHLCC_THLIE_Msk              (0x100UL)
 #define R_CANFD_CFDTHLCC_THLIM_Pos              (9UL)
 #define R_CANFD_CFDTHLCC_THLIM_Msk              (0x200UL)
 #define R_CANFD_CFDTHLCC_THLDTE_Pos             (10UL)
 #define R_CANFD_CFDTHLCC_THLDTE_Msk             (0x400UL)
/* =======================================================  CFDTHLSTS  ======================================================= */
 #define R_CANFD_CFDTHLSTS_THLEMP_Pos            (0UL)
 #define R_CANFD_CFDTHLSTS_THLEMP_Msk            (0x1UL)
 #define R_CANFD_CFDTHLSTS_THLFLL_Pos            (1UL)
 #define R_CANFD_CFDTHLSTS_THLFLL_Msk            (0x2UL)
 #define R_CANFD_CFDTHLSTS_THLELT_Pos            (2UL)
 #define R_CANFD_CFDTHLSTS_THLELT_Msk            (0x4UL)
 #define R_CANFD_CFDTHLSTS_THLIF_Pos             (3UL)
 #define R_CANFD_CFDTHLSTS_THLIF_Msk             (0x8UL)
 #define R_CANFD_CFDTHLSTS_THLMC_Pos             (8UL)
 #define R_CANFD_CFDTHLSTS_THLMC_Msk             (0x3f00UL)
/* ======================================================  CFDTHLPCTR  ======================================================= */
 #define R_CANFD_CFDTHLPCTR_THLPC_Pos            (0UL)
 #define R_CANFD_CFDTHLPCTR_THLPC_Msk            (0xffUL)
/* =====================================================  CFDGTINTSTS0  ====================================================== */
 #define R_CANFD_CFDGTINTSTS0_TSIF0_Pos          (0UL)
 #define R_CANFD_CFDGTINTSTS0_TSIF0_Msk          (0x1UL)
 #define R_CANFD_CFDGTINTSTS0_TAIF0_Pos          (1UL)
 #define R_CANFD_CFDGTINTSTS0_TAIF0_Msk          (0x2UL)
 #define R_CANFD_CFDGTINTSTS0_TQIF0_Pos          (2UL)
 #define R_CANFD_CFDGTINTSTS0_TQIF0_Msk          (0x4UL)
 #define R_CANFD_CFDGTINTSTS0_CFTIF0_Pos         (3UL)
 #define R_CANFD_CFDGTINTSTS0_CFTIF0_Msk         (0x8UL)
 #define R_CANFD_CFDGTINTSTS0_THIF0_Pos          (4UL)
 #define R_CANFD_CFDGTINTSTS0_THIF0_Msk          (0x10UL)
/* ======================================================  CFDGTSTCFG  ======================================================= */
 #define R_CANFD_CFDGTSTCFG_RTMPS_Pos            (16UL)
 #define R_CANFD_CFDGTSTCFG_RTMPS_Msk            (0x3ff0000UL)
/* ======================================================  CFDGTSTCTR  ======================================================= */
 #define R_CANFD_CFDGTSTCTR_RTME_Pos             (2UL)
 #define R_CANFD_CFDGTSTCTR_RTME_Msk             (0x4UL)
/* =======================================================  CFDGFDCFG  ======================================================= */
 #define R_CANFD_CFDGFDCFG_RPED_Pos              (0UL)
 #define R_CANFD_CFDGFDCFG_RPED_Msk              (0x1UL)
 #define R_CANFD_CFDGFDCFG_TSCCFG_Pos            (8UL)
 #define R_CANFD_CFDGFDCFG_TSCCFG_Msk            (0x300UL)
/* =======================================================  CFDGLOCKK  ======================================================= */
 #define R_CANFD_CFDGLOCKK_LOCK_Pos              (0UL)
 #define R_CANFD_CFDGLOCKK_LOCK_Msk              (0xffffUL)
/* =====================================================  CFDGAFLIGNENT  ===================================================== */
 #define R_CANFD_CFDGAFLIGNENT_IRN_Pos           (0UL)
 #define R_CANFD_CFDGAFLIGNENT_IRN_Msk           (0x1fUL)
/* =====================================================  CFDGAFLIGNCTR  ===================================================== */
 #define R_CANFD_CFDGAFLIGNCTR_IREN_Pos          (0UL)
 #define R_CANFD_CFDGAFLIGNCTR_IREN_Msk          (0x1UL)
 #define R_CANFD_CFDGAFLIGNCTR_KEY_Pos           (8UL)
 #define R_CANFD_CFDGAFLIGNCTR_KEY_Msk           (0xff00UL)
/* =======================================================  CFDCDTCT  ======================================================== */
 #define R_CANFD_CFDCDTCT_RFDMAE0_Pos            (0UL)
 #define R_CANFD_CFDCDTCT_RFDMAE0_Msk            (0x1UL)
 #define R_CANFD_CFDCDTCT_RFDMAE1_Pos            (1UL)
 #define R_CANFD_CFDCDTCT_RFDMAE1_Msk            (0x2UL)
 #define R_CANFD_CFDCDTCT_CFDMAE0_Pos            (8UL)
 #define R_CANFD_CFDCDTCT_CFDMAE0_Msk            (0x100UL)
/* =======================================================  CFDCDTSTS  ======================================================= */
 #define R_CANFD_CFDCDTSTS_RFDMASTS0_Pos         (0UL)
 #define R_CANFD_CFDCDTSTS_RFDMASTS0_Msk         (0x1UL)
 #define R_CANFD_CFDCDTSTS_RFDMASTS1_Pos         (1UL)
 #define R_CANFD_CFDCDTSTS_RFDMASTS1_Msk         (0x2UL)
 #define R_CANFD_CFDCDTSTS_CFDMASTS0_Pos         (8UL)
 #define R_CANFD_CFDCDTSTS_CFDMASTS0_Msk         (0x100UL)
/* =======================================================  CFDGRSTC  ======================================================== */
 #define R_CANFD_CFDGRSTC_SRST_Pos               (0UL)
 #define R_CANFD_CFDGRSTC_SRST_Msk               (0x1UL)
 #define R_CANFD_CFDGRSTC_KEY_Pos                (8UL)
 #define R_CANFD_CFDGRSTC_KEY_Msk                (0xff00UL)
/* =======================================================  CFDRPGACC  ======================================================= */
 #define R_CANFD_CFDRPGACC_RDTA_Pos              (0UL)
 #define R_CANFD_CFDRPGACC_RDTA_Msk              (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                           R_CRC                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  CRCCR0  ========================================================= */
 #define R_CRC_CRCCR0_DORCLR_Pos          (7UL)
 #define R_CRC_CRCCR0_DORCLR_Msk          (0x80UL)
 #define R_CRC_CRCCR0_LMS_Pos             (6UL)
 #define R_CRC_CRCCR0_LMS_Msk             (0x40UL)
 #define R_CRC_CRCCR0_GPS_Pos             (0UL)
 #define R_CRC_CRCCR0_GPS_Msk             (0x7UL)
/* ========================================================  CRCCR1  ========================================================= */
 #define R_CRC_CRCCR1_CRCSEN_Pos          (7UL)
 #define R_CRC_CRCCR1_CRCSEN_Msk          (0x80UL)
 #define R_CRC_CRCCR1_CRCSWR_Pos          (6UL)
 #define R_CRC_CRCCR1_CRCSWR_Msk          (0x40UL)
/* ========================================================  CRCDIR  ========================================================= */
 #define R_CRC_CRCDIR_CRCDIR_Pos          (0UL)
 #define R_CRC_CRCDIR_CRCDIR_Msk          (0xffffffffUL)
/* =======================================================  CRCDIR_BY  ======================================================= */
 #define R_CRC_CRCDIR_BY_CRCDIR_BY_Pos    (0UL)
 #define R_CRC_CRCDIR_BY_CRCDIR_BY_Msk    (0xffUL)
/* ========================================================  CRCDOR  ========================================================= */
 #define R_CRC_CRCDOR_CRCDOR_Pos          (0UL)
 #define R_CRC_CRCDOR_CRCDOR_Msk          (0xffffffffUL)
/* =======================================================  CRCDOR_HA  ======================================================= */
 #define R_CRC_CRCDOR_HA_CRCDOR_HA_Pos    (0UL)
 #define R_CRC_CRCDOR_HA_CRCDOR_HA_Msk    (0xffffUL)
/* =======================================================  CRCDOR_BY  ======================================================= */
 #define R_CRC_CRCDOR_BY_CRCDOR_BY_Pos    (0UL)
 #define R_CRC_CRCDOR_BY_CRCDOR_BY_Msk    (0xffUL)
/* ========================================================  CRCSAR  ========================================================= */
 #define R_CRC_CRCSAR_CRCSA_Pos           (0UL)
 #define R_CRC_CRCSAR_CRCSA_Msk           (0x3fffUL)

/* =========================================================================================================================== */
/* ================                                           R_DAC                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DACR  ========================================================== */
 #define R_DAC_DACR_DAE_Pos            (5UL)
 #define R_DAC_DACR_DAE_Msk            (0x20UL)
 #define R_DAC_DACR_DAOE_Pos           (6UL)
 #define R_DAC_DACR_DAOE_Msk           (0x40UL)
/* =========================================================  DADR  ========================================================== */
 #define R_DAC_DADR_DADR_Pos           (0UL)
 #define R_DAC_DADR_DADR_Msk           (0xffffUL)
/* =========================================================  DADPR  ========================================================= */
 #define R_DAC_DADPR_DPSEL_Pos         (7UL)
 #define R_DAC_DADPR_DPSEL_Msk         (0x80UL)
/* ========================================================  DAADSCR  ======================================================== */
 #define R_DAC_DAADSCR_DAADST_Pos      (7UL)
 #define R_DAC_DAADSCR_DAADST_Msk      (0x80UL)
/* =======================================================  DAVREFCR  ======================================================== */
 #define R_DAC_DAVREFCR_REF_Pos        (0UL)
 #define R_DAC_DAVREFCR_REF_Msk        (0x7UL)
/* =========================================================  DAPC  ========================================================== */
 #define R_DAC_DAPC_PUMPEN_Pos         (0UL)
 #define R_DAC_DAPC_PUMPEN_Msk         (0x1UL)
/* ========================================================  DAAMPCR  ======================================================== */
 #define R_DAC_DAAMPCR_DAAMP_Pos       (6UL)
 #define R_DAC_DAAMPCR_DAAMP_Msk       (0x40UL)
/* ========================================================  DAASWCR  ======================================================== */
 #define R_DAC_DAASWCR_DAASW1_Pos      (7UL)
 #define R_DAC_DAASWCR_DAASW1_Msk      (0x80UL)
 #define R_DAC_DAASWCR_DAASW0_Pos      (6UL)
 #define R_DAC_DAASWCR_DAASW0_Msk      (0x40UL)
/* ========================================================  DAADUSR  ======================================================== */
 #define R_DAC_DAADUSR_AMADSEL0_Pos    (0UL)
 #define R_DAC_DAADUSR_AMADSEL0_Msk    (0x1UL)
 #define R_DAC_DAADUSR_AMADSEL1_Pos    (1UL)
 #define R_DAC_DAADUSR_AMADSEL1_Msk    (0x2UL)

/* =========================================================================================================================== */
/* ================                                          R_DEBUG                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  DBGSTR  ========================================================= */
 #define R_DEBUG_DBGSTR_CDBGPWRUPREQ_Pos        (28UL)
 #define R_DEBUG_DBGSTR_CDBGPWRUPREQ_Msk        (0x10000000UL)
 #define R_DEBUG_DBGSTR_CDBGPWRUPACK_Pos        (29UL)
 #define R_DEBUG_DBGSTR_CDBGPWRUPACK_Msk        (0x20000000UL)
/* =======================================================  DBGSTOPCR  ======================================================= */
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_RPER_Pos     (24UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_RPER_Msk     (0x1000000UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_TIM_Pos      (14UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_TIM_Msk      (0x4000UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_SIR_Pos      (15UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_SIR_Msk      (0x8000UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_LVD_Pos      (16UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_LVD_Msk      (0x10000UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_RECCR_Pos    (25UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_RECCR_Msk    (0x2000000UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_IWDT_Pos     (0UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_IWDT_Msk     (0x1UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_WDT_Pos      (1UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_WDT_Msk      (0x2UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_CPER_Pos     (31UL)
 #define R_DEBUG_DBGSTOPCR_DBGSTOP_CPER_Msk     (0x80000000UL)
/* =======================================================  FSBLSTAT  ======================================================== */
 #define R_DEBUG_FSBLSTAT_CS_Pos                (0UL)
 #define R_DEBUG_FSBLSTAT_CS_Msk                (0x1UL)
 #define R_DEBUG_FSBLSTAT_RS_Pos                (1UL)
 #define R_DEBUG_FSBLSTAT_RS_Msk                (0x2UL)
 #define R_DEBUG_FSBLSTAT_FSBLCLK_Pos           (8UL)
 #define R_DEBUG_FSBLSTAT_FSBLCLK_Msk           (0x700UL)

/* =========================================================================================================================== */
/* ================                                           R_DMA                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DMAST  ========================================================= */
 #define R_DMA_DMAST_DMST_Pos         (0UL)
 #define R_DMA_DMAST_DMST_Msk         (0x1UL)
/* ========================================================  DMECHR  ========================================================= */
 #define R_DMA_DMECHR_DMECH_Pos       (0UL)
 #define R_DMA_DMECHR_DMECH_Msk       (0x7UL)
 #define R_DMA_DMECHR_DMECHSAM_Pos    (8UL)
 #define R_DMA_DMECHR_DMECHSAM_Msk    (0x100UL)
 #define R_DMA_DMECHR_DMESTA_Pos      (16UL)
 #define R_DMA_DMECHR_DMESTA_Msk      (0x10000UL)
/* =========================================================  DELSR  ========================================================= */
 #define R_DMA_DELSR_IR_Pos           (16UL)
 #define R_DMA_DELSR_IR_Msk           (0x10000UL)
 #define R_DMA_DELSR_DELS_Pos         (0UL)
 #define R_DMA_DELSR_DELS_Msk         (0x1ffUL)

/* =========================================================================================================================== */
/* ================                                          R_DMAC0                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  DMSAR  ========================================================= */
 #define R_DMAC0_DMSAR_DMSAR_Pos     (0UL)
 #define R_DMAC0_DMSAR_DMSAR_Msk     (0xffffffffUL)
/* =========================================================  DMDAR  ========================================================= */
 #define R_DMAC0_DMDAR_DMDAR_Pos     (0UL)
 #define R_DMAC0_DMDAR_DMDAR_Msk     (0xffffffffUL)
/* =========================================================  DMCRA  ========================================================= */
 #define R_DMAC0_DMCRA_DMCRAH_Pos    (16UL)
 #define R_DMAC0_DMCRA_DMCRAH_Msk    (0x3ff0000UL)
 #define R_DMAC0_DMCRA_DMCRAL_Pos    (0UL)
 #define R_DMAC0_DMCRA_DMCRAL_Msk    (0xffffUL)
/* =========================================================  DMCRB  ========================================================= */
 #define R_DMAC0_DMCRB_DMCRBL_Pos    (0UL)
 #define R_DMAC0_DMCRB_DMCRBL_Msk    (0xffffUL)
 #define R_DMAC0_DMCRB_DMCRBH_Pos    (16UL)
 #define R_DMAC0_DMCRB_DMCRBH_Msk    (0xffff0000UL)
/* =========================================================  DMTMD  ========================================================= */
 #define R_DMAC0_DMTMD_MD_Pos        (14UL)
 #define R_DMAC0_DMTMD_MD_Msk        (0xc000UL)
 #define R_DMAC0_DMTMD_DTS_Pos       (12UL)
 #define R_DMAC0_DMTMD_DTS_Msk       (0x3000UL)
 #define R_DMAC0_DMTMD_SZ_Pos        (8UL)
 #define R_DMAC0_DMTMD_SZ_Msk        (0x300UL)
 #define R_DMAC0_DMTMD_DCTG_Pos      (0UL)
 #define R_DMAC0_DMTMD_DCTG_Msk      (0x3UL)
 #define R_DMAC0_DMTMD_TKP_Pos       (10UL)
 #define R_DMAC0_DMTMD_TKP_Msk       (0x400UL)
/* =========================================================  DMINT  ========================================================= */
 #define R_DMAC0_DMINT_DTIE_Pos      (4UL)
 #define R_DMAC0_DMINT_DTIE_Msk      (0x10UL)
 #define R_DMAC0_DMINT_ESIE_Pos      (3UL)
 #define R_DMAC0_DMINT_ESIE_Msk      (0x8UL)
 #define R_DMAC0_DMINT_RPTIE_Pos     (2UL)
 #define R_DMAC0_DMINT_RPTIE_Msk     (0x4UL)
 #define R_DMAC0_DMINT_SARIE_Pos     (1UL)
 #define R_DMAC0_DMINT_SARIE_Msk     (0x2UL)
 #define R_DMAC0_DMINT_DARIE_Pos     (0UL)
 #define R_DMAC0_DMINT_DARIE_Msk     (0x1UL)
/* =========================================================  DMAMD  ========================================================= */
 #define R_DMAC0_DMAMD_SM_Pos        (14UL)
 #define R_DMAC0_DMAMD_SM_Msk        (0xc000UL)
 #define R_DMAC0_DMAMD_SARA_Pos      (8UL)
 #define R_DMAC0_DMAMD_SARA_Msk      (0x1f00UL)
 #define R_DMAC0_DMAMD_DM_Pos        (6UL)
 #define R_DMAC0_DMAMD_DM_Msk        (0xc0UL)
 #define R_DMAC0_DMAMD_DARA_Pos      (0UL)
 #define R_DMAC0_DMAMD_DARA_Msk      (0x1fUL)
 #define R_DMAC0_DMAMD_DADR_Pos      (5UL)
 #define R_DMAC0_DMAMD_DADR_Msk      (0x20UL)
 #define R_DMAC0_DMAMD_SADR_Pos      (13UL)
 #define R_DMAC0_DMAMD_SADR_Msk      (0x2000UL)
/* =========================================================  DMOFR  ========================================================= */
 #define R_DMAC0_DMOFR_DMOFR_Pos     (0UL)
 #define R_DMAC0_DMOFR_DMOFR_Msk     (0xffffffffUL)
/* =========================================================  DMCNT  ========================================================= */
 #define R_DMAC0_DMCNT_DTE_Pos       (0UL)
 #define R_DMAC0_DMCNT_DTE_Msk       (0x1UL)
/* =========================================================  DMREQ  ========================================================= */
 #define R_DMAC0_DMREQ_CLRS_Pos      (4UL)
 #define R_DMAC0_DMREQ_CLRS_Msk      (0x10UL)
 #define R_DMAC0_DMREQ_SWREQ_Pos     (0UL)
 #define R_DMAC0_DMREQ_SWREQ_Msk     (0x1UL)
/* =========================================================  DMSTS  ========================================================= */
 #define R_DMAC0_DMSTS_ACT_Pos       (7UL)
 #define R_DMAC0_DMSTS_ACT_Msk       (0x80UL)
 #define R_DMAC0_DMSTS_DTIF_Pos      (4UL)
 #define R_DMAC0_DMSTS_DTIF_Msk      (0x10UL)
 #define R_DMAC0_DMSTS_ESIF_Pos      (0UL)
 #define R_DMAC0_DMSTS_ESIF_Msk      (0x1UL)
/* =========================================================  DMSRR  ========================================================= */
/* =========================================================  DMDRR  ========================================================= */
/* =========================================================  DMSBS  ========================================================= */
 #define R_DMAC0_DMSBS_DMSBSL_Pos    (0UL)
 #define R_DMAC0_DMSBS_DMSBSL_Msk    (0xffffUL)
 #define R_DMAC0_DMSBS_DMSBSH_Pos    (16UL)
 #define R_DMAC0_DMSBS_DMSBSH_Msk    (0xffff0000UL)
/* =========================================================  DMDBS  ========================================================= */
 #define R_DMAC0_DMDBS_DMDBSL_Pos    (0UL)
 #define R_DMAC0_DMDBS_DMDBSL_Msk    (0xffffUL)
 #define R_DMAC0_DMDBS_DMDBSH_Pos    (16UL)
 #define R_DMAC0_DMDBS_DMDBSH_Msk    (0xffff0000UL)
/* =========================================================  DMBWR  ========================================================= */
 #define R_DMAC0_DMBWR_BWE_Pos       (0UL)
 #define R_DMAC0_DMBWR_BWE_Msk       (0x1UL)

/* =========================================================================================================================== */
/* ================                                           R_DOC                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DOCR  ========================================================== */
 #define R_DOC_DOCR_DOPCFCL_Pos    (6UL)
 #define R_DOC_DOCR_DOPCFCL_Msk    (0x40UL)
 #define R_DOC_DOCR_DOPCF_Pos      (5UL)
 #define R_DOC_DOCR_DOPCF_Msk      (0x20UL)
 #define R_DOC_DOCR_DCSEL_Pos      (2UL)
 #define R_DOC_DOCR_DCSEL_Msk      (0x4UL)
 #define R_DOC_DOCR_OMS_Pos        (0UL)
 #define R_DOC_DOCR_OMS_Msk        (0x3UL)
/* =========================================================  DODIR  ========================================================= */
 #define R_DOC_DODIR_DODIR_Pos     (0UL)
 #define R_DOC_DODIR_DODIR_Msk     (0xffffUL)
/* =========================================================  DODSR  ========================================================= */
 #define R_DOC_DODSR_DODSR_Pos     (0UL)
 #define R_DOC_DODSR_DODSR_Msk     (0xffffUL)

/* =========================================================================================================================== */
/* ================                                           R_DTC                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DTCCR  ========================================================= */
 #define R_DTC_DTCCR_RRS_Pos         (4UL)
 #define R_DTC_DTCCR_RRS_Msk         (0x10UL)
/* ========================================================  DTCVBR  ========================================================= */
 #define R_DTC_DTCVBR_DTCVBR_Pos     (0UL)
 #define R_DTC_DTCVBR_DTCVBR_Msk     (0xffffffffUL)
/* =========================================================  DTCST  ========================================================= */
 #define R_DTC_DTCST_DTCST_Pos       (0UL)
 #define R_DTC_DTCST_DTCST_Msk       (0x1UL)
/* ========================================================  DTCSTS  ========================================================= */
 #define R_DTC_DTCSTS_ACT_Pos        (15UL)
 #define R_DTC_DTCSTS_ACT_Msk        (0x8000UL)
 #define R_DTC_DTCSTS_VECN_Pos       (0UL)
 #define R_DTC_DTCSTS_VECN_Msk       (0xffUL)
/* =======================================================  DTCCR_SEC  ======================================================= */
 #define R_DTC_DTCCR_SEC_RRSS_Pos    (4UL)
 #define R_DTC_DTCCR_SEC_RRSS_Msk    (0x10UL)
/* ======================================================  DTCVBR_SEC  ======================================================= */
/* =========================================================  DTEVR  ========================================================= */
 #define R_DTC_DTEVR_DTEV_Pos        (0UL)
 #define R_DTC_DTEVR_DTEV_Msk        (0xffUL)
 #define R_DTC_DTEVR_DTEVSAM_Pos     (8UL)
 #define R_DTC_DTEVR_DTEVSAM_Msk     (0x100UL)
 #define R_DTC_DTEVR_DTESTA_Pos      (16UL)
 #define R_DTC_DTEVR_DTESTA_Msk      (0x10000UL)

/* =========================================================================================================================== */
/* ================                                           R_ELC                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ELCR  ========================================================== */
 #define R_ELC_ELCR_ELCON_Pos         (7UL)
 #define R_ELC_ELCR_ELCON_Msk         (0x80UL)
/* ========================================================  ELCSARA  ======================================================== */
 #define R_ELC_ELCSARA_ELCR_Pos       (0UL)
 #define R_ELC_ELCSARA_ELCR_Msk       (0x1UL)
 #define R_ELC_ELCSARA_ELSEGR0_Pos    (1UL)
 #define R_ELC_ELCSARA_ELSEGR0_Msk    (0x2UL)
 #define R_ELC_ELCSARA_ELSEGR1_Pos    (2UL)
 #define R_ELC_ELCSARA_ELSEGR1_Msk    (0x4UL)
/* ========================================================  ELCSARB  ======================================================== */
 #define R_ELC_ELCSARB_ELSR_Pos       (0UL)
 #define R_ELC_ELCSARB_ELSR_Msk       (0x1UL)
 #define R_ELC_ELCSARB_ELSR30_Pos     (30UL)
 #define R_ELC_ELCSARB_ELSR30_Msk     (0x40000000UL)
/* ========================================================  ELCPARA  ======================================================== */
 #define R_ELC_ELCPARA_ELCR_Pos       (0UL)
 #define R_ELC_ELCPARA_ELCR_Msk       (0x1UL)
 #define R_ELC_ELCPARA_ELSEGR0_Pos    (1UL)
 #define R_ELC_ELCPARA_ELSEGR0_Msk    (0x2UL)
 #define R_ELC_ELCPARA_ELSEGR1_Pos    (2UL)
 #define R_ELC_ELCPARA_ELSEGR1_Msk    (0x4UL)
/* ========================================================  ELCPARB  ======================================================== */
 #define R_ELC_ELCPARB_ELSR_Pos       (0UL)
 #define R_ELC_ELCPARB_ELSR_Msk       (0x1UL)
 #define R_ELC_ELCPARB_ELSR30_Pos     (30UL)
 #define R_ELC_ELCPARB_ELSR30_Msk     (0x40000000UL)

/* =========================================================================================================================== */
/* ================                                         R_ETHERC0                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  ECMR  ========================================================== */
 #define R_ETHERC0_ECMR_TPC_Pos          (20UL)
 #define R_ETHERC0_ECMR_TPC_Msk          (0x100000UL)
 #define R_ETHERC0_ECMR_ZPF_Pos          (19UL)
 #define R_ETHERC0_ECMR_ZPF_Msk          (0x80000UL)
 #define R_ETHERC0_ECMR_PFR_Pos          (18UL)
 #define R_ETHERC0_ECMR_PFR_Msk          (0x40000UL)
 #define R_ETHERC0_ECMR_RXF_Pos          (17UL)
 #define R_ETHERC0_ECMR_RXF_Msk          (0x20000UL)
 #define R_ETHERC0_ECMR_TXF_Pos          (16UL)
 #define R_ETHERC0_ECMR_TXF_Msk          (0x10000UL)
 #define R_ETHERC0_ECMR_PRCEF_Pos        (12UL)
 #define R_ETHERC0_ECMR_PRCEF_Msk        (0x1000UL)
 #define R_ETHERC0_ECMR_MPDE_Pos         (9UL)
 #define R_ETHERC0_ECMR_MPDE_Msk         (0x200UL)
 #define R_ETHERC0_ECMR_RE_Pos           (6UL)
 #define R_ETHERC0_ECMR_RE_Msk           (0x40UL)
 #define R_ETHERC0_ECMR_TE_Pos           (5UL)
 #define R_ETHERC0_ECMR_TE_Msk           (0x20UL)
 #define R_ETHERC0_ECMR_ILB_Pos          (3UL)
 #define R_ETHERC0_ECMR_ILB_Msk          (0x8UL)
 #define R_ETHERC0_ECMR_RTM_Pos          (2UL)
 #define R_ETHERC0_ECMR_RTM_Msk          (0x4UL)
 #define R_ETHERC0_ECMR_DM_Pos           (1UL)
 #define R_ETHERC0_ECMR_DM_Msk           (0x2UL)
 #define R_ETHERC0_ECMR_PRM_Pos          (0UL)
 #define R_ETHERC0_ECMR_PRM_Msk          (0x1UL)
/* =========================================================  RFLR  ========================================================== */
 #define R_ETHERC0_RFLR_RFL_Pos          (0UL)
 #define R_ETHERC0_RFLR_RFL_Msk          (0xfffUL)
/* =========================================================  ECSR  ========================================================== */
 #define R_ETHERC0_ECSR_BFR_Pos          (5UL)
 #define R_ETHERC0_ECSR_BFR_Msk          (0x20UL)
 #define R_ETHERC0_ECSR_PSRTO_Pos        (4UL)
 #define R_ETHERC0_ECSR_PSRTO_Msk        (0x10UL)
 #define R_ETHERC0_ECSR_LCHNG_Pos        (2UL)
 #define R_ETHERC0_ECSR_LCHNG_Msk        (0x4UL)
 #define R_ETHERC0_ECSR_MPD_Pos          (1UL)
 #define R_ETHERC0_ECSR_MPD_Msk          (0x2UL)
 #define R_ETHERC0_ECSR_ICD_Pos          (0UL)
 #define R_ETHERC0_ECSR_ICD_Msk          (0x1UL)
/* ========================================================  ECSIPR  ========================================================= */
 #define R_ETHERC0_ECSIPR_BFSIPR_Pos     (5UL)
 #define R_ETHERC0_ECSIPR_BFSIPR_Msk     (0x20UL)
 #define R_ETHERC0_ECSIPR_PSRTOIP_Pos    (4UL)
 #define R_ETHERC0_ECSIPR_PSRTOIP_Msk    (0x10UL)
 #define R_ETHERC0_ECSIPR_LCHNGIP_Pos    (2UL)
 #define R_ETHERC0_ECSIPR_LCHNGIP_Msk    (0x4UL)
 #define R_ETHERC0_ECSIPR_MPDIP_Pos      (1UL)
 #define R_ETHERC0_ECSIPR_MPDIP_Msk      (0x2UL)
 #define R_ETHERC0_ECSIPR_ICDIP_Pos      (0UL)
 #define R_ETHERC0_ECSIPR_ICDIP_Msk      (0x1UL)
/* ==========================================================  PIR  ========================================================== */
 #define R_ETHERC0_PIR_MDI_Pos           (3UL)
 #define R_ETHERC0_PIR_MDI_Msk           (0x8UL)
 #define R_ETHERC0_PIR_MDO_Pos           (2UL)
 #define R_ETHERC0_PIR_MDO_Msk           (0x4UL)
 #define R_ETHERC0_PIR_MMD_Pos           (1UL)
 #define R_ETHERC0_PIR_MMD_Msk           (0x2UL)
 #define R_ETHERC0_PIR_MDC_Pos           (0UL)
 #define R_ETHERC0_PIR_MDC_Msk           (0x1UL)
/* ==========================================================  PSR  ========================================================== */
 #define R_ETHERC0_PSR_LMON_Pos          (0UL)
 #define R_ETHERC0_PSR_LMON_Msk          (0x1UL)
/* =========================================================  RDMLR  ========================================================= */
 #define R_ETHERC0_RDMLR_RMD_Pos         (0UL)
 #define R_ETHERC0_RDMLR_RMD_Msk         (0xfffffUL)
/* =========================================================  IPGR  ========================================================== */
 #define R_ETHERC0_IPGR_IPG_Pos          (0UL)
 #define R_ETHERC0_IPGR_IPG_Msk          (0x1fUL)
/* ==========================================================  APR  ========================================================== */
 #define R_ETHERC0_APR_AP_Pos            (0UL)
 #define R_ETHERC0_APR_AP_Msk            (0xffffUL)
/* ==========================================================  MPR  ========================================================== */
 #define R_ETHERC0_MPR_MP_Pos            (0UL)
 #define R_ETHERC0_MPR_MP_Msk            (0xffffUL)
/* =========================================================  RFCF  ========================================================== */
 #define R_ETHERC0_RFCF_RPAUSE_Pos       (0UL)
 #define R_ETHERC0_RFCF_RPAUSE_Msk       (0xffUL)
/* ========================================================  TPAUSER  ======================================================== */
 #define R_ETHERC0_TPAUSER_TPAUSE_Pos    (0UL)
 #define R_ETHERC0_TPAUSER_TPAUSE_Msk    (0xffffUL)
/* =======================================================  TPAUSECR  ======================================================== */
/* =========================================================  BCFRR  ========================================================= */
 #define R_ETHERC0_BCFRR_BCF_Pos         (0UL)
 #define R_ETHERC0_BCFRR_BCF_Msk         (0xffffUL)
/* =========================================================  MAHR  ========================================================== */
 #define R_ETHERC0_MAHR_MAHR_Pos         (0UL)
 #define R_ETHERC0_MAHR_MAHR_Msk         (0xffffffffUL)
/* =========================================================  MALR  ========================================================== */
 #define R_ETHERC0_MALR_MALR_Pos         (0UL)
 #define R_ETHERC0_MALR_MALR_Msk         (0xffffUL)
/* =========================================================  TROCR  ========================================================= */
 #define R_ETHERC0_TROCR_TROCR_Pos       (0UL)
 #define R_ETHERC0_TROCR_TROCR_Msk       (0xffffffffUL)
/* =========================================================  CDCR  ========================================================== */
/* =========================================================  LCCR  ========================================================== */
 #define R_ETHERC0_LCCR_LCCR_Pos         (0UL)
 #define R_ETHERC0_LCCR_LCCR_Msk         (0xffffffffUL)
/* =========================================================  CNDCR  ========================================================= */
 #define R_ETHERC0_CNDCR_CNDCR_Pos       (0UL)
 #define R_ETHERC0_CNDCR_CNDCR_Msk       (0xffffffffUL)
/* =========================================================  CEFCR  ========================================================= */
 #define R_ETHERC0_CEFCR_CEFCR_Pos       (0UL)
 #define R_ETHERC0_CEFCR_CEFCR_Msk       (0xffffffffUL)
/* =========================================================  FRECR  ========================================================= */
 #define R_ETHERC0_FRECR_FRECR_Pos       (0UL)
 #define R_ETHERC0_FRECR_FRECR_Msk       (0xffffffffUL)
/* ========================================================  TSFRCR  ========================================================= */
 #define R_ETHERC0_TSFRCR_TSFRCR_Pos     (0UL)
 #define R_ETHERC0_TSFRCR_TSFRCR_Msk     (0xffffffffUL)
/* ========================================================  TLFRCR  ========================================================= */
 #define R_ETHERC0_TLFRCR_TLFRCR_Pos     (0UL)
 #define R_ETHERC0_TLFRCR_TLFRCR_Msk     (0xffffffffUL)
/* =========================================================  RFCR  ========================================================== */
 #define R_ETHERC0_RFCR_RFCR_Pos         (0UL)
 #define R_ETHERC0_RFCR_RFCR_Msk         (0xffffffffUL)
/* =========================================================  MAFCR  ========================================================= */
 #define R_ETHERC0_MAFCR_MAFCR_Pos       (0UL)
 #define R_ETHERC0_MAFCR_MAFCR_Msk       (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                      R_ETHERC_EDMAC                                       ================ */
/* =========================================================================================================================== */

/* =========================================================  EDMR  ========================================================== */
 #define R_ETHERC_EDMAC_EDMR_DE_Pos           (6UL)
 #define R_ETHERC_EDMAC_EDMR_DE_Msk           (0x40UL)
 #define R_ETHERC_EDMAC_EDMR_DL_Pos           (4UL)
 #define R_ETHERC_EDMAC_EDMR_DL_Msk           (0x30UL)
 #define R_ETHERC_EDMAC_EDMR_SWR_Pos          (0UL)
 #define R_ETHERC_EDMAC_EDMR_SWR_Msk          (0x1UL)
/* =========================================================  EDTRR  ========================================================= */
 #define R_ETHERC_EDMAC_EDTRR_TR_Pos          (0UL)
 #define R_ETHERC_EDMAC_EDTRR_TR_Msk          (0x1UL)
/* =========================================================  EDRRR  ========================================================= */
 #define R_ETHERC_EDMAC_EDRRR_RR_Pos          (0UL)
 #define R_ETHERC_EDMAC_EDRRR_RR_Msk          (0x1UL)
/* =========================================================  TDLAR  ========================================================= */
 #define R_ETHERC_EDMAC_TDLAR_TDLAR_Pos       (0UL)
 #define R_ETHERC_EDMAC_TDLAR_TDLAR_Msk       (0xffffffffUL)
/* =========================================================  RDLAR  ========================================================= */
 #define R_ETHERC_EDMAC_RDLAR_RDLAR_Pos       (0UL)
 #define R_ETHERC_EDMAC_RDLAR_RDLAR_Msk       (0xffffffffUL)
/* =========================================================  EESR  ========================================================== */
 #define R_ETHERC_EDMAC_EESR_TWB_Pos          (30UL)
 #define R_ETHERC_EDMAC_EESR_TWB_Msk          (0x40000000UL)
 #define R_ETHERC_EDMAC_EESR_TABT_Pos         (26UL)
 #define R_ETHERC_EDMAC_EESR_TABT_Msk         (0x4000000UL)
 #define R_ETHERC_EDMAC_EESR_RABT_Pos         (25UL)
 #define R_ETHERC_EDMAC_EESR_RABT_Msk         (0x2000000UL)
 #define R_ETHERC_EDMAC_EESR_RFCOF_Pos        (24UL)
 #define R_ETHERC_EDMAC_EESR_RFCOF_Msk        (0x1000000UL)
 #define R_ETHERC_EDMAC_EESR_ADE_Pos          (23UL)
 #define R_ETHERC_EDMAC_EESR_ADE_Msk          (0x800000UL)
 #define R_ETHERC_EDMAC_EESR_ECI_Pos          (22UL)
 #define R_ETHERC_EDMAC_EESR_ECI_Msk          (0x400000UL)
 #define R_ETHERC_EDMAC_EESR_TC_Pos           (21UL)
 #define R_ETHERC_EDMAC_EESR_TC_Msk           (0x200000UL)
 #define R_ETHERC_EDMAC_EESR_TDE_Pos          (20UL)
 #define R_ETHERC_EDMAC_EESR_TDE_Msk          (0x100000UL)
 #define R_ETHERC_EDMAC_EESR_TFUF_Pos         (19UL)
 #define R_ETHERC_EDMAC_EESR_TFUF_Msk         (0x80000UL)
 #define R_ETHERC_EDMAC_EESR_FR_Pos           (18UL)
 #define R_ETHERC_EDMAC_EESR_FR_Msk           (0x40000UL)
 #define R_ETHERC_EDMAC_EESR_RDE_Pos          (17UL)
 #define R_ETHERC_EDMAC_EESR_RDE_Msk          (0x20000UL)
 #define R_ETHERC_EDMAC_EESR_RFOF_Pos         (16UL)
 #define R_ETHERC_EDMAC_EESR_RFOF_Msk         (0x10000UL)
 #define R_ETHERC_EDMAC_EESR_CND_Pos          (11UL)
 #define R_ETHERC_EDMAC_EESR_CND_Msk          (0x800UL)
 #define R_ETHERC_EDMAC_EESR_DLC_Pos          (10UL)
 #define R_ETHERC_EDMAC_EESR_DLC_Msk          (0x400UL)
 #define R_ETHERC_EDMAC_EESR_CD_Pos           (9UL)
 #define R_ETHERC_EDMAC_EESR_CD_Msk           (0x200UL)
 #define R_ETHERC_EDMAC_EESR_TRO_Pos          (8UL)
 #define R_ETHERC_EDMAC_EESR_TRO_Msk          (0x100UL)
 #define R_ETHERC_EDMAC_EESR_RMAF_Pos         (7UL)
 #define R_ETHERC_EDMAC_EESR_RMAF_Msk         (0x80UL)
 #define R_ETHERC_EDMAC_EESR_RRF_Pos          (4UL)
 #define R_ETHERC_EDMAC_EESR_RRF_Msk          (0x10UL)
 #define R_ETHERC_EDMAC_EESR_RTLF_Pos         (3UL)
 #define R_ETHERC_EDMAC_EESR_RTLF_Msk         (0x8UL)
 #define R_ETHERC_EDMAC_EESR_RTSF_Pos         (2UL)
 #define R_ETHERC_EDMAC_EESR_RTSF_Msk         (0x4UL)
 #define R_ETHERC_EDMAC_EESR_PRE_Pos          (1UL)
 #define R_ETHERC_EDMAC_EESR_PRE_Msk          (0x2UL)
 #define R_ETHERC_EDMAC_EESR_CERF_Pos         (0UL)
 #define R_ETHERC_EDMAC_EESR_CERF_Msk         (0x1UL)
/* ========================================================  EESIPR  ========================================================= */
 #define R_ETHERC_EDMAC_EESIPR_TWBIP_Pos      (30UL)
 #define R_ETHERC_EDMAC_EESIPR_TWBIP_Msk      (0x40000000UL)
 #define R_ETHERC_EDMAC_EESIPR_TABTIP_Pos     (26UL)
 #define R_ETHERC_EDMAC_EESIPR_TABTIP_Msk     (0x4000000UL)
 #define R_ETHERC_EDMAC_EESIPR_RABTIP_Pos     (25UL)
 #define R_ETHERC_EDMAC_EESIPR_RABTIP_Msk     (0x2000000UL)
 #define R_ETHERC_EDMAC_EESIPR_RFCOFIP_Pos    (24UL)
 #define R_ETHERC_EDMAC_EESIPR_RFCOFIP_Msk    (0x1000000UL)
 #define R_ETHERC_EDMAC_EESIPR_ADEIP_Pos      (23UL)
 #define R_ETHERC_EDMAC_EESIPR_ADEIP_Msk      (0x800000UL)
 #define R_ETHERC_EDMAC_EESIPR_ECIIP_Pos      (22UL)
 #define R_ETHERC_EDMAC_EESIPR_ECIIP_Msk      (0x400000UL)
 #define R_ETHERC_EDMAC_EESIPR_TCIP_Pos       (21UL)
 #define R_ETHERC_EDMAC_EESIPR_TCIP_Msk       (0x200000UL)
 #define R_ETHERC_EDMAC_EESIPR_TDEIP_Pos      (20UL)
 #define R_ETHERC_EDMAC_EESIPR_TDEIP_Msk      (0x100000UL)
 #define R_ETHERC_EDMAC_EESIPR_TFUFIP_Pos     (19UL)
 #define R_ETHERC_EDMAC_EESIPR_TFUFIP_Msk     (0x80000UL)
 #define R_ETHERC_EDMAC_EESIPR_FRIP_Pos       (18UL)
 #define R_ETHERC_EDMAC_EESIPR_FRIP_Msk       (0x40000UL)
 #define R_ETHERC_EDMAC_EESIPR_RDEIP_Pos      (17UL)
 #define R_ETHERC_EDMAC_EESIPR_RDEIP_Msk      (0x20000UL)
 #define R_ETHERC_EDMAC_EESIPR_RFOFIP_Pos     (16UL)
 #define R_ETHERC_EDMAC_EESIPR_RFOFIP_Msk     (0x10000UL)
 #define R_ETHERC_EDMAC_EESIPR_CNDIP_Pos      (11UL)
 #define R_ETHERC_EDMAC_EESIPR_CNDIP_Msk      (0x800UL)
 #define R_ETHERC_EDMAC_EESIPR_DLCIP_Pos      (10UL)
 #define R_ETHERC_EDMAC_EESIPR_DLCIP_Msk      (0x400UL)
 #define R_ETHERC_EDMAC_EESIPR_CDIP_Pos       (9UL)
 #define R_ETHERC_EDMAC_EESIPR_CDIP_Msk       (0x200UL)
 #define R_ETHERC_EDMAC_EESIPR_TROIP_Pos      (8UL)
 #define R_ETHERC_EDMAC_EESIPR_TROIP_Msk      (0x100UL)
 #define R_ETHERC_EDMAC_EESIPR_RMAFIP_Pos     (7UL)
 #define R_ETHERC_EDMAC_EESIPR_RMAFIP_Msk     (0x80UL)
 #define R_ETHERC_EDMAC_EESIPR_RRFIP_Pos      (4UL)
 #define R_ETHERC_EDMAC_EESIPR_RRFIP_Msk      (0x10UL)
 #define R_ETHERC_EDMAC_EESIPR_RTLFIP_Pos     (3UL)
 #define R_ETHERC_EDMAC_EESIPR_RTLFIP_Msk     (0x8UL)
 #define R_ETHERC_EDMAC_EESIPR_RTSFIP_Pos     (2UL)
 #define R_ETHERC_EDMAC_EESIPR_RTSFIP_Msk     (0x4UL)
 #define R_ETHERC_EDMAC_EESIPR_PREIP_Pos      (1UL)
 #define R_ETHERC_EDMAC_EESIPR_PREIP_Msk      (0x2UL)
 #define R_ETHERC_EDMAC_EESIPR_CERFIP_Pos     (0UL)
 #define R_ETHERC_EDMAC_EESIPR_CERFIP_Msk     (0x1UL)
/* ========================================================  TRSCER  ========================================================= */
 #define R_ETHERC_EDMAC_TRSCER_RMAFCE_Pos     (7UL)
 #define R_ETHERC_EDMAC_TRSCER_RMAFCE_Msk     (0x80UL)
 #define R_ETHERC_EDMAC_TRSCER_RRFCE_Pos      (4UL)
 #define R_ETHERC_EDMAC_TRSCER_RRFCE_Msk      (0x10UL)
/* =========================================================  RMFCR  ========================================================= */
 #define R_ETHERC_EDMAC_RMFCR_MFC_Pos         (0UL)
 #define R_ETHERC_EDMAC_RMFCR_MFC_Msk         (0xffffUL)
/* =========================================================  TFTR  ========================================================== */
 #define R_ETHERC_EDMAC_TFTR_TFT_Pos          (0UL)
 #define R_ETHERC_EDMAC_TFTR_TFT_Msk          (0x7ffUL)
/* ==========================================================  FDR  ========================================================== */
 #define R_ETHERC_EDMAC_FDR_TFD_Pos           (8UL)
 #define R_ETHERC_EDMAC_FDR_TFD_Msk           (0x1f00UL)
 #define R_ETHERC_EDMAC_FDR_RFD_Pos           (0UL)
 #define R_ETHERC_EDMAC_FDR_RFD_Msk           (0x1fUL)
/* =========================================================  RMCR  ========================================================== */
 #define R_ETHERC_EDMAC_RMCR_RNR_Pos          (0UL)
 #define R_ETHERC_EDMAC_RMCR_RNR_Msk          (0x1UL)
/* =========================================================  TFUCR  ========================================================= */
 #define R_ETHERC_EDMAC_TFUCR_UNDER_Pos       (0UL)
 #define R_ETHERC_EDMAC_TFUCR_UNDER_Msk       (0xffffUL)
/* =========================================================  RFOCR  ========================================================= */
 #define R_ETHERC_EDMAC_RFOCR_OVER_Pos        (0UL)
 #define R_ETHERC_EDMAC_RFOCR_OVER_Msk        (0xffffUL)
/* =========================================================  IOSR  ========================================================== */
 #define R_ETHERC_EDMAC_IOSR_ELB_Pos          (0UL)
 #define R_ETHERC_EDMAC_IOSR_ELB_Msk          (0x1UL)
/* =========================================================  FCFTR  ========================================================= */
 #define R_ETHERC_EDMAC_FCFTR_RFFO_Pos        (16UL)
 #define R_ETHERC_EDMAC_FCFTR_RFFO_Msk        (0x70000UL)
 #define R_ETHERC_EDMAC_FCFTR_RFDO_Pos        (0UL)
 #define R_ETHERC_EDMAC_FCFTR_RFDO_Msk        (0x7UL)
/* ========================================================  RPADIR  ========================================================= */
 #define R_ETHERC_EDMAC_RPADIR_PADS_Pos       (16UL)
 #define R_ETHERC_EDMAC_RPADIR_PADS_Msk       (0x30000UL)
 #define R_ETHERC_EDMAC_RPADIR_PADR_Pos       (0UL)
 #define R_ETHERC_EDMAC_RPADIR_PADR_Msk       (0x3fUL)
/* =========================================================  TRIMD  ========================================================= */
 #define R_ETHERC_EDMAC_TRIMD_TIM_Pos         (4UL)
 #define R_ETHERC_EDMAC_TRIMD_TIM_Msk         (0x10UL)
 #define R_ETHERC_EDMAC_TRIMD_TIS_Pos         (0UL)
 #define R_ETHERC_EDMAC_TRIMD_TIS_Msk         (0x1UL)
/* =========================================================  RBWAR  ========================================================= */
 #define R_ETHERC_EDMAC_RBWAR_RBWAR_Pos       (0UL)
 #define R_ETHERC_EDMAC_RBWAR_RBWAR_Msk       (0xffffffffUL)
/* =========================================================  RDFAR  ========================================================= */
 #define R_ETHERC_EDMAC_RDFAR_RDFAR_Pos       (0UL)
 #define R_ETHERC_EDMAC_RDFAR_RDFAR_Msk       (0xffffffffUL)
/* =========================================================  TBRAR  ========================================================= */
 #define R_ETHERC_EDMAC_TBRAR_TBRAR_Pos       (0UL)
 #define R_ETHERC_EDMAC_TBRAR_TBRAR_Msk       (0xffffffffUL)
/* =========================================================  TDFAR  ========================================================= */
 #define R_ETHERC_EDMAC_TDFAR_TDFAR_Pos       (0UL)
 #define R_ETHERC_EDMAC_TDFAR_TDFAR_Msk       (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                       R_FACI_HP_CMD                                       ================ */
/* =========================================================================================================================== */

/* ======================================================  FACI_CMD16  ======================================================= */
/* =======================================================  FACI_CMD8  ======================================================= */

/* =========================================================================================================================== */
/* ================                                         R_FACI_HP                                         ================ */
/* =========================================================================================================================== */

/* ========================================================  FASTAT  ========================================================= */
 #define R_FACI_HP_FASTAT_CFAE_Pos         (7UL)
 #define R_FACI_HP_FASTAT_CFAE_Msk         (0x80UL)
 #define R_FACI_HP_FASTAT_CMDLK_Pos        (4UL)
 #define R_FACI_HP_FASTAT_CMDLK_Msk        (0x10UL)
 #define R_FACI_HP_FASTAT_DFAE_Pos         (3UL)
 #define R_FACI_HP_FASTAT_DFAE_Msk         (0x8UL)
/* ========================================================  FAEINT  ========================================================= */
 #define R_FACI_HP_FAEINT_CFAEIE_Pos       (7UL)
 #define R_FACI_HP_FAEINT_CFAEIE_Msk       (0x80UL)
 #define R_FACI_HP_FAEINT_CMDLKIE_Pos      (4UL)
 #define R_FACI_HP_FAEINT_CMDLKIE_Msk      (0x10UL)
 #define R_FACI_HP_FAEINT_DFAEIE_Pos       (3UL)
 #define R_FACI_HP_FAEINT_DFAEIE_Msk       (0x8UL)
/* ========================================================  FRDYIE  ========================================================= */
 #define R_FACI_HP_FRDYIE_FRDYIE_Pos       (0UL)
 #define R_FACI_HP_FRDYIE_FRDYIE_Msk       (0x1UL)
/* ========================================================  FSADDR  ========================================================= */
 #define R_FACI_HP_FSADDR_FSA_Pos          (0UL)
 #define R_FACI_HP_FSADDR_FSA_Msk          (0xffffffffUL)
/* ========================================================  FEADDR  ========================================================= */
 #define R_FACI_HP_FEADDR_FEA_Pos          (0UL)
 #define R_FACI_HP_FEADDR_FEA_Msk          (0xffffffffUL)
/* ========================================================  FMEPROT  ======================================================== */
 #define R_FACI_HP_FMEPROT_KEY_Pos         (8UL)
 #define R_FACI_HP_FMEPROT_KEY_Msk         (0xff00UL)
 #define R_FACI_HP_FMEPROT_CEPROT_Pos      (0UL)
 #define R_FACI_HP_FMEPROT_CEPROT_Msk      (0x1UL)
/* ========================================================  FBPROT0  ======================================================== */
 #define R_FACI_HP_FBPROT0_KEY_Pos         (8UL)
 #define R_FACI_HP_FBPROT0_KEY_Msk         (0xff00UL)
 #define R_FACI_HP_FBPROT0_BPCN0_Pos       (0UL)
 #define R_FACI_HP_FBPROT0_BPCN0_Msk       (0x1UL)
/* ========================================================  FBPROT1  ======================================================== */
 #define R_FACI_HP_FBPROT1_KEY_Pos         (8UL)
 #define R_FACI_HP_FBPROT1_KEY_Msk         (0xff00UL)
 #define R_FACI_HP_FBPROT1_BPCN1_Pos       (0UL)
 #define R_FACI_HP_FBPROT1_BPCN1_Msk       (0x1UL)
/* ========================================================  FSTATR  ========================================================= */
 #define R_FACI_HP_FSTATR_ILGCOMERR_Pos    (23UL)
 #define R_FACI_HP_FSTATR_ILGCOMERR_Msk    (0x800000UL)
 #define R_FACI_HP_FSTATR_FESETERR_Pos     (22UL)
 #define R_FACI_HP_FSTATR_FESETERR_Msk     (0x400000UL)
 #define R_FACI_HP_FSTATR_SECERR_Pos       (21UL)
 #define R_FACI_HP_FSTATR_SECERR_Msk       (0x200000UL)
 #define R_FACI_HP_FSTATR_OTERR_Pos        (20UL)
 #define R_FACI_HP_FSTATR_OTERR_Msk        (0x100000UL)
 #define R_FACI_HP_FSTATR_FRDY_Pos         (15UL)
 #define R_FACI_HP_FSTATR_FRDY_Msk         (0x8000UL)
 #define R_FACI_HP_FSTATR_ILGLERR_Pos      (14UL)
 #define R_FACI_HP_FSTATR_ILGLERR_Msk      (0x4000UL)
 #define R_FACI_HP_FSTATR_ERSERR_Pos       (13UL)
 #define R_FACI_HP_FSTATR_ERSERR_Msk       (0x2000UL)
 #define R_FACI_HP_FSTATR_PRGERR_Pos       (12UL)
 #define R_FACI_HP_FSTATR_PRGERR_Msk       (0x1000UL)
 #define R_FACI_HP_FSTATR_SUSRDY_Pos       (11UL)
 #define R_FACI_HP_FSTATR_SUSRDY_Msk       (0x800UL)
 #define R_FACI_HP_FSTATR_DBFULL_Pos       (10UL)
 #define R_FACI_HP_FSTATR_DBFULL_Msk       (0x400UL)
 #define R_FACI_HP_FSTATR_ERSSPD_Pos       (9UL)
 #define R_FACI_HP_FSTATR_ERSSPD_Msk       (0x200UL)
 #define R_FACI_HP_FSTATR_PRGSPD_Pos       (8UL)
 #define R_FACI_HP_FSTATR_PRGSPD_Msk       (0x100UL)
 #define R_FACI_HP_FSTATR_FLWEERR_Pos      (6UL)
 #define R_FACI_HP_FSTATR_FLWEERR_Msk      (0x40UL)
/* ========================================================  FENTRYR  ======================================================== */
 #define R_FACI_HP_FENTRYR_KEY_Pos         (8UL)
 #define R_FACI_HP_FENTRYR_KEY_Msk         (0xff00UL)
 #define R_FACI_HP_FENTRYR_FENTRYD_Pos     (7UL)
 #define R_FACI_HP_FENTRYR_FENTRYD_Msk     (0x80UL)
 #define R_FACI_HP_FENTRYR_FENTRYC_Pos     (0UL)
 #define R_FACI_HP_FENTRYR_FENTRYC_Msk     (0x1UL)
/* =======================================================  FSUINITR  ======================================================== */
 #define R_FACI_HP_FSUINITR_KEY_Pos        (8UL)
 #define R_FACI_HP_FSUINITR_KEY_Msk        (0xff00UL)
 #define R_FACI_HP_FSUINITR_SUINIT_Pos     (0UL)
 #define R_FACI_HP_FSUINITR_SUINIT_Msk     (0x1UL)
/* =========================================================  FCMDR  ========================================================= */
 #define R_FACI_HP_FCMDR_CMDR_Pos          (8UL)
 #define R_FACI_HP_FCMDR_CMDR_Msk          (0xff00UL)
 #define R_FACI_HP_FCMDR_PCMDR_Pos         (0UL)
 #define R_FACI_HP_FCMDR_PCMDR_Msk         (0xffUL)
/* ========================================================  FBCCNT  ========================================================= */
 #define R_FACI_HP_FBCCNT_BCDIR_Pos        (0UL)
 #define R_FACI_HP_FBCCNT_BCDIR_Msk        (0x1UL)
/* ========================================================  FBCSTAT  ======================================================== */
 #define R_FACI_HP_FBCSTAT_BCST_Pos        (0UL)
 #define R_FACI_HP_FBCSTAT_BCST_Msk        (0x1UL)
/* ========================================================  FPSADDR  ======================================================== */
 #define R_FACI_HP_FPSADDR_PSADR_Pos       (0UL)
 #define R_FACI_HP_FPSADDR_PSADR_Msk       (0x7ffffUL)
/* ========================================================  FAWMON  ========================================================= */
 #define R_FACI_HP_FAWMON_BTFLG_Pos        (31UL)
 #define R_FACI_HP_FAWMON_BTFLG_Msk        (0x80000000UL)
 #define R_FACI_HP_FAWMON_FAWE_Pos         (16UL)
 #define R_FACI_HP_FAWMON_FAWE_Msk         (0x7ff0000UL)
 #define R_FACI_HP_FAWMON_FSPR_Pos         (15UL)
 #define R_FACI_HP_FAWMON_FSPR_Msk         (0x8000UL)
 #define R_FACI_HP_FAWMON_FAWS_Pos         (0UL)
 #define R_FACI_HP_FAWMON_FAWS_Msk         (0x7ffUL)
/* =========================================================  FCPSR  ========================================================= */
 #define R_FACI_HP_FCPSR_ESUSPMD_Pos       (0UL)
 #define R_FACI_HP_FCPSR_ESUSPMD_Msk       (0x1UL)
/* ========================================================  FPCKAR  ========================================================= */
 #define R_FACI_HP_FPCKAR_KEY_Pos          (8UL)
 #define R_FACI_HP_FPCKAR_KEY_Msk          (0xff00UL)
 #define R_FACI_HP_FPCKAR_PCKA_Pos         (0UL)
 #define R_FACI_HP_FPCKAR_PCKA_Msk         (0xffUL)
/* ========================================================  FSUACR  ========================================================= */
 #define R_FACI_HP_FSUACR_KEY_Pos          (8UL)
 #define R_FACI_HP_FSUACR_KEY_Msk          (0xff00UL)
 #define R_FACI_HP_FSUACR_SAS_Pos          (0UL)
 #define R_FACI_HP_FSUACR_SAS_Msk          (0x3UL)

/* =========================================================================================================================== */
/* ================                                         R_FCACHE                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  FCACHEE  ======================================================== */
 #define R_FCACHE_FCACHEE_FCACHEEN_Pos     (0UL)
 #define R_FCACHE_FCACHEE_FCACHEEN_Msk     (0x1UL)
/* =======================================================  FCACHEIV  ======================================================== */
 #define R_FCACHE_FCACHEIV_FCACHEIV_Pos    (0UL)
 #define R_FCACHE_FCACHEIV_FCACHEIV_Msk    (0x1UL)
/* =========================================================  FLWT  ========================================================== */
 #define R_FCACHE_FLWT_FLWT_Pos            (0UL)
 #define R_FCACHE_FLWT_FLWT_Msk            (0x7UL)
/* =========================================================  FSAR  ========================================================== */
 #define R_FCACHE_FSAR_FLWTSA_Pos          (0UL)
 #define R_FCACHE_FSAR_FLWTSA_Msk          (0x1UL)
 #define R_FCACHE_FSAR_FCACHEENSA_Pos      (1UL)
 #define R_FCACHE_FSAR_FCACHEENSA_Msk      (0x2UL)
 #define R_FCACHE_FSAR_FCKMHZSA_Pos        (8UL)
 #define R_FCACHE_FSAR_FCKMHZSA_Msk        (0x100UL)
 #define R_FCACHE_FSAR_FACICOMISA_Pos      (9UL)
 #define R_FCACHE_FSAR_FACICOMISA_Msk      (0x200UL)
 #define R_FCACHE_FSAR_FACICOMRSA_Pos      (10UL)
 #define R_FCACHE_FSAR_FACICOMRSA_Msk      (0x400UL)
 #define R_FCACHE_FSAR_FACITRSA_Pos        (11UL)
 #define R_FCACHE_FSAR_FACITRSA_Msk        (0x800UL)

/* =========================================================================================================================== */
/* ================                                          R_GPT0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  GTWP  ========================================================== */
 #define R_GPT0_GTWP_PRKEY_Pos             (8UL)
 #define R_GPT0_GTWP_PRKEY_Msk             (0xff00UL)
 #define R_GPT0_GTWP_WP_Pos                (0UL)
 #define R_GPT0_GTWP_WP_Msk                (0x1UL)
 #define R_GPT0_GTWP_STRWP_Pos             (1UL)
 #define R_GPT0_GTWP_STRWP_Msk             (0x2UL)
 #define R_GPT0_GTWP_STPWP_Pos             (2UL)
 #define R_GPT0_GTWP_STPWP_Msk             (0x4UL)
 #define R_GPT0_GTWP_CLRWP_Pos             (3UL)
 #define R_GPT0_GTWP_CLRWP_Msk             (0x8UL)
 #define R_GPT0_GTWP_CMNWP_Pos             (4UL)
 #define R_GPT0_GTWP_CMNWP_Msk             (0x10UL)
/* =========================================================  GTSTR  ========================================================= */
 #define R_GPT0_GTSTR_CSTRT_Pos            (0UL)
 #define R_GPT0_GTSTR_CSTRT_Msk            (0x1UL)
/* =========================================================  GTSTP  ========================================================= */
 #define R_GPT0_GTSTP_CSTOP_Pos            (0UL)
 #define R_GPT0_GTSTP_CSTOP_Msk            (0x1UL)
/* =========================================================  GTCLR  ========================================================= */
 #define R_GPT0_GTCLR_CCLR_Pos             (0UL)
 #define R_GPT0_GTCLR_CCLR_Msk             (0x1UL)
/* =========================================================  GTSSR  ========================================================= */
 #define R_GPT0_GTSSR_CSTRT_Pos            (31UL)
 #define R_GPT0_GTSSR_CSTRT_Msk            (0x80000000UL)
 #define R_GPT0_GTSSR_SSELC_Pos            (16UL)
 #define R_GPT0_GTSSR_SSELC_Msk            (0x10000UL)
 #define R_GPT0_GTSSR_SSCBFAH_Pos          (15UL)
 #define R_GPT0_GTSSR_SSCBFAH_Msk          (0x8000UL)
 #define R_GPT0_GTSSR_SSCBFAL_Pos          (14UL)
 #define R_GPT0_GTSSR_SSCBFAL_Msk          (0x4000UL)
 #define R_GPT0_GTSSR_SSCBRAH_Pos          (13UL)
 #define R_GPT0_GTSSR_SSCBRAH_Msk          (0x2000UL)
 #define R_GPT0_GTSSR_SSCBRAL_Pos          (12UL)
 #define R_GPT0_GTSSR_SSCBRAL_Msk          (0x1000UL)
 #define R_GPT0_GTSSR_SSCAFBH_Pos          (11UL)
 #define R_GPT0_GTSSR_SSCAFBH_Msk          (0x800UL)
 #define R_GPT0_GTSSR_SSCAFBL_Pos          (10UL)
 #define R_GPT0_GTSSR_SSCAFBL_Msk          (0x400UL)
 #define R_GPT0_GTSSR_SSCARBH_Pos          (9UL)
 #define R_GPT0_GTSSR_SSCARBH_Msk          (0x200UL)
 #define R_GPT0_GTSSR_SSCARBL_Pos          (8UL)
 #define R_GPT0_GTSSR_SSCARBL_Msk          (0x100UL)
 #define R_GPT0_GTSSR_SSGTRGF_Pos          (1UL)
 #define R_GPT0_GTSSR_SSGTRGF_Msk          (0x2UL)
 #define R_GPT0_GTSSR_SSGTRGR_Pos          (0UL)
 #define R_GPT0_GTSSR_SSGTRGR_Msk          (0x1UL)
/* =========================================================  GTPSR  ========================================================= */
 #define R_GPT0_GTPSR_CSTOP_Pos            (31UL)
 #define R_GPT0_GTPSR_CSTOP_Msk            (0x80000000UL)
 #define R_GPT0_GTPSR_PSELC_Pos            (16UL)
 #define R_GPT0_GTPSR_PSELC_Msk            (0x10000UL)
 #define R_GPT0_GTPSR_PSCBFAH_Pos          (15UL)
 #define R_GPT0_GTPSR_PSCBFAH_Msk          (0x8000UL)
 #define R_GPT0_GTPSR_PSCBFAL_Pos          (14UL)
 #define R_GPT0_GTPSR_PSCBFAL_Msk          (0x4000UL)
 #define R_GPT0_GTPSR_PSCBRAH_Pos          (13UL)
 #define R_GPT0_GTPSR_PSCBRAH_Msk          (0x2000UL)
 #define R_GPT0_GTPSR_PSCBRAL_Pos          (12UL)
 #define R_GPT0_GTPSR_PSCBRAL_Msk          (0x1000UL)
 #define R_GPT0_GTPSR_PSCAFBH_Pos          (11UL)
 #define R_GPT0_GTPSR_PSCAFBH_Msk          (0x800UL)
 #define R_GPT0_GTPSR_PSCAFBL_Pos          (10UL)
 #define R_GPT0_GTPSR_PSCAFBL_Msk          (0x400UL)
 #define R_GPT0_GTPSR_PSCARBH_Pos          (9UL)
 #define R_GPT0_GTPSR_PSCARBH_Msk          (0x200UL)
 #define R_GPT0_GTPSR_PSCARBL_Pos          (8UL)
 #define R_GPT0_GTPSR_PSCARBL_Msk          (0x100UL)
 #define R_GPT0_GTPSR_PSGTRGF_Pos          (1UL)
 #define R_GPT0_GTPSR_PSGTRGF_Msk          (0x2UL)
 #define R_GPT0_GTPSR_PSGTRGR_Pos          (0UL)
 #define R_GPT0_GTPSR_PSGTRGR_Msk          (0x1UL)
/* =========================================================  GTCSR  ========================================================= */
 #define R_GPT0_GTCSR_CCLR_Pos             (31UL)
 #define R_GPT0_GTCSR_CCLR_Msk             (0x80000000UL)
 #define R_GPT0_GTCSR_CP1CCE_Pos           (27UL)
 #define R_GPT0_GTCSR_CP1CCE_Msk           (0x8000000UL)
 #define R_GPT0_GTCSR_CSCMSC_Pos           (24UL)
 #define R_GPT0_GTCSR_CSCMSC_Msk           (0x7000000UL)
 #define R_GPT0_GTCSR_CSELC_Pos            (16UL)
 #define R_GPT0_GTCSR_CSELC_Msk            (0x10000UL)
 #define R_GPT0_GTCSR_CSCBFAH_Pos          (15UL)
 #define R_GPT0_GTCSR_CSCBFAH_Msk          (0x8000UL)
 #define R_GPT0_GTCSR_CSCBFAL_Pos          (14UL)
 #define R_GPT0_GTCSR_CSCBFAL_Msk          (0x4000UL)
 #define R_GPT0_GTCSR_CSCBRAH_Pos          (13UL)
 #define R_GPT0_GTCSR_CSCBRAH_Msk          (0x2000UL)
 #define R_GPT0_GTCSR_CSCBRAL_Pos          (12UL)
 #define R_GPT0_GTCSR_CSCBRAL_Msk          (0x1000UL)
 #define R_GPT0_GTCSR_CSCAFBH_Pos          (11UL)
 #define R_GPT0_GTCSR_CSCAFBH_Msk          (0x800UL)
 #define R_GPT0_GTCSR_CSCAFBL_Pos          (10UL)
 #define R_GPT0_GTCSR_CSCAFBL_Msk          (0x400UL)
 #define R_GPT0_GTCSR_CSCARBH_Pos          (9UL)
 #define R_GPT0_GTCSR_CSCARBH_Msk          (0x200UL)
 #define R_GPT0_GTCSR_CSCARBL_Pos          (8UL)
 #define R_GPT0_GTCSR_CSCARBL_Msk          (0x100UL)
 #define R_GPT0_GTCSR_CSGTRGF_Pos          (1UL)
 #define R_GPT0_GTCSR_CSGTRGF_Msk          (0x2UL)
 #define R_GPT0_GTCSR_CSGTRGR_Pos          (0UL)
 #define R_GPT0_GTCSR_CSGTRGR_Msk          (0x1UL)
/* ========================================================  GTUPSR  ========================================================= */
 #define R_GPT0_GTUPSR_USILVL_Pos          (24UL)
 #define R_GPT0_GTUPSR_USILVL_Msk          (0xf000000UL)
 #define R_GPT0_GTUPSR_USELC_Pos           (16UL)
 #define R_GPT0_GTUPSR_USELC_Msk           (0x10000UL)
 #define R_GPT0_GTUPSR_USCBFAH_Pos         (15UL)
 #define R_GPT0_GTUPSR_USCBFAH_Msk         (0x8000UL)
 #define R_GPT0_GTUPSR_USCBFAL_Pos         (14UL)
 #define R_GPT0_GTUPSR_USCBFAL_Msk         (0x4000UL)
 #define R_GPT0_GTUPSR_USCBRAH_Pos         (13UL)
 #define R_GPT0_GTUPSR_USCBRAH_Msk         (0x2000UL)
 #define R_GPT0_GTUPSR_USCBRAL_Pos         (12UL)
 #define R_GPT0_GTUPSR_USCBRAL_Msk         (0x1000UL)
 #define R_GPT0_GTUPSR_USCAFBH_Pos         (11UL)
 #define R_GPT0_GTUPSR_USCAFBH_Msk         (0x800UL)
 #define R_GPT0_GTUPSR_USCAFBL_Pos         (10UL)
 #define R_GPT0_GTUPSR_USCAFBL_Msk         (0x400UL)
 #define R_GPT0_GTUPSR_USCARBH_Pos         (9UL)
 #define R_GPT0_GTUPSR_USCARBH_Msk         (0x200UL)
 #define R_GPT0_GTUPSR_USCARBL_Pos         (8UL)
 #define R_GPT0_GTUPSR_USCARBL_Msk         (0x100UL)
 #define R_GPT0_GTUPSR_USGTRGF_Pos         (1UL)
 #define R_GPT0_GTUPSR_USGTRGF_Msk         (0x2UL)
 #define R_GPT0_GTUPSR_USGTRGR_Pos         (0UL)
 #define R_GPT0_GTUPSR_USGTRGR_Msk         (0x1UL)
/* ========================================================  GTDNSR  ========================================================= */
 #define R_GPT0_GTDNSR_DSILVL_Pos          (24UL)
 #define R_GPT0_GTDNSR_DSILVL_Msk          (0xf000000UL)
 #define R_GPT0_GTDNSR_DSELC_Pos           (16UL)
 #define R_GPT0_GTDNSR_DSELC_Msk           (0x10000UL)
 #define R_GPT0_GTDNSR_DSCBFAH_Pos         (15UL)
 #define R_GPT0_GTDNSR_DSCBFAH_Msk         (0x8000UL)
 #define R_GPT0_GTDNSR_DSCBFAL_Pos         (14UL)
 #define R_GPT0_GTDNSR_DSCBFAL_Msk         (0x4000UL)
 #define R_GPT0_GTDNSR_DSCBRAH_Pos         (13UL)
 #define R_GPT0_GTDNSR_DSCBRAH_Msk         (0x2000UL)
 #define R_GPT0_GTDNSR_DSCBRAL_Pos         (12UL)
 #define R_GPT0_GTDNSR_DSCBRAL_Msk         (0x1000UL)
 #define R_GPT0_GTDNSR_DSCAFBH_Pos         (11UL)
 #define R_GPT0_GTDNSR_DSCAFBH_Msk         (0x800UL)
 #define R_GPT0_GTDNSR_DSCAFBL_Pos         (10UL)
 #define R_GPT0_GTDNSR_DSCAFBL_Msk         (0x400UL)
 #define R_GPT0_GTDNSR_DSCARBH_Pos         (9UL)
 #define R_GPT0_GTDNSR_DSCARBH_Msk         (0x200UL)
 #define R_GPT0_GTDNSR_DSCARBL_Pos         (8UL)
 #define R_GPT0_GTDNSR_DSCARBL_Msk         (0x100UL)
 #define R_GPT0_GTDNSR_DSGTRGF_Pos         (1UL)
 #define R_GPT0_GTDNSR_DSGTRGF_Msk         (0x2UL)
 #define R_GPT0_GTDNSR_DSGTRGR_Pos         (0UL)
 #define R_GPT0_GTDNSR_DSGTRGR_Msk         (0x1UL)
/* ========================================================  GTICASR  ======================================================== */
 #define R_GPT0_GTICASR_ASELC_Pos          (16UL)
 #define R_GPT0_GTICASR_ASELC_Msk          (0x10000UL)
 #define R_GPT0_GTICASR_ASCBFAH_Pos        (15UL)
 #define R_GPT0_GTICASR_ASCBFAH_Msk        (0x8000UL)
 #define R_GPT0_GTICASR_ASCBFAL_Pos        (14UL)
 #define R_GPT0_GTICASR_ASCBFAL_Msk        (0x4000UL)
 #define R_GPT0_GTICASR_ASCBRAH_Pos        (13UL)
 #define R_GPT0_GTICASR_ASCBRAH_Msk        (0x2000UL)
 #define R_GPT0_GTICASR_ASCBRAL_Pos        (12UL)
 #define R_GPT0_GTICASR_ASCBRAL_Msk        (0x1000UL)
 #define R_GPT0_GTICASR_ASCAFBH_Pos        (11UL)
 #define R_GPT0_GTICASR_ASCAFBH_Msk        (0x800UL)
 #define R_GPT0_GTICASR_ASCAFBL_Pos        (10UL)
 #define R_GPT0_GTICASR_ASCAFBL_Msk        (0x400UL)
 #define R_GPT0_GTICASR_ASCARBH_Pos        (9UL)
 #define R_GPT0_GTICASR_ASCARBH_Msk        (0x200UL)
 #define R_GPT0_GTICASR_ASCARBL_Pos        (8UL)
 #define R_GPT0_GTICASR_ASCARBL_Msk        (0x100UL)
 #define R_GPT0_GTICASR_ASGTRGF_Pos        (1UL)
 #define R_GPT0_GTICASR_ASGTRGF_Msk        (0x2UL)
 #define R_GPT0_GTICASR_ASGTRGR_Pos        (0UL)
 #define R_GPT0_GTICASR_ASGTRGR_Msk        (0x1UL)
/* ========================================================  GTICBSR  ======================================================== */
 #define R_GPT0_GTICBSR_BSELC_Pos          (16UL)
 #define R_GPT0_GTICBSR_BSELC_Msk          (0x10000UL)
 #define R_GPT0_GTICBSR_BSCBFAH_Pos        (15UL)
 #define R_GPT0_GTICBSR_BSCBFAH_Msk        (0x8000UL)
 #define R_GPT0_GTICBSR_BSCBFAL_Pos        (14UL)
 #define R_GPT0_GTICBSR_BSCBFAL_Msk        (0x4000UL)
 #define R_GPT0_GTICBSR_BSCBRAH_Pos        (13UL)
 #define R_GPT0_GTICBSR_BSCBRAH_Msk        (0x2000UL)
 #define R_GPT0_GTICBSR_BSCBRAL_Pos        (12UL)
 #define R_GPT0_GTICBSR_BSCBRAL_Msk        (0x1000UL)
 #define R_GPT0_GTICBSR_BSCAFBH_Pos        (11UL)
 #define R_GPT0_GTICBSR_BSCAFBH_Msk        (0x800UL)
 #define R_GPT0_GTICBSR_BSCAFBL_Pos        (10UL)
 #define R_GPT0_GTICBSR_BSCAFBL_Msk        (0x400UL)
 #define R_GPT0_GTICBSR_BSCARBH_Pos        (9UL)
 #define R_GPT0_GTICBSR_BSCARBH_Msk        (0x200UL)
 #define R_GPT0_GTICBSR_BSCARBL_Pos        (8UL)
 #define R_GPT0_GTICBSR_BSCARBL_Msk        (0x100UL)
 #define R_GPT0_GTICBSR_BSGTRGF_Pos        (1UL)
 #define R_GPT0_GTICBSR_BSGTRGF_Msk        (0x2UL)
 #define R_GPT0_GTICBSR_BSGTRGR_Pos        (0UL)
 #define R_GPT0_GTICBSR_BSGTRGR_Msk        (0x1UL)
/* =========================================================  GTCR  ========================================================== */
 #define R_GPT0_GTCR_CKEG_Pos              (27UL)
 #define R_GPT0_GTCR_CKEG_Msk              (0x18000000UL)
 #define R_GPT0_GTCR_TPCS_Pos              (23UL)
 #define R_GPT0_GTCR_TPCS_Msk              (0x7800000UL)
 #define R_GPT0_GTCR_MD_Pos                (16UL)
 #define R_GPT0_GTCR_MD_Msk                (0xf0000UL)
 #define R_GPT0_GTCR_SSCEN_Pos             (15UL)
 #define R_GPT0_GTCR_SSCEN_Msk             (0x8000UL)
 #define R_GPT0_GTCR_CPSCD_Pos             (12UL)
 #define R_GPT0_GTCR_CPSCD_Msk             (0x1000UL)
 #define R_GPT0_GTCR_SSCGRP_Pos            (10UL)
 #define R_GPT0_GTCR_SSCGRP_Msk            (0xc00UL)
 #define R_GPT0_GTCR_SCGTIOC_Pos           (9UL)
 #define R_GPT0_GTCR_SCGTIOC_Msk           (0x200UL)
 #define R_GPT0_GTCR_ICDS_Pos              (8UL)
 #define R_GPT0_GTCR_ICDS_Msk              (0x100UL)
 #define R_GPT0_GTCR_CST_Pos               (0UL)
 #define R_GPT0_GTCR_CST_Msk               (0x1UL)
/* =======================================================  GTUDDTYC  ======================================================== */
 #define R_GPT0_GTUDDTYC_OBDTYR_Pos        (27UL)
 #define R_GPT0_GTUDDTYC_OBDTYR_Msk        (0x8000000UL)
 #define R_GPT0_GTUDDTYC_OBDTYF_Pos        (26UL)
 #define R_GPT0_GTUDDTYC_OBDTYF_Msk        (0x4000000UL)
 #define R_GPT0_GTUDDTYC_OBDTY_Pos         (24UL)
 #define R_GPT0_GTUDDTYC_OBDTY_Msk         (0x3000000UL)
 #define R_GPT0_GTUDDTYC_OADTYR_Pos        (19UL)
 #define R_GPT0_GTUDDTYC_OADTYR_Msk        (0x80000UL)
 #define R_GPT0_GTUDDTYC_OADTYF_Pos        (18UL)
 #define R_GPT0_GTUDDTYC_OADTYF_Msk        (0x40000UL)
 #define R_GPT0_GTUDDTYC_OADTY_Pos         (16UL)
 #define R_GPT0_GTUDDTYC_OADTY_Msk         (0x30000UL)
 #define R_GPT0_GTUDDTYC_UDF_Pos           (1UL)
 #define R_GPT0_GTUDDTYC_UDF_Msk           (0x2UL)
 #define R_GPT0_GTUDDTYC_UD_Pos            (0UL)
 #define R_GPT0_GTUDDTYC_UD_Msk            (0x1UL)
/* =========================================================  GTIOR  ========================================================= */
 #define R_GPT0_GTIOR_NFCSB_Pos            (30UL)
 #define R_GPT0_GTIOR_NFCSB_Msk            (0xc0000000UL)
 #define R_GPT0_GTIOR_NFBEN_Pos            (29UL)
 #define R_GPT0_GTIOR_NFBEN_Msk            (0x20000000UL)
 #define R_GPT0_GTIOR_OBEOCD_Pos           (27UL)
 #define R_GPT0_GTIOR_OBEOCD_Msk           (0x8000000UL)
 #define R_GPT0_GTIOR_OBDF_Pos             (25UL)
 #define R_GPT0_GTIOR_OBDF_Msk             (0x6000000UL)
 #define R_GPT0_GTIOR_OBE_Pos              (24UL)
 #define R_GPT0_GTIOR_OBE_Msk              (0x1000000UL)
 #define R_GPT0_GTIOR_OBHLD_Pos            (23UL)
 #define R_GPT0_GTIOR_OBHLD_Msk            (0x800000UL)
 #define R_GPT0_GTIOR_OBDFLT_Pos           (22UL)
 #define R_GPT0_GTIOR_OBDFLT_Msk           (0x400000UL)
 #define R_GPT0_GTIOR_GTIOB_Pos            (16UL)
 #define R_GPT0_GTIOR_GTIOB_Msk            (0x1f0000UL)
 #define R_GPT0_GTIOR_NFCSA_Pos            (14UL)
 #define R_GPT0_GTIOR_NFCSA_Msk            (0xc000UL)
 #define R_GPT0_GTIOR_NFAEN_Pos            (13UL)
 #define R_GPT0_GTIOR_NFAEN_Msk            (0x2000UL)
 #define R_GPT0_GTIOR_PSYE_Pos             (12UL)
 #define R_GPT0_GTIOR_PSYE_Msk             (0x1000UL)
 #define R_GPT0_GTIOR_OAEOCD_Pos           (11UL)
 #define R_GPT0_GTIOR_OAEOCD_Msk           (0x800UL)
 #define R_GPT0_GTIOR_OADF_Pos             (9UL)
 #define R_GPT0_GTIOR_OADF_Msk             (0x600UL)
 #define R_GPT0_GTIOR_OAE_Pos              (8UL)
 #define R_GPT0_GTIOR_OAE_Msk              (0x100UL)
 #define R_GPT0_GTIOR_OAHLD_Pos            (7UL)
 #define R_GPT0_GTIOR_OAHLD_Msk            (0x80UL)
 #define R_GPT0_GTIOR_OADFLT_Pos           (6UL)
 #define R_GPT0_GTIOR_OADFLT_Msk           (0x40UL)
 #define R_GPT0_GTIOR_CPSCIR_Pos           (5UL)
 #define R_GPT0_GTIOR_CPSCIR_Msk           (0x20UL)
 #define R_GPT0_GTIOR_GTIOA_Pos            (0UL)
 #define R_GPT0_GTIOR_GTIOA_Msk            (0x1fUL)
/* ========================================================  GTINTAD  ======================================================== */
 #define R_GPT0_GTINTAD_GTINTPC_Pos        (31UL)
 #define R_GPT0_GTINTAD_GTINTPC_Msk        (0x80000000UL)
 #define R_GPT0_GTINTAD_GRPABL_Pos         (30UL)
 #define R_GPT0_GTINTAD_GRPABL_Msk         (0x40000000UL)
 #define R_GPT0_GTINTAD_GRPABH_Pos         (29UL)
 #define R_GPT0_GTINTAD_GRPABH_Msk         (0x20000000UL)
 #define R_GPT0_GTINTAD_GRPDTE_Pos         (28UL)
 #define R_GPT0_GTINTAD_GRPDTE_Msk         (0x10000000UL)
 #define R_GPT0_GTINTAD_GRP_Pos            (24UL)
 #define R_GPT0_GTINTAD_GRP_Msk            (0x3000000UL)
 #define R_GPT0_GTINTAD_ADTRDEN_Pos        (17UL)
 #define R_GPT0_GTINTAD_ADTRDEN_Msk        (0x20000UL)
 #define R_GPT0_GTINTAD_ADTRUEN_Pos        (16UL)
 #define R_GPT0_GTINTAD_ADTRUEN_Msk        (0x10000UL)
 #define R_GPT0_GTINTAD_SCFPU_Pos          (15UL)
 #define R_GPT0_GTINTAD_SCFPU_Msk          (0x8000UL)
 #define R_GPT0_GTINTAD_SCFPO_Pos          (14UL)
 #define R_GPT0_GTINTAD_SCFPO_Msk          (0x4000UL)
 #define R_GPT0_GTINTAD_SCF_Pos            (8UL)
 #define R_GPT0_GTINTAD_SCF_Msk            (0x100UL)
/* =========================================================  GTST  ========================================================== */
 #define R_GPT0_GTST_OABLF_Pos             (30UL)
 #define R_GPT0_GTST_OABLF_Msk             (0x40000000UL)
 #define R_GPT0_GTST_OABHF_Pos             (29UL)
 #define R_GPT0_GTST_OABHF_Msk             (0x20000000UL)
 #define R_GPT0_GTST_DTEF_Pos              (28UL)
 #define R_GPT0_GTST_DTEF_Msk              (0x10000000UL)
 #define R_GPT0_GTST_ODF_Pos               (24UL)
 #define R_GPT0_GTST_ODF_Msk               (0x1000000UL)
 #define R_GPT0_GTST_ADTRBDF_Pos           (19UL)
 #define R_GPT0_GTST_ADTRBDF_Msk           (0x80000UL)
 #define R_GPT0_GTST_ADTRBUF_Pos           (18UL)
 #define R_GPT0_GTST_ADTRBUF_Msk           (0x40000UL)
 #define R_GPT0_GTST_ADTRADF_Pos           (17UL)
 #define R_GPT0_GTST_ADTRADF_Msk           (0x20000UL)
 #define R_GPT0_GTST_ADTRAUF_Pos           (16UL)
 #define R_GPT0_GTST_ADTRAUF_Msk           (0x10000UL)
 #define R_GPT0_GTST_TUCF_Pos              (15UL)
 #define R_GPT0_GTST_TUCF_Msk              (0x8000UL)
 #define R_GPT0_GTST_ITCNT_Pos             (8UL)
 #define R_GPT0_GTST_ITCNT_Msk             (0x700UL)
 #define R_GPT0_GTST_TCFPU_Pos             (7UL)
 #define R_GPT0_GTST_TCFPU_Msk             (0x80UL)
 #define R_GPT0_GTST_TCFPO_Pos             (6UL)
 #define R_GPT0_GTST_TCFPO_Msk             (0x40UL)
 #define R_GPT0_GTST_TCFF_Pos              (5UL)
 #define R_GPT0_GTST_TCFF_Msk              (0x20UL)
 #define R_GPT0_GTST_TCFE_Pos              (4UL)
 #define R_GPT0_GTST_TCFE_Msk              (0x10UL)
 #define R_GPT0_GTST_TCFD_Pos              (3UL)
 #define R_GPT0_GTST_TCFD_Msk              (0x8UL)
 #define R_GPT0_GTST_TCFC_Pos              (2UL)
 #define R_GPT0_GTST_TCFC_Msk              (0x4UL)
 #define R_GPT0_GTST_TCFB_Pos              (1UL)
 #define R_GPT0_GTST_TCFB_Msk              (0x2UL)
 #define R_GPT0_GTST_TCFA_Pos              (0UL)
 #define R_GPT0_GTST_TCFA_Msk              (0x1UL)
 #define R_GPT0_GTST_PCF_Pos               (31UL)
 #define R_GPT0_GTST_PCF_Msk               (0x80000000UL)
/* =========================================================  GTBER  ========================================================= */
 #define R_GPT0_GTBER_ADTDB_Pos            (30UL)
 #define R_GPT0_GTBER_ADTDB_Msk            (0x40000000UL)
 #define R_GPT0_GTBER_ADTTB_Pos            (28UL)
 #define R_GPT0_GTBER_ADTTB_Msk            (0x30000000UL)
 #define R_GPT0_GTBER_ADTDA_Pos            (26UL)
 #define R_GPT0_GTBER_ADTDA_Msk            (0x4000000UL)
 #define R_GPT0_GTBER_ADTTA_Pos            (24UL)
 #define R_GPT0_GTBER_ADTTA_Msk            (0x3000000UL)
 #define R_GPT0_GTBER_CCRSWT_Pos           (22UL)
 #define R_GPT0_GTBER_CCRSWT_Msk           (0x400000UL)
 #define R_GPT0_GTBER_PR_Pos               (20UL)
 #define R_GPT0_GTBER_PR_Msk               (0x300000UL)
 #define R_GPT0_GTBER_CCRB_Pos             (18UL)
 #define R_GPT0_GTBER_CCRB_Msk             (0xc0000UL)
 #define R_GPT0_GTBER_CCRA_Pos             (16UL)
 #define R_GPT0_GTBER_CCRA_Msk             (0x30000UL)
 #define R_GPT0_GTBER_DBRTEC_Pos           (8UL)
 #define R_GPT0_GTBER_DBRTEC_Msk           (0x100UL)
 #define R_GPT0_GTBER_BD3_Pos              (3UL)
 #define R_GPT0_GTBER_BD3_Msk              (0x8UL)
 #define R_GPT0_GTBER_BD2_Pos              (2UL)
 #define R_GPT0_GTBER_BD2_Msk              (0x4UL)
 #define R_GPT0_GTBER_BD1_Pos              (1UL)
 #define R_GPT0_GTBER_BD1_Msk              (0x2UL)
 #define R_GPT0_GTBER_BD0_Pos              (0UL)
 #define R_GPT0_GTBER_BD0_Msk              (0x1UL)
/* =========================================================  GTITC  ========================================================= */
 #define R_GPT0_GTITC_ADTBL_Pos            (14UL)
 #define R_GPT0_GTITC_ADTBL_Msk            (0x4000UL)
 #define R_GPT0_GTITC_ADTAL_Pos            (12UL)
 #define R_GPT0_GTITC_ADTAL_Msk            (0x1000UL)
 #define R_GPT0_GTITC_IVTT_Pos             (8UL)
 #define R_GPT0_GTITC_IVTT_Msk             (0x700UL)
 #define R_GPT0_GTITC_IVTC_Pos             (6UL)
 #define R_GPT0_GTITC_IVTC_Msk             (0xc0UL)
 #define R_GPT0_GTITC_ITLF_Pos             (5UL)
 #define R_GPT0_GTITC_ITLF_Msk             (0x20UL)
 #define R_GPT0_GTITC_ITLE_Pos             (4UL)
 #define R_GPT0_GTITC_ITLE_Msk             (0x10UL)
 #define R_GPT0_GTITC_ITLD_Pos             (3UL)
 #define R_GPT0_GTITC_ITLD_Msk             (0x8UL)
 #define R_GPT0_GTITC_ITLC_Pos             (2UL)
 #define R_GPT0_GTITC_ITLC_Msk             (0x4UL)
 #define R_GPT0_GTITC_ITLB_Pos             (1UL)
 #define R_GPT0_GTITC_ITLB_Msk             (0x2UL)
 #define R_GPT0_GTITC_ITLA_Pos             (0UL)
 #define R_GPT0_GTITC_ITLA_Msk             (0x1UL)
/* =========================================================  GTCNT  ========================================================= */
 #define R_GPT0_GTCNT_GTCNT_Pos            (0UL)
 #define R_GPT0_GTCNT_GTCNT_Msk            (0xffffffffUL)
/* =========================================================  GTCCR  ========================================================= */
 #define R_GPT0_GTCCR_GTCCR_Pos            (0UL)
 #define R_GPT0_GTCCR_GTCCR_Msk            (0xffffffffUL)
/* =========================================================  GTPR  ========================================================== */
 #define R_GPT0_GTPR_GTPR_Pos              (0UL)
 #define R_GPT0_GTPR_GTPR_Msk              (0xffffffffUL)
/* =========================================================  GTPBR  ========================================================= */
 #define R_GPT0_GTPBR_GTPBR_Pos            (0UL)
 #define R_GPT0_GTPBR_GTPBR_Msk            (0xffffffffUL)
/* ========================================================  GTPDBR  ========================================================= */
 #define R_GPT0_GTPDBR_GTPDBR_Pos          (0UL)
 #define R_GPT0_GTPDBR_GTPDBR_Msk          (0xffffffffUL)
/* ========================================================  GTADTRA  ======================================================== */
 #define R_GPT0_GTADTRA_GTADTRA_Pos        (0UL)
 #define R_GPT0_GTADTRA_GTADTRA_Msk        (0xffffffffUL)
/* ========================================================  GTADTRB  ======================================================== */
 #define R_GPT0_GTADTRB_GTADTRB_Pos        (0UL)
 #define R_GPT0_GTADTRB_GTADTRB_Msk        (0xffffffffUL)
/* =======================================================  GTADTBRA  ======================================================== */
 #define R_GPT0_GTADTBRA_GTADTBRA_Pos      (0UL)
 #define R_GPT0_GTADTBRA_GTADTBRA_Msk      (0xffffffffUL)
/* =======================================================  GTADTBRB  ======================================================== */
 #define R_GPT0_GTADTBRB_GTADTBRB_Pos      (0UL)
 #define R_GPT0_GTADTBRB_GTADTBRB_Msk      (0xffffffffUL)
/* =======================================================  GTADTDBRA  ======================================================= */
 #define R_GPT0_GTADTDBRA_GTADTDBRA_Pos    (0UL)
 #define R_GPT0_GTADTDBRA_GTADTDBRA_Msk    (0xffffffffUL)
/* =======================================================  GTADTDBRB  ======================================================= */
 #define R_GPT0_GTADTDBRB_GTADTDBRB_Pos    (0UL)
 #define R_GPT0_GTADTDBRB_GTADTDBRB_Msk    (0xffffffffUL)
/* ========================================================  GTDTCR  ========================================================= */
 #define R_GPT0_GTDTCR_TDFER_Pos           (8UL)
 #define R_GPT0_GTDTCR_TDFER_Msk           (0x100UL)
 #define R_GPT0_GTDTCR_TDBDE_Pos           (5UL)
 #define R_GPT0_GTDTCR_TDBDE_Msk           (0x20UL)
 #define R_GPT0_GTDTCR_TDBUE_Pos           (4UL)
 #define R_GPT0_GTDTCR_TDBUE_Msk           (0x10UL)
 #define R_GPT0_GTDTCR_TDE_Pos             (0UL)
 #define R_GPT0_GTDTCR_TDE_Msk             (0x1UL)
/* =========================================================  GTDVU  ========================================================= */
 #define R_GPT0_GTDVU_GTDVU_Pos            (0UL)
 #define R_GPT0_GTDVU_GTDVU_Msk            (0xffffffffUL)
/* =========================================================  GTDVD  ========================================================= */
 #define R_GPT0_GTDVD_GTDVD_Pos            (0UL)
 #define R_GPT0_GTDVD_GTDVD_Msk            (0xffffffffUL)
/* =========================================================  GTDBU  ========================================================= */
 #define R_GPT0_GTDBU_GTDVU_Pos            (0UL)
 #define R_GPT0_GTDBU_GTDVU_Msk            (0xffffffffUL)
/* =========================================================  GTDBD  ========================================================= */
 #define R_GPT0_GTDBD_GTDBD_Pos            (0UL)
 #define R_GPT0_GTDBD_GTDBD_Msk            (0xffffffffUL)
/* =========================================================  GTSOS  ========================================================= */
 #define R_GPT0_GTSOS_SOS_Pos              (0UL)
 #define R_GPT0_GTSOS_SOS_Msk              (0x3UL)
/* ========================================================  GTSOTR  ========================================================= */
 #define R_GPT0_GTSOTR_SOTR_Pos            (0UL)
 #define R_GPT0_GTSOTR_SOTR_Msk            (0x1UL)
/* ========================================================  GTADSMR  ======================================================== */
 #define R_GPT0_GTADSMR_ADSMS0_Pos         (0UL)
 #define R_GPT0_GTADSMR_ADSMS0_Msk         (0x3UL)
 #define R_GPT0_GTADSMR_ADSMEN0_Pos        (8UL)
 #define R_GPT0_GTADSMR_ADSMEN0_Msk        (0x100UL)
 #define R_GPT0_GTADSMR_ADSMS1_Pos         (16UL)
 #define R_GPT0_GTADSMR_ADSMS1_Msk         (0x30000UL)
 #define R_GPT0_GTADSMR_ADSMEN1_Pos        (24UL)
 #define R_GPT0_GTADSMR_ADSMEN1_Msk        (0x1000000UL)
/* ========================================================  GTEITC  ========================================================= */
 #define R_GPT0_GTEITC_EIVTC1_Pos          (0UL)
 #define R_GPT0_GTEITC_EIVTC1_Msk          (0x3UL)
 #define R_GPT0_GTEITC_EIVTT1_Pos          (4UL)
 #define R_GPT0_GTEITC_EIVTT1_Msk          (0xf0UL)
 #define R_GPT0_GTEITC_EITCNT1_Pos         (12UL)
 #define R_GPT0_GTEITC_EITCNT1_Msk         (0xf000UL)
 #define R_GPT0_GTEITC_EIVTC2_Pos          (16UL)
 #define R_GPT0_GTEITC_EIVTC2_Msk          (0x30000UL)
 #define R_GPT0_GTEITC_EIVTT2_Pos          (20UL)
 #define R_GPT0_GTEITC_EIVTT2_Msk          (0xf00000UL)
 #define R_GPT0_GTEITC_EITCNT2IV_Pos       (24UL)
 #define R_GPT0_GTEITC_EITCNT2IV_Msk       (0xf000000UL)
 #define R_GPT0_GTEITC_EITCNT2_Pos         (28UL)
 #define R_GPT0_GTEITC_EITCNT2_Msk         (0xf0000000UL)
/* =======================================================  GTEITLI1  ======================================================== */
 #define R_GPT0_GTEITLI1_EITLA_Pos         (0UL)
 #define R_GPT0_GTEITLI1_EITLA_Msk         (0x7UL)
 #define R_GPT0_GTEITLI1_EITLB_Pos         (4UL)
 #define R_GPT0_GTEITLI1_EITLB_Msk         (0x70UL)
 #define R_GPT0_GTEITLI1_EITLC_Pos         (8UL)
 #define R_GPT0_GTEITLI1_EITLC_Msk         (0x700UL)
 #define R_GPT0_GTEITLI1_EITLD_Pos         (12UL)
 #define R_GPT0_GTEITLI1_EITLD_Msk         (0x7000UL)
 #define R_GPT0_GTEITLI1_EITLE_Pos         (16UL)
 #define R_GPT0_GTEITLI1_EITLE_Msk         (0x70000UL)
 #define R_GPT0_GTEITLI1_EITLF_Pos         (20UL)
 #define R_GPT0_GTEITLI1_EITLF_Msk         (0x700000UL)
 #define R_GPT0_GTEITLI1_EITLV_Pos         (24UL)
 #define R_GPT0_GTEITLI1_EITLV_Msk         (0x7000000UL)
 #define R_GPT0_GTEITLI1_EITLU_Pos         (28UL)
 #define R_GPT0_GTEITLI1_EITLU_Msk         (0x70000000UL)
/* =======================================================  GTEITLI2  ======================================================== */
 #define R_GPT0_GTEITLI2_EADTAL_Pos        (0UL)
 #define R_GPT0_GTEITLI2_EADTAL_Msk        (0x7UL)
 #define R_GPT0_GTEITLI2_EADTBL_Pos        (4UL)
 #define R_GPT0_GTEITLI2_EADTBL_Msk        (0x70UL)
/* ========================================================  GTEITLB  ======================================================== */
 #define R_GPT0_GTEITLB_EBTLCA_Pos         (0UL)
 #define R_GPT0_GTEITLB_EBTLCA_Msk         (0x7UL)
 #define R_GPT0_GTEITLB_EBTLCB_Pos         (4UL)
 #define R_GPT0_GTEITLB_EBTLCB_Msk         (0x70UL)
 #define R_GPT0_GTEITLB_EBTLPR_Pos         (8UL)
 #define R_GPT0_GTEITLB_EBTLPR_Msk         (0x700UL)
 #define R_GPT0_GTEITLB_EBTLADA_Pos        (16UL)
 #define R_GPT0_GTEITLB_EBTLADA_Msk        (0x70000UL)
 #define R_GPT0_GTEITLB_EBTLADB_Pos        (20UL)
 #define R_GPT0_GTEITLB_EBTLADB_Msk        (0x700000UL)
 #define R_GPT0_GTEITLB_EBTLDVU_Pos        (24UL)
 #define R_GPT0_GTEITLB_EBTLDVU_Msk        (0x7000000UL)
 #define R_GPT0_GTEITLB_EBTLDVD_Pos        (28UL)
 #define R_GPT0_GTEITLB_EBTLDVD_Msk        (0x70000000UL)
/* ========================================================  GTICLF  ========================================================= */
 #define R_GPT0_GTICLF_ICLFA_Pos           (0UL)
 #define R_GPT0_GTICLF_ICLFA_Msk           (0x7UL)
 #define R_GPT0_GTICLF_ICLFSELC_Pos        (4UL)
 #define R_GPT0_GTICLF_ICLFSELC_Msk        (0x3f0UL)
 #define R_GPT0_GTICLF_ICLFB_Pos           (16UL)
 #define R_GPT0_GTICLF_ICLFB_Msk           (0x70000UL)
 #define R_GPT0_GTICLF_ICLFSELD_Pos        (20UL)
 #define R_GPT0_GTICLF_ICLFSELD_Msk        (0x3f00000UL)
/* =========================================================  GTPC  ========================================================== */
 #define R_GPT0_GTPC_PCEN_Pos              (0UL)
 #define R_GPT0_GTPC_PCEN_Msk              (0x1UL)
 #define R_GPT0_GTPC_ASTP_Pos              (8UL)
 #define R_GPT0_GTPC_ASTP_Msk              (0x100UL)
 #define R_GPT0_GTPC_PCNT_Pos              (16UL)
 #define R_GPT0_GTPC_PCNT_Msk              (0xfff0000UL)
/* ========================================================  GTSECSR  ======================================================== */
 #define R_GPT0_GTSECSR_SECSEL0_Pos        (0UL)
 #define R_GPT0_GTSECSR_SECSEL0_Msk        (0x1UL)
 #define R_GPT0_GTSECSR_SECSEL1_Pos        (1UL)
 #define R_GPT0_GTSECSR_SECSEL1_Msk        (0x2UL)
 #define R_GPT0_GTSECSR_SECSEL2_Pos        (2UL)
 #define R_GPT0_GTSECSR_SECSEL2_Msk        (0x4UL)
 #define R_GPT0_GTSECSR_SECSEL3_Pos        (3UL)
 #define R_GPT0_GTSECSR_SECSEL3_Msk        (0x8UL)
 #define R_GPT0_GTSECSR_SECSEL4_Pos        (4UL)
 #define R_GPT0_GTSECSR_SECSEL4_Msk        (0x10UL)
 #define R_GPT0_GTSECSR_SECSEL5_Pos        (5UL)
 #define R_GPT0_GTSECSR_SECSEL5_Msk        (0x20UL)
 #define R_GPT0_GTSECSR_SECSEL6_Pos        (6UL)
 #define R_GPT0_GTSECSR_SECSEL6_Msk        (0x40UL)
 #define R_GPT0_GTSECSR_SECSEL7_Pos        (7UL)
 #define R_GPT0_GTSECSR_SECSEL7_Msk        (0x80UL)
 #define R_GPT0_GTSECSR_SECSEL8_Pos        (8UL)
 #define R_GPT0_GTSECSR_SECSEL8_Msk        (0x100UL)
 #define R_GPT0_GTSECSR_SECSEL9_Pos        (9UL)
 #define R_GPT0_GTSECSR_SECSEL9_Msk        (0x200UL)
/* ========================================================  GTSECR  ========================================================= */
 #define R_GPT0_GTSECR_SBDCE_Pos           (0UL)
 #define R_GPT0_GTSECR_SBDCE_Msk           (0x1UL)
 #define R_GPT0_GTSECR_SBDPE_Pos           (1UL)
 #define R_GPT0_GTSECR_SBDPE_Msk           (0x2UL)
 #define R_GPT0_GTSECR_SBDAE_Pos           (2UL)
 #define R_GPT0_GTSECR_SBDAE_Msk           (0x4UL)
 #define R_GPT0_GTSECR_SBDDE_Pos           (3UL)
 #define R_GPT0_GTSECR_SBDDE_Msk           (0x8UL)
 #define R_GPT0_GTSECR_SBDCD_Pos           (8UL)
 #define R_GPT0_GTSECR_SBDCD_Msk           (0x100UL)
 #define R_GPT0_GTSECR_SBDPD_Pos           (9UL)
 #define R_GPT0_GTSECR_SBDPD_Msk           (0x200UL)
 #define R_GPT0_GTSECR_SBDAD_Pos           (10UL)
 #define R_GPT0_GTSECR_SBDAD_Msk           (0x400UL)
 #define R_GPT0_GTSECR_SBDDD_Pos           (11UL)
 #define R_GPT0_GTSECR_SBDDD_Msk           (0x800UL)
 #define R_GPT0_GTSECR_SPCE_Pos            (16UL)
 #define R_GPT0_GTSECR_SPCE_Msk            (0x10000UL)
 #define R_GPT0_GTSECR_SSCE_Pos            (17UL)
 #define R_GPT0_GTSECR_SSCE_Msk            (0x20000UL)
 #define R_GPT0_GTSECR_SPCD_Pos            (24UL)
 #define R_GPT0_GTSECR_SPCD_Msk            (0x1000000UL)
 #define R_GPT0_GTSECR_SSCD_Pos            (25UL)
 #define R_GPT0_GTSECR_SSCD_Msk            (0x2000000UL)
/* ========================================================  GTBER2  ========================================================= */
 #define R_GPT0_GTBER2_CCTCA_Pos           (0UL)
 #define R_GPT0_GTBER2_CCTCA_Msk           (0x1UL)
 #define R_GPT0_GTBER2_CCTCB_Pos           (1UL)
 #define R_GPT0_GTBER2_CCTCB_Msk           (0x2UL)
 #define R_GPT0_GTBER2_CCTPR_Pos           (2UL)
 #define R_GPT0_GTBER2_CCTPR_Msk           (0x4UL)
 #define R_GPT0_GTBER2_CCTADA_Pos          (3UL)
 #define R_GPT0_GTBER2_CCTADA_Msk          (0x8UL)
 #define R_GPT0_GTBER2_CCTADB_Pos          (4UL)
 #define R_GPT0_GTBER2_CCTADB_Msk          (0x10UL)
 #define R_GPT0_GTBER2_CCTDV_Pos           (5UL)
 #define R_GPT0_GTBER2_CCTDV_Msk           (0x20UL)
 #define R_GPT0_GTBER2_CMTCA_Pos           (8UL)
 #define R_GPT0_GTBER2_CMTCA_Msk           (0x300UL)
 #define R_GPT0_GTBER2_CMTCB_Pos           (10UL)
 #define R_GPT0_GTBER2_CMTCB_Msk           (0xc00UL)
 #define R_GPT0_GTBER2_CMTADA_Pos          (13UL)
 #define R_GPT0_GTBER2_CMTADA_Msk          (0x2000UL)
 #define R_GPT0_GTBER2_CMTADB_Pos          (14UL)
 #define R_GPT0_GTBER2_CMTADB_Msk          (0x4000UL)
 #define R_GPT0_GTBER2_CPTCA_Pos           (16UL)
 #define R_GPT0_GTBER2_CPTCA_Msk           (0x10000UL)
 #define R_GPT0_GTBER2_CPTCB_Pos           (17UL)
 #define R_GPT0_GTBER2_CPTCB_Msk           (0x20000UL)
 #define R_GPT0_GTBER2_CPTPR_Pos           (18UL)
 #define R_GPT0_GTBER2_CPTPR_Msk           (0x40000UL)
 #define R_GPT0_GTBER2_CPTADA_Pos          (19UL)
 #define R_GPT0_GTBER2_CPTADA_Msk          (0x80000UL)
 #define R_GPT0_GTBER2_CPTADB_Pos          (20UL)
 #define R_GPT0_GTBER2_CPTADB_Msk          (0x100000UL)
 #define R_GPT0_GTBER2_CPTDV_Pos           (21UL)
 #define R_GPT0_GTBER2_CPTDV_Msk           (0x200000UL)
 #define R_GPT0_GTBER2_CP3DB_Pos           (24UL)
 #define R_GPT0_GTBER2_CP3DB_Msk           (0x1000000UL)
 #define R_GPT0_GTBER2_CPBTD_Pos           (25UL)
 #define R_GPT0_GTBER2_CPBTD_Msk           (0x2000000UL)
 #define R_GPT0_GTBER2_OLTTA_Pos           (26UL)
 #define R_GPT0_GTBER2_OLTTA_Msk           (0xc000000UL)
 #define R_GPT0_GTBER2_OLTTB_Pos           (28UL)
 #define R_GPT0_GTBER2_OLTTB_Msk           (0x30000000UL)
/* ========================================================  GTOLBR  ========================================================= */
 #define R_GPT0_GTOLBR_GTIOAB_Pos          (0UL)
 #define R_GPT0_GTOLBR_GTIOAB_Msk          (0x1fUL)
 #define R_GPT0_GTOLBR_GTIOBB_Pos          (16UL)
 #define R_GPT0_GTOLBR_GTIOBB_Msk          (0x1f0000UL)
/* ========================================================  GTICCR  ========================================================= */
 #define R_GPT0_GTICCR_ICAFA_Pos           (0UL)
 #define R_GPT0_GTICCR_ICAFA_Msk           (0x1UL)
 #define R_GPT0_GTICCR_ICAFB_Pos           (1UL)
 #define R_GPT0_GTICCR_ICAFB_Msk           (0x2UL)
 #define R_GPT0_GTICCR_ICAFC_Pos           (2UL)
 #define R_GPT0_GTICCR_ICAFC_Msk           (0x4UL)
 #define R_GPT0_GTICCR_ICAFD_Pos           (3UL)
 #define R_GPT0_GTICCR_ICAFD_Msk           (0x8UL)
 #define R_GPT0_GTICCR_ICAFE_Pos           (4UL)
 #define R_GPT0_GTICCR_ICAFE_Msk           (0x10UL)
 #define R_GPT0_GTICCR_ICAFF_Pos           (5UL)
 #define R_GPT0_GTICCR_ICAFF_Msk           (0x20UL)
 #define R_GPT0_GTICCR_ICAFPO_Pos          (6UL)
 #define R_GPT0_GTICCR_ICAFPO_Msk          (0x40UL)
 #define R_GPT0_GTICCR_ICAFPU_Pos          (7UL)
 #define R_GPT0_GTICCR_ICAFPU_Msk          (0x80UL)
 #define R_GPT0_GTICCR_ICACLK_Pos          (8UL)
 #define R_GPT0_GTICCR_ICACLK_Msk          (0x100UL)
 #define R_GPT0_GTICCR_ICAGRP_Pos          (14UL)
 #define R_GPT0_GTICCR_ICAGRP_Msk          (0xc000UL)
 #define R_GPT0_GTICCR_ICBFA_Pos           (16UL)
 #define R_GPT0_GTICCR_ICBFA_Msk           (0x10000UL)
 #define R_GPT0_GTICCR_ICBFB_Pos           (17UL)
 #define R_GPT0_GTICCR_ICBFB_Msk           (0x20000UL)
 #define R_GPT0_GTICCR_ICBFC_Pos           (18UL)
 #define R_GPT0_GTICCR_ICBFC_Msk           (0x40000UL)
 #define R_GPT0_GTICCR_ICBFD_Pos           (19UL)
 #define R_GPT0_GTICCR_ICBFD_Msk           (0x80000UL)
 #define R_GPT0_GTICCR_ICBFE_Pos           (20UL)
 #define R_GPT0_GTICCR_ICBFE_Msk           (0x100000UL)
 #define R_GPT0_GTICCR_ICBFF_Pos           (21UL)
 #define R_GPT0_GTICCR_ICBFF_Msk           (0x200000UL)
 #define R_GPT0_GTICCR_ICBFPO_Pos          (22UL)
 #define R_GPT0_GTICCR_ICBFPO_Msk          (0x400000UL)
 #define R_GPT0_GTICCR_ICBFPU_Pos          (23UL)
 #define R_GPT0_GTICCR_ICBFPU_Msk          (0x800000UL)
 #define R_GPT0_GTICCR_ICBCLK_Pos          (24UL)
 #define R_GPT0_GTICCR_ICBCLK_Msk          (0x1000000UL)
 #define R_GPT0_GTICCR_ICBGRP_Pos          (30UL)
 #define R_GPT0_GTICCR_ICBGRP_Msk          (0xc0000000UL)

/* =========================================================================================================================== */
/* ================                                         R_GPT_OPS                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  OPSCR  ========================================================= */
 #define R_GPT_OPS_OPSCR_NFCS_Pos     (30UL)
 #define R_GPT_OPS_OPSCR_NFCS_Msk     (0xc0000000UL)
 #define R_GPT_OPS_OPSCR_NFEN_Pos     (29UL)
 #define R_GPT_OPS_OPSCR_NFEN_Msk     (0x20000000UL)
 #define R_GPT_OPS_OPSCR_GODF_Pos     (26UL)
 #define R_GPT_OPS_OPSCR_GODF_Msk     (0x4000000UL)
 #define R_GPT_OPS_OPSCR_GRP_Pos      (24UL)
 #define R_GPT_OPS_OPSCR_GRP_Msk      (0x3000000UL)
 #define R_GPT_OPS_OPSCR_ALIGN_Pos    (21UL)
 #define R_GPT_OPS_OPSCR_ALIGN_Msk    (0x200000UL)
 #define R_GPT_OPS_OPSCR_RV_Pos       (20UL)
 #define R_GPT_OPS_OPSCR_RV_Msk       (0x100000UL)
 #define R_GPT_OPS_OPSCR_INV_Pos      (19UL)
 #define R_GPT_OPS_OPSCR_INV_Msk      (0x80000UL)
 #define R_GPT_OPS_OPSCR_N_Pos        (18UL)
 #define R_GPT_OPS_OPSCR_N_Msk        (0x40000UL)
 #define R_GPT_OPS_OPSCR_P_Pos        (17UL)
 #define R_GPT_OPS_OPSCR_P_Msk        (0x20000UL)
 #define R_GPT_OPS_OPSCR_FB_Pos       (16UL)
 #define R_GPT_OPS_OPSCR_FB_Msk       (0x10000UL)
 #define R_GPT_OPS_OPSCR_EN_Pos       (8UL)
 #define R_GPT_OPS_OPSCR_EN_Msk       (0x100UL)
 #define R_GPT_OPS_OPSCR_W_Pos        (6UL)
 #define R_GPT_OPS_OPSCR_W_Msk        (0x40UL)
 #define R_GPT_OPS_OPSCR_V_Pos        (5UL)
 #define R_GPT_OPS_OPSCR_V_Msk        (0x20UL)
 #define R_GPT_OPS_OPSCR_U_Pos        (4UL)
 #define R_GPT_OPS_OPSCR_U_Msk        (0x10UL)
 #define R_GPT_OPS_OPSCR_WF_Pos       (2UL)
 #define R_GPT_OPS_OPSCR_WF_Msk       (0x4UL)
 #define R_GPT_OPS_OPSCR_VF_Pos       (1UL)
 #define R_GPT_OPS_OPSCR_VF_Msk       (0x2UL)
 #define R_GPT_OPS_OPSCR_UF_Pos       (0UL)
 #define R_GPT_OPS_OPSCR_UF_Msk       (0x1UL)

/* =========================================================================================================================== */
/* ================                                        R_GPT_POEG0                                        ================ */
/* =========================================================================================================================== */

/* =========================================================  POEGG  ========================================================= */
 #define R_GPT_POEG0_POEGG_NFCS_Pos       (30UL)
 #define R_GPT_POEG0_POEGG_NFCS_Msk       (0xc0000000UL)
 #define R_GPT_POEG0_POEGG_NFEN_Pos       (29UL)
 #define R_GPT_POEG0_POEGG_NFEN_Msk       (0x20000000UL)
 #define R_GPT_POEG0_POEGG_INV_Pos        (28UL)
 #define R_GPT_POEG0_POEGG_INV_Msk        (0x10000000UL)
 #define R_GPT_POEG0_POEGG_DERRE_Pos      (26UL)
 #define R_GPT_POEG0_POEGG_DERRE_Msk      (0x4000000UL)
 #define R_GPT_POEG0_POEGG_DERRST_Pos     (24UL)
 #define R_GPT_POEG0_POEGG_DERRST_Msk     (0x1000000UL)
 #define R_GPT_POEG0_POEGG_ST_Pos         (16UL)
 #define R_GPT_POEG0_POEGG_ST_Msk         (0x10000UL)
 #define R_GPT_POEG0_POEGG_CDRE_Pos       (8UL)
 #define R_GPT_POEG0_POEGG_CDRE_Msk       (0x100UL)
 #define R_GPT_POEG0_POEGG_OSTPE_Pos      (6UL)
 #define R_GPT_POEG0_POEGG_OSTPE_Msk      (0x40UL)
 #define R_GPT_POEG0_POEGG_IOCE_Pos       (5UL)
 #define R_GPT_POEG0_POEGG_IOCE_Msk       (0x20UL)
 #define R_GPT_POEG0_POEGG_PIDE_Pos       (4UL)
 #define R_GPT_POEG0_POEGG_PIDE_Msk       (0x10UL)
 #define R_GPT_POEG0_POEGG_SSF_Pos        (3UL)
 #define R_GPT_POEG0_POEGG_SSF_Msk        (0x8UL)
 #define R_GPT_POEG0_POEGG_OSTPF_Pos      (2UL)
 #define R_GPT_POEG0_POEGG_OSTPF_Msk      (0x4UL)
 #define R_GPT_POEG0_POEGG_IOCF_Pos       (1UL)
 #define R_GPT_POEG0_POEGG_IOCF_Msk       (0x2UL)
 #define R_GPT_POEG0_POEGG_PIDF_Pos       (0UL)
 #define R_GPT_POEG0_POEGG_PIDF_Msk       (0x1UL)
/* ========================================================  GTONCWP  ======================================================== */
 #define R_GPT_POEG0_GTONCWP_WP_Pos       (0UL)
 #define R_GPT_POEG0_GTONCWP_WP_Msk       (0x1UL)
 #define R_GPT_POEG0_GTONCWP_PRKEY_Pos    (8UL)
 #define R_GPT_POEG0_GTONCWP_PRKEY_Msk    (0xff00UL)
/* ========================================================  GTONCCR  ======================================================== */
 #define R_GPT_POEG0_GTONCCR_NE_Pos       (0UL)
 #define R_GPT_POEG0_GTONCCR_NE_Msk       (0x1UL)
 #define R_GPT_POEG0_GTONCCR_NFS_Pos      (4UL)
 #define R_GPT_POEG0_GTONCCR_NFS_Msk      (0xf0UL)
 #define R_GPT_POEG0_GTONCCR_NFV_Pos      (8UL)
 #define R_GPT_POEG0_GTONCCR_NFV_Msk      (0x100UL)

/* =========================================================================================================================== */
/* ================                                           R_ICU                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  IRQCR  ========================================================= */
 #define R_ICU_IRQCR_FLTEN_Pos            (7UL)
 #define R_ICU_IRQCR_FLTEN_Msk            (0x80UL)
 #define R_ICU_IRQCR_FCLKSEL_Pos          (4UL)
 #define R_ICU_IRQCR_FCLKSEL_Msk          (0x30UL)
 #define R_ICU_IRQCR_IRQMD_Pos            (0UL)
 #define R_ICU_IRQCR_IRQMD_Msk            (0x3UL)
/* =========================================================  NMICR  ========================================================= */
 #define R_ICU_NMICR_NMIMD_Pos            (0UL)
 #define R_ICU_NMICR_NMIMD_Msk            (0x1UL)
 #define R_ICU_NMICR_NFCLKSEL_Pos         (4UL)
 #define R_ICU_NMICR_NFCLKSEL_Msk         (0x30UL)
 #define R_ICU_NMICR_NFLTEN_Pos           (7UL)
 #define R_ICU_NMICR_NFLTEN_Msk           (0x80UL)
/* ========================================================  SWIRQ_S  ======================================================== */
 #define R_ICU_SWIRQ_S_SWIRQS_Pos         (0UL)
 #define R_ICU_SWIRQ_S_SWIRQS_Msk         (0x1UL)
/* =======================================================  SWIRQ_NS  ======================================================== */
 #define R_ICU_SWIRQ_NS_SWIRQNS_Pos       (0UL)
 #define R_ICU_SWIRQ_NS_SWIRQNS_Msk       (0x1UL)
/* ========================================================  IENMIER  ======================================================== */
 #define R_ICU_IENMIER_CMEN_Pos           (0UL)
 #define R_ICU_IENMIER_CMEN_Msk           (0x1UL)
 #define R_ICU_IENMIER_LMEN_Pos           (1UL)
 #define R_ICU_IENMIER_LMEN_Msk           (0x2UL)
 #define R_ICU_IENMIER_BUSEN_Pos          (2UL)
 #define R_ICU_IENMIER_BUSEN_Msk          (0x4UL)
/* =========================================================  NMIER  ========================================================= */
 #define R_ICU_NMIER_IWDTEN_Pos           (0UL)
 #define R_ICU_NMIER_IWDTEN_Msk           (0x1UL)
 #define R_ICU_NMIER_WDTEN_Pos            (1UL)
 #define R_ICU_NMIER_WDTEN_Msk            (0x2UL)
 #define R_ICU_NMIER_LVD1EN_Pos           (2UL)
 #define R_ICU_NMIER_LVD1EN_Msk           (0x4UL)
 #define R_ICU_NMIER_LVD2EN_Pos           (3UL)
 #define R_ICU_NMIER_LVD2EN_Msk           (0x8UL)
 #define R_ICU_NMIER_OSTEN_Pos            (6UL)
 #define R_ICU_NMIER_OSTEN_Msk            (0x40UL)
 #define R_ICU_NMIER_NMIEN_Pos            (7UL)
 #define R_ICU_NMIER_NMIEN_Msk            (0x80UL)
 #define R_ICU_NMIER_BUSEN_Pos            (12UL)
 #define R_ICU_NMIER_BUSEN_Msk            (0x1000UL)
 #define R_ICU_NMIER_CMEN_Pos             (13UL)
 #define R_ICU_NMIER_CMEN_Msk             (0x2000UL)
 #define R_ICU_NMIER_LUEN_Pos             (15UL)
 #define R_ICU_NMIER_LUEN_Msk             (0x8000UL)
/* ========================================================  NMICLR  ========================================================= */
 #define R_ICU_NMICLR_IWDTCLR_Pos         (0UL)
 #define R_ICU_NMICLR_IWDTCLR_Msk         (0x1UL)
 #define R_ICU_NMICLR_WDTCLR_Pos          (1UL)
 #define R_ICU_NMICLR_WDTCLR_Msk          (0x2UL)
 #define R_ICU_NMICLR_LVD1CLR_Pos         (2UL)
 #define R_ICU_NMICLR_LVD1CLR_Msk         (0x4UL)
 #define R_ICU_NMICLR_LVD2CLR_Pos         (3UL)
 #define R_ICU_NMICLR_LVD2CLR_Msk         (0x8UL)
 #define R_ICU_NMICLR_OSTCLR_Pos          (6UL)
 #define R_ICU_NMICLR_OSTCLR_Msk          (0x40UL)
 #define R_ICU_NMICLR_NMICLR_Pos          (7UL)
 #define R_ICU_NMICLR_NMICLR_Msk          (0x80UL)
 #define R_ICU_NMICLR_BUSCLR_Pos          (12UL)
 #define R_ICU_NMICLR_BUSCLR_Msk          (0x1000UL)
 #define R_ICU_NMICLR_CMCLR_Pos           (13UL)
 #define R_ICU_NMICLR_CMCLR_Msk           (0x2000UL)
 #define R_ICU_NMICLR_LUCLR_Pos           (15UL)
 #define R_ICU_NMICLR_LUCLR_Msk           (0x8000UL)
/* =========================================================  NMISR  ========================================================= */
 #define R_ICU_NMISR_IWDTST_Pos           (0UL)
 #define R_ICU_NMISR_IWDTST_Msk           (0x1UL)
 #define R_ICU_NMISR_WDTST_Pos            (1UL)
 #define R_ICU_NMISR_WDTST_Msk            (0x2UL)
 #define R_ICU_NMISR_LVD1ST_Pos           (2UL)
 #define R_ICU_NMISR_LVD1ST_Msk           (0x4UL)
 #define R_ICU_NMISR_LVD2ST_Pos           (3UL)
 #define R_ICU_NMISR_LVD2ST_Msk           (0x8UL)
 #define R_ICU_NMISR_OSTST_Pos            (6UL)
 #define R_ICU_NMISR_OSTST_Msk            (0x40UL)
 #define R_ICU_NMISR_NMIST_Pos            (7UL)
 #define R_ICU_NMISR_NMIST_Msk            (0x80UL)
 #define R_ICU_NMISR_BUSST_Pos            (12UL)
 #define R_ICU_NMISR_BUSST_Msk            (0x1000UL)
 #define R_ICU_NMISR_CMST_Pos             (13UL)
 #define R_ICU_NMISR_CMST_Msk             (0x2000UL)
 #define R_ICU_NMISR_LUST_Pos             (15UL)
 #define R_ICU_NMISR_LUST_Msk             (0x8000UL)
/* =========================================================  WUPEN  ========================================================= */
 #define R_ICU_WUPEN_IRQWUPEN0_Pos        (0UL)
 #define R_ICU_WUPEN_IRQWUPEN0_Msk        (0x1UL)
 #define R_ICU_WUPEN_IRQWUPEN1_Pos        (1UL)
 #define R_ICU_WUPEN_IRQWUPEN1_Msk        (0x2UL)
 #define R_ICU_WUPEN_IRQWUPEN2_Pos        (2UL)
 #define R_ICU_WUPEN_IRQWUPEN2_Msk        (0x4UL)
 #define R_ICU_WUPEN_IRQWUPEN3_Pos        (3UL)
 #define R_ICU_WUPEN_IRQWUPEN3_Msk        (0x8UL)
 #define R_ICU_WUPEN_IRQWUPEN4_Pos        (4UL)
 #define R_ICU_WUPEN_IRQWUPEN4_Msk        (0x10UL)
 #define R_ICU_WUPEN_IRQWUPEN5_Pos        (5UL)
 #define R_ICU_WUPEN_IRQWUPEN5_Msk        (0x20UL)
 #define R_ICU_WUPEN_IRQWUPEN6_Pos        (6UL)
 #define R_ICU_WUPEN_IRQWUPEN6_Msk        (0x40UL)
 #define R_ICU_WUPEN_IRQWUPEN7_Pos        (7UL)
 #define R_ICU_WUPEN_IRQWUPEN7_Msk        (0x80UL)
 #define R_ICU_WUPEN_IRQWUPEN8_Pos        (8UL)
 #define R_ICU_WUPEN_IRQWUPEN8_Msk        (0x100UL)
 #define R_ICU_WUPEN_IRQWUPEN9_Pos        (9UL)
 #define R_ICU_WUPEN_IRQWUPEN9_Msk        (0x200UL)
 #define R_ICU_WUPEN_IRQWUPEN10_Pos       (10UL)
 #define R_ICU_WUPEN_IRQWUPEN10_Msk       (0x400UL)
 #define R_ICU_WUPEN_IRQWUPEN11_Pos       (11UL)
 #define R_ICU_WUPEN_IRQWUPEN11_Msk       (0x800UL)
 #define R_ICU_WUPEN_IRQWUPEN12_Pos       (12UL)
 #define R_ICU_WUPEN_IRQWUPEN12_Msk       (0x1000UL)
 #define R_ICU_WUPEN_IRQWUPEN13_Pos       (13UL)
 #define R_ICU_WUPEN_IRQWUPEN13_Msk       (0x2000UL)
 #define R_ICU_WUPEN_IRQWUPEN14_Pos       (14UL)
 #define R_ICU_WUPEN_IRQWUPEN14_Msk       (0x4000UL)
 #define R_ICU_WUPEN_IRQWUPEN15_Pos       (15UL)
 #define R_ICU_WUPEN_IRQWUPEN15_Msk       (0x8000UL)
 #define R_ICU_WUPEN_IWDTWUPEN_Pos        (16UL)
 #define R_ICU_WUPEN_IWDTWUPEN_Msk        (0x10000UL)
 #define R_ICU_WUPEN_LVD1WUPEN_Pos        (18UL)
 #define R_ICU_WUPEN_LVD1WUPEN_Msk        (0x40000UL)
 #define R_ICU_WUPEN_LVD2WUPEN_Pos        (19UL)
 #define R_ICU_WUPEN_LVD2WUPEN_Msk        (0x80000UL)
 #define R_ICU_WUPEN_VBATTWUPEN_Pos       (20UL)
 #define R_ICU_WUPEN_VBATTWUPEN_Msk       (0x100000UL)
 #define R_ICU_WUPEN_RTCALMWUPEN_Pos      (24UL)
 #define R_ICU_WUPEN_RTCALMWUPEN_Msk      (0x1000000UL)
 #define R_ICU_WUPEN_RTCPRDWUPEN_Pos      (25UL)
 #define R_ICU_WUPEN_RTCPRDWUPEN_Msk      (0x2000000UL)
 #define R_ICU_WUPEN_USBHSWUPEN_Pos       (26UL)
 #define R_ICU_WUPEN_USBHSWUPEN_Msk       (0x4000000UL)
 #define R_ICU_WUPEN_USBFSWUPEN_Pos       (27UL)
 #define R_ICU_WUPEN_USBFSWUPEN_Msk       (0x8000000UL)
 #define R_ICU_WUPEN_AGT1UDWUPEN_Pos      (28UL)
 #define R_ICU_WUPEN_AGT1UDWUPEN_Msk      (0x10000000UL)
 #define R_ICU_WUPEN_AGT1CAWUPEN_Pos      (29UL)
 #define R_ICU_WUPEN_AGT1CAWUPEN_Msk      (0x20000000UL)
 #define R_ICU_WUPEN_AGT1CBWUPEN_Pos      (30UL)
 #define R_ICU_WUPEN_AGT1CBWUPEN_Msk      (0x40000000UL)
 #define R_ICU_WUPEN_RIIC0WUPEN_Pos       (31UL)
 #define R_ICU_WUPEN_RIIC0WUPEN_Msk       (0x80000000UL)
/* ========================================================  WUPEN1  ========================================================= */
 #define R_ICU_WUPEN1_COMPHS0WUPEN_Pos    (3UL)
 #define R_ICU_WUPEN1_COMPHS0WUPEN_Msk    (0x8UL)
 #define R_ICU_WUPEN1_ULP0UWUPEN_Pos      (8UL)
 #define R_ICU_WUPEN1_ULP0UWUPEN_Msk      (0x100UL)
 #define R_ICU_WUPEN1_ULP0AWUPEN_Pos      (9UL)
 #define R_ICU_WUPEN1_ULP0AWUPEN_Msk      (0x200UL)
 #define R_ICU_WUPEN1_ULP0BWUPEN_Pos      (10UL)
 #define R_ICU_WUPEN1_ULP0BWUPEN_Msk      (0x400UL)
 #define R_ICU_WUPEN1_I3CWUPEN_Pos        (11UL)
 #define R_ICU_WUPEN1_I3CWUPEN_Msk        (0x800UL)
 #define R_ICU_WUPEN1_ULP1UWUPEN_Pos      (12UL)
 #define R_ICU_WUPEN1_ULP1UWUPEN_Msk      (0x1000UL)
 #define R_ICU_WUPEN1_ULP1AWUPEN_Pos      (13UL)
 #define R_ICU_WUPEN1_ULP1AWUPEN_Msk      (0x2000UL)
 #define R_ICU_WUPEN1_ULP1BWUPEN_Pos      (14UL)
 #define R_ICU_WUPEN1_ULP1BWUPEN_Msk      (0x4000UL)
/* =========================================================  IELSR  ========================================================= */
 #define R_ICU_IELSR_DTCE_Pos             (24UL)
 #define R_ICU_IELSR_DTCE_Msk             (0x1000000UL)
 #define R_ICU_IELSR_IR_Pos               (16UL)
 #define R_ICU_IELSR_IR_Msk               (0x10000UL)
 #define R_ICU_IELSR_IELS_Pos             (0UL)
 #define R_ICU_IELSR_IELS_Msk             (0x1ffUL)

/* =========================================================================================================================== */
/* ================                                          R_IIC0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ICCR1  ========================================================= */
 #define R_IIC0_ICCR1_ICE_Pos        (7UL)
 #define R_IIC0_ICCR1_ICE_Msk        (0x80UL)
 #define R_IIC0_ICCR1_IICRST_Pos     (6UL)
 #define R_IIC0_ICCR1_IICRST_Msk     (0x40UL)
 #define R_IIC0_ICCR1_CLO_Pos        (5UL)
 #define R_IIC0_ICCR1_CLO_Msk        (0x20UL)
 #define R_IIC0_ICCR1_SOWP_Pos       (4UL)
 #define R_IIC0_ICCR1_SOWP_Msk       (0x10UL)
 #define R_IIC0_ICCR1_SCLO_Pos       (3UL)
 #define R_IIC0_ICCR1_SCLO_Msk       (0x8UL)
 #define R_IIC0_ICCR1_SDAO_Pos       (2UL)
 #define R_IIC0_ICCR1_SDAO_Msk       (0x4UL)
 #define R_IIC0_ICCR1_SCLI_Pos       (1UL)
 #define R_IIC0_ICCR1_SCLI_Msk       (0x2UL)
 #define R_IIC0_ICCR1_SDAI_Pos       (0UL)
 #define R_IIC0_ICCR1_SDAI_Msk       (0x1UL)
/* =========================================================  ICCR2  ========================================================= */
 #define R_IIC0_ICCR2_BBSY_Pos       (7UL)
 #define R_IIC0_ICCR2_BBSY_Msk       (0x80UL)
 #define R_IIC0_ICCR2_MST_Pos        (6UL)
 #define R_IIC0_ICCR2_MST_Msk        (0x40UL)
 #define R_IIC0_ICCR2_TRS_Pos        (5UL)
 #define R_IIC0_ICCR2_TRS_Msk        (0x20UL)
 #define R_IIC0_ICCR2_SP_Pos         (3UL)
 #define R_IIC0_ICCR2_SP_Msk         (0x8UL)
 #define R_IIC0_ICCR2_RS_Pos         (2UL)
 #define R_IIC0_ICCR2_RS_Msk         (0x4UL)
 #define R_IIC0_ICCR2_ST_Pos         (1UL)
 #define R_IIC0_ICCR2_ST_Msk         (0x2UL)
/* =========================================================  ICMR1  ========================================================= */
 #define R_IIC0_ICMR1_MTWP_Pos       (7UL)
 #define R_IIC0_ICMR1_MTWP_Msk       (0x80UL)
 #define R_IIC0_ICMR1_CKS_Pos        (4UL)
 #define R_IIC0_ICMR1_CKS_Msk        (0x70UL)
 #define R_IIC0_ICMR1_BCWP_Pos       (3UL)
 #define R_IIC0_ICMR1_BCWP_Msk       (0x8UL)
 #define R_IIC0_ICMR1_BC_Pos         (0UL)
 #define R_IIC0_ICMR1_BC_Msk         (0x7UL)
/* =========================================================  ICMR2  ========================================================= */
 #define R_IIC0_ICMR2_DLCS_Pos       (7UL)
 #define R_IIC0_ICMR2_DLCS_Msk       (0x80UL)
 #define R_IIC0_ICMR2_SDDL_Pos       (4UL)
 #define R_IIC0_ICMR2_SDDL_Msk       (0x70UL)
 #define R_IIC0_ICMR2_TMOH_Pos       (2UL)
 #define R_IIC0_ICMR2_TMOH_Msk       (0x4UL)
 #define R_IIC0_ICMR2_TMOL_Pos       (1UL)
 #define R_IIC0_ICMR2_TMOL_Msk       (0x2UL)
 #define R_IIC0_ICMR2_TMOS_Pos       (0UL)
 #define R_IIC0_ICMR2_TMOS_Msk       (0x1UL)
/* =========================================================  ICMR3  ========================================================= */
 #define R_IIC0_ICMR3_SMBS_Pos       (7UL)
 #define R_IIC0_ICMR3_SMBS_Msk       (0x80UL)
 #define R_IIC0_ICMR3_WAIT_Pos       (6UL)
 #define R_IIC0_ICMR3_WAIT_Msk       (0x40UL)
 #define R_IIC0_ICMR3_RDRFS_Pos      (5UL)
 #define R_IIC0_ICMR3_RDRFS_Msk      (0x20UL)
 #define R_IIC0_ICMR3_ACKWP_Pos      (4UL)
 #define R_IIC0_ICMR3_ACKWP_Msk      (0x10UL)
 #define R_IIC0_ICMR3_ACKBT_Pos      (3UL)
 #define R_IIC0_ICMR3_ACKBT_Msk      (0x8UL)
 #define R_IIC0_ICMR3_ACKBR_Pos      (2UL)
 #define R_IIC0_ICMR3_ACKBR_Msk      (0x4UL)
 #define R_IIC0_ICMR3_NF_Pos         (0UL)
 #define R_IIC0_ICMR3_NF_Msk         (0x3UL)
/* =========================================================  ICFER  ========================================================= */
 #define R_IIC0_ICFER_FMPE_Pos       (7UL)
 #define R_IIC0_ICFER_FMPE_Msk       (0x80UL)
 #define R_IIC0_ICFER_SCLE_Pos       (6UL)
 #define R_IIC0_ICFER_SCLE_Msk       (0x40UL)
 #define R_IIC0_ICFER_NFE_Pos        (5UL)
 #define R_IIC0_ICFER_NFE_Msk        (0x20UL)
 #define R_IIC0_ICFER_NACKE_Pos      (4UL)
 #define R_IIC0_ICFER_NACKE_Msk      (0x10UL)
 #define R_IIC0_ICFER_SALE_Pos       (3UL)
 #define R_IIC0_ICFER_SALE_Msk       (0x8UL)
 #define R_IIC0_ICFER_NALE_Pos       (2UL)
 #define R_IIC0_ICFER_NALE_Msk       (0x4UL)
 #define R_IIC0_ICFER_MALE_Pos       (1UL)
 #define R_IIC0_ICFER_MALE_Msk       (0x2UL)
 #define R_IIC0_ICFER_TMOE_Pos       (0UL)
 #define R_IIC0_ICFER_TMOE_Msk       (0x1UL)
/* =========================================================  ICSER  ========================================================= */
 #define R_IIC0_ICSER_HOAE_Pos       (7UL)
 #define R_IIC0_ICSER_HOAE_Msk       (0x80UL)
 #define R_IIC0_ICSER_DIDE_Pos       (5UL)
 #define R_IIC0_ICSER_DIDE_Msk       (0x20UL)
 #define R_IIC0_ICSER_GCAE_Pos       (3UL)
 #define R_IIC0_ICSER_GCAE_Msk       (0x8UL)
 #define R_IIC0_ICSER_SAR2E_Pos      (2UL)
 #define R_IIC0_ICSER_SAR2E_Msk      (0x4UL)
 #define R_IIC0_ICSER_SAR1E_Pos      (1UL)
 #define R_IIC0_ICSER_SAR1E_Msk      (0x2UL)
 #define R_IIC0_ICSER_SAR0E_Pos      (0UL)
 #define R_IIC0_ICSER_SAR0E_Msk      (0x1UL)
/* =========================================================  ICIER  ========================================================= */
 #define R_IIC0_ICIER_TIE_Pos        (7UL)
 #define R_IIC0_ICIER_TIE_Msk        (0x80UL)
 #define R_IIC0_ICIER_TEIE_Pos       (6UL)
 #define R_IIC0_ICIER_TEIE_Msk       (0x40UL)
 #define R_IIC0_ICIER_RIE_Pos        (5UL)
 #define R_IIC0_ICIER_RIE_Msk        (0x20UL)
 #define R_IIC0_ICIER_NAKIE_Pos      (4UL)
 #define R_IIC0_ICIER_NAKIE_Msk      (0x10UL)
 #define R_IIC0_ICIER_SPIE_Pos       (3UL)
 #define R_IIC0_ICIER_SPIE_Msk       (0x8UL)
 #define R_IIC0_ICIER_STIE_Pos       (2UL)
 #define R_IIC0_ICIER_STIE_Msk       (0x4UL)
 #define R_IIC0_ICIER_ALIE_Pos       (1UL)
 #define R_IIC0_ICIER_ALIE_Msk       (0x2UL)
 #define R_IIC0_ICIER_TMOIE_Pos      (0UL)
 #define R_IIC0_ICIER_TMOIE_Msk      (0x1UL)
/* =========================================================  ICSR1  ========================================================= */
 #define R_IIC0_ICSR1_HOA_Pos        (7UL)
 #define R_IIC0_ICSR1_HOA_Msk        (0x80UL)
 #define R_IIC0_ICSR1_DID_Pos        (5UL)
 #define R_IIC0_ICSR1_DID_Msk        (0x20UL)
 #define R_IIC0_ICSR1_GCA_Pos        (3UL)
 #define R_IIC0_ICSR1_GCA_Msk        (0x8UL)
 #define R_IIC0_ICSR1_AAS2_Pos       (2UL)
 #define R_IIC0_ICSR1_AAS2_Msk       (0x4UL)
 #define R_IIC0_ICSR1_AAS1_Pos       (1UL)
 #define R_IIC0_ICSR1_AAS1_Msk       (0x2UL)
 #define R_IIC0_ICSR1_AAS0_Pos       (0UL)
 #define R_IIC0_ICSR1_AAS0_Msk       (0x1UL)
/* =========================================================  ICSR2  ========================================================= */
 #define R_IIC0_ICSR2_TDRE_Pos       (7UL)
 #define R_IIC0_ICSR2_TDRE_Msk       (0x80UL)
 #define R_IIC0_ICSR2_TEND_Pos       (6UL)
 #define R_IIC0_ICSR2_TEND_Msk       (0x40UL)
 #define R_IIC0_ICSR2_RDRF_Pos       (5UL)
 #define R_IIC0_ICSR2_RDRF_Msk       (0x20UL)
 #define R_IIC0_ICSR2_NACKF_Pos      (4UL)
 #define R_IIC0_ICSR2_NACKF_Msk      (0x10UL)
 #define R_IIC0_ICSR2_STOP_Pos       (3UL)
 #define R_IIC0_ICSR2_STOP_Msk       (0x8UL)
 #define R_IIC0_ICSR2_START_Pos      (2UL)
 #define R_IIC0_ICSR2_START_Msk      (0x4UL)
 #define R_IIC0_ICSR2_AL_Pos         (1UL)
 #define R_IIC0_ICSR2_AL_Msk         (0x2UL)
 #define R_IIC0_ICSR2_TMOF_Pos       (0UL)
 #define R_IIC0_ICSR2_TMOF_Msk       (0x1UL)
/* =========================================================  ICBRL  ========================================================= */
 #define R_IIC0_ICBRL_BRL_Pos        (0UL)
 #define R_IIC0_ICBRL_BRL_Msk        (0x1fUL)
/* =========================================================  ICBRH  ========================================================= */
 #define R_IIC0_ICBRH_BRH_Pos        (0UL)
 #define R_IIC0_ICBRH_BRH_Msk        (0x1fUL)
/* =========================================================  ICDRT  ========================================================= */
 #define R_IIC0_ICDRT_ICDRT_Pos      (0UL)
 #define R_IIC0_ICDRT_ICDRT_Msk      (0xffUL)
/* =========================================================  ICDRR  ========================================================= */
 #define R_IIC0_ICDRR_ICDRR_Pos      (0UL)
 #define R_IIC0_ICDRR_ICDRR_Msk      (0xffUL)
/* =========================================================  ICWUR  ========================================================= */
 #define R_IIC0_ICWUR_WUE_Pos        (7UL)
 #define R_IIC0_ICWUR_WUE_Msk        (0x80UL)
 #define R_IIC0_ICWUR_WUIE_Pos       (6UL)
 #define R_IIC0_ICWUR_WUIE_Msk       (0x40UL)
 #define R_IIC0_ICWUR_WUF_Pos        (5UL)
 #define R_IIC0_ICWUR_WUF_Msk        (0x20UL)
 #define R_IIC0_ICWUR_WUACK_Pos      (4UL)
 #define R_IIC0_ICWUR_WUACK_Msk      (0x10UL)
 #define R_IIC0_ICWUR_WUAFA_Pos      (0UL)
 #define R_IIC0_ICWUR_WUAFA_Msk      (0x1UL)
/* ========================================================  ICWUR2  ========================================================= */
 #define R_IIC0_ICWUR2_WUSYF_Pos     (2UL)
 #define R_IIC0_ICWUR2_WUSYF_Msk     (0x4UL)
 #define R_IIC0_ICWUR2_WUASYF_Pos    (1UL)
 #define R_IIC0_ICWUR2_WUASYF_Msk    (0x2UL)
 #define R_IIC0_ICWUR2_WUSEN_Pos     (0UL)
 #define R_IIC0_ICWUR2_WUSEN_Msk     (0x1UL)

/* =========================================================================================================================== */
/* ================                                          R_IWDT                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  IWDTRR  ========================================================= */
 #define R_IWDT_IWDTRR_IWDTRR_Pos       (0UL)
 #define R_IWDT_IWDTRR_IWDTRR_Msk       (0xffUL)
/* ========================================================  IWDTCR  ========================================================= */
 #define R_IWDT_IWDTCR_RPSS_Pos         (12UL)
 #define R_IWDT_IWDTCR_RPSS_Msk         (0x3000UL)
 #define R_IWDT_IWDTCR_RPES_Pos         (8UL)
 #define R_IWDT_IWDTCR_RPES_Msk         (0x300UL)
 #define R_IWDT_IWDTCR_CKS_Pos          (4UL)
 #define R_IWDT_IWDTCR_CKS_Msk          (0xf0UL)
 #define R_IWDT_IWDTCR_TOPS_Pos         (0UL)
 #define R_IWDT_IWDTCR_TOPS_Msk         (0x3UL)
/* ========================================================  IWDTSR  ========================================================= */
 #define R_IWDT_IWDTSR_REFEF_Pos        (15UL)
 #define R_IWDT_IWDTSR_REFEF_Msk        (0x8000UL)
 #define R_IWDT_IWDTSR_UNDFF_Pos        (14UL)
 #define R_IWDT_IWDTSR_UNDFF_Msk        (0x4000UL)
 #define R_IWDT_IWDTSR_CNTVAL_Pos       (0UL)
 #define R_IWDT_IWDTSR_CNTVAL_Msk       (0x3fffUL)
/* ========================================================  IWDTRCR  ======================================================== */
 #define R_IWDT_IWDTRCR_RSTIRQS_Pos     (7UL)
 #define R_IWDT_IWDTRCR_RSTIRQS_Msk     (0x80UL)
/* =======================================================  IWDTCSTPR  ======================================================= */
 #define R_IWDT_IWDTCSTPR_SLCSTP_Pos    (7UL)
 #define R_IWDT_IWDTCSTPR_SLCSTP_Msk    (0x80UL)

/* =========================================================================================================================== */
/* ================                                          R_I3C0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  PRTS  ========================================================== */
 #define R_I3C0_PRTS_PRTMD_Pos          (0UL)
 #define R_I3C0_PRTS_PRTMD_Msk          (0x1UL)
/* =========================================================  CECTL  ========================================================= */
 #define R_I3C0_CECTL_CLKE_Pos          (0UL)
 #define R_I3C0_CECTL_CLKE_Msk          (0x1UL)
/* =========================================================  BCTL  ========================================================== */
 #define R_I3C0_BCTL_INCBA_Pos          (0UL)
 #define R_I3C0_BCTL_INCBA_Msk          (0x1UL)
 #define R_I3C0_BCTL_BMDS_Pos           (7UL)
 #define R_I3C0_BCTL_BMDS_Msk           (0x80UL)
 #define R_I3C0_BCTL_HJACKCTL_Pos       (8UL)
 #define R_I3C0_BCTL_HJACKCTL_Msk       (0x100UL)
 #define R_I3C0_BCTL_ABT_Pos            (29UL)
 #define R_I3C0_BCTL_ABT_Msk            (0x20000000UL)
 #define R_I3C0_BCTL_RSM_Pos            (30UL)
 #define R_I3C0_BCTL_RSM_Msk            (0x40000000UL)
 #define R_I3C0_BCTL_BUSE_Pos           (31UL)
 #define R_I3C0_BCTL_BUSE_Msk           (0x80000000UL)
/* ========================================================  MSDVAD  ========================================================= */
 #define R_I3C0_MSDVAD_MDYAD_Pos        (16UL)
 #define R_I3C0_MSDVAD_MDYAD_Msk        (0x7f0000UL)
 #define R_I3C0_MSDVAD_MDYADV_Pos       (31UL)
 #define R_I3C0_MSDVAD_MDYADV_Msk       (0x80000000UL)
/* ========================================================  RSTCTL  ========================================================= */
 #define R_I3C0_RSTCTL_RI3CRST_Pos      (0UL)
 #define R_I3C0_RSTCTL_RI3CRST_Msk      (0x1UL)
 #define R_I3C0_RSTCTL_CMDQRST_Pos      (1UL)
 #define R_I3C0_RSTCTL_CMDQRST_Msk      (0x2UL)
 #define R_I3C0_RSTCTL_RSPQRST_Pos      (2UL)
 #define R_I3C0_RSTCTL_RSPQRST_Msk      (0x4UL)
 #define R_I3C0_RSTCTL_TDBRST_Pos       (3UL)
 #define R_I3C0_RSTCTL_TDBRST_Msk       (0x8UL)
 #define R_I3C0_RSTCTL_RDBRST_Pos       (4UL)
 #define R_I3C0_RSTCTL_RDBRST_Msk       (0x10UL)
 #define R_I3C0_RSTCTL_IBIQRST_Pos      (5UL)
 #define R_I3C0_RSTCTL_IBIQRST_Msk      (0x20UL)
 #define R_I3C0_RSTCTL_RSQRST_Pos       (6UL)
 #define R_I3C0_RSTCTL_RSQRST_Msk       (0x40UL)
 #define R_I3C0_RSTCTL_INTLRST_Pos      (16UL)
 #define R_I3C0_RSTCTL_INTLRST_Msk      (0x10000UL)
/* =========================================================  PRSST  ========================================================= */
 #define R_I3C0_PRSST_CRMS_Pos          (2UL)
 #define R_I3C0_PRSST_CRMS_Msk          (0x4UL)
 #define R_I3C0_PRSST_TRMD_Pos          (4UL)
 #define R_I3C0_PRSST_TRMD_Msk          (0x10UL)
 #define R_I3C0_PRSST_PRSSTWP_Pos       (7UL)
 #define R_I3C0_PRSST_PRSSTWP_Msk       (0x80UL)
/* =========================================================  INST  ========================================================== */
 #define R_I3C0_INST_INEF_Pos           (10UL)
 #define R_I3C0_INST_INEF_Msk           (0x400UL)
/* =========================================================  INSTE  ========================================================= */
 #define R_I3C0_INSTE_INEE_Pos          (10UL)
 #define R_I3C0_INSTE_INEE_Msk          (0x400UL)
/* =========================================================  INIE  ========================================================== */
 #define R_I3C0_INIE_INEIE_Pos          (10UL)
 #define R_I3C0_INIE_INEIE_Msk          (0x400UL)
/* ========================================================  INSTFC  ========================================================= */
 #define R_I3C0_INSTFC_INEFC_Pos        (10UL)
 #define R_I3C0_INSTFC_INEFC_Msk        (0x400UL)
/* =========================================================  DVCT  ========================================================== */
 #define R_I3C0_DVCT_IDX_Pos            (19UL)
 #define R_I3C0_DVCT_IDX_Msk            (0xf80000UL)
/* ========================================================  IBINCTL  ======================================================== */
 #define R_I3C0_IBINCTL_NRHJCTL_Pos     (0UL)
 #define R_I3C0_IBINCTL_NRHJCTL_Msk     (0x1UL)
 #define R_I3C0_IBINCTL_NRMRCTL_Pos     (1UL)
 #define R_I3C0_IBINCTL_NRMRCTL_Msk     (0x2UL)
 #define R_I3C0_IBINCTL_NRSIRCTL_Pos    (3UL)
 #define R_I3C0_IBINCTL_NRSIRCTL_Msk    (0x8UL)
/* =========================================================  BFCTL  ========================================================= */
 #define R_I3C0_BFCTL_MALE_Pos          (0UL)
 #define R_I3C0_BFCTL_MALE_Msk          (0x1UL)
 #define R_I3C0_BFCTL_NALE_Pos          (1UL)
 #define R_I3C0_BFCTL_NALE_Msk          (0x2UL)
 #define R_I3C0_BFCTL_SALE_Pos          (2UL)
 #define R_I3C0_BFCTL_SALE_Msk          (0x4UL)
 #define R_I3C0_BFCTL_SCSYNE_Pos        (8UL)
 #define R_I3C0_BFCTL_SCSYNE_Msk        (0x100UL)
 #define R_I3C0_BFCTL_SMBS_Pos          (12UL)
 #define R_I3C0_BFCTL_SMBS_Msk          (0x1000UL)
 #define R_I3C0_BFCTL_FMPE_Pos          (14UL)
 #define R_I3C0_BFCTL_FMPE_Msk          (0x4000UL)
 #define R_I3C0_BFCTL_HSME_Pos          (15UL)
 #define R_I3C0_BFCTL_HSME_Msk          (0x8000UL)
/* =========================================================  SVCTL  ========================================================= */
 #define R_I3C0_SVCTL_GCAE_Pos          (0UL)
 #define R_I3C0_SVCTL_GCAE_Msk          (0x1UL)
 #define R_I3C0_SVCTL_HSMCE_Pos         (5UL)
 #define R_I3C0_SVCTL_HSMCE_Msk         (0x20UL)
 #define R_I3C0_SVCTL_DVIDE_Pos         (6UL)
 #define R_I3C0_SVCTL_DVIDE_Msk         (0x40UL)
 #define R_I3C0_SVCTL_HOAE_Pos          (15UL)
 #define R_I3C0_SVCTL_HOAE_Msk          (0x8000UL)
 #define R_I3C0_SVCTL_SVAEn_Pos         (16UL)
 #define R_I3C0_SVCTL_SVAEn_Msk         (0x10000UL)
/* =======================================================  REFCKCTL  ======================================================== */
 #define R_I3C0_REFCKCTL_IREFCKS_Pos    (0UL)
 #define R_I3C0_REFCKCTL_IREFCKS_Msk    (0x7UL)
/* =========================================================  STDBR  ========================================================= */
 #define R_I3C0_STDBR_SBRLO_Pos         (0UL)
 #define R_I3C0_STDBR_SBRLO_Msk         (0xffUL)
 #define R_I3C0_STDBR_SBRHO_Pos         (8UL)
 #define R_I3C0_STDBR_SBRHO_Msk         (0xff00UL)
 #define R_I3C0_STDBR_SBRLP_Pos         (16UL)
 #define R_I3C0_STDBR_SBRLP_Msk         (0x3f0000UL)
 #define R_I3C0_STDBR_SBRHP_Pos         (24UL)
 #define R_I3C0_STDBR_SBRHP_Msk         (0x3f000000UL)
 #define R_I3C0_STDBR_DSBRPO_Pos        (31UL)
 #define R_I3C0_STDBR_DSBRPO_Msk        (0x80000000UL)
/* =========================================================  EXTBR  ========================================================= */
 #define R_I3C0_EXTBR_EBRLO_Pos         (0UL)
 #define R_I3C0_EXTBR_EBRLO_Msk         (0xffUL)
 #define R_I3C0_EXTBR_EBRHO_Pos         (8UL)
 #define R_I3C0_EXTBR_EBRHO_Msk         (0xff00UL)
 #define R_I3C0_EXTBR_EBRLP_Pos         (16UL)
 #define R_I3C0_EXTBR_EBRLP_Msk         (0x3f0000UL)
 #define R_I3C0_EXTBR_EBRHP_Pos         (24UL)
 #define R_I3C0_EXTBR_EBRHP_Msk         (0x3f000000UL)
/* ========================================================  BFRECDT  ======================================================== */
 #define R_I3C0_BFRECDT_FRECYC_Pos      (0UL)
 #define R_I3C0_BFRECDT_FRECYC_Msk      (0x1ffUL)
/* ========================================================  BAVLCDT  ======================================================== */
 #define R_I3C0_BAVLCDT_AVLCYC_Pos      (0UL)
 #define R_I3C0_BAVLCDT_AVLCYC_Msk      (0x1ffUL)
/* ========================================================  BIDLCDT  ======================================================== */
 #define R_I3C0_BIDLCDT_IDLCYC_Pos      (0UL)
 #define R_I3C0_BIDLCDT_IDLCYC_Msk      (0x3ffffUL)
/* ========================================================  OUTCTL  ========================================================= */
 #define R_I3C0_OUTCTL_SDOC_Pos         (0UL)
 #define R_I3C0_OUTCTL_SDOC_Msk         (0x1UL)
 #define R_I3C0_OUTCTL_SCOC_Pos         (1UL)
 #define R_I3C0_OUTCTL_SCOC_Msk         (0x2UL)
 #define R_I3C0_OUTCTL_SOCWP_Pos        (2UL)
 #define R_I3C0_OUTCTL_SOCWP_Msk        (0x4UL)
 #define R_I3C0_OUTCTL_EXCYC_Pos        (4UL)
 #define R_I3C0_OUTCTL_EXCYC_Msk        (0x10UL)
 #define R_I3C0_OUTCTL_SDOD_Pos         (8UL)
 #define R_I3C0_OUTCTL_SDOD_Msk         (0x700UL)
 #define R_I3C0_OUTCTL_SDODCS_Pos       (15UL)
 #define R_I3C0_OUTCTL_SDODCS_Msk       (0x8000UL)
/* =========================================================  INCTL  ========================================================= */
 #define R_I3C0_INCTL_DNFS_Pos          (0UL)
 #define R_I3C0_INCTL_DNFS_Msk          (0xfUL)
 #define R_I3C0_INCTL_DNFE_Pos          (4UL)
 #define R_I3C0_INCTL_DNFE_Msk          (0x10UL)
/* ========================================================  TMOCTL  ========================================================= */
 #define R_I3C0_TMOCTL_TODTS_Pos        (0UL)
 #define R_I3C0_TMOCTL_TODTS_Msk        (0x3UL)
 #define R_I3C0_TMOCTL_TOLCTL_Pos       (4UL)
 #define R_I3C0_TMOCTL_TOLCTL_Msk       (0x10UL)
 #define R_I3C0_TMOCTL_TOHCTL_Pos       (5UL)
 #define R_I3C0_TMOCTL_TOHCTL_Msk       (0x20UL)
 #define R_I3C0_TMOCTL_TOMDS_Pos        (6UL)
 #define R_I3C0_TMOCTL_TOMDS_Msk        (0xc0UL)
/* =========================================================  WUCTL  ========================================================= */
 #define R_I3C0_WUCTL_WUACKS_Pos        (0UL)
 #define R_I3C0_WUCTL_WUACKS_Msk        (0x1UL)
 #define R_I3C0_WUCTL_WUANFS_Pos        (4UL)
 #define R_I3C0_WUCTL_WUANFS_Msk        (0x10UL)
 #define R_I3C0_WUCTL_WUFSYNE_Pos       (6UL)
 #define R_I3C0_WUCTL_WUFSYNE_Msk       (0x40UL)
 #define R_I3C0_WUCTL_WUFE_Pos          (7UL)
 #define R_I3C0_WUCTL_WUFE_Msk          (0x80UL)
/* ========================================================  ACKCTL  ========================================================= */
 #define R_I3C0_ACKCTL_ACKR_Pos         (0UL)
 #define R_I3C0_ACKCTL_ACKR_Msk         (0x1UL)
 #define R_I3C0_ACKCTL_ACKT_Pos         (1UL)
 #define R_I3C0_ACKCTL_ACKT_Msk         (0x2UL)
 #define R_I3C0_ACKCTL_ACKTWP_Pos       (2UL)
 #define R_I3C0_ACKCTL_ACKTWP_Msk       (0x4UL)
/* =======================================================  SCSTRCTL  ======================================================== */
 #define R_I3C0_SCSTRCTL_ACKTWE_Pos     (0UL)
 #define R_I3C0_SCSTRCTL_ACKTWE_Msk     (0x1UL)
 #define R_I3C0_SCSTRCTL_RWE_Pos        (1UL)
 #define R_I3C0_SCSTRCTL_RWE_Msk        (0x2UL)
/* =======================================================  SCSTLCTL  ======================================================== */
 #define R_I3C0_SCSTLCTL_STLCYC_Pos     (0UL)
 #define R_I3C0_SCSTLCTL_STLCYC_Msk     (0xffffUL)
 #define R_I3C0_SCSTLCTL_AAPE_Pos       (28UL)
 #define R_I3C0_SCSTLCTL_AAPE_Msk       (0x10000000UL)
 #define R_I3C0_SCSTLCTL_TRAPE_Pos      (29UL)
 #define R_I3C0_SCSTLCTL_TRAPE_Msk      (0x20000000UL)
 #define R_I3C0_SCSTLCTL_PARPE_Pos      (30UL)
 #define R_I3C0_SCSTLCTL_PARPE_Msk      (0x40000000UL)
 #define R_I3C0_SCSTLCTL_ACKPE_Pos      (31UL)
 #define R_I3C0_SCSTLCTL_ACKPE_Msk      (0x80000000UL)
/* ========================================================  SVTDLG0  ======================================================== */
 #define R_I3C0_SVTDLG0_STDLG_Pos       (16UL)
 #define R_I3C0_SVTDLG0_STDLG_Msk       (0xffff0000UL)
/* ========================================================  CNDCTL  ========================================================= */
 #define R_I3C0_CNDCTL_STCND_Pos        (0UL)
 #define R_I3C0_CNDCTL_STCND_Msk        (0x1UL)
 #define R_I3C0_CNDCTL_SRCND_Pos        (1UL)
 #define R_I3C0_CNDCTL_SRCND_Msk        (0x2UL)
 #define R_I3C0_CNDCTL_SPCND_Pos        (2UL)
 #define R_I3C0_CNDCTL_SPCND_Msk        (0x4UL)
/* ========================================================  NCMDQP  ========================================================= */
/* ========================================================  NRSPQP  ========================================================= */
/* ========================================================  NTDTBP0  ======================================================== */
/* ========================================================  NIBIQP  ========================================================= */
/* =========================================================  NRSQP  ========================================================= */
/* ========================================================  NQTHCTL  ======================================================== */
 #define R_I3C0_NQTHCTL_CMDQTH_Pos      (0UL)
 #define R_I3C0_NQTHCTL_CMDQTH_Msk      (0xffUL)
 #define R_I3C0_NQTHCTL_RSPQTH_Pos      (8UL)
 #define R_I3C0_NQTHCTL_RSPQTH_Msk      (0xff00UL)
 #define R_I3C0_NQTHCTL_IBIDSSZ_Pos     (16UL)
 #define R_I3C0_NQTHCTL_IBIDSSZ_Msk     (0xff0000UL)
 #define R_I3C0_NQTHCTL_IBIQTH_Pos      (24UL)
 #define R_I3C0_NQTHCTL_IBIQTH_Msk      (0xff000000UL)
/* =======================================================  NTBTHCTL0  ======================================================= */
 #define R_I3C0_NTBTHCTL0_TXDBTH_Pos    (0UL)
 #define R_I3C0_NTBTHCTL0_TXDBTH_Msk    (0x7UL)
 #define R_I3C0_NTBTHCTL0_RXDBTH_Pos    (8UL)
 #define R_I3C0_NTBTHCTL0_RXDBTH_Msk    (0x700UL)
 #define R_I3C0_NTBTHCTL0_TXSTTH_Pos    (16UL)
 #define R_I3C0_NTBTHCTL0_TXSTTH_Msk    (0x70000UL)
 #define R_I3C0_NTBTHCTL0_RXSTTH_Pos    (24UL)
 #define R_I3C0_NTBTHCTL0_RXSTTH_Msk    (0x7000000UL)
/* =======================================================  NRQTHCTL  ======================================================== */
 #define R_I3C0_NRQTHCTL_RSQTH_Pos      (0UL)
 #define R_I3C0_NRQTHCTL_RSQTH_Msk      (0xffUL)
/* ==========================================================  BST  ========================================================== */
 #define R_I3C0_BST_STCNDDF_Pos         (0UL)
 #define R_I3C0_BST_STCNDDF_Msk         (0x1UL)
 #define R_I3C0_BST_SPCNDDF_Pos         (1UL)
 #define R_I3C0_BST_SPCNDDF_Msk         (0x2UL)
 #define R_I3C0_BST_HDREXDF_Pos         (2UL)
 #define R_I3C0_BST_HDREXDF_Msk         (0x4UL)
 #define R_I3C0_BST_NACKDF_Pos          (4UL)
 #define R_I3C0_BST_NACKDF_Msk          (0x10UL)
 #define R_I3C0_BST_TENDF_Pos           (8UL)
 #define R_I3C0_BST_TENDF_Msk           (0x100UL)
 #define R_I3C0_BST_ALF_Pos             (16UL)
 #define R_I3C0_BST_ALF_Msk             (0x10000UL)
 #define R_I3C0_BST_TODF_Pos            (20UL)
 #define R_I3C0_BST_TODF_Msk            (0x100000UL)
/* =========================================================  BSTE  ========================================================== */
 #define R_I3C0_BSTE_STCNDDE_Pos        (0UL)
 #define R_I3C0_BSTE_STCNDDE_Msk        (0x1UL)
 #define R_I3C0_BSTE_SPCNDDE_Pos        (1UL)
 #define R_I3C0_BSTE_SPCNDDE_Msk        (0x2UL)
 #define R_I3C0_BSTE_HDREXDE_Pos        (2UL)
 #define R_I3C0_BSTE_HDREXDE_Msk        (0x4UL)
 #define R_I3C0_BSTE_NACKDE_Pos         (4UL)
 #define R_I3C0_BSTE_NACKDE_Msk         (0x10UL)
 #define R_I3C0_BSTE_TENDE_Pos          (8UL)
 #define R_I3C0_BSTE_TENDE_Msk          (0x100UL)
 #define R_I3C0_BSTE_ALE_Pos            (16UL)
 #define R_I3C0_BSTE_ALE_Msk            (0x10000UL)
 #define R_I3C0_BSTE_TODE_Pos           (20UL)
 #define R_I3C0_BSTE_TODE_Msk           (0x100000UL)
/* ==========================================================  BIE  ========================================================== */
 #define R_I3C0_BIE_STCNDDIE_Pos        (0UL)
 #define R_I3C0_BIE_STCNDDIE_Msk        (0x1UL)
 #define R_I3C0_BIE_SPCNDDIE_Pos        (1UL)
 #define R_I3C0_BIE_SPCNDDIE_Msk        (0x2UL)
 #define R_I3C0_BIE_HDREXDIE_Pos        (2UL)
 #define R_I3C0_BIE_HDREXDIE_Msk        (0x4UL)
 #define R_I3C0_BIE_NACKDIE_Pos         (4UL)
 #define R_I3C0_BIE_NACKDIE_Msk         (0x10UL)
 #define R_I3C0_BIE_TENDIE_Pos          (8UL)
 #define R_I3C0_BIE_TENDIE_Msk          (0x100UL)
 #define R_I3C0_BIE_ALIE_Pos            (16UL)
 #define R_I3C0_BIE_ALIE_Msk            (0x10000UL)
 #define R_I3C0_BIE_TODIE_Pos           (20UL)
 #define R_I3C0_BIE_TODIE_Msk           (0x100000UL)
/* =========================================================  BSTFC  ========================================================= */
 #define R_I3C0_BSTFC_STCNDDFC_Pos      (0UL)
 #define R_I3C0_BSTFC_STCNDDFC_Msk      (0x1UL)
 #define R_I3C0_BSTFC_SPCNDDFC_Pos      (1UL)
 #define R_I3C0_BSTFC_SPCNDDFC_Msk      (0x2UL)
 #define R_I3C0_BSTFC_HDREXDFC_Pos      (2UL)
 #define R_I3C0_BSTFC_HDREXDFC_Msk      (0x4UL)
 #define R_I3C0_BSTFC_NACKDFC_Pos       (4UL)
 #define R_I3C0_BSTFC_NACKDFC_Msk       (0x10UL)
 #define R_I3C0_BSTFC_TENDFC_Pos        (8UL)
 #define R_I3C0_BSTFC_TENDFC_Msk        (0x100UL)
 #define R_I3C0_BSTFC_ALFC_Pos          (16UL)
 #define R_I3C0_BSTFC_ALFC_Msk          (0x10000UL)
 #define R_I3C0_BSTFC_TODFC_Pos         (20UL)
 #define R_I3C0_BSTFC_TODFC_Msk         (0x100000UL)
/* =========================================================  NTST  ========================================================== */
 #define R_I3C0_NTST_TDBEF0_Pos         (0UL)
 #define R_I3C0_NTST_TDBEF0_Msk         (0x1UL)
 #define R_I3C0_NTST_RDBFF0_Pos         (1UL)
 #define R_I3C0_NTST_RDBFF0_Msk         (0x2UL)
 #define R_I3C0_NTST_IBIQEFF_Pos        (2UL)
 #define R_I3C0_NTST_IBIQEFF_Msk        (0x4UL)
 #define R_I3C0_NTST_CMDQEF_Pos         (3UL)
 #define R_I3C0_NTST_CMDQEF_Msk         (0x8UL)
 #define R_I3C0_NTST_RSPQFF_Pos         (4UL)
 #define R_I3C0_NTST_RSPQFF_Msk         (0x10UL)
 #define R_I3C0_NTST_TABTF_Pos          (5UL)
 #define R_I3C0_NTST_TABTF_Msk          (0x20UL)
 #define R_I3C0_NTST_TEF_Pos            (9UL)
 #define R_I3C0_NTST_TEF_Msk            (0x200UL)
 #define R_I3C0_NTST_RSQFF_Pos          (20UL)
 #define R_I3C0_NTST_RSQFF_Msk          (0x100000UL)
/* =========================================================  NTSTE  ========================================================= */
 #define R_I3C0_NTSTE_TDBEE0_Pos        (0UL)
 #define R_I3C0_NTSTE_TDBEE0_Msk        (0x1UL)
 #define R_I3C0_NTSTE_RDBFE0_Pos        (1UL)
 #define R_I3C0_NTSTE_RDBFE0_Msk        (0x2UL)
 #define R_I3C0_NTSTE_IBIQEFE_Pos       (2UL)
 #define R_I3C0_NTSTE_IBIQEFE_Msk       (0x4UL)
 #define R_I3C0_NTSTE_CMDQEE_Pos        (3UL)
 #define R_I3C0_NTSTE_CMDQEE_Msk        (0x8UL)
 #define R_I3C0_NTSTE_RSPQFE_Pos        (4UL)
 #define R_I3C0_NTSTE_RSPQFE_Msk        (0x10UL)
 #define R_I3C0_NTSTE_TABTE_Pos         (5UL)
 #define R_I3C0_NTSTE_TABTE_Msk         (0x20UL)
 #define R_I3C0_NTSTE_TEE_Pos           (9UL)
 #define R_I3C0_NTSTE_TEE_Msk           (0x200UL)
 #define R_I3C0_NTSTE_RSQFE_Pos         (20UL)
 #define R_I3C0_NTSTE_RSQFE_Msk         (0x100000UL)
/* =========================================================  NTIE  ========================================================== */
 #define R_I3C0_NTIE_TDBEIE0_Pos        (0UL)
 #define R_I3C0_NTIE_TDBEIE0_Msk        (0x1UL)
 #define R_I3C0_NTIE_RDBFIE0_Pos        (1UL)
 #define R_I3C0_NTIE_RDBFIE0_Msk        (0x2UL)
 #define R_I3C0_NTIE_IBIQEFIE_Pos       (2UL)
 #define R_I3C0_NTIE_IBIQEFIE_Msk       (0x4UL)
 #define R_I3C0_NTIE_CMDQEIE_Pos        (3UL)
 #define R_I3C0_NTIE_CMDQEIE_Msk        (0x8UL)
 #define R_I3C0_NTIE_RSPQFIE_Pos        (4UL)
 #define R_I3C0_NTIE_RSPQFIE_Msk        (0x10UL)
 #define R_I3C0_NTIE_TABTIE_Pos         (5UL)
 #define R_I3C0_NTIE_TABTIE_Msk         (0x20UL)
 #define R_I3C0_NTIE_TEIE_Pos           (9UL)
 #define R_I3C0_NTIE_TEIE_Msk           (0x200UL)
 #define R_I3C0_NTIE_RSQFIE_Pos         (20UL)
 #define R_I3C0_NTIE_RSQFIE_Msk         (0x100000UL)
/* ========================================================  NTSTFC  ========================================================= */
 #define R_I3C0_NTSTFC_TDBEFC0_Pos      (0UL)
 #define R_I3C0_NTSTFC_TDBEFC0_Msk      (0x1UL)
 #define R_I3C0_NTSTFC_RDBFFC0_Pos      (1UL)
 #define R_I3C0_NTSTFC_RDBFFC0_Msk      (0x2UL)
 #define R_I3C0_NTSTFC_IBIQEFFC_Pos     (2UL)
 #define R_I3C0_NTSTFC_IBIQEFFC_Msk     (0x4UL)
 #define R_I3C0_NTSTFC_CMDQEFC_Pos      (3UL)
 #define R_I3C0_NTSTFC_CMDQEFC_Msk      (0x8UL)
 #define R_I3C0_NTSTFC_RSPQFFC_Pos      (4UL)
 #define R_I3C0_NTSTFC_RSPQFFC_Msk      (0x10UL)
 #define R_I3C0_NTSTFC_TABTFC_Pos       (5UL)
 #define R_I3C0_NTSTFC_TABTFC_Msk       (0x20UL)
 #define R_I3C0_NTSTFC_TEFC_Pos         (9UL)
 #define R_I3C0_NTSTFC_TEFC_Msk         (0x200UL)
 #define R_I3C0_NTSTFC_RSQFFC_Pos       (20UL)
 #define R_I3C0_NTSTFC_RSQFFC_Msk       (0x100000UL)
/* =========================================================  BCST  ========================================================== */
 #define R_I3C0_BCST_BFREF_Pos          (0UL)
 #define R_I3C0_BCST_BFREF_Msk          (0x1UL)
 #define R_I3C0_BCST_BAVLF_Pos          (1UL)
 #define R_I3C0_BCST_BAVLF_Msk          (0x2UL)
 #define R_I3C0_BCST_BIDLF_Pos          (2UL)
 #define R_I3C0_BCST_BIDLF_Msk          (0x4UL)
/* =========================================================  SVST  ========================================================== */
 #define R_I3C0_SVST_GCAF_Pos           (0UL)
 #define R_I3C0_SVST_GCAF_Msk           (0x1UL)
 #define R_I3C0_SVST_HSMCF_Pos          (5UL)
 #define R_I3C0_SVST_HSMCF_Msk          (0x20UL)
 #define R_I3C0_SVST_DVIDF_Pos          (6UL)
 #define R_I3C0_SVST_DVIDF_Msk          (0x40UL)
 #define R_I3C0_SVST_HOAF_Pos           (15UL)
 #define R_I3C0_SVST_HOAF_Msk           (0x8000UL)
 #define R_I3C0_SVST_SVAFn_Pos          (16UL)
 #define R_I3C0_SVST_SVAFn_Msk          (0x10000UL)
/* =========================================================  WUST  ========================================================== */
 #define R_I3C0_WUST_WUASYNF_Pos        (0UL)
 #define R_I3C0_WUST_WUASYNF_Msk        (0x1UL)
/* ========================================================  DATBAS0  ======================================================== */
 #define R_I3C0_DATBAS0_DVSTAD_Pos      (0UL)
 #define R_I3C0_DATBAS0_DVSTAD_Msk      (0x7fUL)
 #define R_I3C0_DATBAS0_DVIBIPL_Pos     (12UL)
 #define R_I3C0_DATBAS0_DVIBIPL_Msk     (0x1000UL)
 #define R_I3C0_DATBAS0_DVSIRRJ_Pos     (13UL)
 #define R_I3C0_DATBAS0_DVSIRRJ_Msk     (0x2000UL)
 #define R_I3C0_DATBAS0_DVMRRJ_Pos      (14UL)
 #define R_I3C0_DATBAS0_DVMRRJ_Msk      (0x4000UL)
 #define R_I3C0_DATBAS0_DVIBITS_Pos     (15UL)
 #define R_I3C0_DATBAS0_DVIBITS_Msk     (0x8000UL)
 #define R_I3C0_DATBAS0_DVDYAD_Pos      (16UL)
 #define R_I3C0_DATBAS0_DVDYAD_Msk      (0xff0000UL)
 #define R_I3C0_DATBAS0_DVNACK_Pos      (29UL)
 #define R_I3C0_DATBAS0_DVNACK_Msk      (0x60000000UL)
 #define R_I3C0_DATBAS0_DVTYP_Pos       (31UL)
 #define R_I3C0_DATBAS0_DVTYP_Msk       (0x80000000UL)
/* ========================================================  DATBAS1  ======================================================== */
 #define R_I3C0_DATBAS1_DVSTAD_Pos      (0UL)
 #define R_I3C0_DATBAS1_DVSTAD_Msk      (0x7fUL)
 #define R_I3C0_DATBAS1_DVIBIPL_Pos     (12UL)
 #define R_I3C0_DATBAS1_DVIBIPL_Msk     (0x1000UL)
 #define R_I3C0_DATBAS1_DVSIRRJ_Pos     (13UL)
 #define R_I3C0_DATBAS1_DVSIRRJ_Msk     (0x2000UL)
 #define R_I3C0_DATBAS1_DVMRRJ_Pos      (14UL)
 #define R_I3C0_DATBAS1_DVMRRJ_Msk      (0x4000UL)
 #define R_I3C0_DATBAS1_DVIBITS_Pos     (15UL)
 #define R_I3C0_DATBAS1_DVIBITS_Msk     (0x8000UL)
 #define R_I3C0_DATBAS1_DVDYAD_Pos      (16UL)
 #define R_I3C0_DATBAS1_DVDYAD_Msk      (0xff0000UL)
 #define R_I3C0_DATBAS1_DVNACK_Pos      (29UL)
 #define R_I3C0_DATBAS1_DVNACK_Msk      (0x60000000UL)
 #define R_I3C0_DATBAS1_DVTYP_Pos       (31UL)
 #define R_I3C0_DATBAS1_DVTYP_Msk       (0x80000000UL)
/* ========================================================  DATBAS2  ======================================================== */
 #define R_I3C0_DATBAS2_DVSTAD_Pos      (0UL)
 #define R_I3C0_DATBAS2_DVSTAD_Msk      (0x7fUL)
 #define R_I3C0_DATBAS2_DVIBIPL_Pos     (12UL)
 #define R_I3C0_DATBAS2_DVIBIPL_Msk     (0x1000UL)
 #define R_I3C0_DATBAS2_DVSIRRJ_Pos     (13UL)
 #define R_I3C0_DATBAS2_DVSIRRJ_Msk     (0x2000UL)
 #define R_I3C0_DATBAS2_DVMRRJ_Pos      (14UL)
 #define R_I3C0_DATBAS2_DVMRRJ_Msk      (0x4000UL)
 #define R_I3C0_DATBAS2_DVIBITS_Pos     (15UL)
 #define R_I3C0_DATBAS2_DVIBITS_Msk     (0x8000UL)
 #define R_I3C0_DATBAS2_DVDYAD_Pos      (16UL)
 #define R_I3C0_DATBAS2_DVDYAD_Msk      (0xff0000UL)
 #define R_I3C0_DATBAS2_DVNACK_Pos      (29UL)
 #define R_I3C0_DATBAS2_DVNACK_Msk      (0x60000000UL)
 #define R_I3C0_DATBAS2_DVTYP_Pos       (31UL)
 #define R_I3C0_DATBAS2_DVTYP_Msk       (0x80000000UL)
/* ========================================================  DATBAS3  ======================================================== */
 #define R_I3C0_DATBAS3_DVSTAD_Pos      (0UL)
 #define R_I3C0_DATBAS3_DVSTAD_Msk      (0x7fUL)
 #define R_I3C0_DATBAS3_DVIBIPL_Pos     (12UL)
 #define R_I3C0_DATBAS3_DVIBIPL_Msk     (0x1000UL)
 #define R_I3C0_DATBAS3_DVSIRRJ_Pos     (13UL)
 #define R_I3C0_DATBAS3_DVSIRRJ_Msk     (0x2000UL)
 #define R_I3C0_DATBAS3_DVMRRJ_Pos      (14UL)
 #define R_I3C0_DATBAS3_DVMRRJ_Msk      (0x4000UL)
 #define R_I3C0_DATBAS3_DVIBITS_Pos     (15UL)
 #define R_I3C0_DATBAS3_DVIBITS_Msk     (0x8000UL)
 #define R_I3C0_DATBAS3_DVDYAD_Pos      (16UL)
 #define R_I3C0_DATBAS3_DVDYAD_Msk      (0xff0000UL)
 #define R_I3C0_DATBAS3_DVNACK_Pos      (29UL)
 #define R_I3C0_DATBAS3_DVNACK_Msk      (0x60000000UL)
 #define R_I3C0_DATBAS3_DVTYP_Pos       (31UL)
 #define R_I3C0_DATBAS3_DVTYP_Msk       (0x80000000UL)
/* =======================================================  EXDATBAS  ======================================================== */
 #define R_I3C0_EXDATBAS_EDSTAD_Pos     (0UL)
 #define R_I3C0_EXDATBAS_EDSTAD_Msk     (0x7fUL)
 #define R_I3C0_EXDATBAS_EDDYAD_Pos     (16UL)
 #define R_I3C0_EXDATBAS_EDDYAD_Msk     (0xff0000UL)
 #define R_I3C0_EXDATBAS_EDNACK_Pos     (29UL)
 #define R_I3C0_EXDATBAS_EDNACK_Msk     (0x60000000UL)
 #define R_I3C0_EXDATBAS_EDTYP_Pos      (31UL)
 #define R_I3C0_EXDATBAS_EDTYP_Msk      (0x80000000UL)
/* =======================================================  SDATBAS0  ======================================================== */
 #define R_I3C0_SDATBAS0_SDSTAD_Pos     (0UL)
 #define R_I3C0_SDATBAS0_SDSTAD_Msk     (0x3ffUL)
 #define R_I3C0_SDATBAS0_SDADLS_Pos     (10UL)
 #define R_I3C0_SDATBAS0_SDADLS_Msk     (0x400UL)
 #define R_I3C0_SDATBAS0_SDIBIPL_Pos    (12UL)
 #define R_I3C0_SDATBAS0_SDIBIPL_Msk    (0x1000UL)
 #define R_I3C0_SDATBAS0_SDDYAD_Pos     (16UL)
 #define R_I3C0_SDATBAS0_SDDYAD_Msk     (0x7f0000UL)
/* =======================================================  SDATBAS1  ======================================================== */
 #define R_I3C0_SDATBAS1_SDSTAD_Pos     (0UL)
 #define R_I3C0_SDATBAS1_SDSTAD_Msk     (0x3ffUL)
 #define R_I3C0_SDATBAS1_SDADLS_Pos     (10UL)
 #define R_I3C0_SDATBAS1_SDADLS_Msk     (0x400UL)
 #define R_I3C0_SDATBAS1_SDIBIPL_Pos    (12UL)
 #define R_I3C0_SDATBAS1_SDIBIPL_Msk    (0x1000UL)
 #define R_I3C0_SDATBAS1_SDDYAD_Pos     (16UL)
 #define R_I3C0_SDATBAS1_SDDYAD_Msk     (0x7f0000UL)
/* =======================================================  SDATBAS2  ======================================================== */
 #define R_I3C0_SDATBAS2_SDSTAD_Pos     (0UL)
 #define R_I3C0_SDATBAS2_SDSTAD_Msk     (0x3ffUL)
 #define R_I3C0_SDATBAS2_SDADLS_Pos     (10UL)
 #define R_I3C0_SDATBAS2_SDADLS_Msk     (0x400UL)
 #define R_I3C0_SDATBAS2_SDIBIPL_Pos    (12UL)
 #define R_I3C0_SDATBAS2_SDIBIPL_Msk    (0x1000UL)
 #define R_I3C0_SDATBAS2_SDDYAD_Pos     (16UL)
 #define R_I3C0_SDATBAS2_SDDYAD_Msk     (0x7f0000UL)
/* ========================================================  MSDCT0  ========================================================= */
 #define R_I3C0_MSDCT0_RBCR0_Pos        (8UL)
 #define R_I3C0_MSDCT0_RBCR0_Msk        (0x100UL)
 #define R_I3C0_MSDCT0_RBCR1_Pos        (9UL)
 #define R_I3C0_MSDCT0_RBCR1_Msk        (0x200UL)
 #define R_I3C0_MSDCT0_RBCR2_Pos        (10UL)
 #define R_I3C0_MSDCT0_RBCR2_Msk        (0x400UL)
 #define R_I3C0_MSDCT0_RBCR3_Pos        (11UL)
 #define R_I3C0_MSDCT0_RBCR3_Msk        (0x800UL)
 #define R_I3C0_MSDCT0_RBCR76_Pos       (14UL)
 #define R_I3C0_MSDCT0_RBCR76_Msk       (0xc000UL)
/* ========================================================  MSDCT1  ========================================================= */
 #define R_I3C0_MSDCT1_RBCR0_Pos        (8UL)
 #define R_I3C0_MSDCT1_RBCR0_Msk        (0x100UL)
 #define R_I3C0_MSDCT1_RBCR1_Pos        (9UL)
 #define R_I3C0_MSDCT1_RBCR1_Msk        (0x200UL)
 #define R_I3C0_MSDCT1_RBCR2_Pos        (10UL)
 #define R_I3C0_MSDCT1_RBCR2_Msk        (0x400UL)
 #define R_I3C0_MSDCT1_RBCR3_Pos        (11UL)
 #define R_I3C0_MSDCT1_RBCR3_Msk        (0x800UL)
 #define R_I3C0_MSDCT1_RBCR76_Pos       (14UL)
 #define R_I3C0_MSDCT1_RBCR76_Msk       (0xc000UL)
/* ========================================================  MSDCT2  ========================================================= */
 #define R_I3C0_MSDCT2_RBCR0_Pos        (8UL)
 #define R_I3C0_MSDCT2_RBCR0_Msk        (0x100UL)
 #define R_I3C0_MSDCT2_RBCR1_Pos        (9UL)
 #define R_I3C0_MSDCT2_RBCR1_Msk        (0x200UL)
 #define R_I3C0_MSDCT2_RBCR2_Pos        (10UL)
 #define R_I3C0_MSDCT2_RBCR2_Msk        (0x400UL)
 #define R_I3C0_MSDCT2_RBCR3_Pos        (11UL)
 #define R_I3C0_MSDCT2_RBCR3_Msk        (0x800UL)
 #define R_I3C0_MSDCT2_RBCR76_Pos       (14UL)
 #define R_I3C0_MSDCT2_RBCR76_Msk       (0xc000UL)
/* ========================================================  MSDCT3  ========================================================= */
 #define R_I3C0_MSDCT3_RBCR0_Pos        (8UL)
 #define R_I3C0_MSDCT3_RBCR0_Msk        (0x100UL)
 #define R_I3C0_MSDCT3_RBCR1_Pos        (9UL)
 #define R_I3C0_MSDCT3_RBCR1_Msk        (0x200UL)
 #define R_I3C0_MSDCT3_RBCR2_Pos        (10UL)
 #define R_I3C0_MSDCT3_RBCR2_Msk        (0x400UL)
 #define R_I3C0_MSDCT3_RBCR3_Pos        (11UL)
 #define R_I3C0_MSDCT3_RBCR3_Msk        (0x800UL)
 #define R_I3C0_MSDCT3_RBCR76_Pos       (14UL)
 #define R_I3C0_MSDCT3_RBCR76_Msk       (0xc000UL)
/* =========================================================  SVDCT  ========================================================= */
 #define R_I3C0_SVDCT_TDCR_Pos          (0UL)
 #define R_I3C0_SVDCT_TDCR_Msk          (0xffUL)
 #define R_I3C0_SVDCT_TBCR0_Pos         (8UL)
 #define R_I3C0_SVDCT_TBCR0_Msk         (0x100UL)
 #define R_I3C0_SVDCT_TBCR1_Pos         (9UL)
 #define R_I3C0_SVDCT_TBCR1_Msk         (0x200UL)
 #define R_I3C0_SVDCT_TBCR2_Pos         (10UL)
 #define R_I3C0_SVDCT_TBCR2_Msk         (0x400UL)
 #define R_I3C0_SVDCT_TBCR3_Pos         (11UL)
 #define R_I3C0_SVDCT_TBCR3_Msk         (0x800UL)
 #define R_I3C0_SVDCT_TBCR76_Pos        (14UL)
 #define R_I3C0_SVDCT_TBCR76_Msk        (0xc000UL)
/* =======================================================  SDCTPIDL  ======================================================== */
/* =======================================================  SDCTPIDH  ======================================================== */
/* ========================================================  SVDVAD0  ======================================================== */
 #define R_I3C0_SVDVAD0_SVAD_Pos        (16UL)
 #define R_I3C0_SVDVAD0_SVAD_Msk        (0x3ff0000UL)
 #define R_I3C0_SVDVAD0_SADLG_Pos       (27UL)
 #define R_I3C0_SVDVAD0_SADLG_Msk       (0x8000000UL)
 #define R_I3C0_SVDVAD0_SSTADV_Pos      (30UL)
 #define R_I3C0_SVDVAD0_SSTADV_Msk      (0x40000000UL)
 #define R_I3C0_SVDVAD0_SDYADV_Pos      (31UL)
 #define R_I3C0_SVDVAD0_SDYADV_Msk      (0x80000000UL)
/* ========================================================  CSECMD  ========================================================= */
 #define R_I3C0_CSECMD_SVIRQE_Pos       (0UL)
 #define R_I3C0_CSECMD_SVIRQE_Msk       (0x1UL)
 #define R_I3C0_CSECMD_MSRQE_Pos        (1UL)
 #define R_I3C0_CSECMD_MSRQE_Msk        (0x2UL)
 #define R_I3C0_CSECMD_HJEVE_Pos        (3UL)
 #define R_I3C0_CSECMD_HJEVE_Msk        (0x8UL)
/* ========================================================  CEACTST  ======================================================== */
 #define R_I3C0_CEACTST_ACTST_Pos       (0UL)
 #define R_I3C0_CEACTST_ACTST_Msk       (0xfUL)
/* =========================================================  CMWLG  ========================================================= */
 #define R_I3C0_CMWLG_MWLG_Pos          (0UL)
 #define R_I3C0_CMWLG_MWLG_Msk          (0xffffUL)
/* =========================================================  CMRLG  ========================================================= */
 #define R_I3C0_CMRLG_MRLG_Pos          (0UL)
 #define R_I3C0_CMRLG_MRLG_Msk          (0xffffUL)
 #define R_I3C0_CMRLG_IBIPSZ_Pos        (16UL)
 #define R_I3C0_CMRLG_IBIPSZ_Msk        (0xff0000UL)
/* ========================================================  CETSTMD  ======================================================== */
 #define R_I3C0_CETSTMD_TSTMD_Pos       (0UL)
 #define R_I3C0_CETSTMD_TSTMD_Msk       (0xffUL)
/* ========================================================  CGDVST  ========================================================= */
 #define R_I3C0_CGDVST_PNDINT_Pos       (0UL)
 #define R_I3C0_CGDVST_PNDINT_Msk       (0xfUL)
 #define R_I3C0_CGDVST_PRTE_Pos         (5UL)
 #define R_I3C0_CGDVST_PRTE_Msk         (0x20UL)
 #define R_I3C0_CGDVST_ACTMD_Pos        (6UL)
 #define R_I3C0_CGDVST_ACTMD_Msk        (0xc0UL)
 #define R_I3C0_CGDVST_VDRSV_Pos        (8UL)
 #define R_I3C0_CGDVST_VDRSV_Msk        (0xff00UL)
/* ========================================================  CMDSPW  ========================================================= */
 #define R_I3C0_CMDSPW_MSWDR_Pos        (0UL)
 #define R_I3C0_CMDSPW_MSWDR_Msk        (0x7UL)
/* ========================================================  CMDSPR  ========================================================= */
 #define R_I3C0_CMDSPR_MSRDR_Pos        (0UL)
 #define R_I3C0_CMDSPR_MSRDR_Msk        (0x7UL)
 #define R_I3C0_CMDSPR_CDTTIM_Pos       (3UL)
 #define R_I3C0_CMDSPR_CDTTIM_Msk       (0x38UL)
/* ========================================================  CMDSPT  ========================================================= */
 #define R_I3C0_CMDSPT_MRTTIM_Pos       (0UL)
 #define R_I3C0_CMDSPT_MRTTIM_Msk       (0xffffffUL)
 #define R_I3C0_CMDSPT_MRTE_Pos         (31UL)
 #define R_I3C0_CMDSPT_MRTE_Msk         (0x80000000UL)
/* =========================================================  CETSM  ========================================================= */
 #define R_I3C0_CETSM_FREQ_Pos          (8UL)
 #define R_I3C0_CETSM_FREQ_Msk          (0xff00UL)
 #define R_I3C0_CETSM_INAC_Pos          (16UL)
 #define R_I3C0_CETSM_INAC_Msk          (0xff0000UL)
/* ========================================================  BITCNT  ========================================================= */
 #define R_I3C0_BITCNT_BCNT_Pos         (0UL)
 #define R_I3C0_BITCNT_BCNT_Msk         (0x1fUL)
 #define R_I3C0_BITCNT_BCNTWP_Pos       (7UL)
 #define R_I3C0_BITCNT_BCNTWP_Msk       (0x80UL)
/* ========================================================  NQSTLV  ========================================================= */
 #define R_I3C0_NQSTLV_CMDQFLV_Pos      (0UL)
 #define R_I3C0_NQSTLV_CMDQFLV_Msk      (0xffUL)
 #define R_I3C0_NQSTLV_RSPQLV_Pos       (8UL)
 #define R_I3C0_NQSTLV_RSPQLV_Msk       (0xff00UL)
 #define R_I3C0_NQSTLV_IBIQLV_Pos       (16UL)
 #define R_I3C0_NQSTLV_IBIQLV_Msk       (0xff0000UL)
 #define R_I3C0_NQSTLV_IBISCNT_Pos      (24UL)
 #define R_I3C0_NQSTLV_IBISCNT_Msk      (0x1f000000UL)
/* =======================================================  NDBSTLV0  ======================================================== */
 #define R_I3C0_NDBSTLV0_TDBFLV_Pos     (0UL)
 #define R_I3C0_NDBSTLV0_TDBFLV_Msk     (0xffUL)
 #define R_I3C0_NDBSTLV0_RDBLV_Pos      (8UL)
 #define R_I3C0_NDBSTLV0_RDBLV_Msk      (0xff00UL)
/* =======================================================  NRSQSTLV  ======================================================== */
 #define R_I3C0_NRSQSTLV_RSQLV_Pos      (0UL)
 #define R_I3C0_NRSQSTLV_RSQLV_Msk      (0xffUL)
/* ========================================================  PRSTDBG  ======================================================== */
 #define R_I3C0_PRSTDBG_SCILV_Pos       (0UL)
 #define R_I3C0_PRSTDBG_SCILV_Msk       (0x1UL)
 #define R_I3C0_PRSTDBG_SDILV_Pos       (1UL)
 #define R_I3C0_PRSTDBG_SDILV_Msk       (0x2UL)
 #define R_I3C0_PRSTDBG_SCOLV_Pos       (2UL)
 #define R_I3C0_PRSTDBG_SCOLV_Msk       (0x4UL)
 #define R_I3C0_PRSTDBG_SDOLV_Pos       (3UL)
 #define R_I3C0_PRSTDBG_SDOLV_Msk       (0x8UL)
/* =======================================================  MSERRCNT  ======================================================== */
 #define R_I3C0_MSERRCNT_M2ECNT_Pos     (0UL)
 #define R_I3C0_MSERRCNT_M2ECNT_Msk     (0xffUL)

/* =========================================================================================================================== */
/* ================                                        R_MPU_MMPU                                         ================ */
/* =========================================================================================================================== */

/* ==========================================================  OAD  ========================================================== */
 #define R_MPU_MMPU_OAD_KEY_Pos          (8UL)
 #define R_MPU_MMPU_OAD_KEY_Msk          (0xff00UL)
 #define R_MPU_MMPU_OAD_OAD_Pos          (0UL)
 #define R_MPU_MMPU_OAD_OAD_Msk          (0x1UL)
/* =========================================================  OADPT  ========================================================= */
 #define R_MPU_MMPU_OADPT_KEY_Pos        (8UL)
 #define R_MPU_MMPU_OADPT_KEY_Msk        (0xff00UL)
 #define R_MPU_MMPU_OADPT_PROTECT_Pos    (0UL)
 #define R_MPU_MMPU_OADPT_PROTECT_Msk    (0x1UL)

/* =========================================================================================================================== */
/* ================                                        R_MPU_SPMON                                        ================ */
/* =========================================================================================================================== */

/* =========================================================================================================================== */
/* ================                                          R_MSTP                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  MSTPCRA  ======================================================== */
 #define R_MSTP_MSTPCRA_MSTPA_Pos        (0UL)
 #define R_MSTP_MSTPCRA_MSTPA_Msk        (0x1UL)
/* ========================================================  MSTPCRB  ======================================================== */
 #define R_MSTP_MSTPCRB_MSTPB_Pos        (0UL)
 #define R_MSTP_MSTPCRB_MSTPB_Msk        (0x1UL)
/* ========================================================  MSTPCRC  ======================================================== */
 #define R_MSTP_MSTPCRC_MSTPC_Pos        (0UL)
 #define R_MSTP_MSTPCRC_MSTPC_Msk        (0x1UL)
/* ========================================================  MSTPCRD  ======================================================== */
 #define R_MSTP_MSTPCRD_MSTPD_Pos        (0UL)
 #define R_MSTP_MSTPCRD_MSTPD_Msk        (0x1UL)
/* ========================================================  MSTPCRE  ======================================================== */
 #define R_MSTP_MSTPCRE_MSTPE_Pos        (0UL)
 #define R_MSTP_MSTPCRE_MSTPE_Msk        (0x1UL)
/* =======================================================  LSMRWDIS  ======================================================== */
 #define R_MSTP_LSMRWDIS_RTCRWDIS_Pos    (0UL)
 #define R_MSTP_LSMRWDIS_RTCRWDIS_Msk    (0x1UL)
 #define R_MSTP_LSMRWDIS_WDTDIS_Pos      (1UL)
 #define R_MSTP_LSMRWDIS_WDTDIS_Msk      (0x2UL)
 #define R_MSTP_LSMRWDIS_IWDTIDS_Pos     (2UL)
 #define R_MSTP_LSMRWDIS_IWDTIDS_Msk     (0x4UL)
 #define R_MSTP_LSMRWDIS_WREN_Pos        (7UL)
 #define R_MSTP_LSMRWDIS_WREN_Msk        (0x80UL)
 #define R_MSTP_LSMRWDIS_PRKEY_Pos       (8UL)
 #define R_MSTP_LSMRWDIS_PRKEY_Msk       (0xff00UL)

/* =========================================================================================================================== */
/* ================                                          R_PORT0                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
 #define R_PORT0_PCNTR1_PODR_Pos    (16UL)
 #define R_PORT0_PCNTR1_PODR_Msk    (0xffff0000UL)
 #define R_PORT0_PCNTR1_PDR_Pos     (0UL)
 #define R_PORT0_PCNTR1_PDR_Msk     (0xffffUL)
/* ==========================================================  PDR  ========================================================== */
 #define R_PORT0_PDR_PDR_Pos        (0UL)
 #define R_PORT0_PDR_PDR_Msk        (0x1UL)
/* =========================================================  PODR  ========================================================== */
 #define R_PORT0_PODR_PODR_Pos      (0UL)
 #define R_PORT0_PODR_PODR_Msk      (0x1UL)
/* ========================================================  PCNTR2  ========================================================= */
 #define R_PORT0_PCNTR2_EIDR_Pos    (16UL)
 #define R_PORT0_PCNTR2_EIDR_Msk    (0xffff0000UL)
 #define R_PORT0_PCNTR2_PIDR_Pos    (0UL)
 #define R_PORT0_PCNTR2_PIDR_Msk    (0xffffUL)
/* =========================================================  PIDR  ========================================================== */
 #define R_PORT0_PIDR_PIDR_Pos      (0UL)
 #define R_PORT0_PIDR_PIDR_Msk      (0x1UL)
/* =========================================================  EIDR  ========================================================== */
 #define R_PORT0_EIDR_EIDR_Pos      (0UL)
 #define R_PORT0_EIDR_EIDR_Msk      (0x1UL)
/* ========================================================  PCNTR3  ========================================================= */
 #define R_PORT0_PCNTR3_PORR_Pos    (16UL)
 #define R_PORT0_PCNTR3_PORR_Msk    (0xffff0000UL)
 #define R_PORT0_PCNTR3_POSR_Pos    (0UL)
 #define R_PORT0_PCNTR3_POSR_Msk    (0xffffUL)
/* =========================================================  POSR  ========================================================== */
 #define R_PORT0_POSR_POSR_Pos      (0UL)
 #define R_PORT0_POSR_POSR_Msk      (0x1UL)
/* =========================================================  PORR  ========================================================== */
 #define R_PORT0_PORR_PORR_Pos      (0UL)
 #define R_PORT0_PORR_PORR_Msk      (0x1UL)
/* ========================================================  PCNTR4  ========================================================= */
 #define R_PORT0_PCNTR4_EORR_Pos    (16UL)
 #define R_PORT0_PCNTR4_EORR_Msk    (0xffff0000UL)
 #define R_PORT0_PCNTR4_EOSR_Pos    (0UL)
 #define R_PORT0_PCNTR4_EOSR_Msk    (0xffffUL)
/* =========================================================  EOSR  ========================================================== */
 #define R_PORT0_EOSR_EOSR_Pos      (0UL)
 #define R_PORT0_EOSR_EOSR_Msk      (0x1UL)
/* =========================================================  EORR  ========================================================== */
 #define R_PORT0_EORR_EORR_Pos      (0UL)
 #define R_PORT0_EORR_EORR_Msk      (0x1UL)

/* =========================================================================================================================== */
/* ================                                           R_PFS                                           ================ */
/* =========================================================================================================================== */

/* =========================================================================================================================== */
/* ================                                          R_PMISC                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  PFENET  ========================================================= */
 #define R_PMISC_PFENET_PHYMODE0_Pos    (4UL)
 #define R_PMISC_PFENET_PHYMODE0_Msk    (0x10UL)
/* =========================================================  PWPR  ========================================================== */
 #define R_PMISC_PWPR_PFSWE_Pos         (6UL)
 #define R_PMISC_PWPR_PFSWE_Msk         (0x40UL)
 #define R_PMISC_PWPR_B0WI_Pos          (7UL)
 #define R_PMISC_PWPR_B0WI_Msk          (0x80UL)
/* =========================================================  PWPRS  ========================================================= */
 #define R_PMISC_PWPRS_PFSWE_Pos        (6UL)
 #define R_PMISC_PWPRS_PFSWE_Msk        (0x40UL)
 #define R_PMISC_PWPRS_B0WI_Pos         (7UL)
 #define R_PMISC_PWPRS_B0WI_Msk         (0x80UL)

/* =========================================================================================================================== */
/* ================                                           R_RTC                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  R64CNT  ========================================================= */
 #define R_RTC_R64CNT_F1HZ_Pos        (6UL)
 #define R_RTC_R64CNT_F1HZ_Msk        (0x40UL)
 #define R_RTC_R64CNT_F2HZ_Pos        (5UL)
 #define R_RTC_R64CNT_F2HZ_Msk        (0x20UL)
 #define R_RTC_R64CNT_F4HZ_Pos        (4UL)
 #define R_RTC_R64CNT_F4HZ_Msk        (0x10UL)
 #define R_RTC_R64CNT_F8HZ_Pos        (3UL)
 #define R_RTC_R64CNT_F8HZ_Msk        (0x8UL)
 #define R_RTC_R64CNT_F16HZ_Pos       (2UL)
 #define R_RTC_R64CNT_F16HZ_Msk       (0x4UL)
 #define R_RTC_R64CNT_F32HZ_Pos       (1UL)
 #define R_RTC_R64CNT_F32HZ_Msk       (0x2UL)
 #define R_RTC_R64CNT_F64HZ_Pos       (0UL)
 #define R_RTC_R64CNT_F64HZ_Msk       (0x1UL)
/* =========================================================  BCNT0  ========================================================= */
 #define R_RTC_BCNT0_BCNT0_Pos        (0UL)
 #define R_RTC_BCNT0_BCNT0_Msk        (0xffUL)
/* ========================================================  RSECCNT  ======================================================== */
 #define R_RTC_RSECCNT_SEC10_Pos      (4UL)
 #define R_RTC_RSECCNT_SEC10_Msk      (0x70UL)
 #define R_RTC_RSECCNT_SEC1_Pos       (0UL)
 #define R_RTC_RSECCNT_SEC1_Msk       (0xfUL)
/* =========================================================  BCNT1  ========================================================= */
 #define R_RTC_BCNT1_BCNT1_Pos        (0UL)
 #define R_RTC_BCNT1_BCNT1_Msk        (0xffUL)
/* ========================================================  RMINCNT  ======================================================== */
 #define R_RTC_RMINCNT_MIN10_Pos      (4UL)
 #define R_RTC_RMINCNT_MIN10_Msk      (0x70UL)
 #define R_RTC_RMINCNT_MIN1_Pos       (0UL)
 #define R_RTC_RMINCNT_MIN1_Msk       (0xfUL)
/* =========================================================  BCNT2  ========================================================= */
 #define R_RTC_BCNT2_BCNT2_Pos        (0UL)
 #define R_RTC_BCNT2_BCNT2_Msk        (0xffUL)
/* ========================================================  RHRCNT  ========================================================= */
 #define R_RTC_RHRCNT_PM_Pos          (6UL)
 #define R_RTC_RHRCNT_PM_Msk          (0x40UL)
 #define R_RTC_RHRCNT_HR10_Pos        (4UL)
 #define R_RTC_RHRCNT_HR10_Msk        (0x30UL)
 #define R_RTC_RHRCNT_HR1_Pos         (0UL)
 #define R_RTC_RHRCNT_HR1_Msk         (0xfUL)
/* =========================================================  BCNT3  ========================================================= */
 #define R_RTC_BCNT3_BCNT3_Pos        (0UL)
 #define R_RTC_BCNT3_BCNT3_Msk        (0xffUL)
/* ========================================================  RWKCNT  ========================================================= */
 #define R_RTC_RWKCNT_DAYW_Pos        (0UL)
 #define R_RTC_RWKCNT_DAYW_Msk        (0x7UL)
/* ========================================================  RDAYCNT  ======================================================== */
 #define R_RTC_RDAYCNT_DATE10_Pos     (4UL)
 #define R_RTC_RDAYCNT_DATE10_Msk     (0x30UL)
 #define R_RTC_RDAYCNT_DATE1_Pos      (0UL)
 #define R_RTC_RDAYCNT_DATE1_Msk      (0xfUL)
/* ========================================================  RMONCNT  ======================================================== */
 #define R_RTC_RMONCNT_MON10_Pos      (4UL)
 #define R_RTC_RMONCNT_MON10_Msk      (0x10UL)
 #define R_RTC_RMONCNT_MON1_Pos       (0UL)
 #define R_RTC_RMONCNT_MON1_Msk       (0xfUL)
/* ========================================================  RYRCNT  ========================================================= */
 #define R_RTC_RYRCNT_YR10_Pos        (4UL)
 #define R_RTC_RYRCNT_YR10_Msk        (0xf0UL)
 #define R_RTC_RYRCNT_YR1_Pos         (0UL)
 #define R_RTC_RYRCNT_YR1_Msk         (0xfUL)
/* ========================================================  BCNT0AR  ======================================================== */
 #define R_RTC_BCNT0AR_BCNT0AR_Pos    (0UL)
 #define R_RTC_BCNT0AR_BCNT0AR_Msk    (0xffUL)
/* ========================================================  RSECAR  ========================================================= */
 #define R_RTC_RSECAR_ENB_Pos         (7UL)
 #define R_RTC_RSECAR_ENB_Msk         (0x80UL)
 #define R_RTC_RSECAR_SEC10_Pos       (4UL)
 #define R_RTC_RSECAR_SEC10_Msk       (0x70UL)
 #define R_RTC_RSECAR_SEC1_Pos        (0UL)
 #define R_RTC_RSECAR_SEC1_Msk        (0xfUL)
/* ========================================================  BCNT1AR  ======================================================== */
 #define R_RTC_BCNT1AR_BCNT1AR_Pos    (0UL)
 #define R_RTC_BCNT1AR_BCNT1AR_Msk    (0xffUL)
/* ========================================================  RMINAR  ========================================================= */
 #define R_RTC_RMINAR_ENB_Pos         (7UL)
 #define R_RTC_RMINAR_ENB_Msk         (0x80UL)
 #define R_RTC_RMINAR_MIN10_Pos       (4UL)
 #define R_RTC_RMINAR_MIN10_Msk       (0x70UL)
 #define R_RTC_RMINAR_MIN1_Pos        (0UL)
 #define R_RTC_RMINAR_MIN1_Msk        (0xfUL)
/* ========================================================  BCNT2AR  ======================================================== */
 #define R_RTC_BCNT2AR_BCNT2AR_Pos    (0UL)
 #define R_RTC_BCNT2AR_BCNT2AR_Msk    (0xffUL)
/* =========================================================  RHRAR  ========================================================= */
 #define R_RTC_RHRAR_ENB_Pos          (7UL)
 #define R_RTC_RHRAR_ENB_Msk          (0x80UL)
 #define R_RTC_RHRAR_PM_Pos           (6UL)
 #define R_RTC_RHRAR_PM_Msk           (0x40UL)
 #define R_RTC_RHRAR_HR10_Pos         (4UL)
 #define R_RTC_RHRAR_HR10_Msk         (0x30UL)
 #define R_RTC_RHRAR_HR1_Pos          (0UL)
 #define R_RTC_RHRAR_HR1_Msk          (0xfUL)
/* ========================================================  BCNT3AR  ======================================================== */
 #define R_RTC_BCNT3AR_BCNT3AR_Pos    (0UL)
 #define R_RTC_BCNT3AR_BCNT3AR_Msk    (0xffUL)
/* =========================================================  RWKAR  ========================================================= */
 #define R_RTC_RWKAR_ENB_Pos          (7UL)
 #define R_RTC_RWKAR_ENB_Msk          (0x80UL)
 #define R_RTC_RWKAR_DAYW_Pos         (0UL)
 #define R_RTC_RWKAR_DAYW_Msk         (0x7UL)
/* =======================================================  BCNT0AER  ======================================================== */
 #define R_RTC_BCNT0AER_ENB_Pos       (0UL)
 #define R_RTC_BCNT0AER_ENB_Msk       (0xffUL)
/* ========================================================  RDAYAR  ========================================================= */
 #define R_RTC_RDAYAR_ENB_Pos         (7UL)
 #define R_RTC_RDAYAR_ENB_Msk         (0x80UL)
 #define R_RTC_RDAYAR_DATE10_Pos      (4UL)
 #define R_RTC_RDAYAR_DATE10_Msk      (0x30UL)
 #define R_RTC_RDAYAR_DATE1_Pos       (0UL)
 #define R_RTC_RDAYAR_DATE1_Msk       (0xfUL)
/* =======================================================  BCNT1AER  ======================================================== */
 #define R_RTC_BCNT1AER_ENB_Pos       (0UL)
 #define R_RTC_BCNT1AER_ENB_Msk       (0xffUL)
/* ========================================================  RMONAR  ========================================================= */
 #define R_RTC_RMONAR_ENB_Pos         (7UL)
 #define R_RTC_RMONAR_ENB_Msk         (0x80UL)
 #define R_RTC_RMONAR_MON10_Pos       (4UL)
 #define R_RTC_RMONAR_MON10_Msk       (0x10UL)
 #define R_RTC_RMONAR_MON1_Pos        (0UL)
 #define R_RTC_RMONAR_MON1_Msk        (0xfUL)
/* =======================================================  BCNT2AER  ======================================================== */
 #define R_RTC_BCNT2AER_ENB_Pos       (0UL)
 #define R_RTC_BCNT2AER_ENB_Msk       (0xffUL)
/* =========================================================  RYRAR  ========================================================= */
 #define R_RTC_RYRAR_YR10_Pos         (4UL)
 #define R_RTC_RYRAR_YR10_Msk         (0xf0UL)
 #define R_RTC_RYRAR_YR1_Pos          (0UL)
 #define R_RTC_RYRAR_YR1_Msk          (0xfUL)
/* =======================================================  BCNT3AER  ======================================================== */
 #define R_RTC_BCNT3AER_ENB_Pos       (0UL)
 #define R_RTC_BCNT3AER_ENB_Msk       (0xffUL)
/* ========================================================  RYRAREN  ======================================================== */
 #define R_RTC_RYRAREN_ENB_Pos        (7UL)
 #define R_RTC_RYRAREN_ENB_Msk        (0x80UL)
/* =========================================================  RCR1  ========================================================== */
 #define R_RTC_RCR1_PES_Pos           (4UL)
 #define R_RTC_RCR1_PES_Msk           (0xf0UL)
 #define R_RTC_RCR1_RTCOS_Pos         (3UL)
 #define R_RTC_RCR1_RTCOS_Msk         (0x8UL)
 #define R_RTC_RCR1_PIE_Pos           (2UL)
 #define R_RTC_RCR1_PIE_Msk           (0x4UL)
 #define R_RTC_RCR1_CIE_Pos           (1UL)
 #define R_RTC_RCR1_CIE_Msk           (0x2UL)
 #define R_RTC_RCR1_AIE_Pos           (0UL)
 #define R_RTC_RCR1_AIE_Msk           (0x1UL)
/* =========================================================  RCR2  ========================================================== */
 #define R_RTC_RCR2_CNTMD_Pos         (7UL)
 #define R_RTC_RCR2_CNTMD_Msk         (0x80UL)
 #define R_RTC_RCR2_HR24_Pos          (6UL)
 #define R_RTC_RCR2_HR24_Msk          (0x40UL)
 #define R_RTC_RCR2_AADJP_Pos         (5UL)
 #define R_RTC_RCR2_AADJP_Msk         (0x20UL)
 #define R_RTC_RCR2_AADJE_Pos         (4UL)
 #define R_RTC_RCR2_AADJE_Msk         (0x10UL)
 #define R_RTC_RCR2_RTCOE_Pos         (3UL)
 #define R_RTC_RCR2_RTCOE_Msk         (0x8UL)
 #define R_RTC_RCR2_ADJ30_Pos         (2UL)
 #define R_RTC_RCR2_ADJ30_Msk         (0x4UL)
 #define R_RTC_RCR2_RESET_Pos         (1UL)
 #define R_RTC_RCR2_RESET_Msk         (0x2UL)
 #define R_RTC_RCR2_START_Pos         (0UL)
 #define R_RTC_RCR2_START_Msk         (0x1UL)
/* =========================================================  RCR4  ========================================================== */
 #define R_RTC_RCR4_RCKSEL_Pos        (0UL)
 #define R_RTC_RCR4_RCKSEL_Msk        (0x1UL)
 #define R_RTC_RCR4_ROPSEL_Pos        (7UL)
 #define R_RTC_RCR4_ROPSEL_Msk        (0x80UL)
/* =========================================================  RFRH  ========================================================== */
 #define R_RTC_RFRH_RFC16_Pos         (0UL)
 #define R_RTC_RFRH_RFC16_Msk         (0x1UL)
/* =========================================================  RFRL  ========================================================== */
 #define R_RTC_RFRL_RFC_Pos           (0UL)
 #define R_RTC_RFRL_RFC_Msk           (0xffffUL)
/* =========================================================  RADJ  ========================================================== */
 #define R_RTC_RADJ_PMADJ_Pos         (6UL)
 #define R_RTC_RADJ_PMADJ_Msk         (0xc0UL)
 #define R_RTC_RADJ_ADJ_Pos           (0UL)
 #define R_RTC_RADJ_ADJ_Msk           (0x3fUL)

/* =========================================================================================================================== */
/* ================                                          R_SCI0                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  SMR  ========================================================== */
 #define R_SCI0_SMR_CM_Pos              (7UL)
 #define R_SCI0_SMR_CM_Msk              (0x80UL)
 #define R_SCI0_SMR_CHR_Pos             (6UL)
 #define R_SCI0_SMR_CHR_Msk             (0x40UL)
 #define R_SCI0_SMR_PE_Pos              (5UL)
 #define R_SCI0_SMR_PE_Msk              (0x20UL)
 #define R_SCI0_SMR_PM_Pos              (4UL)
 #define R_SCI0_SMR_PM_Msk              (0x10UL)
 #define R_SCI0_SMR_STOP_Pos            (3UL)
 #define R_SCI0_SMR_STOP_Msk            (0x8UL)
 #define R_SCI0_SMR_MP_Pos              (2UL)
 #define R_SCI0_SMR_MP_Msk              (0x4UL)
 #define R_SCI0_SMR_CKS_Pos             (0UL)
 #define R_SCI0_SMR_CKS_Msk             (0x3UL)
/* =======================================================  SMR_SMCI  ======================================================== */
 #define R_SCI0_SMR_SMCI_GM_Pos         (7UL)
 #define R_SCI0_SMR_SMCI_GM_Msk         (0x80UL)
 #define R_SCI0_SMR_SMCI_BLK_Pos        (6UL)
 #define R_SCI0_SMR_SMCI_BLK_Msk        (0x40UL)
 #define R_SCI0_SMR_SMCI_PE_Pos         (5UL)
 #define R_SCI0_SMR_SMCI_PE_Msk         (0x20UL)
 #define R_SCI0_SMR_SMCI_PM_Pos         (4UL)
 #define R_SCI0_SMR_SMCI_PM_Msk         (0x10UL)
 #define R_SCI0_SMR_SMCI_BCP_Pos        (2UL)
 #define R_SCI0_SMR_SMCI_BCP_Msk        (0xcUL)
 #define R_SCI0_SMR_SMCI_CKS_Pos        (0UL)
 #define R_SCI0_SMR_SMCI_CKS_Msk        (0x3UL)
/* ==========================================================  BRR  ========================================================== */
 #define R_SCI0_BRR_BRR_Pos             (0UL)
 #define R_SCI0_BRR_BRR_Msk             (0xffUL)
/* ==========================================================  SCR  ========================================================== */
 #define R_SCI0_SCR_TIE_Pos             (7UL)
 #define R_SCI0_SCR_TIE_Msk             (0x80UL)
 #define R_SCI0_SCR_RIE_Pos             (6UL)
 #define R_SCI0_SCR_RIE_Msk             (0x40UL)
 #define R_SCI0_SCR_TE_Pos              (5UL)
 #define R_SCI0_SCR_TE_Msk              (0x20UL)
 #define R_SCI0_SCR_RE_Pos              (4UL)
 #define R_SCI0_SCR_RE_Msk              (0x10UL)
 #define R_SCI0_SCR_MPIE_Pos            (3UL)
 #define R_SCI0_SCR_MPIE_Msk            (0x8UL)
 #define R_SCI0_SCR_TEIE_Pos            (2UL)
 #define R_SCI0_SCR_TEIE_Msk            (0x4UL)
 #define R_SCI0_SCR_CKE_Pos             (0UL)
 #define R_SCI0_SCR_CKE_Msk             (0x3UL)
/* =======================================================  SCR_SMCI  ======================================================== */
 #define R_SCI0_SCR_SMCI_TIE_Pos        (7UL)
 #define R_SCI0_SCR_SMCI_TIE_Msk        (0x80UL)
 #define R_SCI0_SCR_SMCI_RIE_Pos        (6UL)
 #define R_SCI0_SCR_SMCI_RIE_Msk        (0x40UL)
 #define R_SCI0_SCR_SMCI_TE_Pos         (5UL)
 #define R_SCI0_SCR_SMCI_TE_Msk         (0x20UL)
 #define R_SCI0_SCR_SMCI_RE_Pos         (4UL)
 #define R_SCI0_SCR_SMCI_RE_Msk         (0x10UL)
 #define R_SCI0_SCR_SMCI_MPIE_Pos       (3UL)
 #define R_SCI0_SCR_SMCI_MPIE_Msk       (0x8UL)
 #define R_SCI0_SCR_SMCI_TEIE_Pos       (2UL)
 #define R_SCI0_SCR_SMCI_TEIE_Msk       (0x4UL)
 #define R_SCI0_SCR_SMCI_CKE_Pos        (0UL)
 #define R_SCI0_SCR_SMCI_CKE_Msk        (0x3UL)
/* ==========================================================  TDR  ========================================================== */
 #define R_SCI0_TDR_TDR_Pos             (0UL)
 #define R_SCI0_TDR_TDR_Msk             (0xffUL)
/* ==========================================================  SSR  ========================================================== */
 #define R_SCI0_SSR_TDRE_Pos            (7UL)
 #define R_SCI0_SSR_TDRE_Msk            (0x80UL)
 #define R_SCI0_SSR_RDRF_Pos            (6UL)
 #define R_SCI0_SSR_RDRF_Msk            (0x40UL)
 #define R_SCI0_SSR_ORER_Pos            (5UL)
 #define R_SCI0_SSR_ORER_Msk            (0x20UL)
 #define R_SCI0_SSR_FER_Pos             (4UL)
 #define R_SCI0_SSR_FER_Msk             (0x10UL)
 #define R_SCI0_SSR_PER_Pos             (3UL)
 #define R_SCI0_SSR_PER_Msk             (0x8UL)
 #define R_SCI0_SSR_TEND_Pos            (2UL)
 #define R_SCI0_SSR_TEND_Msk            (0x4UL)
 #define R_SCI0_SSR_MPB_Pos             (1UL)
 #define R_SCI0_SSR_MPB_Msk             (0x2UL)
 #define R_SCI0_SSR_MPBT_Pos            (0UL)
 #define R_SCI0_SSR_MPBT_Msk            (0x1UL)
/* =======================================================  SSR_FIFO  ======================================================== */
 #define R_SCI0_SSR_FIFO_TDFE_Pos       (7UL)
 #define R_SCI0_SSR_FIFO_TDFE_Msk       (0x80UL)
 #define R_SCI0_SSR_FIFO_RDF_Pos        (6UL)
 #define R_SCI0_SSR_FIFO_RDF_Msk        (0x40UL)
 #define R_SCI0_SSR_FIFO_ORER_Pos       (5UL)
 #define R_SCI0_SSR_FIFO_ORER_Msk       (0x20UL)
 #define R_SCI0_SSR_FIFO_FER_Pos        (4UL)
 #define R_SCI0_SSR_FIFO_FER_Msk        (0x10UL)
 #define R_SCI0_SSR_FIFO_PER_Pos        (3UL)
 #define R_SCI0_SSR_FIFO_PER_Msk        (0x8UL)
 #define R_SCI0_SSR_FIFO_TEND_Pos       (2UL)
 #define R_SCI0_SSR_FIFO_TEND_Msk       (0x4UL)
 #define R_SCI0_SSR_FIFO_DR_Pos         (0UL)
 #define R_SCI0_SSR_FIFO_DR_Msk         (0x1UL)
/* =======================================================  SSR_SMCI  ======================================================== */
 #define R_SCI0_SSR_SMCI_TDRE_Pos       (7UL)
 #define R_SCI0_SSR_SMCI_TDRE_Msk       (0x80UL)
 #define R_SCI0_SSR_SMCI_RDRF_Pos       (6UL)
 #define R_SCI0_SSR_SMCI_RDRF_Msk       (0x40UL)
 #define R_SCI0_SSR_SMCI_ORER_Pos       (5UL)
 #define R_SCI0_SSR_SMCI_ORER_Msk       (0x20UL)
 #define R_SCI0_SSR_SMCI_ERS_Pos        (4UL)
 #define R_SCI0_SSR_SMCI_ERS_Msk        (0x10UL)
 #define R_SCI0_SSR_SMCI_PER_Pos        (3UL)
 #define R_SCI0_SSR_SMCI_PER_Msk        (0x8UL)
 #define R_SCI0_SSR_SMCI_TEND_Pos       (2UL)
 #define R_SCI0_SSR_SMCI_TEND_Msk       (0x4UL)
 #define R_SCI0_SSR_SMCI_MPB_Pos        (1UL)
 #define R_SCI0_SSR_SMCI_MPB_Msk        (0x2UL)
 #define R_SCI0_SSR_SMCI_MPBT_Pos       (0UL)
 #define R_SCI0_SSR_SMCI_MPBT_Msk       (0x1UL)
/* ==========================================================  RDR  ========================================================== */
 #define R_SCI0_RDR_RDR_Pos             (0UL)
 #define R_SCI0_RDR_RDR_Msk             (0xffUL)
/* =========================================================  SCMR  ========================================================== */
 #define R_SCI0_SCMR_BCP2_Pos           (7UL)
 #define R_SCI0_SCMR_BCP2_Msk           (0x80UL)
 #define R_SCI0_SCMR_CHR1_Pos           (4UL)
 #define R_SCI0_SCMR_CHR1_Msk           (0x10UL)
 #define R_SCI0_SCMR_SDIR_Pos           (3UL)
 #define R_SCI0_SCMR_SDIR_Msk           (0x8UL)
 #define R_SCI0_SCMR_SINV_Pos           (2UL)
 #define R_SCI0_SCMR_SINV_Msk           (0x4UL)
 #define R_SCI0_SCMR_SMIF_Pos           (0UL)
 #define R_SCI0_SCMR_SMIF_Msk           (0x1UL)
/* =========================================================  SEMR  ========================================================== */
 #define R_SCI0_SEMR_RXDESEL_Pos        (7UL)
 #define R_SCI0_SEMR_RXDESEL_Msk        (0x80UL)
 #define R_SCI0_SEMR_BGDM_Pos           (6UL)
 #define R_SCI0_SEMR_BGDM_Msk           (0x40UL)
 #define R_SCI0_SEMR_NFEN_Pos           (5UL)
 #define R_SCI0_SEMR_NFEN_Msk           (0x20UL)
 #define R_SCI0_SEMR_ABCS_Pos           (4UL)
 #define R_SCI0_SEMR_ABCS_Msk           (0x10UL)
 #define R_SCI0_SEMR_ABCSE_Pos          (3UL)
 #define R_SCI0_SEMR_ABCSE_Msk          (0x8UL)
 #define R_SCI0_SEMR_BRME_Pos           (2UL)
 #define R_SCI0_SEMR_BRME_Msk           (0x4UL)
 #define R_SCI0_SEMR_PADIS_Pos          (1UL)
 #define R_SCI0_SEMR_PADIS_Msk          (0x2UL)
 #define R_SCI0_SEMR_ACS0_Pos           (0UL)
 #define R_SCI0_SEMR_ACS0_Msk           (0x1UL)
/* =========================================================  SNFR  ========================================================== */
 #define R_SCI0_SNFR_NFCS_Pos           (0UL)
 #define R_SCI0_SNFR_NFCS_Msk           (0x7UL)
/* =========================================================  SIMR1  ========================================================= */
 #define R_SCI0_SIMR1_IICDL_Pos         (3UL)
 #define R_SCI0_SIMR1_IICDL_Msk         (0xf8UL)
 #define R_SCI0_SIMR1_IICM_Pos          (0UL)
 #define R_SCI0_SIMR1_IICM_Msk          (0x1UL)
/* =========================================================  SIMR2  ========================================================= */
 #define R_SCI0_SIMR2_IICACKT_Pos       (5UL)
 #define R_SCI0_SIMR2_IICACKT_Msk       (0x20UL)
 #define R_SCI0_SIMR2_IICCSC_Pos        (1UL)
 #define R_SCI0_SIMR2_IICCSC_Msk        (0x2UL)
 #define R_SCI0_SIMR2_IICINTM_Pos       (0UL)
 #define R_SCI0_SIMR2_IICINTM_Msk       (0x1UL)
/* =========================================================  SIMR3  ========================================================= */
 #define R_SCI0_SIMR3_IICSCLS_Pos       (6UL)
 #define R_SCI0_SIMR3_IICSCLS_Msk       (0xc0UL)
 #define R_SCI0_SIMR3_IICSDAS_Pos       (4UL)
 #define R_SCI0_SIMR3_IICSDAS_Msk       (0x30UL)
 #define R_SCI0_SIMR3_IICSTIF_Pos       (3UL)
 #define R_SCI0_SIMR3_IICSTIF_Msk       (0x8UL)
 #define R_SCI0_SIMR3_IICSTPREQ_Pos     (2UL)
 #define R_SCI0_SIMR3_IICSTPREQ_Msk     (0x4UL)
 #define R_SCI0_SIMR3_IICRSTAREQ_Pos    (1UL)
 #define R_SCI0_SIMR3_IICRSTAREQ_Msk    (0x2UL)
 #define R_SCI0_SIMR3_IICSTAREQ_Pos     (0UL)
 #define R_SCI0_SIMR3_IICSTAREQ_Msk     (0x1UL)
/* =========================================================  SISR  ========================================================== */
 #define R_SCI0_SISR_IICACKR_Pos        (0UL)
 #define R_SCI0_SISR_IICACKR_Msk        (0x1UL)
/* =========================================================  SPMR  ========================================================== */
 #define R_SCI0_SPMR_CKPH_Pos           (7UL)
 #define R_SCI0_SPMR_CKPH_Msk           (0x80UL)
 #define R_SCI0_SPMR_CKPOL_Pos          (6UL)
 #define R_SCI0_SPMR_CKPOL_Msk          (0x40UL)
 #define R_SCI0_SPMR_MFF_Pos            (4UL)
 #define R_SCI0_SPMR_MFF_Msk            (0x10UL)
 #define R_SCI0_SPMR_CSTPEN_Pos         (3UL)
 #define R_SCI0_SPMR_CSTPEN_Msk         (0x8UL)
 #define R_SCI0_SPMR_MSS_Pos            (2UL)
 #define R_SCI0_SPMR_MSS_Msk            (0x4UL)
 #define R_SCI0_SPMR_CTSE_Pos           (1UL)
 #define R_SCI0_SPMR_CTSE_Msk           (0x2UL)
 #define R_SCI0_SPMR_SSE_Pos            (0UL)
 #define R_SCI0_SPMR_SSE_Msk            (0x1UL)
/* =========================================================  TDRHL  ========================================================= */
 #define R_SCI0_TDRHL_TDRHL_Pos         (0UL)
 #define R_SCI0_TDRHL_TDRHL_Msk         (0xffffUL)
/* ========================================================  FTDRHL  ========================================================= */
 #define R_SCI0_FTDRHL_MPBT_Pos         (9UL)
 #define R_SCI0_FTDRHL_MPBT_Msk         (0x200UL)
 #define R_SCI0_FTDRHL_TDAT_Pos         (0UL)
 #define R_SCI0_FTDRHL_TDAT_Msk         (0x1ffUL)
/* =========================================================  FTDRH  ========================================================= */
 #define R_SCI0_FTDRH_MPBT_Pos          (1UL)
 #define R_SCI0_FTDRH_MPBT_Msk          (0x2UL)
 #define R_SCI0_FTDRH_TDATH_Pos         (0UL)
 #define R_SCI0_FTDRH_TDATH_Msk         (0x1UL)
/* =========================================================  FTDRL  ========================================================= */
 #define R_SCI0_FTDRL_TDATL_Pos         (0UL)
 #define R_SCI0_FTDRL_TDATL_Msk         (0xffUL)
/* =========================================================  RDRHL  ========================================================= */
 #define R_SCI0_RDRHL_RDRHL_Pos         (0UL)
 #define R_SCI0_RDRHL_RDRHL_Msk         (0xffffUL)
/* ========================================================  FRDRHL  ========================================================= */
 #define R_SCI0_FRDRHL_RDF_Pos          (14UL)
 #define R_SCI0_FRDRHL_RDF_Msk          (0x4000UL)
 #define R_SCI0_FRDRHL_ORER_Pos         (13UL)
 #define R_SCI0_FRDRHL_ORER_Msk         (0x2000UL)
 #define R_SCI0_FRDRHL_FER_Pos          (12UL)
 #define R_SCI0_FRDRHL_FER_Msk          (0x1000UL)
 #define R_SCI0_FRDRHL_PER_Pos          (11UL)
 #define R_SCI0_FRDRHL_PER_Msk          (0x800UL)
 #define R_SCI0_FRDRHL_DR_Pos           (10UL)
 #define R_SCI0_FRDRHL_DR_Msk           (0x400UL)
 #define R_SCI0_FRDRHL_MPB_Pos          (9UL)
 #define R_SCI0_FRDRHL_MPB_Msk          (0x200UL)
 #define R_SCI0_FRDRHL_RDAT_Pos         (0UL)
 #define R_SCI0_FRDRHL_RDAT_Msk         (0x1ffUL)
/* =========================================================  FRDRH  ========================================================= */
 #define R_SCI0_FRDRH_RDF_Pos           (6UL)
 #define R_SCI0_FRDRH_RDF_Msk           (0x40UL)
 #define R_SCI0_FRDRH_ORER_Pos          (5UL)
 #define R_SCI0_FRDRH_ORER_Msk          (0x20UL)
 #define R_SCI0_FRDRH_FER_Pos           (4UL)
 #define R_SCI0_FRDRH_FER_Msk           (0x10UL)
 #define R_SCI0_FRDRH_PER_Pos           (3UL)
 #define R_SCI0_FRDRH_PER_Msk           (0x8UL)
 #define R_SCI0_FRDRH_DR_Pos            (2UL)
 #define R_SCI0_FRDRH_DR_Msk            (0x4UL)
 #define R_SCI0_FRDRH_MPB_Pos           (1UL)
 #define R_SCI0_FRDRH_MPB_Msk           (0x2UL)
 #define R_SCI0_FRDRH_RDATH_Pos         (0UL)
 #define R_SCI0_FRDRH_RDATH_Msk         (0x1UL)
/* =========================================================  FRDRL  ========================================================= */
 #define R_SCI0_FRDRL_RDATL_Pos         (0UL)
 #define R_SCI0_FRDRL_RDATL_Msk         (0xffUL)
/* =========================================================  MDDR  ========================================================== */
 #define R_SCI0_MDDR_MDDR_Pos           (0UL)
 #define R_SCI0_MDDR_MDDR_Msk           (0xffUL)
/* =========================================================  DCCR  ========================================================== */
 #define R_SCI0_DCCR_DCME_Pos           (7UL)
 #define R_SCI0_DCCR_DCME_Msk           (0x80UL)
 #define R_SCI0_DCCR_IDSEL_Pos          (6UL)
 #define R_SCI0_DCCR_IDSEL_Msk          (0x40UL)
 #define R_SCI0_DCCR_DFER_Pos           (4UL)
 #define R_SCI0_DCCR_DFER_Msk           (0x10UL)
 #define R_SCI0_DCCR_DPER_Pos           (3UL)
 #define R_SCI0_DCCR_DPER_Msk           (0x8UL)
 #define R_SCI0_DCCR_DCMF_Pos           (0UL)
 #define R_SCI0_DCCR_DCMF_Msk           (0x1UL)
/* ==========================================================  FCR  ========================================================== */
 #define R_SCI0_FCR_RSTRG_Pos           (12UL)
 #define R_SCI0_FCR_RSTRG_Msk           (0xf000UL)
 #define R_SCI0_FCR_RTRG_Pos            (8UL)
 #define R_SCI0_FCR_RTRG_Msk            (0xf00UL)
 #define R_SCI0_FCR_TTRG_Pos            (4UL)
 #define R_SCI0_FCR_TTRG_Msk            (0xf0UL)
 #define R_SCI0_FCR_DRES_Pos            (3UL)
 #define R_SCI0_FCR_DRES_Msk            (0x8UL)
 #define R_SCI0_FCR_TFRST_Pos           (2UL)
 #define R_SCI0_FCR_TFRST_Msk           (0x4UL)
 #define R_SCI0_FCR_RFRST_Pos           (1UL)
 #define R_SCI0_FCR_RFRST_Msk           (0x2UL)
 #define R_SCI0_FCR_FM_Pos              (0UL)
 #define R_SCI0_FCR_FM_Msk              (0x1UL)
/* ==========================================================  FDR  ========================================================== */
 #define R_SCI0_FDR_T_Pos               (8UL)
 #define R_SCI0_FDR_T_Msk               (0x1f00UL)
 #define R_SCI0_FDR_R_Pos               (0UL)
 #define R_SCI0_FDR_R_Msk               (0x1fUL)
/* ==========================================================  LSR  ========================================================== */
 #define R_SCI0_LSR_PNUM_Pos            (8UL)
 #define R_SCI0_LSR_PNUM_Msk            (0x1f00UL)
 #define R_SCI0_LSR_FNUM_Pos            (2UL)
 #define R_SCI0_LSR_FNUM_Msk            (0x7cUL)
 #define R_SCI0_LSR_ORER_Pos            (0UL)
 #define R_SCI0_LSR_ORER_Msk            (0x1UL)
/* ==========================================================  CDR  ========================================================== */
 #define R_SCI0_CDR_CMPD_Pos            (0UL)
 #define R_SCI0_CDR_CMPD_Msk            (0x1ffUL)
/* =========================================================  SPTR  ========================================================== */
 #define R_SCI0_SPTR_SPB2IO_Pos         (2UL)
 #define R_SCI0_SPTR_SPB2IO_Msk         (0x4UL)
 #define R_SCI0_SPTR_SPB2DT_Pos         (1UL)
 #define R_SCI0_SPTR_SPB2DT_Msk         (0x2UL)
 #define R_SCI0_SPTR_RXDMON_Pos         (0UL)
 #define R_SCI0_SPTR_RXDMON_Msk         (0x1UL)
 #define R_SCI0_SPTR_RINV_Pos           (4UL)
 #define R_SCI0_SPTR_RINV_Msk           (0x10UL)
 #define R_SCI0_SPTR_TINV_Pos           (5UL)
 #define R_SCI0_SPTR_TINV_Msk           (0x20UL)
 #define R_SCI0_SPTR_ASEN_Pos           (6UL)
 #define R_SCI0_SPTR_ASEN_Msk           (0x40UL)
 #define R_SCI0_SPTR_ATEN_Pos           (7UL)
 #define R_SCI0_SPTR_ATEN_Msk           (0x80UL)
/* =========================================================  ACTR  ========================================================== */
 #define R_SCI0_ACTR_AST_Pos            (0UL)
 #define R_SCI0_ACTR_AST_Msk            (0x7UL)
 #define R_SCI0_ACTR_AJD_Pos            (3UL)
 #define R_SCI0_ACTR_AJD_Msk            (0x8UL)
 #define R_SCI0_ACTR_ATT_Pos            (4UL)
 #define R_SCI0_ACTR_ATT_Msk            (0x70UL)
 #define R_SCI0_ACTR_AET_Pos            (7UL)
 #define R_SCI0_ACTR_AET_Msk            (0x80UL)
/* =========================================================  ESMER  ========================================================= */
 #define R_SCI0_ESMER_ESME_Pos          (0UL)
 #define R_SCI0_ESMER_ESME_Msk          (0x1UL)
/* ==========================================================  CR0  ========================================================== */
 #define R_SCI0_CR0_SFSF_Pos            (1UL)
 #define R_SCI0_CR0_SFSF_Msk            (0x2UL)
 #define R_SCI0_CR0_RXDSF_Pos           (2UL)
 #define R_SCI0_CR0_RXDSF_Msk           (0x4UL)
 #define R_SCI0_CR0_BRME_Pos            (3UL)
 #define R_SCI0_CR0_BRME_Msk            (0x8UL)
/* ==========================================================  CR1  ========================================================== */
 #define R_SCI0_CR1_BFE_Pos             (0UL)
 #define R_SCI0_CR1_BFE_Msk             (0x1UL)
 #define R_SCI0_CR1_CF0RE_Pos           (1UL)
 #define R_SCI0_CR1_CF0RE_Msk           (0x2UL)
 #define R_SCI0_CR1_CF1DS_Pos           (2UL)
 #define R_SCI0_CR1_CF1DS_Msk           (0xcUL)
 #define R_SCI0_CR1_PIBE_Pos            (4UL)
 #define R_SCI0_CR1_PIBE_Msk            (0x10UL)
 #define R_SCI0_CR1_PIBS_Pos            (5UL)
 #define R_SCI0_CR1_PIBS_Msk            (0xe0UL)
/* ==========================================================  CR2  ========================================================== */
 #define R_SCI0_CR2_DFCS_Pos            (0UL)
 #define R_SCI0_CR2_DFCS_Msk            (0x7UL)
 #define R_SCI0_CR2_BCCS_Pos            (4UL)
 #define R_SCI0_CR2_BCCS_Msk            (0x30UL)
 #define R_SCI0_CR2_RTS_Pos             (6UL)
 #define R_SCI0_CR2_RTS_Msk             (0xc0UL)
/* ==========================================================  CR3  ========================================================== */
 #define R_SCI0_CR3_SDST_Pos            (0UL)
 #define R_SCI0_CR3_SDST_Msk            (0x1UL)
/* ==========================================================  PCR  ========================================================== */
 #define R_SCI0_PCR_TXDXPS_Pos          (0UL)
 #define R_SCI0_PCR_TXDXPS_Msk          (0x1UL)
 #define R_SCI0_PCR_RXDXPS_Pos          (1UL)
 #define R_SCI0_PCR_RXDXPS_Msk          (0x2UL)
 #define R_SCI0_PCR_SHARPS_Pos          (4UL)
 #define R_SCI0_PCR_SHARPS_Msk          (0x10UL)
/* ==========================================================  ICR  ========================================================== */
 #define R_SCI0_ICR_BFDIE_Pos           (0UL)
 #define R_SCI0_ICR_BFDIE_Msk           (0x1UL)
 #define R_SCI0_ICR_CF0MIE_Pos          (1UL)
 #define R_SCI0_ICR_CF0MIE_Msk          (0x2UL)
 #define R_SCI0_ICR_CF1MIE_Pos          (2UL)
 #define R_SCI0_ICR_CF1MIE_Msk          (0x4UL)
 #define R_SCI0_ICR_PIBDIE_Pos          (3UL)
 #define R_SCI0_ICR_PIBDIE_Msk          (0x8UL)
 #define R_SCI0_ICR_BCDIE_Pos           (4UL)
 #define R_SCI0_ICR_BCDIE_Msk           (0x10UL)
 #define R_SCI0_ICR_AEDIE_Pos           (5UL)
 #define R_SCI0_ICR_AEDIE_Msk           (0x20UL)
/* ==========================================================  STR  ========================================================== */
 #define R_SCI0_STR_BFDF_Pos            (0UL)
 #define R_SCI0_STR_BFDF_Msk            (0x1UL)
 #define R_SCI0_STR_CF0MF_Pos           (1UL)
 #define R_SCI0_STR_CF0MF_Msk           (0x2UL)
 #define R_SCI0_STR_CF1MF_Pos           (2UL)
 #define R_SCI0_STR_CF1MF_Msk           (0x4UL)
 #define R_SCI0_STR_PIBDF_Pos           (3UL)
 #define R_SCI0_STR_PIBDF_Msk           (0x8UL)
 #define R_SCI0_STR_BCDF_Pos            (4UL)
 #define R_SCI0_STR_BCDF_Msk            (0x10UL)
 #define R_SCI0_STR_AEDF_Pos            (5UL)
 #define R_SCI0_STR_AEDF_Msk            (0x20UL)
/* =========================================================  STCR  ========================================================== */
 #define R_SCI0_STCR_BFDCL_Pos          (0UL)
 #define R_SCI0_STCR_BFDCL_Msk          (0x1UL)
 #define R_SCI0_STCR_CF0MCL_Pos         (1UL)
 #define R_SCI0_STCR_CF0MCL_Msk         (0x2UL)
 #define R_SCI0_STCR_CF1MCL_Pos         (2UL)
 #define R_SCI0_STCR_CF1MCL_Msk         (0x4UL)
 #define R_SCI0_STCR_PIBDCL_Pos         (3UL)
 #define R_SCI0_STCR_PIBDCL_Msk         (0x8UL)
 #define R_SCI0_STCR_BCDCL_Pos          (4UL)
 #define R_SCI0_STCR_BCDCL_Msk          (0x10UL)
 #define R_SCI0_STCR_AEDCL_Pos          (5UL)
 #define R_SCI0_STCR_AEDCL_Msk          (0x20UL)
/* =========================================================  CF0DR  ========================================================= */
/* =========================================================  CF0CR  ========================================================= */
 #define R_SCI0_CF0CR_CF0CE0_Pos        (0UL)
 #define R_SCI0_CF0CR_CF0CE0_Msk        (0x1UL)
 #define R_SCI0_CF0CR_CF0CE1_Pos        (1UL)
 #define R_SCI0_CF0CR_CF0CE1_Msk        (0x2UL)
 #define R_SCI0_CF0CR_CF0CE2_Pos        (2UL)
 #define R_SCI0_CF0CR_CF0CE2_Msk        (0x4UL)
 #define R_SCI0_CF0CR_CF0CE3_Pos        (3UL)
 #define R_SCI0_CF0CR_CF0CE3_Msk        (0x8UL)
 #define R_SCI0_CF0CR_CF0CE4_Pos        (4UL)
 #define R_SCI0_CF0CR_CF0CE4_Msk        (0x10UL)
 #define R_SCI0_CF0CR_CF0CE5_Pos        (5UL)
 #define R_SCI0_CF0CR_CF0CE5_Msk        (0x20UL)
 #define R_SCI0_CF0CR_CF0CE6_Pos        (6UL)
 #define R_SCI0_CF0CR_CF0CE6_Msk        (0x40UL)
 #define R_SCI0_CF0CR_CF0CE7_Pos        (7UL)
 #define R_SCI0_CF0CR_CF0CE7_Msk        (0x80UL)
/* =========================================================  CF0RR  ========================================================= */
/* ========================================================  PCF1DR  ========================================================= */
/* ========================================================  SCF1DR  ========================================================= */
/* =========================================================  CF1CR  ========================================================= */
 #define R_SCI0_CF1CR_CF1CE0_Pos        (0UL)
 #define R_SCI0_CF1CR_CF1CE0_Msk        (0x1UL)
 #define R_SCI0_CF1CR_CF1CE1_Pos        (1UL)
 #define R_SCI0_CF1CR_CF1CE1_Msk        (0x2UL)
 #define R_SCI0_CF1CR_CF1CE2_Pos        (2UL)
 #define R_SCI0_CF1CR_CF1CE2_Msk        (0x4UL)
 #define R_SCI0_CF1CR_CF1CE3_Pos        (3UL)
 #define R_SCI0_CF1CR_CF1CE3_Msk        (0x8UL)
 #define R_SCI0_CF1CR_CF1CE4_Pos        (4UL)
 #define R_SCI0_CF1CR_CF1CE4_Msk        (0x10UL)
 #define R_SCI0_CF1CR_CF1CE5_Pos        (5UL)
 #define R_SCI0_CF1CR_CF1CE5_Msk        (0x20UL)
 #define R_SCI0_CF1CR_CF1CE6_Pos        (6UL)
 #define R_SCI0_CF1CR_CF1CE6_Msk        (0x40UL)
 #define R_SCI0_CF1CR_CF1CE7_Pos        (7UL)
 #define R_SCI0_CF1CR_CF1CE7_Msk        (0x80UL)
/* =========================================================  CF1RR  ========================================================= */
/* ==========================================================  TCR  ========================================================== */
 #define R_SCI0_TCR_TCST_Pos            (0UL)
 #define R_SCI0_TCR_TCST_Msk            (0x1UL)
/* ==========================================================  TMR  ========================================================== */
 #define R_SCI0_TMR_TOMS_Pos            (0UL)
 #define R_SCI0_TMR_TOMS_Msk            (0x3UL)
 #define R_SCI0_TMR_TWRC_Pos            (3UL)
 #define R_SCI0_TMR_TWRC_Msk            (0x8UL)
 #define R_SCI0_TMR_TCSS_Pos            (4UL)
 #define R_SCI0_TMR_TCSS_Msk            (0x70UL)
/* =========================================================  TPRE  ========================================================== */
/* =========================================================  TCNT  ========================================================== */

/* =========================================================================================================================== */
/* ================                                          R_SDHI0                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  SD_CMD  ========================================================= */
 #define R_SDHI0_SD_CMD_CMD12AT_Pos              (14UL)
 #define R_SDHI0_SD_CMD_CMD12AT_Msk              (0xc000UL)
 #define R_SDHI0_SD_CMD_TRSTP_Pos                (13UL)
 #define R_SDHI0_SD_CMD_TRSTP_Msk                (0x2000UL)
 #define R_SDHI0_SD_CMD_CMDRW_Pos                (12UL)
 #define R_SDHI0_SD_CMD_CMDRW_Msk                (0x1000UL)
 #define R_SDHI0_SD_CMD_CMDTP_Pos                (11UL)
 #define R_SDHI0_SD_CMD_CMDTP_Msk                (0x800UL)
 #define R_SDHI0_SD_CMD_RSPTP_Pos                (8UL)
 #define R_SDHI0_SD_CMD_RSPTP_Msk                (0x700UL)
 #define R_SDHI0_SD_CMD_ACMD_Pos                 (6UL)
 #define R_SDHI0_SD_CMD_ACMD_Msk                 (0xc0UL)
 #define R_SDHI0_SD_CMD_CMDIDX_Pos               (0UL)
 #define R_SDHI0_SD_CMD_CMDIDX_Msk               (0x3fUL)
/* ========================================================  SD_ARG  ========================================================= */
 #define R_SDHI0_SD_ARG_SD_ARG_Pos               (0UL)
 #define R_SDHI0_SD_ARG_SD_ARG_Msk               (0xffffffffUL)
/* ========================================================  SD_ARG1  ======================================================== */
 #define R_SDHI0_SD_ARG1_SD_ARG1_Pos             (0UL)
 #define R_SDHI0_SD_ARG1_SD_ARG1_Msk             (0xffffUL)
/* ========================================================  SD_STOP  ======================================================== */
 #define R_SDHI0_SD_STOP_SEC_Pos                 (8UL)
 #define R_SDHI0_SD_STOP_SEC_Msk                 (0x100UL)
 #define R_SDHI0_SD_STOP_STP_Pos                 (0UL)
 #define R_SDHI0_SD_STOP_STP_Msk                 (0x1UL)
/* =======================================================  SD_SECCNT  ======================================================= */
 #define R_SDHI0_SD_SECCNT_SD_SECCNT_Pos         (0UL)
 #define R_SDHI0_SD_SECCNT_SD_SECCNT_Msk         (0xffffffffUL)
/* =======================================================  SD_RSP10  ======================================================== */
 #define R_SDHI0_SD_RSP10_SD_RSP10_Pos           (0UL)
 #define R_SDHI0_SD_RSP10_SD_RSP10_Msk           (0xffffffffUL)
/* ========================================================  SD_RSP1  ======================================================== */
 #define R_SDHI0_SD_RSP1_SD_RSP1_Pos             (0UL)
 #define R_SDHI0_SD_RSP1_SD_RSP1_Msk             (0xffffUL)
/* =======================================================  SD_RSP32  ======================================================== */
 #define R_SDHI0_SD_RSP32_SD_RSP32_Pos           (0UL)
 #define R_SDHI0_SD_RSP32_SD_RSP32_Msk           (0xffffffffUL)
/* ========================================================  SD_RSP3  ======================================================== */
 #define R_SDHI0_SD_RSP3_SD_RSP3_Pos             (0UL)
 #define R_SDHI0_SD_RSP3_SD_RSP3_Msk             (0xffffUL)
/* =======================================================  SD_RSP54  ======================================================== */
 #define R_SDHI0_SD_RSP54_SD_RSP54_Pos           (0UL)
 #define R_SDHI0_SD_RSP54_SD_RSP54_Msk           (0xffffffffUL)
/* ========================================================  SD_RSP5  ======================================================== */
 #define R_SDHI0_SD_RSP5_SD_RSP5_Pos             (0UL)
 #define R_SDHI0_SD_RSP5_SD_RSP5_Msk             (0xffffUL)
/* =======================================================  SD_RSP76  ======================================================== */
 #define R_SDHI0_SD_RSP76_SD_RSP76_Pos           (0UL)
 #define R_SDHI0_SD_RSP76_SD_RSP76_Msk           (0xffffffUL)
/* ========================================================  SD_RSP7  ======================================================== */
 #define R_SDHI0_SD_RSP7_SD_RSP7_Pos             (0UL)
 #define R_SDHI0_SD_RSP7_SD_RSP7_Msk             (0xffUL)
/* =======================================================  SD_INFO1  ======================================================== */
 #define R_SDHI0_SD_INFO1_SDD3MON_Pos            (10UL)
 #define R_SDHI0_SD_INFO1_SDD3MON_Msk            (0x400UL)
 #define R_SDHI0_SD_INFO1_SDD3IN_Pos             (9UL)
 #define R_SDHI0_SD_INFO1_SDD3IN_Msk             (0x200UL)
 #define R_SDHI0_SD_INFO1_SDD3RM_Pos             (8UL)
 #define R_SDHI0_SD_INFO1_SDD3RM_Msk             (0x100UL)
 #define R_SDHI0_SD_INFO1_SDWPMON_Pos            (7UL)
 #define R_SDHI0_SD_INFO1_SDWPMON_Msk            (0x80UL)
 #define R_SDHI0_SD_INFO1_SDCDMON_Pos            (5UL)
 #define R_SDHI0_SD_INFO1_SDCDMON_Msk            (0x20UL)
 #define R_SDHI0_SD_INFO1_SDCDIN_Pos             (4UL)
 #define R_SDHI0_SD_INFO1_SDCDIN_Msk             (0x10UL)
 #define R_SDHI0_SD_INFO1_SDCDRM_Pos             (3UL)
 #define R_SDHI0_SD_INFO1_SDCDRM_Msk             (0x8UL)
 #define R_SDHI0_SD_INFO1_ACEND_Pos              (2UL)
 #define R_SDHI0_SD_INFO1_ACEND_Msk              (0x4UL)
 #define R_SDHI0_SD_INFO1_RSPEND_Pos             (0UL)
 #define R_SDHI0_SD_INFO1_RSPEND_Msk             (0x1UL)
/* =======================================================  SD_INFO2  ======================================================== */
 #define R_SDHI0_SD_INFO2_ILA_Pos                (15UL)
 #define R_SDHI0_SD_INFO2_ILA_Msk                (0x8000UL)
 #define R_SDHI0_SD_INFO2_CBSY_Pos               (14UL)
 #define R_SDHI0_SD_INFO2_CBSY_Msk               (0x4000UL)
 #define R_SDHI0_SD_INFO2_SD_CLK_CTRLEN_Pos      (13UL)
 #define R_SDHI0_SD_INFO2_SD_CLK_CTRLEN_Msk      (0x2000UL)
 #define R_SDHI0_SD_INFO2_BWE_Pos                (9UL)
 #define R_SDHI0_SD_INFO2_BWE_Msk                (0x200UL)
 #define R_SDHI0_SD_INFO2_BRE_Pos                (8UL)
 #define R_SDHI0_SD_INFO2_BRE_Msk                (0x100UL)
 #define R_SDHI0_SD_INFO2_SDD0MON_Pos            (7UL)
 #define R_SDHI0_SD_INFO2_SDD0MON_Msk            (0x80UL)
 #define R_SDHI0_SD_INFO2_RSPTO_Pos              (6UL)
 #define R_SDHI0_SD_INFO2_RSPTO_Msk              (0x40UL)
 #define R_SDHI0_SD_INFO2_ILR_Pos                (5UL)
 #define R_SDHI0_SD_INFO2_ILR_Msk                (0x20UL)
 #define R_SDHI0_SD_INFO2_ILW_Pos                (4UL)
 #define R_SDHI0_SD_INFO2_ILW_Msk                (0x10UL)
 #define R_SDHI0_SD_INFO2_DTO_Pos                (3UL)
 #define R_SDHI0_SD_INFO2_DTO_Msk                (0x8UL)
 #define R_SDHI0_SD_INFO2_ENDE_Pos               (2UL)
 #define R_SDHI0_SD_INFO2_ENDE_Msk               (0x4UL)
 #define R_SDHI0_SD_INFO2_CRCE_Pos               (1UL)
 #define R_SDHI0_SD_INFO2_CRCE_Msk               (0x2UL)
 #define R_SDHI0_SD_INFO2_CMDE_Pos               (0UL)
 #define R_SDHI0_SD_INFO2_CMDE_Msk               (0x1UL)
/* =====================================================  SD_INFO1_MASK  ===================================================== */
 #define R_SDHI0_SD_INFO1_MASK_SDD3INM_Pos       (9UL)
 #define R_SDHI0_SD_INFO1_MASK_SDD3INM_Msk       (0x200UL)
 #define R_SDHI0_SD_INFO1_MASK_SDD3RMM_Pos       (8UL)
 #define R_SDHI0_SD_INFO1_MASK_SDD3RMM_Msk       (0x100UL)
 #define R_SDHI0_SD_INFO1_MASK_SDCDINM_Pos       (4UL)
 #define R_SDHI0_SD_INFO1_MASK_SDCDINM_Msk       (0x10UL)
 #define R_SDHI0_SD_INFO1_MASK_SDCDRMM_Pos       (3UL)
 #define R_SDHI0_SD_INFO1_MASK_SDCDRMM_Msk       (0x8UL)
 #define R_SDHI0_SD_INFO1_MASK_ACENDM_Pos        (2UL)
 #define R_SDHI0_SD_INFO1_MASK_ACENDM_Msk        (0x4UL)
 #define R_SDHI0_SD_INFO1_MASK_RSPENDM_Pos       (0UL)
 #define R_SDHI0_SD_INFO1_MASK_RSPENDM_Msk       (0x1UL)
/* =====================================================  SD_INFO2_MASK  ===================================================== */
 #define R_SDHI0_SD_INFO2_MASK_ILAM_Pos          (15UL)
 #define R_SDHI0_SD_INFO2_MASK_ILAM_Msk          (0x8000UL)
 #define R_SDHI0_SD_INFO2_MASK_BWEM_Pos          (9UL)
 #define R_SDHI0_SD_INFO2_MASK_BWEM_Msk          (0x200UL)
 #define R_SDHI0_SD_INFO2_MASK_BREM_Pos          (8UL)
 #define R_SDHI0_SD_INFO2_MASK_BREM_Msk          (0x100UL)
 #define R_SDHI0_SD_INFO2_MASK_RSPTOM_Pos        (6UL)
 #define R_SDHI0_SD_INFO2_MASK_RSPTOM_Msk        (0x40UL)
 #define R_SDHI0_SD_INFO2_MASK_ILRM_Pos          (5UL)
 #define R_SDHI0_SD_INFO2_MASK_ILRM_Msk          (0x20UL)
 #define R_SDHI0_SD_INFO2_MASK_ILWM_Pos          (4UL)
 #define R_SDHI0_SD_INFO2_MASK_ILWM_Msk          (0x10UL)
 #define R_SDHI0_SD_INFO2_MASK_DTOM_Pos          (3UL)
 #define R_SDHI0_SD_INFO2_MASK_DTOM_Msk          (0x8UL)
 #define R_SDHI0_SD_INFO2_MASK_ENDEM_Pos         (2UL)
 #define R_SDHI0_SD_INFO2_MASK_ENDEM_Msk         (0x4UL)
 #define R_SDHI0_SD_INFO2_MASK_CRCEM_Pos         (1UL)
 #define R_SDHI0_SD_INFO2_MASK_CRCEM_Msk         (0x2UL)
 #define R_SDHI0_SD_INFO2_MASK_CMDEM_Pos         (0UL)
 #define R_SDHI0_SD_INFO2_MASK_CMDEM_Msk         (0x1UL)
/* ======================================================  SD_CLK_CTRL  ====================================================== */
 #define R_SDHI0_SD_CLK_CTRL_CLKCTRLEN_Pos       (9UL)
 #define R_SDHI0_SD_CLK_CTRL_CLKCTRLEN_Msk       (0x200UL)
 #define R_SDHI0_SD_CLK_CTRL_CLKEN_Pos           (8UL)
 #define R_SDHI0_SD_CLK_CTRL_CLKEN_Msk           (0x100UL)
 #define R_SDHI0_SD_CLK_CTRL_CLKSEL_Pos          (0UL)
 #define R_SDHI0_SD_CLK_CTRL_CLKSEL_Msk          (0xffUL)
/* ========================================================  SD_SIZE  ======================================================== */
 #define R_SDHI0_SD_SIZE_LEN_Pos                 (0UL)
 #define R_SDHI0_SD_SIZE_LEN_Msk                 (0x3ffUL)
/* =======================================================  SD_OPTION  ======================================================= */
 #define R_SDHI0_SD_OPTION_WIDTH_Pos             (15UL)
 #define R_SDHI0_SD_OPTION_WIDTH_Msk             (0x8000UL)
 #define R_SDHI0_SD_OPTION_WIDTH8_Pos            (13UL)
 #define R_SDHI0_SD_OPTION_WIDTH8_Msk            (0x2000UL)
 #define R_SDHI0_SD_OPTION_TOUTMASK_Pos          (8UL)
 #define R_SDHI0_SD_OPTION_TOUTMASK_Msk          (0x100UL)
 #define R_SDHI0_SD_OPTION_TOP_Pos               (4UL)
 #define R_SDHI0_SD_OPTION_TOP_Msk               (0xf0UL)
 #define R_SDHI0_SD_OPTION_CTOP_Pos              (0UL)
 #define R_SDHI0_SD_OPTION_CTOP_Msk              (0xfUL)
/* ======================================================  SD_ERR_STS1  ====================================================== */
 #define R_SDHI0_SD_ERR_STS1_CRCTK_Pos           (12UL)
 #define R_SDHI0_SD_ERR_STS1_CRCTK_Msk           (0x7000UL)
 #define R_SDHI0_SD_ERR_STS1_CRCTKE_Pos          (11UL)
 #define R_SDHI0_SD_ERR_STS1_CRCTKE_Msk          (0x800UL)
 #define R_SDHI0_SD_ERR_STS1_RDCRCE_Pos          (10UL)
 #define R_SDHI0_SD_ERR_STS1_RDCRCE_Msk          (0x400UL)
 #define R_SDHI0_SD_ERR_STS1_RSPCRCE1_Pos        (9UL)
 #define R_SDHI0_SD_ERR_STS1_RSPCRCE1_Msk        (0x200UL)
 #define R_SDHI0_SD_ERR_STS1_RSPCRCE0_Pos        (8UL)
 #define R_SDHI0_SD_ERR_STS1_RSPCRCE0_Msk        (0x100UL)
 #define R_SDHI0_SD_ERR_STS1_CRCLENE_Pos         (5UL)
 #define R_SDHI0_SD_ERR_STS1_CRCLENE_Msk         (0x20UL)
 #define R_SDHI0_SD_ERR_STS1_RDLENE_Pos          (4UL)
 #define R_SDHI0_SD_ERR_STS1_RDLENE_Msk          (0x10UL)
 #define R_SDHI0_SD_ERR_STS1_RSPLENE1_Pos        (3UL)
 #define R_SDHI0_SD_ERR_STS1_RSPLENE1_Msk        (0x8UL)
 #define R_SDHI0_SD_ERR_STS1_RSPLENE0_Pos        (2UL)
 #define R_SDHI0_SD_ERR_STS1_RSPLENE0_Msk        (0x4UL)
 #define R_SDHI0_SD_ERR_STS1_CMDE1_Pos           (1UL)
 #define R_SDHI0_SD_ERR_STS1_CMDE1_Msk           (0x2UL)
 #define R_SDHI0_SD_ERR_STS1_CMDE0_Pos           (0UL)
 #define R_SDHI0_SD_ERR_STS1_CMDE0_Msk           (0x1UL)
/* ======================================================  SD_ERR_STS2  ====================================================== */
 #define R_SDHI0_SD_ERR_STS2_CRCBSYTO_Pos        (6UL)
 #define R_SDHI0_SD_ERR_STS2_CRCBSYTO_Msk        (0x40UL)
 #define R_SDHI0_SD_ERR_STS2_CRCTO_Pos           (5UL)
 #define R_SDHI0_SD_ERR_STS2_CRCTO_Msk           (0x20UL)
 #define R_SDHI0_SD_ERR_STS2_RDTO_Pos            (4UL)
 #define R_SDHI0_SD_ERR_STS2_RDTO_Msk            (0x10UL)
 #define R_SDHI0_SD_ERR_STS2_BSYTO1_Pos          (3UL)
 #define R_SDHI0_SD_ERR_STS2_BSYTO1_Msk          (0x8UL)
 #define R_SDHI0_SD_ERR_STS2_BSYTO0_Pos          (2UL)
 #define R_SDHI0_SD_ERR_STS2_BSYTO0_Msk          (0x4UL)
 #define R_SDHI0_SD_ERR_STS2_RSPTO1_Pos          (1UL)
 #define R_SDHI0_SD_ERR_STS2_RSPTO1_Msk          (0x2UL)
 #define R_SDHI0_SD_ERR_STS2_RSPTO0_Pos          (0UL)
 #define R_SDHI0_SD_ERR_STS2_RSPTO0_Msk          (0x1UL)
/* ========================================================  SD_BUF0  ======================================================== */
 #define R_SDHI0_SD_BUF0_SD_BUF_Pos              (0UL)
 #define R_SDHI0_SD_BUF0_SD_BUF_Msk              (0xffffffffUL)
/* =======================================================  SDIO_MODE  ======================================================= */
 #define R_SDHI0_SDIO_MODE_C52PUB_Pos            (9UL)
 #define R_SDHI0_SDIO_MODE_C52PUB_Msk            (0x200UL)
 #define R_SDHI0_SDIO_MODE_IOABT_Pos             (8UL)
 #define R_SDHI0_SDIO_MODE_IOABT_Msk             (0x100UL)
 #define R_SDHI0_SDIO_MODE_RWREQ_Pos             (2UL)
 #define R_SDHI0_SDIO_MODE_RWREQ_Msk             (0x4UL)
 #define R_SDHI0_SDIO_MODE_INTEN_Pos             (0UL)
 #define R_SDHI0_SDIO_MODE_INTEN_Msk             (0x1UL)
/* ======================================================  SDIO_INFO1  ======================================================= */
 #define R_SDHI0_SDIO_INFO1_EXWT_Pos             (15UL)
 #define R_SDHI0_SDIO_INFO1_EXWT_Msk             (0x8000UL)
 #define R_SDHI0_SDIO_INFO1_EXPUB52_Pos          (14UL)
 #define R_SDHI0_SDIO_INFO1_EXPUB52_Msk          (0x4000UL)
 #define R_SDHI0_SDIO_INFO1_IOIRQ_Pos            (0UL)
 #define R_SDHI0_SDIO_INFO1_IOIRQ_Msk            (0x1UL)
/* ====================================================  SDIO_INFO1_MASK  ==================================================== */
 #define R_SDHI0_SDIO_INFO1_MASK_EXWTM_Pos       (15UL)
 #define R_SDHI0_SDIO_INFO1_MASK_EXWTM_Msk       (0x8000UL)
 #define R_SDHI0_SDIO_INFO1_MASK_EXPUB52M_Pos    (14UL)
 #define R_SDHI0_SDIO_INFO1_MASK_EXPUB52M_Msk    (0x4000UL)
 #define R_SDHI0_SDIO_INFO1_MASK_IOIRQM_Pos      (0UL)
 #define R_SDHI0_SDIO_INFO1_MASK_IOIRQM_Msk      (0x1UL)
/* =======================================================  SD_DMAEN  ======================================================== */
 #define R_SDHI0_SD_DMAEN_DMAEN_Pos              (1UL)
 #define R_SDHI0_SD_DMAEN_DMAEN_Msk              (0x2UL)
/* =======================================================  SOFT_RST  ======================================================== */
 #define R_SDHI0_SOFT_RST_SDRST_Pos              (0UL)
 #define R_SDHI0_SOFT_RST_SDRST_Msk              (0x1UL)
/* =======================================================  SDIF_MODE  ======================================================= */
 #define R_SDHI0_SDIF_MODE_NOCHKCR_Pos           (8UL)
 #define R_SDHI0_SDIF_MODE_NOCHKCR_Msk           (0x100UL)
/* =======================================================  EXT_SWAP  ======================================================== */
 #define R_SDHI0_EXT_SWAP_BRSWP_Pos              (7UL)
 #define R_SDHI0_EXT_SWAP_BRSWP_Msk              (0x80UL)
 #define R_SDHI0_EXT_SWAP_BWSWP_Pos              (6UL)
 #define R_SDHI0_EXT_SWAP_BWSWP_Msk              (0x40UL)

/* =========================================================================================================================== */
/* ================                                          R_SPI0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  SPCR  ========================================================== */
 #define R_SPI0_SPCR_SPRIE_Pos      (7UL)
 #define R_SPI0_SPCR_SPRIE_Msk      (0x80UL)
 #define R_SPI0_SPCR_SPE_Pos        (6UL)
 #define R_SPI0_SPCR_SPE_Msk        (0x40UL)
 #define R_SPI0_SPCR_SPTIE_Pos      (5UL)
 #define R_SPI0_SPCR_SPTIE_Msk      (0x20UL)
 #define R_SPI0_SPCR_SPEIE_Pos      (4UL)
 #define R_SPI0_SPCR_SPEIE_Msk      (0x10UL)
 #define R_SPI0_SPCR_MSTR_Pos       (3UL)
 #define R_SPI0_SPCR_MSTR_Msk       (0x8UL)
 #define R_SPI0_SPCR_MODFEN_Pos     (2UL)
 #define R_SPI0_SPCR_MODFEN_Msk     (0x4UL)
 #define R_SPI0_SPCR_TXMD_Pos       (1UL)
 #define R_SPI0_SPCR_TXMD_Msk       (0x2UL)
 #define R_SPI0_SPCR_SPMS_Pos       (0UL)
 #define R_SPI0_SPCR_SPMS_Msk       (0x1UL)
/* =========================================================  SSLP  ========================================================== */
 #define R_SPI0_SSLP_SSL3P_Pos      (3UL)
 #define R_SPI0_SSLP_SSL3P_Msk      (0x8UL)
 #define R_SPI0_SSLP_SSL2P_Pos      (2UL)
 #define R_SPI0_SSLP_SSL2P_Msk      (0x4UL)
 #define R_SPI0_SSLP_SSL1P_Pos      (1UL)
 #define R_SPI0_SSLP_SSL1P_Msk      (0x2UL)
 #define R_SPI0_SSLP_SSL0P_Pos      (0UL)
 #define R_SPI0_SSLP_SSL0P_Msk      (0x1UL)
 #define R_SPI0_SSLP_SSL4P_Pos      (4UL)
 #define R_SPI0_SSLP_SSL4P_Msk      (0x10UL)
 #define R_SPI0_SSLP_SSL5P_Pos      (5UL)
 #define R_SPI0_SSLP_SSL5P_Msk      (0x20UL)
 #define R_SPI0_SSLP_SSL6P_Pos      (6UL)
 #define R_SPI0_SSLP_SSL6P_Msk      (0x40UL)
 #define R_SPI0_SSLP_SSL7P_Pos      (7UL)
 #define R_SPI0_SSLP_SSL7P_Msk      (0x80UL)
/* =========================================================  SPPCR  ========================================================= */
 #define R_SPI0_SPPCR_MOIFE_Pos     (5UL)
 #define R_SPI0_SPPCR_MOIFE_Msk     (0x20UL)
 #define R_SPI0_SPPCR_MOIFV_Pos     (4UL)
 #define R_SPI0_SPPCR_MOIFV_Msk     (0x10UL)
 #define R_SPI0_SPPCR_SPLP2_Pos     (1UL)
 #define R_SPI0_SPPCR_SPLP2_Msk     (0x2UL)
 #define R_SPI0_SPPCR_SPLP_Pos      (0UL)
 #define R_SPI0_SPPCR_SPLP_Msk      (0x1UL)
/* =========================================================  SPSR  ========================================================== */
 #define R_SPI0_SPSR_SPRF_Pos       (7UL)
 #define R_SPI0_SPSR_SPRF_Msk       (0x80UL)
 #define R_SPI0_SPSR_SPTEF_Pos      (5UL)
 #define R_SPI0_SPSR_SPTEF_Msk      (0x20UL)
 #define R_SPI0_SPSR_UDRF_Pos       (4UL)
 #define R_SPI0_SPSR_UDRF_Msk       (0x10UL)
 #define R_SPI0_SPSR_PERF_Pos       (3UL)
 #define R_SPI0_SPSR_PERF_Msk       (0x8UL)
 #define R_SPI0_SPSR_MODF_Pos       (2UL)
 #define R_SPI0_SPSR_MODF_Msk       (0x4UL)
 #define R_SPI0_SPSR_IDLNF_Pos      (1UL)
 #define R_SPI0_SPSR_IDLNF_Msk      (0x2UL)
 #define R_SPI0_SPSR_OVRF_Pos       (0UL)
 #define R_SPI0_SPSR_OVRF_Msk       (0x1UL)
 #define R_SPI0_SPSR_CENDF_Pos      (6UL)
 #define R_SPI0_SPSR_CENDF_Msk      (0x40UL)
/* =========================================================  SPDR  ========================================================== */
/* ========================================================  SPDR_HA  ======================================================== */
/* ========================================================  SPDR_BY  ======================================================== */
/* =========================================================  SPSCR  ========================================================= */
 #define R_SPI0_SPSCR_SPSLN_Pos     (0UL)
 #define R_SPI0_SPSCR_SPSLN_Msk     (0x7UL)
/* =========================================================  SPBR  ========================================================== */
 #define R_SPI0_SPBR_SPR_Pos        (0UL)
 #define R_SPI0_SPBR_SPR_Msk        (0xffUL)
/* =========================================================  SPDCR  ========================================================= */
 #define R_SPI0_SPDCR_SPBYT_Pos     (6UL)
 #define R_SPI0_SPDCR_SPBYT_Msk     (0x40UL)
 #define R_SPI0_SPDCR_SPLW_Pos      (5UL)
 #define R_SPI0_SPDCR_SPLW_Msk      (0x20UL)
 #define R_SPI0_SPDCR_SPRDTD_Pos    (4UL)
 #define R_SPI0_SPDCR_SPRDTD_Msk    (0x10UL)
 #define R_SPI0_SPDCR_SPFC_Pos      (0UL)
 #define R_SPI0_SPDCR_SPFC_Msk      (0x3UL)
 #define R_SPI0_SPDCR_SLSEL_Pos     (2UL)
 #define R_SPI0_SPDCR_SLSEL_Msk     (0xcUL)
/* =========================================================  SPCKD  ========================================================= */
 #define R_SPI0_SPCKD_SCKDL_Pos     (0UL)
 #define R_SPI0_SPCKD_SCKDL_Msk     (0x7UL)
/* =========================================================  SSLND  ========================================================= */
 #define R_SPI0_SSLND_SLNDL_Pos     (0UL)
 #define R_SPI0_SSLND_SLNDL_Msk     (0x7UL)
/* =========================================================  SPND  ========================================================== */
 #define R_SPI0_SPND_SPNDL_Pos      (0UL)
 #define R_SPI0_SPND_SPNDL_Msk      (0x7UL)
/* =========================================================  SPCR2  ========================================================= */
 #define R_SPI0_SPCR2_SCKASE_Pos    (4UL)
 #define R_SPI0_SPCR2_SCKASE_Msk    (0x10UL)
 #define R_SPI0_SPCR2_PTE_Pos       (3UL)
 #define R_SPI0_SPCR2_PTE_Msk       (0x8UL)
 #define R_SPI0_SPCR2_SPIIE_Pos     (2UL)
 #define R_SPI0_SPCR2_SPIIE_Msk     (0x4UL)
 #define R_SPI0_SPCR2_SPOE_Pos      (1UL)
 #define R_SPI0_SPCR2_SPOE_Msk      (0x2UL)
 #define R_SPI0_SPCR2_SPPE_Pos      (0UL)
 #define R_SPI0_SPCR2_SPPE_Msk      (0x1UL)
 #define R_SPI0_SPCR2_SPTDDL_Pos    (5UL)
 #define R_SPI0_SPCR2_SPTDDL_Msk    (0xe0UL)
/* =========================================================  SPCMD  ========================================================= */
 #define R_SPI0_SPCMD_SCKDEN_Pos    (15UL)
 #define R_SPI0_SPCMD_SCKDEN_Msk    (0x8000UL)
 #define R_SPI0_SPCMD_SLNDEN_Pos    (14UL)
 #define R_SPI0_SPCMD_SLNDEN_Msk    (0x4000UL)
 #define R_SPI0_SPCMD_SPNDEN_Pos    (13UL)
 #define R_SPI0_SPCMD_SPNDEN_Msk    (0x2000UL)
 #define R_SPI0_SPCMD_LSBF_Pos      (12UL)
 #define R_SPI0_SPCMD_LSBF_Msk      (0x1000UL)
 #define R_SPI0_SPCMD_SPB_Pos       (8UL)
 #define R_SPI0_SPCMD_SPB_Msk       (0xf00UL)
 #define R_SPI0_SPCMD_SSLKP_Pos     (7UL)
 #define R_SPI0_SPCMD_SSLKP_Msk     (0x80UL)
 #define R_SPI0_SPCMD_SSLA_Pos      (4UL)
 #define R_SPI0_SPCMD_SSLA_Msk      (0x70UL)
 #define R_SPI0_SPCMD_BRDV_Pos      (2UL)
 #define R_SPI0_SPCMD_BRDV_Msk      (0xcUL)
 #define R_SPI0_SPCMD_CPOL_Pos      (1UL)
 #define R_SPI0_SPCMD_CPOL_Msk      (0x2UL)
 #define R_SPI0_SPCMD_CPHA_Pos      (0UL)
 #define R_SPI0_SPCMD_CPHA_Msk      (0x1UL)
/* ========================================================  SPDCR2  ========================================================= */
 #define R_SPI0_SPDCR2_BYSW_Pos     (0UL)
 #define R_SPI0_SPDCR2_BYSW_Msk     (0x1UL)
 #define R_SPI0_SPDCR2_SINV_Pos     (1UL)
 #define R_SPI0_SPDCR2_SINV_Msk     (0x2UL)
/* =========================================================  SPSSR  ========================================================= */
 #define R_SPI0_SPSSR_SPCP_Pos      (0UL)
 #define R_SPI0_SPSSR_SPCP_Msk      (0x7UL)
 #define R_SPI0_SPSSR_SPECM_Pos     (4UL)
 #define R_SPI0_SPSSR_SPECM_Msk     (0x70UL)
/* =========================================================  SPCR3  ========================================================= */
 #define R_SPI0_SPCR3_ETXMD_Pos     (0UL)
 #define R_SPI0_SPCR3_ETXMD_Msk     (0x1UL)
 #define R_SPI0_SPCR3_BFDS_Pos      (1UL)
 #define R_SPI0_SPCR3_BFDS_Msk      (0x2UL)
 #define R_SPI0_SPCR3_CENDIE_Pos    (4UL)
 #define R_SPI0_SPCR3_CENDIE_Msk    (0x10UL)
/* =========================================================  SPPR  ========================================================== */
 #define R_SPI0_SPPR_BUFWID_Pos     (4UL)
 #define R_SPI0_SPPR_BUFWID_Msk     (0x10UL)
 #define R_SPI0_SPPR_BUFNUM_Pos     (8UL)
 #define R_SPI0_SPPR_BUFNUM_Msk     (0x700UL)
 #define R_SPI0_SPPR_CMDNUM_Pos     (12UL)
 #define R_SPI0_SPPR_CMDNUM_Msk     (0xf000UL)

/* =========================================================================================================================== */
/* ================                                          R_SRAM                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  SRAMPRCR  ======================================================== */
 #define R_SRAM_SRAMPRCR_PR_Pos           (0UL)
 #define R_SRAM_SRAMPRCR_PR_Msk           (0x1UL)
 #define R_SRAM_SRAMPRCR_KW_Pos           (8UL)
 #define R_SRAM_SRAMPRCR_KW_Msk           (0xff00UL)
/* ======================================================  SRAMPRCR_NS  ====================================================== */
 #define R_SRAM_SRAMPRCR_NS_PR_Pos        (0UL)
 #define R_SRAM_SRAMPRCR_NS_PR_Msk        (0x1UL)
 #define R_SRAM_SRAMPRCR_NS_KW_Pos        (8UL)
 #define R_SRAM_SRAMPRCR_NS_KW_Msk        (0xff00UL)
/* =======================================================  SRAMWTSC  ======================================================== */
 #define R_SRAM_SRAMWTSC_WTEN_Pos         (0UL)
 #define R_SRAM_SRAMWTSC_WTEN_Msk         (0x1UL)
/* ========================================================  SRAMCR0  ======================================================== */
 #define R_SRAM_SRAMCR0_OAD_Pos           (0UL)
 #define R_SRAM_SRAMCR0_OAD_Msk           (0x1UL)
 #define R_SRAM_SRAMCR0_ECCMOD_Pos        (2UL)
 #define R_SRAM_SRAMCR0_ECCMOD_Msk        (0xcUL)
 #define R_SRAM_SRAMCR0_E1STSEN_Pos       (4UL)
 #define R_SRAM_SRAMCR0_E1STSEN_Msk       (0x10UL)
 #define R_SRAM_SRAMCR0_TSTBYP_Pos        (7UL)
 #define R_SRAM_SRAMCR0_TSTBYP_Msk        (0x80UL)
/* ========================================================  SRAMCR1  ======================================================== */
 #define R_SRAM_SRAMCR1_OAD_Pos           (0UL)
 #define R_SRAM_SRAMCR1_OAD_Msk           (0x1UL)
/* ======================================================  SRAMECCRGN0  ====================================================== */
 #define R_SRAM_SRAMECCRGN0_ECCRGN_Pos    (0UL)
 #define R_SRAM_SRAMECCRGN0_ECCRGN_Msk    (0x3UL)
/* ========================================================  SRAMESR  ======================================================== */
 #define R_SRAM_SRAMESR_ERR00_Pos         (0UL)
 #define R_SRAM_SRAMESR_ERR00_Msk         (0x1UL)
 #define R_SRAM_SRAMESR_ERR01_Pos         (1UL)
 #define R_SRAM_SRAMESR_ERR01_Msk         (0x2UL)
 #define R_SRAM_SRAMESR_ERR1_Pos          (2UL)
 #define R_SRAM_SRAMESR_ERR1_Msk          (0x4UL)
 #define R_SRAM_SRAMESR_ERRS_Pos          (14UL)
 #define R_SRAM_SRAMESR_ERRS_Msk          (0x4000UL)
/* =======================================================  SRAMESCLR  ======================================================= */
 #define R_SRAM_SRAMESCLR_CLR00_Pos       (0UL)
 #define R_SRAM_SRAMESCLR_CLR00_Msk       (0x1UL)
 #define R_SRAM_SRAMESCLR_CLR01_Pos       (1UL)
 #define R_SRAM_SRAMESCLR_CLR01_Msk       (0x2UL)
 #define R_SRAM_SRAMESCLR_CLR1_Pos        (2UL)
 #define R_SRAM_SRAMESCLR_CLR1_Msk        (0x4UL)
 #define R_SRAM_SRAMESCLR_CLRS_Pos        (14UL)
 #define R_SRAM_SRAMESCLR_CLRS_Msk        (0x4000UL)
/* =======================================================  SRAMEAR0  ======================================================== */
 #define R_SRAM_SRAMEAR0_EA_Pos           (3UL)
 #define R_SRAM_SRAMEAR0_EA_Msk           (0xffff8UL)
/* =======================================================  SRAMEAR1  ======================================================== */
 #define R_SRAM_SRAMEAR1_EA_Pos           (3UL)
 #define R_SRAM_SRAMEAR1_EA_Msk           (0xffff8UL)
/* =======================================================  SRAMEAR2  ======================================================== */
 #define R_SRAM_SRAMEAR2_EA_Pos           (3UL)
 #define R_SRAM_SRAMEAR2_EA_Msk           (0xffff8UL)
/* =======================================================  STBRAMCR  ======================================================== */
 #define R_SRAM_STBRAMCR_OAD_Pos          (0UL)
 #define R_SRAM_STBRAMCR_OAD_Msk          (0x1UL)
/* =======================================================  STBRAMEAR  ======================================================= */
 #define R_SRAM_STBRAMEAR_EA_Pos          (2UL)
 #define R_SRAM_STBRAMEAR_EA_Msk          (0x3fcUL)

/* =========================================================================================================================== */
/* ================                                          R_SSI0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  SSICR  ========================================================= */
 #define R_SSI0_SSICR_CKS_Pos          (30UL)
 #define R_SSI0_SSICR_CKS_Msk          (0x40000000UL)
 #define R_SSI0_SSICR_TUIEN_Pos        (29UL)
 #define R_SSI0_SSICR_TUIEN_Msk        (0x20000000UL)
 #define R_SSI0_SSICR_TOIEN_Pos        (28UL)
 #define R_SSI0_SSICR_TOIEN_Msk        (0x10000000UL)
 #define R_SSI0_SSICR_RUIEN_Pos        (27UL)
 #define R_SSI0_SSICR_RUIEN_Msk        (0x8000000UL)
 #define R_SSI0_SSICR_ROIEN_Pos        (26UL)
 #define R_SSI0_SSICR_ROIEN_Msk        (0x4000000UL)
 #define R_SSI0_SSICR_IIEN_Pos         (25UL)
 #define R_SSI0_SSICR_IIEN_Msk         (0x2000000UL)
 #define R_SSI0_SSICR_FRM_Pos          (22UL)
 #define R_SSI0_SSICR_FRM_Msk          (0xc00000UL)
 #define R_SSI0_SSICR_DWL_Pos          (19UL)
 #define R_SSI0_SSICR_DWL_Msk          (0x380000UL)
 #define R_SSI0_SSICR_SWL_Pos          (16UL)
 #define R_SSI0_SSICR_SWL_Msk          (0x70000UL)
 #define R_SSI0_SSICR_MST_Pos          (14UL)
 #define R_SSI0_SSICR_MST_Msk          (0x4000UL)
 #define R_SSI0_SSICR_BCKP_Pos         (13UL)
 #define R_SSI0_SSICR_BCKP_Msk         (0x2000UL)
 #define R_SSI0_SSICR_LRCKP_Pos        (12UL)
 #define R_SSI0_SSICR_LRCKP_Msk        (0x1000UL)
 #define R_SSI0_SSICR_SPDP_Pos         (11UL)
 #define R_SSI0_SSICR_SPDP_Msk         (0x800UL)
 #define R_SSI0_SSICR_SDTA_Pos         (10UL)
 #define R_SSI0_SSICR_SDTA_Msk         (0x400UL)
 #define R_SSI0_SSICR_PDTA_Pos         (9UL)
 #define R_SSI0_SSICR_PDTA_Msk         (0x200UL)
 #define R_SSI0_SSICR_DEL_Pos          (8UL)
 #define R_SSI0_SSICR_DEL_Msk          (0x100UL)
 #define R_SSI0_SSICR_CKDV_Pos         (4UL)
 #define R_SSI0_SSICR_CKDV_Msk         (0xf0UL)
 #define R_SSI0_SSICR_MUEN_Pos         (3UL)
 #define R_SSI0_SSICR_MUEN_Msk         (0x8UL)
 #define R_SSI0_SSICR_TEN_Pos          (1UL)
 #define R_SSI0_SSICR_TEN_Msk          (0x2UL)
 #define R_SSI0_SSICR_REN_Pos          (0UL)
 #define R_SSI0_SSICR_REN_Msk          (0x1UL)
/* =========================================================  SSISR  ========================================================= */
 #define R_SSI0_SSISR_TUIRQ_Pos        (29UL)
 #define R_SSI0_SSISR_TUIRQ_Msk        (0x20000000UL)
 #define R_SSI0_SSISR_TOIRQ_Pos        (28UL)
 #define R_SSI0_SSISR_TOIRQ_Msk        (0x10000000UL)
 #define R_SSI0_SSISR_RUIRQ_Pos        (27UL)
 #define R_SSI0_SSISR_RUIRQ_Msk        (0x8000000UL)
 #define R_SSI0_SSISR_ROIRQ_Pos        (26UL)
 #define R_SSI0_SSISR_ROIRQ_Msk        (0x4000000UL)
 #define R_SSI0_SSISR_IIRQ_Pos         (25UL)
 #define R_SSI0_SSISR_IIRQ_Msk         (0x2000000UL)
 #define R_SSI0_SSISR_TCHNO_Pos        (5UL)
 #define R_SSI0_SSISR_TCHNO_Msk        (0x60UL)
 #define R_SSI0_SSISR_TSWNO_Pos        (4UL)
 #define R_SSI0_SSISR_TSWNO_Msk        (0x10UL)
 #define R_SSI0_SSISR_RCHNO_Pos        (2UL)
 #define R_SSI0_SSISR_RCHNO_Msk        (0xcUL)
 #define R_SSI0_SSISR_RSWNO_Pos        (1UL)
 #define R_SSI0_SSISR_RSWNO_Msk        (0x2UL)
 #define R_SSI0_SSISR_IDST_Pos         (0UL)
 #define R_SSI0_SSISR_IDST_Msk         (0x1UL)
/* ========================================================  SSIFCR  ========================================================= */
 #define R_SSI0_SSIFCR_AUCKE_Pos       (31UL)
 #define R_SSI0_SSIFCR_AUCKE_Msk       (0x80000000UL)
 #define R_SSI0_SSIFCR_SSIRST_Pos      (16UL)
 #define R_SSI0_SSIFCR_SSIRST_Msk      (0x10000UL)
 #define R_SSI0_SSIFCR_TTRG_Pos        (6UL)
 #define R_SSI0_SSIFCR_TTRG_Msk        (0xc0UL)
 #define R_SSI0_SSIFCR_RTRG_Pos        (4UL)
 #define R_SSI0_SSIFCR_RTRG_Msk        (0x30UL)
 #define R_SSI0_SSIFCR_TIE_Pos         (3UL)
 #define R_SSI0_SSIFCR_TIE_Msk         (0x8UL)
 #define R_SSI0_SSIFCR_RIE_Pos         (2UL)
 #define R_SSI0_SSIFCR_RIE_Msk         (0x4UL)
 #define R_SSI0_SSIFCR_TFRST_Pos       (1UL)
 #define R_SSI0_SSIFCR_TFRST_Msk       (0x2UL)
 #define R_SSI0_SSIFCR_RFRST_Pos       (0UL)
 #define R_SSI0_SSIFCR_RFRST_Msk       (0x1UL)
 #define R_SSI0_SSIFCR_BSW_Pos         (11UL)
 #define R_SSI0_SSIFCR_BSW_Msk         (0x800UL)
/* ========================================================  SSIFSR  ========================================================= */
 #define R_SSI0_SSIFSR_TDC_Pos         (24UL)
 #define R_SSI0_SSIFSR_TDC_Msk         (0x3f000000UL)
 #define R_SSI0_SSIFSR_TDE_Pos         (16UL)
 #define R_SSI0_SSIFSR_TDE_Msk         (0x10000UL)
 #define R_SSI0_SSIFSR_RDC_Pos         (8UL)
 #define R_SSI0_SSIFSR_RDC_Msk         (0x3f00UL)
 #define R_SSI0_SSIFSR_RDF_Pos         (0UL)
 #define R_SSI0_SSIFSR_RDF_Msk         (0x1UL)
/* ========================================================  SSIFTDR  ======================================================== */
 #define R_SSI0_SSIFTDR_SSIFTDR_Pos    (0UL)
 #define R_SSI0_SSIFTDR_SSIFTDR_Msk    (0xffffffffUL)
/* =======================================================  SSIFTDR16  ======================================================= */
/* =======================================================  SSIFTDR8  ======================================================== */
/* ========================================================  SSIFRDR  ======================================================== */
 #define R_SSI0_SSIFRDR_SSIFRDR_Pos    (0UL)
 #define R_SSI0_SSIFRDR_SSIFRDR_Msk    (0xffffffffUL)
/* =======================================================  SSIFRDR16  ======================================================= */
/* =======================================================  SSIFRDR8  ======================================================== */
/* ========================================================  SSIOFR  ========================================================= */
 #define R_SSI0_SSIOFR_BCKASTP_Pos     (9UL)
 #define R_SSI0_SSIOFR_BCKASTP_Msk     (0x200UL)
 #define R_SSI0_SSIOFR_LRCONT_Pos      (8UL)
 #define R_SSI0_SSIOFR_LRCONT_Msk      (0x100UL)
 #define R_SSI0_SSIOFR_OMOD_Pos        (0UL)
 #define R_SSI0_SSIOFR_OMOD_Msk        (0x3UL)
/* ========================================================  SSISCR  ========================================================= */
 #define R_SSI0_SSISCR_TDES_Pos        (8UL)
 #define R_SSI0_SSISCR_TDES_Msk        (0x1f00UL)
 #define R_SSI0_SSISCR_RDFS_Pos        (0UL)
 #define R_SSI0_SSISCR_RDFS_Msk        (0x1fUL)

/* =========================================================================================================================== */
/* ================                                         R_SYSTEM                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  SBYCR  ========================================================= */
 #define R_SYSTEM_SBYCR_OPE_Pos                  (6UL)
 #define R_SYSTEM_SBYCR_OPE_Msk                  (0x40UL)
/* =========================================================  SSCR2  ========================================================= */
 #define R_SYSTEM_SSCR2_SS1RSF_Pos               (0UL)
 #define R_SYSTEM_SSCR2_SS1RSF_Msk               (0x1UL)
/* =========================================================  FLSCR  ========================================================= */
 #define R_SYSTEM_FLSCR_FLSWCF_Pos               (0UL)
 #define R_SYSTEM_FLSCR_FLSWCF_Msk               (0x1UL)
/* ========================================================  MSTPCRA  ======================================================== */
 #define R_SYSTEM_MSTPCRA_MSTPA_Pos              (0UL)
 #define R_SYSTEM_MSTPCRA_MSTPA_Msk              (0x1UL)
/* =======================================================  SCKDIVCR  ======================================================== */
 #define R_SYSTEM_SCKDIVCR_FCK_Pos               (28UL)
 #define R_SYSTEM_SCKDIVCR_FCK_Msk               (0xf0000000UL)
 #define R_SYSTEM_SCKDIVCR_ICK_Pos               (24UL)
 #define R_SYSTEM_SCKDIVCR_ICK_Msk               (0xf000000UL)
 #define R_SYSTEM_SCKDIVCR_PCKE_Pos              (20UL)
 #define R_SYSTEM_SCKDIVCR_PCKE_Msk              (0xf00000UL)
 #define R_SYSTEM_SCKDIVCR_BCK_Pos               (16UL)
 #define R_SYSTEM_SCKDIVCR_BCK_Msk               (0xf0000UL)
 #define R_SYSTEM_SCKDIVCR_PCKA_Pos              (12UL)
 #define R_SYSTEM_SCKDIVCR_PCKA_Msk              (0xf000UL)
 #define R_SYSTEM_SCKDIVCR_PCKB_Pos              (8UL)
 #define R_SYSTEM_SCKDIVCR_PCKB_Msk              (0xf00UL)
 #define R_SYSTEM_SCKDIVCR_PCKC_Pos              (4UL)
 #define R_SYSTEM_SCKDIVCR_PCKC_Msk              (0xf0UL)
 #define R_SYSTEM_SCKDIVCR_PCKD_Pos              (0UL)
 #define R_SYSTEM_SCKDIVCR_PCKD_Msk              (0xfUL)
/* =======================================================  SCKDIVCR2  ======================================================= */
 #define R_SYSTEM_SCKDIVCR2_CPUCK_Pos            (0UL)
 #define R_SYSTEM_SCKDIVCR2_CPUCK_Msk            (0xfUL)
/* ========================================================  SCKSCR  ========================================================= */
 #define R_SYSTEM_SCKSCR_CKSEL_Pos               (0UL)
 #define R_SYSTEM_SCKSCR_CKSEL_Msk               (0x7UL)
/* ========================================================  PLLCCR  ========================================================= */
 #define R_SYSTEM_PLLCCR_PLIDIV_Pos              (0UL)
 #define R_SYSTEM_PLLCCR_PLIDIV_Msk              (0x3UL)
 #define R_SYSTEM_PLLCCR_PLSRCSEL_Pos            (4UL)
 #define R_SYSTEM_PLLCCR_PLSRCSEL_Msk            (0x10UL)
 #define R_SYSTEM_PLLCCR_PLLMULNF_Pos            (6UL)
 #define R_SYSTEM_PLLCCR_PLLMULNF_Msk            (0xc0UL)
 #define R_SYSTEM_PLLCCR_PLLMUL_Pos              (8UL)
 #define R_SYSTEM_PLLCCR_PLLMUL_Msk              (0xff00UL)
/* =========================================================  PLLCR  ========================================================= */
 #define R_SYSTEM_PLLCR_PLLSTP_Pos               (0UL)
 #define R_SYSTEM_PLLCR_PLLSTP_Msk               (0x1UL)
/* =========================================================  BCKCR  ========================================================= */
 #define R_SYSTEM_BCKCR_BCLKDIV_Pos              (0UL)
 #define R_SYSTEM_BCKCR_BCLKDIV_Msk              (0x1UL)
/* ========================================================  MOSCCR  ========================================================= */
 #define R_SYSTEM_MOSCCR_MOSTP_Pos               (0UL)
 #define R_SYSTEM_MOSCCR_MOSTP_Msk               (0x1UL)
/* ========================================================  HOCOCR  ========================================================= */
 #define R_SYSTEM_HOCOCR_HCSTP_Pos               (0UL)
 #define R_SYSTEM_HOCOCR_HCSTP_Msk               (0x1UL)
/* ========================================================  MOCOCR  ========================================================= */
 #define R_SYSTEM_MOCOCR_MCSTP_Pos               (0UL)
 #define R_SYSTEM_MOCOCR_MCSTP_Msk               (0x1UL)
/* ========================================================  FLLCR1  ========================================================= */
 #define R_SYSTEM_FLLCR1_FLLEN_Pos               (0UL)
 #define R_SYSTEM_FLLCR1_FLLEN_Msk               (0x1UL)
/* ========================================================  FLLCR2  ========================================================= */
 #define R_SYSTEM_FLLCR2_FLLCNTL_Pos             (0UL)
 #define R_SYSTEM_FLLCR2_FLLCNTL_Msk             (0x7ffUL)
/* =========================================================  OSCSF  ========================================================= */
 #define R_SYSTEM_OSCSF_HOCOSF_Pos               (0UL)
 #define R_SYSTEM_OSCSF_HOCOSF_Msk               (0x1UL)
 #define R_SYSTEM_OSCSF_MOSCSF_Pos               (3UL)
 #define R_SYSTEM_OSCSF_MOSCSF_Msk               (0x8UL)
 #define R_SYSTEM_OSCSF_PLLSF_Pos                (5UL)
 #define R_SYSTEM_OSCSF_PLLSF_Msk                (0x20UL)
 #define R_SYSTEM_OSCSF_PLL2SF_Pos               (6UL)
 #define R_SYSTEM_OSCSF_PLL2SF_Msk               (0x40UL)
/* =========================================================  CKOCR  ========================================================= */
 #define R_SYSTEM_CKOCR_CKODIV_Pos               (4UL)
 #define R_SYSTEM_CKOCR_CKODIV_Msk               (0x70UL)
 #define R_SYSTEM_CKOCR_CKOEN_Pos                (7UL)
 #define R_SYSTEM_CKOCR_CKOEN_Msk                (0x80UL)
/* ========================================================  TRCKCR  ========================================================= */
 #define R_SYSTEM_TRCKCR_TRCK_Pos                (0UL)
 #define R_SYSTEM_TRCKCR_TRCK_Msk                (0xfUL)
 #define R_SYSTEM_TRCKCR_TRCKSEL_Pos             (4UL)
 #define R_SYSTEM_TRCKCR_TRCKSEL_Msk             (0x10UL)
 #define R_SYSTEM_TRCKCR_TRCKEN_Pos              (7UL)
 #define R_SYSTEM_TRCKCR_TRCKEN_Msk              (0x80UL)
/* ========================================================  OSTDCR  ========================================================= */
 #define R_SYSTEM_OSTDCR_OSTDIE_Pos              (0UL)
 #define R_SYSTEM_OSTDCR_OSTDIE_Msk              (0x1UL)
 #define R_SYSTEM_OSTDCR_OSTDE_Pos               (7UL)
 #define R_SYSTEM_OSTDCR_OSTDE_Msk               (0x80UL)
/* ========================================================  OSTDSR  ========================================================= */
 #define R_SYSTEM_OSTDSR_OSTDF_Pos               (0UL)
 #define R_SYSTEM_OSTDSR_OSTDF_Msk               (0x1UL)
/* ========================================================  OSCMONR  ======================================================== */
 #define R_SYSTEM_OSCMONR_MOCOMON_Pos            (1UL)
 #define R_SYSTEM_OSCMONR_MOCOMON_Msk            (0x2UL)
 #define R_SYSTEM_OSCMONR_LOCOMON_Pos            (2UL)
 #define R_SYSTEM_OSCMONR_LOCOMON_Msk            (0x4UL)
/* ========================================================  PLL2CCR  ======================================================== */
 #define R_SYSTEM_PLL2CCR_PL2IDIV_Pos            (0UL)
 #define R_SYSTEM_PLL2CCR_PL2IDIV_Msk            (0x3UL)
 #define R_SYSTEM_PLL2CCR_PL2SRCSEL_Pos          (4UL)
 #define R_SYSTEM_PLL2CCR_PL2SRCSEL_Msk          (0x10UL)
 #define R_SYSTEM_PLL2CCR_PLL2MULNF_Pos          (6UL)
 #define R_SYSTEM_PLL2CCR_PLL2MULNF_Msk          (0xc0UL)
 #define R_SYSTEM_PLL2CCR_PLL2MUL_Pos            (8UL)
 #define R_SYSTEM_PLL2CCR_PLL2MUL_Msk            (0xff00UL)
/* ========================================================  PLL2CR  ========================================================= */
 #define R_SYSTEM_PLL2CR_PLL2STP_Pos             (0UL)
 #define R_SYSTEM_PLL2CR_PLL2STP_Msk             (0x1UL)
/* ========================================================  PLLCCR2  ======================================================== */
 #define R_SYSTEM_PLLCCR2_PLODIVP_Pos            (0UL)
 #define R_SYSTEM_PLLCCR2_PLODIVP_Msk            (0xfUL)
 #define R_SYSTEM_PLLCCR2_PLODIVQ_Pos            (4UL)
 #define R_SYSTEM_PLLCCR2_PLODIVQ_Msk            (0xf0UL)
 #define R_SYSTEM_PLLCCR2_PLODIVR_Pos            (8UL)
 #define R_SYSTEM_PLLCCR2_PLODIVR_Msk            (0xf00UL)
/* =======================================================  PLL2CCR2  ======================================================== */
 #define R_SYSTEM_PLL2CCR2_PL2ODIVP_Pos          (0UL)
 #define R_SYSTEM_PLL2CCR2_PL2ODIVP_Msk          (0xfUL)
 #define R_SYSTEM_PLL2CCR2_PL2ODIVQ_Pos          (4UL)
 #define R_SYSTEM_PLL2CCR2_PL2ODIVQ_Msk          (0xf0UL)
 #define R_SYSTEM_PLL2CCR2_PL2ODIVR_Pos          (8UL)
 #define R_SYSTEM_PLL2CCR2_PL2ODIVR_Msk          (0xf00UL)
/* ========================================================  EBCKOCR  ======================================================== */
 #define R_SYSTEM_EBCKOCR_EBCKOEN_Pos            (0UL)
 #define R_SYSTEM_EBCKOCR_EBCKOEN_Msk            (0x1UL)
/* ========================================================  SDCKOCR  ======================================================== */
 #define R_SYSTEM_SDCKOCR_SDCKOEN_Pos            (0UL)
 #define R_SYSTEM_SDCKOCR_SDCKOEN_Msk            (0x1UL)
/* ======================================================  SCICKDIVCR  ======================================================= */
 #define R_SYSTEM_SCICKDIVCR_CKDIV_Pos           (0UL)
 #define R_SYSTEM_SCICKDIVCR_CKDIV_Msk           (0x7UL)
/* ========================================================  SCICKCR  ======================================================== */
 #define R_SYSTEM_SCICKCR_SCICKSEL_Pos           (0UL)
 #define R_SYSTEM_SCICKCR_SCICKSEL_Msk           (0xfUL)
 #define R_SYSTEM_SCICKCR_CKSREQ_Pos             (6UL)
 #define R_SYSTEM_SCICKCR_CKSREQ_Msk             (0x40UL)
 #define R_SYSTEM_SCICKCR_CKSRDY_Pos             (7UL)
 #define R_SYSTEM_SCICKCR_CKSRDY_Msk             (0x80UL)
/* ======================================================  SPICKDIVCR  ======================================================= */
 #define R_SYSTEM_SPICKDIVCR_CKDIV_Pos           (0UL)
 #define R_SYSTEM_SPICKDIVCR_CKDIV_Msk           (0x7UL)
/* ========================================================  SPICKCR  ======================================================== */
 #define R_SYSTEM_SPICKCR_CKSEL_Pos              (0UL)
 #define R_SYSTEM_SPICKCR_CKSEL_Msk              (0xfUL)
 #define R_SYSTEM_SPICKCR_CKSREQ_Pos             (6UL)
 #define R_SYSTEM_SPICKCR_CKSREQ_Msk             (0x40UL)
 #define R_SYSTEM_SPICKCR_CKSRDY_Pos             (7UL)
 #define R_SYSTEM_SPICKCR_CKSRDY_Msk             (0x80UL)
/* ======================================================  ADCCKDIVCR  ======================================================= */
 #define R_SYSTEM_ADCCKDIVCR_CKDIV_Pos           (0UL)
 #define R_SYSTEM_ADCCKDIVCR_CKDIV_Msk           (0x7UL)
/* ========================================================  ADCCKCR  ======================================================== */
 #define R_SYSTEM_ADCCKCR_CKSEL_Pos              (0UL)
 #define R_SYSTEM_ADCCKCR_CKSEL_Msk              (0xfUL)
 #define R_SYSTEM_ADCCKCR_CKSREQ_Pos             (6UL)
 #define R_SYSTEM_ADCCKCR_CKSREQ_Msk             (0x40UL)
 #define R_SYSTEM_ADCCKCR_CKSRDY_Pos             (7UL)
 #define R_SYSTEM_ADCCKCR_CKSRDY_Msk             (0x80UL)
/* ======================================================  GPTCKDIVCR  ======================================================= */
 #define R_SYSTEM_GPTCKDIVCR_CKDIV_Pos           (0UL)
 #define R_SYSTEM_GPTCKDIVCR_CKDIV_Msk           (0x7UL)
/* ========================================================  GPTCKCR  ======================================================== */
 #define R_SYSTEM_GPTCKCR_CKSEL_Pos              (0UL)
 #define R_SYSTEM_GPTCKCR_CKSEL_Msk              (0xfUL)
 #define R_SYSTEM_GPTCKCR_CKSREQ_Pos             (6UL)
 #define R_SYSTEM_GPTCKCR_CKSREQ_Msk             (0x40UL)
 #define R_SYSTEM_GPTCKCR_CKSRDY_Pos             (7UL)
 #define R_SYSTEM_GPTCKCR_CKSRDY_Msk             (0x80UL)
/* ======================================================  LCDCKDIVCR  ======================================================= */
 #define R_SYSTEM_LCDCKDIVCR_CKDIV_Pos           (0UL)
 #define R_SYSTEM_LCDCKDIVCR_CKDIV_Msk           (0x7UL)
/* ========================================================  LCDCKCR  ======================================================== */
 #define R_SYSTEM_LCDCKCR_CKSEL_Pos              (0UL)
 #define R_SYSTEM_LCDCKCR_CKSEL_Msk              (0xfUL)
 #define R_SYSTEM_LCDCKCR_CKSREQ_Pos             (6UL)
 #define R_SYSTEM_LCDCKCR_CKSREQ_Msk             (0x40UL)
 #define R_SYSTEM_LCDCKCR_CKSRDY_Pos             (7UL)
 #define R_SYSTEM_LCDCKCR_CKSRDY_Msk             (0x80UL)
/* =======================================================  MOCOUTCR  ======================================================== */
 #define R_SYSTEM_MOCOUTCR_MOCOUTRM_Pos          (0UL)
 #define R_SYSTEM_MOCOUTCR_MOCOUTRM_Msk          (0xffUL)
/* =======================================================  HOCOUTCR  ======================================================== */
 #define R_SYSTEM_HOCOUTCR_HOCOUTRM_Pos          (0UL)
 #define R_SYSTEM_HOCOUTCR_HOCOUTRM_Msk          (0xffUL)
/* ======================================================  USBCKDIVCR  ======================================================= */
 #define R_SYSTEM_USBCKDIVCR_USBCKDIV_Pos        (0UL)
 #define R_SYSTEM_USBCKDIVCR_USBCKDIV_Msk        (0x7UL)
/* ======================================================  OCTACKDIVCR  ====================================================== */
 #define R_SYSTEM_OCTACKDIVCR_OCTACKDIV_Pos      (0UL)
 #define R_SYSTEM_OCTACKDIVCR_OCTACKDIV_Msk      (0x7UL)
/* =====================================================  CANFDCKDIVCR  ====================================================== */
 #define R_SYSTEM_CANFDCKDIVCR_CANFDCKDIV_Pos    (0UL)
 #define R_SYSTEM_CANFDCKDIVCR_CANFDCKDIV_Msk    (0x7UL)
/* =====================================================  USB60CKDIVCR  ====================================================== */
 #define R_SYSTEM_USB60CKDIVCR_USB60CKDIV_Pos    (0UL)
 #define R_SYSTEM_USB60CKDIVCR_USB60CKDIV_Msk    (0x7UL)
/* ======================================================  I3CCKDIVCR  ======================================================= */
 #define R_SYSTEM_I3CCKDIVCR_I3CCKDIV_Pos        (0UL)
 #define R_SYSTEM_I3CCKDIVCR_I3CCKDIV_Msk        (0x7UL)
/* ========================================================  USBCKCR  ======================================================== */
 #define R_SYSTEM_USBCKCR_USBCKSEL_Pos           (0UL)
 #define R_SYSTEM_USBCKCR_USBCKSEL_Msk           (0xfUL)
 #define R_SYSTEM_USBCKCR_USBCKSREQ_Pos          (6UL)
 #define R_SYSTEM_USBCKCR_USBCKSREQ_Msk          (0x40UL)
 #define R_SYSTEM_USBCKCR_USBCKSRDY_Pos          (7UL)
 #define R_SYSTEM_USBCKCR_USBCKSRDY_Msk          (0x80UL)
/* =======================================================  OCTACKCR  ======================================================== */
 #define R_SYSTEM_OCTACKCR_OCTACKSEL_Pos         (0UL)
 #define R_SYSTEM_OCTACKCR_OCTACKSEL_Msk         (0xfUL)
 #define R_SYSTEM_OCTACKCR_OCTACKSREQ_Pos        (6UL)
 #define R_SYSTEM_OCTACKCR_OCTACKSREQ_Msk        (0x40UL)
 #define R_SYSTEM_OCTACKCR_OCTACKSRDY_Pos        (7UL)
 #define R_SYSTEM_OCTACKCR_OCTACKSRDY_Msk        (0x80UL)
/* =======================================================  CANFDCKCR  ======================================================= */
 #define R_SYSTEM_CANFDCKCR_CANFDCKSEL_Pos       (0UL)
 #define R_SYSTEM_CANFDCKCR_CANFDCKSEL_Msk       (0xfUL)
 #define R_SYSTEM_CANFDCKCR_CANFDCKSREQ_Pos      (6UL)
 #define R_SYSTEM_CANFDCKCR_CANFDCKSREQ_Msk      (0x40UL)
 #define R_SYSTEM_CANFDCKCR_CANFDCKSRDY_Pos      (7UL)
 #define R_SYSTEM_CANFDCKCR_CANFDCKSRDY_Msk      (0x80UL)
/* =======================================================  USB60CKCR  ======================================================= */
 #define R_SYSTEM_USB60CKCR_USB60CKSEL_Pos       (0UL)
 #define R_SYSTEM_USB60CKCR_USB60CKSEL_Msk       (0xfUL)
 #define R_SYSTEM_USB60CKCR_USB60CKSREQ_Pos      (6UL)
 #define R_SYSTEM_USB60CKCR_USB60CKSREQ_Msk      (0x40UL)
 #define R_SYSTEM_USB60CKCR_USB60CKSRDY_Pos      (7UL)
 #define R_SYSTEM_USB60CKCR_USB60CKSRDY_Msk      (0x80UL)
/* ========================================================  I3CCKCR  ======================================================== */
 #define R_SYSTEM_I3CCKCR_I3CCKSEL_Pos           (0UL)
 #define R_SYSTEM_I3CCKCR_I3CCKSEL_Msk           (0xfUL)
 #define R_SYSTEM_I3CCKCR_I3CCKREQ_Pos           (6UL)
 #define R_SYSTEM_I3CCKCR_I3CCKREQ_Msk           (0x40UL)
 #define R_SYSTEM_I3CCKCR_I3CCKSRDY_Pos          (7UL)
 #define R_SYSTEM_I3CCKCR_I3CCKSRDY_Msk          (0x80UL)
/* ========================================================  MOSCSCR  ======================================================== */
 #define R_SYSTEM_MOSCSCR_MOSCSOKP_Pos           (0UL)
 #define R_SYSTEM_MOSCSCR_MOSCSOKP_Msk           (0x1UL)
/* ========================================================  HOCOSCR  ======================================================== */
 #define R_SYSTEM_HOCOSCR_HOCOSOKP_Pos           (0UL)
 #define R_SYSTEM_HOCOSCR_HOCOSOKP_Msk           (0x1UL)
/* =========================================================  OPCCR  ========================================================= */
 #define R_SYSTEM_OPCCR_OPCMTSF_Pos              (4UL)
 #define R_SYSTEM_OPCCR_OPCMTSF_Msk              (0x10UL)
 #define R_SYSTEM_OPCCR_OPCM_Pos                 (0UL)
 #define R_SYSTEM_OPCCR_OPCM_Msk                 (0x3UL)
/* =======================================================  MOSCWTCR  ======================================================== */
 #define R_SYSTEM_MOSCWTCR_MSTS_Pos              (0UL)
 #define R_SYSTEM_MOSCWTCR_MSTS_Msk              (0xfUL)
/* =======================================================  HOCOWTCR  ======================================================== */
 #define R_SYSTEM_HOCOWTCR_HSTS_Pos              (0UL)
 #define R_SYSTEM_HOCOWTCR_HSTS_Msk              (0x7UL)
/* ========================================================  SOPCCR  ========================================================= */
 #define R_SYSTEM_SOPCCR_SOPCMTSF_Pos            (4UL)
 #define R_SYSTEM_SOPCCR_SOPCMTSF_Msk            (0x10UL)
 #define R_SYSTEM_SOPCCR_SOPCM_Pos               (0UL)
 #define R_SYSTEM_SOPCCR_SOPCM_Msk               (0x1UL)
/* ========================================================  RSTSR1  ========================================================= */
 #define R_SYSTEM_RSTSR1_IWDTRF_Pos              (0UL)
 #define R_SYSTEM_RSTSR1_IWDTRF_Msk              (0x1UL)
 #define R_SYSTEM_RSTSR1_WDTRF_Pos               (1UL)
 #define R_SYSTEM_RSTSR1_WDTRF_Msk               (0x2UL)
 #define R_SYSTEM_RSTSR1_SWRF_Pos                (2UL)
 #define R_SYSTEM_RSTSR1_SWRF_Msk                (0x4UL)
 #define R_SYSTEM_RSTSR1_CLU0RF_Pos              (4UL)
 #define R_SYSTEM_RSTSR1_CLU0RF_Msk              (0x10UL)
 #define R_SYSTEM_RSTSR1_LM0RF_Pos               (5UL)
 #define R_SYSTEM_RSTSR1_LM0RF_Msk               (0x20UL)
 #define R_SYSTEM_RSTSR1_BUSRF_Pos               (10UL)
 #define R_SYSTEM_RSTSR1_BUSRF_Msk               (0x400UL)
 #define R_SYSTEM_RSTSR1_CMRF_Pos                (14UL)
 #define R_SYSTEM_RSTSR1_CMRF_Msk                (0x4000UL)
 #define R_SYSTEM_RSTSR1_WDT1RF_Pos              (17UL)
 #define R_SYSTEM_RSTSR1_WDT1RF_Msk              (0x20000UL)
 #define R_SYSTEM_RSTSR1_CLU1RF_Pos              (20UL)
 #define R_SYSTEM_RSTSR1_CLU1RF_Msk              (0x100000UL)
 #define R_SYSTEM_RSTSR1_LM1RF_Pos               (21UL)
 #define R_SYSTEM_RSTSR1_LM1RF_Msk               (0x200000UL)
 #define R_SYSTEM_RSTSR1_NWRF_Pos                (22UL)
 #define R_SYSTEM_RSTSR1_NWRF_Msk                (0x400000UL)
/* ========================================================  SYRACCR  ======================================================== */
 #define R_SYSTEM_SYRACCR_BUSY_Pos               (0UL)
 #define R_SYSTEM_SYRACCR_BUSY_Msk               (0x1UL)
/* ========================================================  LVD1CR1  ======================================================== */
 #define R_SYSTEM_LVD1CR1_IDTSEL_Pos             (0UL)
 #define R_SYSTEM_LVD1CR1_IDTSEL_Msk             (0x3UL)
 #define R_SYSTEM_LVD1CR1_IRQSEL_Pos             (2UL)
 #define R_SYSTEM_LVD1CR1_IRQSEL_Msk             (0x4UL)
/* ========================================================  LVD2CR1  ======================================================== */
 #define R_SYSTEM_LVD2CR1_IDTSEL_Pos             (0UL)
 #define R_SYSTEM_LVD2CR1_IDTSEL_Msk             (0x3UL)
 #define R_SYSTEM_LVD2CR1_IRQSEL_Pos             (2UL)
 #define R_SYSTEM_LVD2CR1_IRQSEL_Msk             (0x4UL)
/* ========================================================  LVD1SR  ========================================================= */
 #define R_SYSTEM_LVD1SR_DET_Pos                 (0UL)
 #define R_SYSTEM_LVD1SR_DET_Msk                 (0x1UL)
 #define R_SYSTEM_LVD1SR_MON_Pos                 (1UL)
 #define R_SYSTEM_LVD1SR_MON_Msk                 (0x2UL)
/* ========================================================  LVD2SR  ========================================================= */
 #define R_SYSTEM_LVD2SR_DET_Pos                 (0UL)
 #define R_SYSTEM_LVD2SR_DET_Msk                 (0x1UL)
 #define R_SYSTEM_LVD2SR_MON_Pos                 (1UL)
 #define R_SYSTEM_LVD2SR_MON_Msk                 (0x2UL)
/* =======================================================  CRVSYSCR  ======================================================== */
 #define R_SYSTEM_CRVSYSCR_CRVEN_Pos             (0UL)
 #define R_SYSTEM_CRVSYSCR_CRVEN_Msk             (0x1UL)
/* ========================================================  PDCTRGD  ======================================================== */
 #define R_SYSTEM_PDCTRGD_PDDE_Pos               (0UL)
 #define R_SYSTEM_PDCTRGD_PDDE_Msk               (0x1UL)
 #define R_SYSTEM_PDCTRGD_PDCSF_Pos              (6UL)
 #define R_SYSTEM_PDCTRGD_PDCSF_Msk              (0x40UL)
 #define R_SYSTEM_PDCTRGD_PDPGSF_Pos             (7UL)
 #define R_SYSTEM_PDCTRGD_PDPGSF_Msk             (0x80UL)
/* =======================================================  PDRAMSCR0  ======================================================= */
/* =======================================================  PDRAMSCR1  ======================================================= */
/* =======================================================  VBRSABAR  ======================================================== */
 #define R_SYSTEM_VBRSABAR_SABA_Pos              (0UL)
 #define R_SYSTEM_VBRSABAR_SABA_Msk              (0xffffUL)
/* =======================================================  VBRPABARS  ======================================================= */
 #define R_SYSTEM_VBRPABARS_PABAS_Pos            (0UL)
 #define R_SYSTEM_VBRPABARS_PABAS_Msk            (0xffffUL)
/* ======================================================  VBRPABARNS  ======================================================= */
 #define R_SYSTEM_VBRPABARNS_PABANS_Pos          (0UL)
 #define R_SYSTEM_VBRPABARNS_PABANS_Msk          (0xffffUL)
/* ========================================================  CGFSAR  ========================================================= */
 #define R_SYSTEM_CGFSAR_NONSEC00_Pos            (0UL)
 #define R_SYSTEM_CGFSAR_NONSEC00_Msk            (0x1UL)
 #define R_SYSTEM_CGFSAR_NONSEC02_Pos            (2UL)
 #define R_SYSTEM_CGFSAR_NONSEC02_Msk            (0x4UL)
 #define R_SYSTEM_CGFSAR_NONSEC03_Pos            (3UL)
 #define R_SYSTEM_CGFSAR_NONSEC03_Msk            (0x8UL)
 #define R_SYSTEM_CGFSAR_NONSEC04_Pos            (4UL)
 #define R_SYSTEM_CGFSAR_NONSEC04_Msk            (0x10UL)
 #define R_SYSTEM_CGFSAR_NONSEC05_Pos            (5UL)
 #define R_SYSTEM_CGFSAR_NONSEC05_Msk            (0x20UL)
 #define R_SYSTEM_CGFSAR_NONSEC06_Pos            (6UL)
 #define R_SYSTEM_CGFSAR_NONSEC06_Msk            (0x40UL)
 #define R_SYSTEM_CGFSAR_NONSEC07_Pos            (7UL)
 #define R_SYSTEM_CGFSAR_NONSEC07_Msk            (0x80UL)
 #define R_SYSTEM_CGFSAR_NONSEC08_Pos            (8UL)
 #define R_SYSTEM_CGFSAR_NONSEC08_Msk            (0x100UL)
 #define R_SYSTEM_CGFSAR_NONSEC09_Pos            (9UL)
 #define R_SYSTEM_CGFSAR_NONSEC09_Msk            (0x200UL)
 #define R_SYSTEM_CGFSAR_NONSEC11_Pos            (11UL)
 #define R_SYSTEM_CGFSAR_NONSEC11_Msk            (0x800UL)
 #define R_SYSTEM_CGFSAR_NONSEC12_Pos            (12UL)
 #define R_SYSTEM_CGFSAR_NONSEC12_Msk            (0x1000UL)
 #define R_SYSTEM_CGFSAR_NONSEC13_Pos            (13UL)
 #define R_SYSTEM_CGFSAR_NONSEC13_Msk            (0x2000UL)
 #define R_SYSTEM_CGFSAR_NONSEC16_Pos            (16UL)
 #define R_SYSTEM_CGFSAR_NONSEC16_Msk            (0x10000UL)
 #define R_SYSTEM_CGFSAR_NONSEC17_Pos            (17UL)
 #define R_SYSTEM_CGFSAR_NONSEC17_Msk            (0x20000UL)
 #define R_SYSTEM_CGFSAR_NONSEC18_Pos            (18UL)
 #define R_SYSTEM_CGFSAR_NONSEC18_Msk            (0x40000UL)
 #define R_SYSTEM_CGFSAR_NONSEC19_Pos            (19UL)
 #define R_SYSTEM_CGFSAR_NONSEC19_Msk            (0x80000UL)
 #define R_SYSTEM_CGFSAR_NONSEC20_Pos            (20UL)
 #define R_SYSTEM_CGFSAR_NONSEC20_Msk            (0x100000UL)
 #define R_SYSTEM_CGFSAR_NONSEC21_Pos            (21UL)
 #define R_SYSTEM_CGFSAR_NONSEC21_Msk            (0x200000UL)
 #define R_SYSTEM_CGFSAR_NONSEC22_Pos            (22UL)
 #define R_SYSTEM_CGFSAR_NONSEC22_Msk            (0x400000UL)
 #define R_SYSTEM_CGFSAR_NONSEC24_Pos            (24UL)
 #define R_SYSTEM_CGFSAR_NONSEC24_Msk            (0x1000000UL)
 #define R_SYSTEM_CGFSAR_NONSEC25_Pos            (25UL)
 #define R_SYSTEM_CGFSAR_NONSEC25_Msk            (0x2000000UL)
 #define R_SYSTEM_CGFSAR_NONSEC26_Pos            (26UL)
 #define R_SYSTEM_CGFSAR_NONSEC26_Msk            (0x4000000UL)
/* ========================================================  RSTSAR  ========================================================= */
 #define R_SYSTEM_RSTSAR_NONSEC0_Pos             (0UL)
 #define R_SYSTEM_RSTSAR_NONSEC0_Msk             (0x1UL)
 #define R_SYSTEM_RSTSAR_NONSEC1_Pos             (1UL)
 #define R_SYSTEM_RSTSAR_NONSEC1_Msk             (0x2UL)
 #define R_SYSTEM_RSTSAR_NONSEC2_Pos             (2UL)
 #define R_SYSTEM_RSTSAR_NONSEC2_Msk             (0x4UL)
 #define R_SYSTEM_RSTSAR_NONSEC3_Pos             (3UL)
 #define R_SYSTEM_RSTSAR_NONSEC3_Msk             (0x8UL)
/* ========================================================  LPMSAR  ========================================================= */
 #define R_SYSTEM_LPMSAR_NONSEC0_Pos             (0UL)
 #define R_SYSTEM_LPMSAR_NONSEC0_Msk             (0x1UL)
 #define R_SYSTEM_LPMSAR_NONSEC1_Pos             (1UL)
 #define R_SYSTEM_LPMSAR_NONSEC1_Msk             (0x2UL)
 #define R_SYSTEM_LPMSAR_NONSEC2_Pos             (2UL)
 #define R_SYSTEM_LPMSAR_NONSEC2_Msk             (0x4UL)
 #define R_SYSTEM_LPMSAR_NONSEC3_Pos             (3UL)
 #define R_SYSTEM_LPMSAR_NONSEC3_Msk             (0x8UL)
 #define R_SYSTEM_LPMSAR_NONSEC8_Pos             (8UL)
 #define R_SYSTEM_LPMSAR_NONSEC8_Msk             (0x100UL)
 #define R_SYSTEM_LPMSAR_NONSEC16_Pos            (16UL)
 #define R_SYSTEM_LPMSAR_NONSEC16_Msk            (0x10000UL)
 #define R_SYSTEM_LPMSAR_NONSEC17_Pos            (17UL)
 #define R_SYSTEM_LPMSAR_NONSEC17_Msk            (0x20000UL)
 #define R_SYSTEM_LPMSAR_NONSEC18_Pos            (18UL)
 #define R_SYSTEM_LPMSAR_NONSEC18_Msk            (0x40000UL)
 #define R_SYSTEM_LPMSAR_NONSEC19_Pos            (19UL)
 #define R_SYSTEM_LPMSAR_NONSEC19_Msk            (0x80000UL)
 #define R_SYSTEM_LPMSAR_NONSEC21_Pos            (21UL)
 #define R_SYSTEM_LPMSAR_NONSEC21_Msk            (0x200000UL)
/* ========================================================  LVDSAR  ========================================================= */
 #define R_SYSTEM_LVDSAR_NONSEC0_Pos             (0UL)
 #define R_SYSTEM_LVDSAR_NONSEC0_Msk             (0x1UL)
 #define R_SYSTEM_LVDSAR_NONSEC1_Pos             (1UL)
 #define R_SYSTEM_LVDSAR_NONSEC1_Msk             (0x2UL)
/* ========================================================  BBFSAR  ========================================================= */
 #define R_SYSTEM_BBFSAR_NONSEC0_Pos             (0UL)
 #define R_SYSTEM_BBFSAR_NONSEC0_Msk             (0x1UL)
 #define R_SYSTEM_BBFSAR_NONSEC1_Pos             (1UL)
 #define R_SYSTEM_BBFSAR_NONSEC1_Msk             (0x2UL)
 #define R_SYSTEM_BBFSAR_NONSEC2_Pos             (2UL)
 #define R_SYSTEM_BBFSAR_NONSEC2_Msk             (0x4UL)
 #define R_SYSTEM_BBFSAR_NONSEC3_Pos             (3UL)
 #define R_SYSTEM_BBFSAR_NONSEC3_Msk             (0x8UL)
 #define R_SYSTEM_BBFSAR_NONSEC4_Pos             (4UL)
 #define R_SYSTEM_BBFSAR_NONSEC4_Msk             (0x10UL)
/* ========================================================  PGCSAR  ========================================================= */
 #define R_SYSTEM_PGCSAR_NONSEC1_Pos             (1UL)
 #define R_SYSTEM_PGCSAR_NONSEC1_Msk             (0x2UL)
 #define R_SYSTEM_PGCSAR_NONSEC2_Pos             (2UL)
 #define R_SYSTEM_PGCSAR_NONSEC2_Msk             (0x4UL)
/* ========================================================  DPFSAR  ========================================================= */
 #define R_SYSTEM_DPFSAR_DPFSA16_Pos             (16UL)
 #define R_SYSTEM_DPFSAR_DPFSA16_Msk             (0x10000UL)
 #define R_SYSTEM_DPFSAR_DPFSA17_Pos             (17UL)
 #define R_SYSTEM_DPFSAR_DPFSA17_Msk             (0x20000UL)
 #define R_SYSTEM_DPFSAR_DPFSA18_Pos             (18UL)
 #define R_SYSTEM_DPFSAR_DPFSA18_Msk             (0x40000UL)
 #define R_SYSTEM_DPFSAR_DPFSA19_Pos             (19UL)
 #define R_SYSTEM_DPFSAR_DPFSA19_Msk             (0x80000UL)
 #define R_SYSTEM_DPFSAR_DPFSA20_Pos             (20UL)
 #define R_SYSTEM_DPFSAR_DPFSA20_Msk             (0x100000UL)
 #define R_SYSTEM_DPFSAR_DPFSA24_Pos             (24UL)
 #define R_SYSTEM_DPFSAR_DPFSA24_Msk             (0x1000000UL)
 #define R_SYSTEM_DPFSAR_DPFSA25_Pos             (25UL)
 #define R_SYSTEM_DPFSAR_DPFSA25_Msk             (0x2000000UL)
 #define R_SYSTEM_DPFSAR_DPFSA26_Pos             (26UL)
 #define R_SYSTEM_DPFSAR_DPFSA26_Msk             (0x4000000UL)
 #define R_SYSTEM_DPFSAR_DPFSA27_Pos             (27UL)
 #define R_SYSTEM_DPFSAR_DPFSA27_Msk             (0x8000000UL)
 #define R_SYSTEM_DPFSAR_DPFSA29_Pos             (29UL)
 #define R_SYSTEM_DPFSAR_DPFSA29_Msk             (0x20000000UL)
 #define R_SYSTEM_DPFSAR_DPFSA31_Pos             (31UL)
 #define R_SYSTEM_DPFSAR_DPFSA31_Msk             (0x80000000UL)
/* ========================================================  RSCSAR  ========================================================= */
 #define R_SYSTEM_RSCSAR_RSCSA0_Pos              (0UL)
 #define R_SYSTEM_RSCSAR_RSCSA0_Msk              (0x1UL)
 #define R_SYSTEM_RSCSAR_RSCSA1_Pos              (1UL)
 #define R_SYSTEM_RSCSAR_RSCSA1_Msk              (0x2UL)
 #define R_SYSTEM_RSCSAR_RSCSA2_Pos              (2UL)
 #define R_SYSTEM_RSCSAR_RSCSA2_Msk              (0x4UL)
 #define R_SYSTEM_RSCSAR_RSCSA3_Pos              (3UL)
 #define R_SYSTEM_RSCSAR_RSCSA3_Msk              (0x8UL)
 #define R_SYSTEM_RSCSAR_RSCSA4_Pos              (4UL)
 #define R_SYSTEM_RSCSAR_RSCSA4_Msk              (0x10UL)
 #define R_SYSTEM_RSCSAR_RSCSA5_Pos              (5UL)
 #define R_SYSTEM_RSCSAR_RSCSA5_Msk              (0x20UL)
 #define R_SYSTEM_RSCSAR_RSCSA6_Pos              (6UL)
 #define R_SYSTEM_RSCSAR_RSCSA6_Msk              (0x40UL)
 #define R_SYSTEM_RSCSAR_RSCSA7_Pos              (7UL)
 #define R_SYSTEM_RSCSAR_RSCSA7_Msk              (0x80UL)
 #define R_SYSTEM_RSCSAR_RSCSA8_Pos              (8UL)
 #define R_SYSTEM_RSCSAR_RSCSA8_Msk              (0x100UL)
 #define R_SYSTEM_RSCSAR_RSCSA9_Pos              (9UL)
 #define R_SYSTEM_RSCSAR_RSCSA9_Msk              (0x200UL)
 #define R_SYSTEM_RSCSAR_RSCSA10_Pos             (10UL)
 #define R_SYSTEM_RSCSAR_RSCSA10_Msk             (0x400UL)
 #define R_SYSTEM_RSCSAR_RSCSA11_Pos             (11UL)
 #define R_SYSTEM_RSCSAR_RSCSA11_Msk             (0x800UL)
 #define R_SYSTEM_RSCSAR_RSCSA12_Pos             (12UL)
 #define R_SYSTEM_RSCSAR_RSCSA12_Msk             (0x1000UL)
 #define R_SYSTEM_RSCSAR_RSCSA13_Pos             (13UL)
 #define R_SYSTEM_RSCSAR_RSCSA13_Msk             (0x2000UL)
 #define R_SYSTEM_RSCSAR_RSCSA14_Pos             (14UL)
 #define R_SYSTEM_RSCSAR_RSCSA14_Msk             (0x4000UL)
 #define R_SYSTEM_RSCSAR_RSCSA16_Pos             (16UL)
 #define R_SYSTEM_RSCSAR_RSCSA16_Msk             (0x10000UL)
 #define R_SYSTEM_RSCSAR_RSCSA17_Pos             (17UL)
 #define R_SYSTEM_RSCSAR_RSCSA17_Msk             (0x20000UL)
/* =========================================================  PRCR  ========================================================== */
 #define R_SYSTEM_PRCR_PRC0_Pos                  (0UL)
 #define R_SYSTEM_PRCR_PRC0_Msk                  (0x1UL)
 #define R_SYSTEM_PRCR_PRC1_Pos                  (1UL)
 #define R_SYSTEM_PRCR_PRC1_Msk                  (0x2UL)
 #define R_SYSTEM_PRCR_PRC3_Pos                  (3UL)
 #define R_SYSTEM_PRCR_PRC3_Msk                  (0x8UL)
 #define R_SYSTEM_PRCR_PRC4_Pos                  (4UL)
 #define R_SYSTEM_PRCR_PRC4_Msk                  (0x10UL)
 #define R_SYSTEM_PRCR_PRC5_Pos                  (5UL)
 #define R_SYSTEM_PRCR_PRC5_Msk                  (0x20UL)
 #define R_SYSTEM_PRCR_PRKEY_Pos                 (8UL)
 #define R_SYSTEM_PRCR_PRKEY_Msk                 (0xff00UL)
/* ========================================================  PRCR_NS  ======================================================== */
 #define R_SYSTEM_PRCR_NS_PRC0_Pos               (0UL)
 #define R_SYSTEM_PRCR_NS_PRC0_Msk               (0x1UL)
 #define R_SYSTEM_PRCR_NS_PRC1_Pos               (1UL)
 #define R_SYSTEM_PRCR_NS_PRC1_Msk               (0x2UL)
 #define R_SYSTEM_PRCR_NS_PRC3_Pos               (3UL)
 #define R_SYSTEM_PRCR_NS_PRC3_Msk               (0x8UL)
 #define R_SYSTEM_PRCR_NS_PRC4_Pos               (4UL)
 #define R_SYSTEM_PRCR_NS_PRC4_Msk               (0x10UL)
 #define R_SYSTEM_PRCR_NS_PRKEY_Pos              (8UL)
 #define R_SYSTEM_PRCR_NS_PRKEY_Msk              (0xff00UL)
/* ========================================================  LOCOCR  ========================================================= */
 #define R_SYSTEM_LOCOCR_LCSTP_Pos               (0UL)
 #define R_SYSTEM_LOCOCR_LCSTP_Msk               (0x1UL)
/* =======================================================  LOCOUTCR  ======================================================== */
 #define R_SYSTEM_LOCOUTCR_LOCOUTRM_Pos          (0UL)
 #define R_SYSTEM_LOCOUTCR_LOCOUTRM_Msk          (0xffUL)
/* ========================================================  STCONR  ========================================================= */
 #define R_SYSTEM_STCONR_STCON_Pos               (0UL)
 #define R_SYSTEM_STCONR_STCON_Msk               (0x3UL)
/* ========================================================  DPSBYCR  ======================================================== */
 #define R_SYSTEM_DPSBYCR_DCSSMODE_Pos           (2UL)
 #define R_SYSTEM_DPSBYCR_DCSSMODE_Msk           (0x4UL)
 #define R_SYSTEM_DPSBYCR_SRKEEP_Pos             (4UL)
 #define R_SYSTEM_DPSBYCR_SRKEEP_Msk             (0x10UL)
 #define R_SYSTEM_DPSBYCR_IOKEEP_Pos             (6UL)
 #define R_SYSTEM_DPSBYCR_IOKEEP_Msk             (0x40UL)
 #define R_SYSTEM_DPSBYCR_DPSBY_Pos              (7UL)
 #define R_SYSTEM_DPSBYCR_DPSBY_Msk              (0x80UL)
/* ========================================================  DPSWCR  ========================================================= */
 #define R_SYSTEM_DPSWCR_WTSTS_Pos               (0UL)
 #define R_SYSTEM_DPSWCR_WTSTS_Msk               (0xffUL)
/* ========================================================  DPSIER0  ======================================================== */
 #define R_SYSTEM_DPSIER0_DIRQ0E_Pos             (0UL)
 #define R_SYSTEM_DPSIER0_DIRQ0E_Msk             (0x1UL)
 #define R_SYSTEM_DPSIER0_DIRQ1E_Pos             (1UL)
 #define R_SYSTEM_DPSIER0_DIRQ1E_Msk             (0x2UL)
 #define R_SYSTEM_DPSIER0_DIRQ2E_Pos             (2UL)
 #define R_SYSTEM_DPSIER0_DIRQ2E_Msk             (0x4UL)
 #define R_SYSTEM_DPSIER0_DIRQ3E_Pos             (3UL)
 #define R_SYSTEM_DPSIER0_DIRQ3E_Msk             (0x8UL)
 #define R_SYSTEM_DPSIER0_DIRQ4E_Pos             (4UL)
 #define R_SYSTEM_DPSIER0_DIRQ4E_Msk             (0x10UL)
 #define R_SYSTEM_DPSIER0_DIRQ5E_Pos             (5UL)
 #define R_SYSTEM_DPSIER0_DIRQ5E_Msk             (0x20UL)
 #define R_SYSTEM_DPSIER0_DIRQ6E_Pos             (6UL)
 #define R_SYSTEM_DPSIER0_DIRQ6E_Msk             (0x40UL)
 #define R_SYSTEM_DPSIER0_DIRQ7E_Pos             (7UL)
 #define R_SYSTEM_DPSIER0_DIRQ7E_Msk             (0x80UL)
/* ========================================================  DPSIER1  ======================================================== */
 #define R_SYSTEM_DPSIER1_DIRQ8E_Pos             (0UL)
 #define R_SYSTEM_DPSIER1_DIRQ8E_Msk             (0x1UL)
 #define R_SYSTEM_DPSIER1_DIRQ9E_Pos             (1UL)
 #define R_SYSTEM_DPSIER1_DIRQ9E_Msk             (0x2UL)
 #define R_SYSTEM_DPSIER1_DIRQ10E_Pos            (2UL)
 #define R_SYSTEM_DPSIER1_DIRQ10E_Msk            (0x4UL)
 #define R_SYSTEM_DPSIER1_DIRQ11E_Pos            (3UL)
 #define R_SYSTEM_DPSIER1_DIRQ11E_Msk            (0x8UL)
 #define R_SYSTEM_DPSIER1_DIRQ12E_Pos            (4UL)
 #define R_SYSTEM_DPSIER1_DIRQ12E_Msk            (0x10UL)
 #define R_SYSTEM_DPSIER1_DIRQ13E_Pos            (5UL)
 #define R_SYSTEM_DPSIER1_DIRQ13E_Msk            (0x20UL)
 #define R_SYSTEM_DPSIER1_DIRQ14E_Pos            (6UL)
 #define R_SYSTEM_DPSIER1_DIRQ14E_Msk            (0x40UL)
 #define R_SYSTEM_DPSIER1_DIRQ15E_Pos            (7UL)
 #define R_SYSTEM_DPSIER1_DIRQ15E_Msk            (0x80UL)
/* ========================================================  DPSIER2  ======================================================== */
 #define R_SYSTEM_DPSIER2_DPVD1IE_Pos            (0UL)
 #define R_SYSTEM_DPSIER2_DPVD1IE_Msk            (0x1UL)
 #define R_SYSTEM_DPSIER2_DPVD2IE_Pos            (1UL)
 #define R_SYSTEM_DPSIER2_DPVD2IE_Msk            (0x2UL)
 #define R_SYSTEM_DPSIER2_DTRTCIIE_Pos           (2UL)
 #define R_SYSTEM_DPSIER2_DTRTCIIE_Msk           (0x4UL)
 #define R_SYSTEM_DPSIER2_DRTCAIE_Pos            (3UL)
 #define R_SYSTEM_DPSIER2_DRTCAIE_Msk            (0x8UL)
 #define R_SYSTEM_DPSIER2_DNMIE_Pos              (4UL)
 #define R_SYSTEM_DPSIER2_DNMIE_Msk              (0x10UL)
/* ========================================================  DPSIER3  ======================================================== */
 #define R_SYSTEM_DPSIER3_DUSBFSIE_Pos           (0UL)
 #define R_SYSTEM_DPSIER3_DUSBFSIE_Msk           (0x1UL)
 #define R_SYSTEM_DPSIER3_DUSBHSIE_Pos           (1UL)
 #define R_SYSTEM_DPSIER3_DUSBHSIE_Msk           (0x2UL)
 #define R_SYSTEM_DPSIER3_DULPT0IE_Pos           (2UL)
 #define R_SYSTEM_DPSIER3_DULPT0IE_Msk           (0x4UL)
 #define R_SYSTEM_DPSIER3_DULPT1IE_Pos           (3UL)
 #define R_SYSTEM_DPSIER3_DULPT1IE_Msk           (0x8UL)
 #define R_SYSTEM_DPSIER3_DIWDTIE_Pos            (5UL)
 #define R_SYSTEM_DPSIER3_DIWDTIE_Msk            (0x20UL)
 #define R_SYSTEM_DPSIER3_DVBATTADIE_Pos         (7UL)
 #define R_SYSTEM_DPSIER3_DVBATTADIE_Msk         (0x80UL)
/* ========================================================  DPSIFR0  ======================================================== */
 #define R_SYSTEM_DPSIFR0_DIRQ0F_Pos             (0UL)
 #define R_SYSTEM_DPSIFR0_DIRQ0F_Msk             (0x1UL)
 #define R_SYSTEM_DPSIFR0_DIRQ1F_Pos             (1UL)
 #define R_SYSTEM_DPSIFR0_DIRQ1F_Msk             (0x2UL)
 #define R_SYSTEM_DPSIFR0_DIRQ2F_Pos             (2UL)
 #define R_SYSTEM_DPSIFR0_DIRQ2F_Msk             (0x4UL)
 #define R_SYSTEM_DPSIFR0_DIRQ3F_Pos             (3UL)
 #define R_SYSTEM_DPSIFR0_DIRQ3F_Msk             (0x8UL)
 #define R_SYSTEM_DPSIFR0_DIRQ4F_Pos             (4UL)
 #define R_SYSTEM_DPSIFR0_DIRQ4F_Msk             (0x10UL)
 #define R_SYSTEM_DPSIFR0_DIRQ5F_Pos             (5UL)
 #define R_SYSTEM_DPSIFR0_DIRQ5F_Msk             (0x20UL)
 #define R_SYSTEM_DPSIFR0_DIRQ6F_Pos             (6UL)
 #define R_SYSTEM_DPSIFR0_DIRQ6F_Msk             (0x40UL)
 #define R_SYSTEM_DPSIFR0_DIRQ7F_Pos             (7UL)
 #define R_SYSTEM_DPSIFR0_DIRQ7F_Msk             (0x80UL)
/* ========================================================  DPSIFR1  ======================================================== */
 #define R_SYSTEM_DPSIFR1_DIRQ8F_Pos             (0UL)
 #define R_SYSTEM_DPSIFR1_DIRQ8F_Msk             (0x1UL)
 #define R_SYSTEM_DPSIFR1_DIRQ9F_Pos             (1UL)
 #define R_SYSTEM_DPSIFR1_DIRQ9F_Msk             (0x2UL)
 #define R_SYSTEM_DPSIFR1_DIRQ10F_Pos            (2UL)
 #define R_SYSTEM_DPSIFR1_DIRQ10F_Msk            (0x4UL)
 #define R_SYSTEM_DPSIFR1_DIRQ11F_Pos            (3UL)
 #define R_SYSTEM_DPSIFR1_DIRQ11F_Msk            (0x8UL)
 #define R_SYSTEM_DPSIFR1_DIRQ12F_Pos            (4UL)
 #define R_SYSTEM_DPSIFR1_DIRQ12F_Msk            (0x10UL)
 #define R_SYSTEM_DPSIFR1_DIRQ13F_Pos            (5UL)
 #define R_SYSTEM_DPSIFR1_DIRQ13F_Msk            (0x20UL)
 #define R_SYSTEM_DPSIFR1_DIRQ14F_Pos            (6UL)
 #define R_SYSTEM_DPSIFR1_DIRQ14F_Msk            (0x40UL)
 #define R_SYSTEM_DPSIFR1_DIRQ15F_Pos            (7UL)
 #define R_SYSTEM_DPSIFR1_DIRQ15F_Msk            (0x80UL)
/* ========================================================  DPSIFR2  ======================================================== */
 #define R_SYSTEM_DPSIFR2_DPVD1IF_Pos            (0UL)
 #define R_SYSTEM_DPSIFR2_DPVD1IF_Msk            (0x1UL)
 #define R_SYSTEM_DPSIFR2_DPVD2IF_Pos            (1UL)
 #define R_SYSTEM_DPSIFR2_DPVD2IF_Msk            (0x2UL)
 #define R_SYSTEM_DPSIFR2_DTRTCIIF_Pos           (2UL)
 #define R_SYSTEM_DPSIFR2_DTRTCIIF_Msk           (0x4UL)
 #define R_SYSTEM_DPSIFR2_DRTCAIF_Pos            (3UL)
 #define R_SYSTEM_DPSIFR2_DRTCAIF_Msk            (0x8UL)
 #define R_SYSTEM_DPSIFR2_DNMIF_Pos              (4UL)
 #define R_SYSTEM_DPSIFR2_DNMIF_Msk              (0x10UL)
/* ========================================================  DPSIFR3  ======================================================== */
 #define R_SYSTEM_DPSIFR3_DUSBFSIF_Pos           (0UL)
 #define R_SYSTEM_DPSIFR3_DUSBFSIF_Msk           (0x1UL)
 #define R_SYSTEM_DPSIFR3_DUSBHSIF_Pos           (1UL)
 #define R_SYSTEM_DPSIFR3_DUSBHSIF_Msk           (0x2UL)
 #define R_SYSTEM_DPSIFR3_DULPT0IF_Pos           (2UL)
 #define R_SYSTEM_DPSIFR3_DULPT0IF_Msk           (0x4UL)
 #define R_SYSTEM_DPSIFR3_DULPT1IF_Pos           (3UL)
 #define R_SYSTEM_DPSIFR3_DULPT1IF_Msk           (0x8UL)
 #define R_SYSTEM_DPSIFR3_DIWDTIF_Pos            (5UL)
 #define R_SYSTEM_DPSIFR3_DIWDTIF_Msk            (0x20UL)
 #define R_SYSTEM_DPSIFR3_DVBATTADIF_Pos         (7UL)
 #define R_SYSTEM_DPSIFR3_DVBATTADIF_Msk         (0x80UL)
/* =======================================================  DPSIEGR0  ======================================================== */
 #define R_SYSTEM_DPSIEGR0_DIRQ0EG_Pos           (0UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ0EG_Msk           (0x1UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ1EG_Pos           (1UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ1EG_Msk           (0x2UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ2EG_Pos           (2UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ2EG_Msk           (0x4UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ3EG_Pos           (3UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ3EG_Msk           (0x8UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ4EG_Pos           (4UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ4EG_Msk           (0x10UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ5EG_Pos           (5UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ5EG_Msk           (0x20UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ6EG_Pos           (6UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ6EG_Msk           (0x40UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ7EG_Pos           (7UL)
 #define R_SYSTEM_DPSIEGR0_DIRQ7EG_Msk           (0x80UL)
/* =======================================================  DPSIEGR1  ======================================================== */
 #define R_SYSTEM_DPSIEGR1_DIRQ8EG_Pos           (0UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ8EG_Msk           (0x1UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ9EG_Pos           (1UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ9EG_Msk           (0x2UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ10EG_Pos          (2UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ10EG_Msk          (0x4UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ11EG_Pos          (3UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ11EG_Msk          (0x8UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ12EG_Pos          (4UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ12EG_Msk          (0x10UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ13EG_Pos          (5UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ13EG_Msk          (0x20UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ14EG_Pos          (6UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ14EG_Msk          (0x40UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ15EG_Pos          (7UL)
 #define R_SYSTEM_DPSIEGR1_DIRQ15EG_Msk          (0x80UL)
/* =======================================================  DPSIEGR2  ======================================================== */
 #define R_SYSTEM_DPSIEGR2_DPVD1EG_Pos           (0UL)
 #define R_SYSTEM_DPSIEGR2_DPVD1EG_Msk           (0x1UL)
 #define R_SYSTEM_DPSIEGR2_DPVD2EG_Pos           (1UL)
 #define R_SYSTEM_DPSIEGR2_DPVD2EG_Msk           (0x2UL)
 #define R_SYSTEM_DPSIEGR2_DNMIEG_Pos            (4UL)
 #define R_SYSTEM_DPSIEGR2_DNMIEG_Msk            (0x10UL)
/* ========================================================  SYOCDCR  ======================================================== */
 #define R_SYSTEM_SYOCDCR_DOCDF_Pos              (0UL)
 #define R_SYSTEM_SYOCDCR_DOCDF_Msk              (0x1UL)
 #define R_SYSTEM_SYOCDCR_DBGEN_Pos              (7UL)
 #define R_SYSTEM_SYOCDCR_DBGEN_Msk              (0x80UL)
/* ========================================================  RSTSR0  ========================================================= */
 #define R_SYSTEM_RSTSR0_PORF_Pos                (0UL)
 #define R_SYSTEM_RSTSR0_PORF_Msk                (0x1UL)
 #define R_SYSTEM_RSTSR0_LVD0RF_Pos              (1UL)
 #define R_SYSTEM_RSTSR0_LVD0RF_Msk              (0x2UL)
 #define R_SYSTEM_RSTSR0_LVD1RF_Pos              (2UL)
 #define R_SYSTEM_RSTSR0_LVD1RF_Msk              (0x4UL)
 #define R_SYSTEM_RSTSR0_LVD2RF_Pos              (3UL)
 #define R_SYSTEM_RSTSR0_LVD2RF_Msk              (0x8UL)
 #define R_SYSTEM_RSTSR0_LVD3RF_Pos              (4UL)
 #define R_SYSTEM_RSTSR0_LVD3RF_Msk              (0x10UL)
 #define R_SYSTEM_RSTSR0_LVD4RF_Pos              (5UL)
 #define R_SYSTEM_RSTSR0_LVD4RF_Msk              (0x20UL)
 #define R_SYSTEM_RSTSR0_LVD5RF_Pos              (6UL)
 #define R_SYSTEM_RSTSR0_LVD5RF_Msk              (0x40UL)
 #define R_SYSTEM_RSTSR0_DPSRSTF_Pos             (7UL)
 #define R_SYSTEM_RSTSR0_DPSRSTF_Msk             (0x80UL)
/* ========================================================  RSTSR2  ========================================================= */
 #define R_SYSTEM_RSTSR2_CWSF_Pos                (0UL)
 #define R_SYSTEM_RSTSR2_CWSF_Msk                (0x1UL)
/* ========================================================  RSTSR3  ========================================================= */
 #define R_SYSTEM_RSTSR3_OCPRF_Pos               (4UL)
 #define R_SYSTEM_RSTSR3_OCPRF_Msk               (0x10UL)
/* =========================================================  MOMCR  ========================================================= */
 #define R_SYSTEM_MOMCR_MODRV0_Pos               (1UL)
 #define R_SYSTEM_MOMCR_MODRV0_Msk               (0xeUL)
 #define R_SYSTEM_MOMCR_MOSEL_Pos                (6UL)
 #define R_SYSTEM_MOMCR_MOSEL_Msk                (0x40UL)
/* ========================================================  FWEPROR  ======================================================== */
 #define R_SYSTEM_FWEPROR_FLWE_Pos               (0UL)
 #define R_SYSTEM_FWEPROR_FLWE_Msk               (0x3UL)
/* ========================================================  LVCMPCR  ======================================================== */
 #define R_SYSTEM_LVCMPCR_LVD2E_Pos              (6UL)
 #define R_SYSTEM_LVCMPCR_LVD2E_Msk              (0x40UL)
 #define R_SYSTEM_LVCMPCR_LVD1E_Pos              (5UL)
 #define R_SYSTEM_LVCMPCR_LVD1E_Msk              (0x20UL)
/* =======================================================  LVD1CMPCR  ======================================================= */
 #define R_SYSTEM_LVD1CMPCR_LVD1LVL_Pos          (0UL)
 #define R_SYSTEM_LVD1CMPCR_LVD1LVL_Msk          (0x1fUL)
 #define R_SYSTEM_LVD1CMPCR_LVD1E_Pos            (7UL)
 #define R_SYSTEM_LVD1CMPCR_LVD1E_Msk            (0x80UL)
/* =======================================================  LVD2CMPCR  ======================================================= */
 #define R_SYSTEM_LVD2CMPCR_LVD2LVL_Pos          (0UL)
 #define R_SYSTEM_LVD2CMPCR_LVD2LVL_Msk          (0x1fUL)
 #define R_SYSTEM_LVD2CMPCR_LVD2E_Pos            (7UL)
 #define R_SYSTEM_LVD2CMPCR_LVD2E_Msk            (0x80UL)
/* ========================================================  LVD1CR0  ======================================================== */
 #define R_SYSTEM_LVD1CR0_RIE_Pos                (0UL)
 #define R_SYSTEM_LVD1CR0_RIE_Msk                (0x1UL)
 #define R_SYSTEM_LVD1CR0_DFDIS_Pos              (1UL)
 #define R_SYSTEM_LVD1CR0_DFDIS_Msk              (0x2UL)
 #define R_SYSTEM_LVD1CR0_CMPE_Pos               (2UL)
 #define R_SYSTEM_LVD1CR0_CMPE_Msk               (0x4UL)
 #define R_SYSTEM_LVD1CR0_FSAMP_Pos              (4UL)
 #define R_SYSTEM_LVD1CR0_FSAMP_Msk              (0x30UL)
 #define R_SYSTEM_LVD1CR0_RI_Pos                 (6UL)
 #define R_SYSTEM_LVD1CR0_RI_Msk                 (0x40UL)
 #define R_SYSTEM_LVD1CR0_RN_Pos                 (7UL)
 #define R_SYSTEM_LVD1CR0_RN_Msk                 (0x80UL)
/* ========================================================  LVD2CR0  ======================================================== */
 #define R_SYSTEM_LVD2CR0_RIE_Pos                (0UL)
 #define R_SYSTEM_LVD2CR0_RIE_Msk                (0x1UL)
 #define R_SYSTEM_LVD2CR0_DFDIS_Pos              (1UL)
 #define R_SYSTEM_LVD2CR0_DFDIS_Msk              (0x2UL)
 #define R_SYSTEM_LVD2CR0_CMPE_Pos               (2UL)
 #define R_SYSTEM_LVD2CR0_CMPE_Msk               (0x4UL)
 #define R_SYSTEM_LVD2CR0_FSAMP_Pos              (4UL)
 #define R_SYSTEM_LVD2CR0_FSAMP_Msk              (0x30UL)
 #define R_SYSTEM_LVD2CR0_RI_Pos                 (6UL)
 #define R_SYSTEM_LVD2CR0_RI_Msk                 (0x40UL)
 #define R_SYSTEM_LVD2CR0_RN_Pos                 (7UL)
 #define R_SYSTEM_LVD2CR0_RN_Msk                 (0x80UL)
/* ======================================================  VBATTMNSELR  ====================================================== */
 #define R_SYSTEM_VBATTMNSELR_VBATTMNSEL_Pos     (0UL)
 #define R_SYSTEM_VBATTMNSELR_VBATTMNSEL_Msk     (0x1UL)
/* =======================================================  VBTBPCR1  ======================================================== */
 #define R_SYSTEM_VBTBPCR1_BPWSWSTP_Pos          (0UL)
 #define R_SYSTEM_VBTBPCR1_BPWSWSTP_Msk          (0x1UL)
/* =========================================================  LPSCR  ========================================================= */
 #define R_SYSTEM_LPSCR_LPMD_Pos                 (0UL)
 #define R_SYSTEM_LPSCR_LPMD_Msk                 (0xfUL)
/* =========================================================  SSCR1  ========================================================= */
 #define R_SYSTEM_SSCR1_SS1FR_Pos                (0UL)
 #define R_SYSTEM_SSCR1_SS1FR_Msk                (0x1UL)
/* =========================================================  LVOCR  ========================================================= */
 #define R_SYSTEM_LVOCR_LVO0E_Pos                (0UL)
 #define R_SYSTEM_LVOCR_LVO0E_Msk                (0x1UL)
 #define R_SYSTEM_LVOCR_LVO1E_Pos                (1UL)
 #define R_SYSTEM_LVOCR_LVO1E_Msk                (0x2UL)
/* =======================================================  SYRSTMSK0  ======================================================= */
 #define R_SYSTEM_SYRSTMSK0_IWDTMASK_Pos         (0UL)
 #define R_SYSTEM_SYRSTMSK0_IWDTMASK_Msk         (0x1UL)
 #define R_SYSTEM_SYRSTMSK0_WDT0MASK_Pos         (1UL)
 #define R_SYSTEM_SYRSTMSK0_WDT0MASK_Msk         (0x2UL)
 #define R_SYSTEM_SYRSTMSK0_SWMASK_Pos           (2UL)
 #define R_SYSTEM_SYRSTMSK0_SWMASK_Msk           (0x4UL)
 #define R_SYSTEM_SYRSTMSK0_CLUP0MASK_Pos        (4UL)
 #define R_SYSTEM_SYRSTMSK0_CLUP0MASK_Msk        (0x10UL)
 #define R_SYSTEM_SYRSTMSK0_LM0MASK_Pos          (5UL)
 #define R_SYSTEM_SYRSTMSK0_LM0MASK_Msk          (0x20UL)
 #define R_SYSTEM_SYRSTMSK0_CMMASK_Pos           (6UL)
 #define R_SYSTEM_SYRSTMSK0_CMMASK_Msk           (0x40UL)
 #define R_SYSTEM_SYRSTMSK0_BUSMASK_Pos          (7UL)
 #define R_SYSTEM_SYRSTMSK0_BUSMASK_Msk          (0x80UL)
/* =======================================================  SYRSTMSK1  ======================================================= */
 #define R_SYSTEM_SYRSTMSK1_WDT1MASK_Pos         (1UL)
 #define R_SYSTEM_SYRSTMSK1_WDT1MASK_Msk         (0x2UL)
 #define R_SYSTEM_SYRSTMSK1_CLUP1MASK_Pos        (4UL)
 #define R_SYSTEM_SYRSTMSK1_CLUP1MASK_Msk        (0x10UL)
 #define R_SYSTEM_SYRSTMSK1_LM1MASK_Pos          (5UL)
 #define R_SYSTEM_SYRSTMSK1_LM1MASK_Msk          (0x20UL)
 #define R_SYSTEM_SYRSTMSK1_NWMASK_Pos           (7UL)
 #define R_SYSTEM_SYRSTMSK1_NWMASK_Msk           (0x80UL)
/* =======================================================  SYRSTMSK2  ======================================================= */
 #define R_SYSTEM_SYRSTMSK2_LVD1MASK_Pos         (0UL)
 #define R_SYSTEM_SYRSTMSK2_LVD1MASK_Msk         (0x1UL)
 #define R_SYSTEM_SYRSTMSK2_LVD2MASK_Pos         (1UL)
 #define R_SYSTEM_SYRSTMSK2_LVD2MASK_Msk         (0x2UL)
 #define R_SYSTEM_SYRSTMSK2_LVD3MASK_Pos         (2UL)
 #define R_SYSTEM_SYRSTMSK2_LVD3MASK_Msk         (0x4UL)
 #define R_SYSTEM_SYRSTMSK2_LVD4MASK_Pos         (3UL)
 #define R_SYSTEM_SYRSTMSK2_LVD4MASK_Msk         (0x8UL)
 #define R_SYSTEM_SYRSTMSK2_LVD5MASK_Pos         (4UL)
 #define R_SYSTEM_SYRSTMSK2_LVD5MASK_Msk         (0x10UL)
/* =======================================================  PLL1LDOCR  ======================================================= */
 #define R_SYSTEM_PLL1LDOCR_LDOSTP_Pos           (0UL)
 #define R_SYSTEM_PLL1LDOCR_LDOSTP_Msk           (0x1UL)
 #define R_SYSTEM_PLL1LDOCR_SKEEP_Pos            (1UL)
 #define R_SYSTEM_PLL1LDOCR_SKEEP_Msk            (0x2UL)
/* =======================================================  PLL2LDOCR  ======================================================= */
 #define R_SYSTEM_PLL2LDOCR_LDOSTP_Pos           (0UL)
 #define R_SYSTEM_PLL2LDOCR_LDOSTP_Msk           (0x1UL)
 #define R_SYSTEM_PLL2LDOCR_SKEEP_Pos            (1UL)
 #define R_SYSTEM_PLL2LDOCR_SKEEP_Msk            (0x2UL)
/* =======================================================  HOCOLDOCR  ======================================================= */
 #define R_SYSTEM_HOCOLDOCR_LDOSTP_Pos           (0UL)
 #define R_SYSTEM_HOCOLDOCR_LDOSTP_Msk           (0x1UL)
 #define R_SYSTEM_HOCOLDOCR_SKEEP_Pos            (1UL)
 #define R_SYSTEM_HOCOLDOCR_SKEEP_Msk            (0x2UL)
/* ========================================================  LVD1FCR  ======================================================== */
 #define R_SYSTEM_LVD1FCR_RHSEL_Pos              (0UL)
 #define R_SYSTEM_LVD1FCR_RHSEL_Msk              (0x1UL)
/* ========================================================  LVD2FCR  ======================================================== */
 #define R_SYSTEM_LVD2FCR_RHSEL_Pos              (0UL)
 #define R_SYSTEM_LVD2FCR_RHSEL_Msk              (0x1UL)
/* ========================================================  SOSCCR  ========================================================= */
 #define R_SYSTEM_SOSCCR_SOSTP_Pos               (0UL)
 #define R_SYSTEM_SOSCCR_SOSTP_Msk               (0x1UL)
/* =========================================================  SOMCR  ========================================================= */
 #define R_SYSTEM_SOMCR_SODRV_Pos                (0UL)
 #define R_SYSTEM_SOMCR_SODRV_Msk                (0x3UL)
 #define R_SYSTEM_SOMCR_SOSEL_Pos                (6UL)
 #define R_SYSTEM_SOMCR_SOSEL_Msk                (0x40UL)
/* ========================================================  VBTBER  ========================================================= */
 #define R_SYSTEM_VBTBER_VBAE_Pos                (3UL)
 #define R_SYSTEM_VBTBER_VBAE_Msk                (0x8UL)
/* =======================================================  VBTBPCR2  ======================================================== */
 #define R_SYSTEM_VBTBPCR2_VDETLVL_Pos           (0UL)
 #define R_SYSTEM_VBTBPCR2_VDETLVL_Msk           (0x7UL)
 #define R_SYSTEM_VBTBPCR2_VDETE_Pos             (4UL)
 #define R_SYSTEM_VBTBPCR2_VDETE_Msk             (0x10UL)
/* ========================================================  VBTBPSR  ======================================================== */
 #define R_SYSTEM_VBTBPSR_VBPORF_Pos             (0UL)
 #define R_SYSTEM_VBTBPSR_VBPORF_Msk             (0x1UL)
 #define R_SYSTEM_VBTBPSR_VBPORM_Pos             (4UL)
 #define R_SYSTEM_VBTBPSR_VBPORM_Msk             (0x10UL)
 #define R_SYSTEM_VBTBPSR_BPWSWM_Pos             (5UL)
 #define R_SYSTEM_VBTBPSR_BPWSWM_Msk             (0x20UL)
/* ========================================================  VBTADSR  ======================================================== */
 #define R_SYSTEM_VBTADSR_VBTADF0_Pos            (0UL)
 #define R_SYSTEM_VBTADSR_VBTADF0_Msk            (0x1UL)
 #define R_SYSTEM_VBTADSR_VBTADF1_Pos            (1UL)
 #define R_SYSTEM_VBTADSR_VBTADF1_Msk            (0x2UL)
 #define R_SYSTEM_VBTADSR_VBTADF2_Pos            (2UL)
 #define R_SYSTEM_VBTADSR_VBTADF2_Msk            (0x4UL)
/* =======================================================  VBTADCR1  ======================================================== */
 #define R_SYSTEM_VBTADCR1_VBTADIE0_Pos          (0UL)
 #define R_SYSTEM_VBTADCR1_VBTADIE0_Msk          (0x1UL)
 #define R_SYSTEM_VBTADCR1_VBTADIE1_Pos          (1UL)
 #define R_SYSTEM_VBTADCR1_VBTADIE1_Msk          (0x2UL)
 #define R_SYSTEM_VBTADCR1_VBTADIE2_Pos          (2UL)
 #define R_SYSTEM_VBTADCR1_VBTADIE2_Msk          (0x4UL)
 #define R_SYSTEM_VBTADCR1_VBTADCLE0_Pos         (4UL)
 #define R_SYSTEM_VBTADCR1_VBTADCLE0_Msk         (0x10UL)
 #define R_SYSTEM_VBTADCR1_VBTADCLE1_Pos         (5UL)
 #define R_SYSTEM_VBTADCR1_VBTADCLE1_Msk         (0x20UL)
 #define R_SYSTEM_VBTADCR1_VBTADCLE2_Pos         (6UL)
 #define R_SYSTEM_VBTADCR1_VBTADCLE2_Msk         (0x40UL)
/* =======================================================  VBTADCR2  ======================================================== */
 #define R_SYSTEM_VBTADCR2_VBRTCES0_Pos          (0UL)
 #define R_SYSTEM_VBTADCR2_VBRTCES0_Msk          (0x1UL)
 #define R_SYSTEM_VBTADCR2_VBRTCES1_Pos          (1UL)
 #define R_SYSTEM_VBTADCR2_VBRTCES1_Msk          (0x2UL)
 #define R_SYSTEM_VBTADCR2_VBRTCES2_Pos          (2UL)
 #define R_SYSTEM_VBTADCR2_VBRTCES2_Msk          (0x4UL)
/* =======================================================  VBTICTLR  ======================================================== */
 #define R_SYSTEM_VBTICTLR_VCH0INEN_Pos          (0UL)
 #define R_SYSTEM_VBTICTLR_VCH0INEN_Msk          (0x1UL)
 #define R_SYSTEM_VBTICTLR_VCH1INEN_Pos          (1UL)
 #define R_SYSTEM_VBTICTLR_VCH1INEN_Msk          (0x2UL)
 #define R_SYSTEM_VBTICTLR_VCH2INEN_Pos          (2UL)
 #define R_SYSTEM_VBTICTLR_VCH2INEN_Msk          (0x4UL)
/* =======================================================  VBTICTLR2  ======================================================= */
 #define R_SYSTEM_VBTICTLR2_VCH0NCE_Pos          (0UL)
 #define R_SYSTEM_VBTICTLR2_VCH0NCE_Msk          (0x1UL)
 #define R_SYSTEM_VBTICTLR2_VCH1NCE_Pos          (1UL)
 #define R_SYSTEM_VBTICTLR2_VCH1NCE_Msk          (0x2UL)
 #define R_SYSTEM_VBTICTLR2_VCH2NCE_Pos          (2UL)
 #define R_SYSTEM_VBTICTLR2_VCH2NCE_Msk          (0x4UL)
 #define R_SYSTEM_VBTICTLR2_VCH0EG_Pos           (4UL)
 #define R_SYSTEM_VBTICTLR2_VCH0EG_Msk           (0x10UL)
 #define R_SYSTEM_VBTICTLR2_VCH1EG_Pos           (5UL)
 #define R_SYSTEM_VBTICTLR2_VCH1EG_Msk           (0x20UL)
 #define R_SYSTEM_VBTICTLR2_VCH2EG_Pos           (6UL)
 #define R_SYSTEM_VBTICTLR2_VCH2EG_Msk           (0x40UL)
/* =======================================================  VBTIMONR  ======================================================== */
 #define R_SYSTEM_VBTIMONR_VCH0MON_Pos           (0UL)
 #define R_SYSTEM_VBTIMONR_VCH0MON_Msk           (0x1UL)
 #define R_SYSTEM_VBTIMONR_VCH1MON_Pos           (1UL)
 #define R_SYSTEM_VBTIMONR_VCH1MON_Msk           (0x2UL)
 #define R_SYSTEM_VBTIMONR_VCH2MON_Pos           (2UL)
 #define R_SYSTEM_VBTIMONR_VCH2MON_Msk           (0x4UL)
/* ========================================================  VBTBKR0  ======================================================== */
 #define R_SYSTEM_VBTBKR0_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR0_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR1  ======================================================== */
 #define R_SYSTEM_VBTBKR1_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR1_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR2  ======================================================== */
 #define R_SYSTEM_VBTBKR2_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR2_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR3  ======================================================== */
 #define R_SYSTEM_VBTBKR3_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR3_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR4  ======================================================== */
 #define R_SYSTEM_VBTBKR4_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR4_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR5  ======================================================== */
 #define R_SYSTEM_VBTBKR5_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR5_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR6  ======================================================== */
 #define R_SYSTEM_VBTBKR6_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR6_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR7  ======================================================== */
 #define R_SYSTEM_VBTBKR7_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR7_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR8  ======================================================== */
 #define R_SYSTEM_VBTBKR8_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR8_VBTBKR_Msk             (0xffUL)
/* ========================================================  VBTBKR9  ======================================================== */
 #define R_SYSTEM_VBTBKR9_VBTBKR_Pos             (0UL)
 #define R_SYSTEM_VBTBKR9_VBTBKR_Msk             (0xffUL)
/* =======================================================  VBTBKR10  ======================================================== */
 #define R_SYSTEM_VBTBKR10_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR10_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR11  ======================================================== */
 #define R_SYSTEM_VBTBKR11_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR11_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR12  ======================================================== */
 #define R_SYSTEM_VBTBKR12_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR12_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR13  ======================================================== */
 #define R_SYSTEM_VBTBKR13_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR13_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR14  ======================================================== */
 #define R_SYSTEM_VBTBKR14_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR14_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR15  ======================================================== */
 #define R_SYSTEM_VBTBKR15_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR15_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR16  ======================================================== */
 #define R_SYSTEM_VBTBKR16_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR16_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR17  ======================================================== */
 #define R_SYSTEM_VBTBKR17_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR17_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR18  ======================================================== */
 #define R_SYSTEM_VBTBKR18_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR18_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR19  ======================================================== */
 #define R_SYSTEM_VBTBKR19_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR19_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR20  ======================================================== */
 #define R_SYSTEM_VBTBKR20_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR20_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR21  ======================================================== */
 #define R_SYSTEM_VBTBKR21_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR21_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR22  ======================================================== */
 #define R_SYSTEM_VBTBKR22_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR22_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR23  ======================================================== */
 #define R_SYSTEM_VBTBKR23_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR23_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR24  ======================================================== */
 #define R_SYSTEM_VBTBKR24_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR24_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR25  ======================================================== */
 #define R_SYSTEM_VBTBKR25_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR25_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR26  ======================================================== */
 #define R_SYSTEM_VBTBKR26_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR26_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR27  ======================================================== */
 #define R_SYSTEM_VBTBKR27_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR27_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR28  ======================================================== */
 #define R_SYSTEM_VBTBKR28_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR28_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR29  ======================================================== */
 #define R_SYSTEM_VBTBKR29_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR29_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR30  ======================================================== */
 #define R_SYSTEM_VBTBKR30_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR30_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR31  ======================================================== */
 #define R_SYSTEM_VBTBKR31_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR31_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR32  ======================================================== */
 #define R_SYSTEM_VBTBKR32_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR32_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR33  ======================================================== */
 #define R_SYSTEM_VBTBKR33_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR33_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR34  ======================================================== */
 #define R_SYSTEM_VBTBKR34_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR34_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR35  ======================================================== */
 #define R_SYSTEM_VBTBKR35_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR35_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR36  ======================================================== */
 #define R_SYSTEM_VBTBKR36_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR36_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR37  ======================================================== */
 #define R_SYSTEM_VBTBKR37_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR37_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR38  ======================================================== */
 #define R_SYSTEM_VBTBKR38_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR38_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR39  ======================================================== */
 #define R_SYSTEM_VBTBKR39_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR39_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR40  ======================================================== */
 #define R_SYSTEM_VBTBKR40_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR40_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR41  ======================================================== */
 #define R_SYSTEM_VBTBKR41_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR41_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR42  ======================================================== */
 #define R_SYSTEM_VBTBKR42_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR42_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR43  ======================================================== */
 #define R_SYSTEM_VBTBKR43_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR43_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR44  ======================================================== */
 #define R_SYSTEM_VBTBKR44_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR44_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR45  ======================================================== */
 #define R_SYSTEM_VBTBKR45_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR45_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR46  ======================================================== */
 #define R_SYSTEM_VBTBKR46_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR46_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR47  ======================================================== */
 #define R_SYSTEM_VBTBKR47_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR47_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR48  ======================================================== */
 #define R_SYSTEM_VBTBKR48_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR48_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR49  ======================================================== */
 #define R_SYSTEM_VBTBKR49_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR49_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR50  ======================================================== */
 #define R_SYSTEM_VBTBKR50_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR50_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR51  ======================================================== */
 #define R_SYSTEM_VBTBKR51_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR51_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR52  ======================================================== */
 #define R_SYSTEM_VBTBKR52_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR52_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR53  ======================================================== */
 #define R_SYSTEM_VBTBKR53_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR53_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR54  ======================================================== */
 #define R_SYSTEM_VBTBKR54_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR54_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR55  ======================================================== */
 #define R_SYSTEM_VBTBKR55_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR55_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR56  ======================================================== */
 #define R_SYSTEM_VBTBKR56_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR56_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR57  ======================================================== */
 #define R_SYSTEM_VBTBKR57_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR57_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR58  ======================================================== */
 #define R_SYSTEM_VBTBKR58_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR58_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR59  ======================================================== */
 #define R_SYSTEM_VBTBKR59_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR59_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR60  ======================================================== */
 #define R_SYSTEM_VBTBKR60_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR60_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR61  ======================================================== */
 #define R_SYSTEM_VBTBKR61_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR61_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR62  ======================================================== */
 #define R_SYSTEM_VBTBKR62_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR62_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR63  ======================================================== */
 #define R_SYSTEM_VBTBKR63_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR63_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR64  ======================================================== */
 #define R_SYSTEM_VBTBKR64_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR64_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR65  ======================================================== */
 #define R_SYSTEM_VBTBKR65_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR65_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR66  ======================================================== */
 #define R_SYSTEM_VBTBKR66_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR66_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR67  ======================================================== */
 #define R_SYSTEM_VBTBKR67_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR67_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR68  ======================================================== */
 #define R_SYSTEM_VBTBKR68_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR68_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR69  ======================================================== */
 #define R_SYSTEM_VBTBKR69_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR69_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR70  ======================================================== */
 #define R_SYSTEM_VBTBKR70_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR70_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR71  ======================================================== */
 #define R_SYSTEM_VBTBKR71_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR71_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR72  ======================================================== */
 #define R_SYSTEM_VBTBKR72_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR72_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR73  ======================================================== */
 #define R_SYSTEM_VBTBKR73_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR73_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR74  ======================================================== */
 #define R_SYSTEM_VBTBKR74_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR74_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR75  ======================================================== */
 #define R_SYSTEM_VBTBKR75_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR75_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR76  ======================================================== */
 #define R_SYSTEM_VBTBKR76_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR76_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR77  ======================================================== */
 #define R_SYSTEM_VBTBKR77_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR77_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR78  ======================================================== */
 #define R_SYSTEM_VBTBKR78_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR78_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR79  ======================================================== */
 #define R_SYSTEM_VBTBKR79_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR79_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR80  ======================================================== */
 #define R_SYSTEM_VBTBKR80_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR80_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR81  ======================================================== */
 #define R_SYSTEM_VBTBKR81_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR81_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR82  ======================================================== */
 #define R_SYSTEM_VBTBKR82_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR82_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR83  ======================================================== */
 #define R_SYSTEM_VBTBKR83_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR83_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR84  ======================================================== */
 #define R_SYSTEM_VBTBKR84_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR84_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR85  ======================================================== */
 #define R_SYSTEM_VBTBKR85_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR85_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR86  ======================================================== */
 #define R_SYSTEM_VBTBKR86_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR86_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR87  ======================================================== */
 #define R_SYSTEM_VBTBKR87_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR87_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR88  ======================================================== */
 #define R_SYSTEM_VBTBKR88_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR88_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR89  ======================================================== */
 #define R_SYSTEM_VBTBKR89_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR89_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR90  ======================================================== */
 #define R_SYSTEM_VBTBKR90_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR90_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR91  ======================================================== */
 #define R_SYSTEM_VBTBKR91_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR91_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR92  ======================================================== */
 #define R_SYSTEM_VBTBKR92_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR92_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR93  ======================================================== */
 #define R_SYSTEM_VBTBKR93_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR93_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR94  ======================================================== */
 #define R_SYSTEM_VBTBKR94_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR94_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR95  ======================================================== */
 #define R_SYSTEM_VBTBKR95_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR95_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR96  ======================================================== */
 #define R_SYSTEM_VBTBKR96_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR96_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR97  ======================================================== */
 #define R_SYSTEM_VBTBKR97_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR97_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR98  ======================================================== */
 #define R_SYSTEM_VBTBKR98_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR98_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR99  ======================================================== */
 #define R_SYSTEM_VBTBKR99_VBTBKR_Pos            (0UL)
 #define R_SYSTEM_VBTBKR99_VBTBKR_Msk            (0xffUL)
/* =======================================================  VBTBKR100  ======================================================= */
 #define R_SYSTEM_VBTBKR100_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR100_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR101  ======================================================= */
 #define R_SYSTEM_VBTBKR101_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR101_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR102  ======================================================= */
 #define R_SYSTEM_VBTBKR102_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR102_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR103  ======================================================= */
 #define R_SYSTEM_VBTBKR103_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR103_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR104  ======================================================= */
 #define R_SYSTEM_VBTBKR104_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR104_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR105  ======================================================= */
 #define R_SYSTEM_VBTBKR105_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR105_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR106  ======================================================= */
 #define R_SYSTEM_VBTBKR106_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR106_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR107  ======================================================= */
 #define R_SYSTEM_VBTBKR107_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR107_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR108  ======================================================= */
 #define R_SYSTEM_VBTBKR108_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR108_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR109  ======================================================= */
 #define R_SYSTEM_VBTBKR109_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR109_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR110  ======================================================= */
 #define R_SYSTEM_VBTBKR110_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR110_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR111  ======================================================= */
 #define R_SYSTEM_VBTBKR111_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR111_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR112  ======================================================= */
 #define R_SYSTEM_VBTBKR112_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR112_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR113  ======================================================= */
 #define R_SYSTEM_VBTBKR113_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR113_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR114  ======================================================= */
 #define R_SYSTEM_VBTBKR114_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR114_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR115  ======================================================= */
 #define R_SYSTEM_VBTBKR115_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR115_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR116  ======================================================= */
 #define R_SYSTEM_VBTBKR116_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR116_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR117  ======================================================= */
 #define R_SYSTEM_VBTBKR117_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR117_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR118  ======================================================= */
 #define R_SYSTEM_VBTBKR118_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR118_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR119  ======================================================= */
 #define R_SYSTEM_VBTBKR119_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR119_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR120  ======================================================= */
 #define R_SYSTEM_VBTBKR120_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR120_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR121  ======================================================= */
 #define R_SYSTEM_VBTBKR121_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR121_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR122  ======================================================= */
 #define R_SYSTEM_VBTBKR122_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR122_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR123  ======================================================= */
 #define R_SYSTEM_VBTBKR123_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR123_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR124  ======================================================= */
 #define R_SYSTEM_VBTBKR124_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR124_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR125  ======================================================= */
 #define R_SYSTEM_VBTBKR125_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR125_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR126  ======================================================= */
 #define R_SYSTEM_VBTBKR126_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR126_VBTBKR_Msk           (0xffUL)
/* =======================================================  VBTBKR127  ======================================================= */
 #define R_SYSTEM_VBTBKR127_VBTBKR_Pos           (0UL)
 #define R_SYSTEM_VBTBKR127_VBTBKR_Msk           (0xffUL)

/* =========================================================================================================================== */
/* ================                                         R_TSN_CAL                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  TSCDR  ========================================================= */
 #define R_TSN_CAL_TSCDR_TSCDR_Pos    (0UL)
 #define R_TSN_CAL_TSCDR_TSCDR_Msk    (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                        R_TSN_CTRL                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  TSCR  ========================================================== */
 #define R_TSN_CTRL_TSCR_TSEN_Pos    (7UL)
 #define R_TSN_CTRL_TSCR_TSEN_Msk    (0x80UL)
 #define R_TSN_CTRL_TSCR_TSOE_Pos    (4UL)
 #define R_TSN_CTRL_TSCR_TSOE_Msk    (0x10UL)

/* =========================================================================================================================== */
/* ================                                         R_USB_FS0                                         ================ */
/* =========================================================================================================================== */

/* ========================================================  SYSCFG  ========================================================= */
 #define R_USB_FS0_SYSCFG_SCKE_Pos         (10UL)
 #define R_USB_FS0_SYSCFG_SCKE_Msk         (0x400UL)
 #define R_USB_FS0_SYSCFG_CNEN_Pos         (8UL)
 #define R_USB_FS0_SYSCFG_CNEN_Msk         (0x100UL)
 #define R_USB_FS0_SYSCFG_DCFM_Pos         (6UL)
 #define R_USB_FS0_SYSCFG_DCFM_Msk         (0x40UL)
 #define R_USB_FS0_SYSCFG_DRPD_Pos         (5UL)
 #define R_USB_FS0_SYSCFG_DRPD_Msk         (0x20UL)
 #define R_USB_FS0_SYSCFG_DPRPU_Pos        (4UL)
 #define R_USB_FS0_SYSCFG_DPRPU_Msk        (0x10UL)
 #define R_USB_FS0_SYSCFG_DMRPU_Pos        (3UL)
 #define R_USB_FS0_SYSCFG_DMRPU_Msk        (0x8UL)
 #define R_USB_FS0_SYSCFG_USBE_Pos         (0UL)
 #define R_USB_FS0_SYSCFG_USBE_Msk         (0x1UL)
/* ========================================================  BUSWAIT  ======================================================== */
 #define R_USB_FS0_BUSWAIT_BWAIT_Pos       (0UL)
 #define R_USB_FS0_BUSWAIT_BWAIT_Msk       (0xfUL)
/* ========================================================  SYSSTS0  ======================================================== */
 #define R_USB_FS0_SYSSTS0_OVCMON_Pos      (14UL)
 #define R_USB_FS0_SYSSTS0_OVCMON_Msk      (0xc000UL)
 #define R_USB_FS0_SYSSTS0_HTACT_Pos       (6UL)
 #define R_USB_FS0_SYSSTS0_HTACT_Msk       (0x40UL)
 #define R_USB_FS0_SYSSTS0_SOFEA_Pos       (5UL)
 #define R_USB_FS0_SYSSTS0_SOFEA_Msk       (0x20UL)
 #define R_USB_FS0_SYSSTS0_IDMON_Pos       (2UL)
 #define R_USB_FS0_SYSSTS0_IDMON_Msk       (0x4UL)
 #define R_USB_FS0_SYSSTS0_LNST_Pos        (0UL)
 #define R_USB_FS0_SYSSTS0_LNST_Msk        (0x3UL)
/* ========================================================  PLLSTA  ========================================================= */
 #define R_USB_FS0_PLLSTA_PLLLOCK_Pos      (0UL)
 #define R_USB_FS0_PLLSTA_PLLLOCK_Msk      (0x1UL)
/* =======================================================  DVSTCTR0  ======================================================== */
 #define R_USB_FS0_DVSTCTR0_HNPBTOA_Pos    (11UL)
 #define R_USB_FS0_DVSTCTR0_HNPBTOA_Msk    (0x800UL)
 #define R_USB_FS0_DVSTCTR0_EXICEN_Pos     (10UL)
 #define R_USB_FS0_DVSTCTR0_EXICEN_Msk     (0x400UL)
 #define R_USB_FS0_DVSTCTR0_VBUSEN_Pos     (9UL)
 #define R_USB_FS0_DVSTCTR0_VBUSEN_Msk     (0x200UL)
 #define R_USB_FS0_DVSTCTR0_WKUP_Pos       (8UL)
 #define R_USB_FS0_DVSTCTR0_WKUP_Msk       (0x100UL)
 #define R_USB_FS0_DVSTCTR0_RWUPE_Pos      (7UL)
 #define R_USB_FS0_DVSTCTR0_RWUPE_Msk      (0x80UL)
 #define R_USB_FS0_DVSTCTR0_USBRST_Pos     (6UL)
 #define R_USB_FS0_DVSTCTR0_USBRST_Msk     (0x40UL)
 #define R_USB_FS0_DVSTCTR0_RESUME_Pos     (5UL)
 #define R_USB_FS0_DVSTCTR0_RESUME_Msk     (0x20UL)
 #define R_USB_FS0_DVSTCTR0_UACT_Pos       (4UL)
 #define R_USB_FS0_DVSTCTR0_UACT_Msk       (0x10UL)
 #define R_USB_FS0_DVSTCTR0_RHST_Pos       (0UL)
 #define R_USB_FS0_DVSTCTR0_RHST_Msk       (0x7UL)
/* =======================================================  TESTMODE  ======================================================== */
 #define R_USB_FS0_TESTMODE_UTST_Pos       (0UL)
 #define R_USB_FS0_TESTMODE_UTST_Msk       (0xfUL)
/* ========================================================  CFIFOL  ========================================================= */
/* ========================================================  CFIFOLL  ======================================================== */
/* =========================================================  CFIFO  ========================================================= */
/* ========================================================  CFIFOH  ========================================================= */
/* ========================================================  CFIFOHH  ======================================================== */
/* ========================================================  D0FIFOL  ======================================================== */
/* =======================================================  D0FIFOLL  ======================================================== */
/* ========================================================  D0FIFO  ========================================================= */
/* ========================================================  D0FIFOH  ======================================================== */
/* =======================================================  D0FIFOHH  ======================================================== */
/* ========================================================  D1FIFOL  ======================================================== */
/* =======================================================  D1FIFOLL  ======================================================== */
/* ========================================================  D1FIFO  ========================================================= */
/* ========================================================  D1FIFOH  ======================================================== */
/* =======================================================  D1FIFOHH  ======================================================== */
/* =======================================================  CFIFOSEL  ======================================================== */
 #define R_USB_FS0_CFIFOSEL_RCNT_Pos            (15UL)
 #define R_USB_FS0_CFIFOSEL_RCNT_Msk            (0x8000UL)
 #define R_USB_FS0_CFIFOSEL_REW_Pos             (14UL)
 #define R_USB_FS0_CFIFOSEL_REW_Msk             (0x4000UL)
 #define R_USB_FS0_CFIFOSEL_MBW_Pos             (10UL)
 #define R_USB_FS0_CFIFOSEL_MBW_Msk             (0xc00UL)
 #define R_USB_FS0_CFIFOSEL_BIGEND_Pos          (8UL)
 #define R_USB_FS0_CFIFOSEL_BIGEND_Msk          (0x100UL)
 #define R_USB_FS0_CFIFOSEL_ISEL_Pos            (5UL)
 #define R_USB_FS0_CFIFOSEL_ISEL_Msk            (0x20UL)
 #define R_USB_FS0_CFIFOSEL_CURPIPE_Pos         (0UL)
 #define R_USB_FS0_CFIFOSEL_CURPIPE_Msk         (0xfUL)
/* =======================================================  CFIFOCTR  ======================================================== */
 #define R_USB_FS0_CFIFOCTR_BVAL_Pos            (15UL)
 #define R_USB_FS0_CFIFOCTR_BVAL_Msk            (0x8000UL)
 #define R_USB_FS0_CFIFOCTR_BCLR_Pos            (14UL)
 #define R_USB_FS0_CFIFOCTR_BCLR_Msk            (0x4000UL)
 #define R_USB_FS0_CFIFOCTR_FRDY_Pos            (13UL)
 #define R_USB_FS0_CFIFOCTR_FRDY_Msk            (0x2000UL)
 #define R_USB_FS0_CFIFOCTR_DTLN_Pos            (0UL)
 #define R_USB_FS0_CFIFOCTR_DTLN_Msk            (0xfffUL)
/* =======================================================  D0FIFOSEL  ======================================================= */
 #define R_USB_FS0_D0FIFOSEL_RCNT_Pos           (15UL)
 #define R_USB_FS0_D0FIFOSEL_RCNT_Msk           (0x8000UL)
 #define R_USB_FS0_D0FIFOSEL_REW_Pos            (14UL)
 #define R_USB_FS0_D0FIFOSEL_REW_Msk            (0x4000UL)
 #define R_USB_FS0_D0FIFOSEL_DCLRM_Pos          (13UL)
 #define R_USB_FS0_D0FIFOSEL_DCLRM_Msk          (0x2000UL)
 #define R_USB_FS0_D0FIFOSEL_DREQE_Pos          (12UL)
 #define R_USB_FS0_D0FIFOSEL_DREQE_Msk          (0x1000UL)
 #define R_USB_FS0_D0FIFOSEL_MBW_Pos            (10UL)
 #define R_USB_FS0_D0FIFOSEL_MBW_Msk            (0xc00UL)
 #define R_USB_FS0_D0FIFOSEL_BIGEND_Pos         (8UL)
 #define R_USB_FS0_D0FIFOSEL_BIGEND_Msk         (0x100UL)
 #define R_USB_FS0_D0FIFOSEL_CURPIPE_Pos        (0UL)
 #define R_USB_FS0_D0FIFOSEL_CURPIPE_Msk        (0xfUL)
/* =======================================================  D0FIFOCTR  ======================================================= */
 #define R_USB_FS0_D0FIFOCTR_BVAL_Pos           (15UL)
 #define R_USB_FS0_D0FIFOCTR_BVAL_Msk           (0x8000UL)
 #define R_USB_FS0_D0FIFOCTR_BCLR_Pos           (14UL)
 #define R_USB_FS0_D0FIFOCTR_BCLR_Msk           (0x4000UL)
 #define R_USB_FS0_D0FIFOCTR_FRDY_Pos           (13UL)
 #define R_USB_FS0_D0FIFOCTR_FRDY_Msk           (0x2000UL)
 #define R_USB_FS0_D0FIFOCTR_DTLN_Pos           (0UL)
 #define R_USB_FS0_D0FIFOCTR_DTLN_Msk           (0xfffUL)
/* =======================================================  D1FIFOSEL  ======================================================= */
 #define R_USB_FS0_D1FIFOSEL_RCNT_Pos           (15UL)
 #define R_USB_FS0_D1FIFOSEL_RCNT_Msk           (0x8000UL)
 #define R_USB_FS0_D1FIFOSEL_REW_Pos            (14UL)
 #define R_USB_FS0_D1FIFOSEL_REW_Msk            (0x4000UL)
 #define R_USB_FS0_D1FIFOSEL_DCLRM_Pos          (13UL)
 #define R_USB_FS0_D1FIFOSEL_DCLRM_Msk          (0x2000UL)
 #define R_USB_FS0_D1FIFOSEL_DREQE_Pos          (12UL)
 #define R_USB_FS0_D1FIFOSEL_DREQE_Msk          (0x1000UL)
 #define R_USB_FS0_D1FIFOSEL_MBW_Pos            (10UL)
 #define R_USB_FS0_D1FIFOSEL_MBW_Msk            (0xc00UL)
 #define R_USB_FS0_D1FIFOSEL_BIGEND_Pos         (8UL)
 #define R_USB_FS0_D1FIFOSEL_BIGEND_Msk         (0x100UL)
 #define R_USB_FS0_D1FIFOSEL_CURPIPE_Pos        (0UL)
 #define R_USB_FS0_D1FIFOSEL_CURPIPE_Msk        (0xfUL)
/* =======================================================  D1FIFOCTR  ======================================================= */
 #define R_USB_FS0_D1FIFOCTR_BVAL_Pos           (15UL)
 #define R_USB_FS0_D1FIFOCTR_BVAL_Msk           (0x8000UL)
 #define R_USB_FS0_D1FIFOCTR_BCLR_Pos           (14UL)
 #define R_USB_FS0_D1FIFOCTR_BCLR_Msk           (0x4000UL)
 #define R_USB_FS0_D1FIFOCTR_FRDY_Pos           (13UL)
 #define R_USB_FS0_D1FIFOCTR_FRDY_Msk           (0x2000UL)
 #define R_USB_FS0_D1FIFOCTR_DTLN_Pos           (0UL)
 #define R_USB_FS0_D1FIFOCTR_DTLN_Msk           (0xfffUL)
/* ========================================================  INTENB0  ======================================================== */
 #define R_USB_FS0_INTENB0_VBSE_Pos             (15UL)
 #define R_USB_FS0_INTENB0_VBSE_Msk             (0x8000UL)
 #define R_USB_FS0_INTENB0_RSME_Pos             (14UL)
 #define R_USB_FS0_INTENB0_RSME_Msk             (0x4000UL)
 #define R_USB_FS0_INTENB0_SOFE_Pos             (13UL)
 #define R_USB_FS0_INTENB0_SOFE_Msk             (0x2000UL)
 #define R_USB_FS0_INTENB0_DVSE_Pos             (12UL)
 #define R_USB_FS0_INTENB0_DVSE_Msk             (0x1000UL)
 #define R_USB_FS0_INTENB0_CTRE_Pos             (11UL)
 #define R_USB_FS0_INTENB0_CTRE_Msk             (0x800UL)
 #define R_USB_FS0_INTENB0_BEMPE_Pos            (10UL)
 #define R_USB_FS0_INTENB0_BEMPE_Msk            (0x400UL)
 #define R_USB_FS0_INTENB0_NRDYE_Pos            (9UL)
 #define R_USB_FS0_INTENB0_NRDYE_Msk            (0x200UL)
 #define R_USB_FS0_INTENB0_BRDYE_Pos            (8UL)
 #define R_USB_FS0_INTENB0_BRDYE_Msk            (0x100UL)
/* ========================================================  INTENB1  ======================================================== */
 #define R_USB_FS0_INTENB1_OVRCRE_Pos           (15UL)
 #define R_USB_FS0_INTENB1_OVRCRE_Msk           (0x8000UL)
 #define R_USB_FS0_INTENB1_BCHGE_Pos            (14UL)
 #define R_USB_FS0_INTENB1_BCHGE_Msk            (0x4000UL)
 #define R_USB_FS0_INTENB1_DTCHE_Pos            (12UL)
 #define R_USB_FS0_INTENB1_DTCHE_Msk            (0x1000UL)
 #define R_USB_FS0_INTENB1_ATTCHE_Pos           (11UL)
 #define R_USB_FS0_INTENB1_ATTCHE_Msk           (0x800UL)
 #define R_USB_FS0_INTENB1_EOFERRE_Pos          (6UL)
 #define R_USB_FS0_INTENB1_EOFERRE_Msk          (0x40UL)
 #define R_USB_FS0_INTENB1_SIGNE_Pos            (5UL)
 #define R_USB_FS0_INTENB1_SIGNE_Msk            (0x20UL)
 #define R_USB_FS0_INTENB1_SACKE_Pos            (4UL)
 #define R_USB_FS0_INTENB1_SACKE_Msk            (0x10UL)
 #define R_USB_FS0_INTENB1_PDDETINTE0_Pos       (0UL)
 #define R_USB_FS0_INTENB1_PDDETINTE0_Msk       (0x1UL)
/* ========================================================  BRDYENB  ======================================================== */
 #define R_USB_FS0_BRDYENB_PIPEBRDYE_Pos        (0UL)
 #define R_USB_FS0_BRDYENB_PIPEBRDYE_Msk        (0x1UL)
/* ========================================================  NRDYENB  ======================================================== */
 #define R_USB_FS0_NRDYENB_PIPENRDYE_Pos        (0UL)
 #define R_USB_FS0_NRDYENB_PIPENRDYE_Msk        (0x1UL)
/* ========================================================  BEMPENB  ======================================================== */
 #define R_USB_FS0_BEMPENB_PIPEBEMPE_Pos        (0UL)
 #define R_USB_FS0_BEMPENB_PIPEBEMPE_Msk        (0x1UL)
/* ========================================================  SOFCFG  ========================================================= */
 #define R_USB_FS0_SOFCFG_TRNENSEL_Pos          (8UL)
 #define R_USB_FS0_SOFCFG_TRNENSEL_Msk          (0x100UL)
 #define R_USB_FS0_SOFCFG_BRDYM_Pos             (6UL)
 #define R_USB_FS0_SOFCFG_BRDYM_Msk             (0x40UL)
 #define R_USB_FS0_SOFCFG_INTL_Pos              (5UL)
 #define R_USB_FS0_SOFCFG_INTL_Msk              (0x20UL)
 #define R_USB_FS0_SOFCFG_EDGESTS_Pos           (4UL)
 #define R_USB_FS0_SOFCFG_EDGESTS_Msk           (0x10UL)
/* ========================================================  PHYSET  ========================================================= */
 #define R_USB_FS0_PHYSET_HSEB_Pos              (15UL)
 #define R_USB_FS0_PHYSET_HSEB_Msk              (0x8000UL)
 #define R_USB_FS0_PHYSET_REPSTART_Pos          (11UL)
 #define R_USB_FS0_PHYSET_REPSTART_Msk          (0x800UL)
 #define R_USB_FS0_PHYSET_REPSEL_Pos            (8UL)
 #define R_USB_FS0_PHYSET_REPSEL_Msk            (0x300UL)
 #define R_USB_FS0_PHYSET_CLKSEL_Pos            (4UL)
 #define R_USB_FS0_PHYSET_CLKSEL_Msk            (0x30UL)
 #define R_USB_FS0_PHYSET_CDPEN_Pos             (3UL)
 #define R_USB_FS0_PHYSET_CDPEN_Msk             (0x8UL)
 #define R_USB_FS0_PHYSET_PLLRESET_Pos          (1UL)
 #define R_USB_FS0_PHYSET_PLLRESET_Msk          (0x2UL)
 #define R_USB_FS0_PHYSET_DIRPD_Pos             (0UL)
 #define R_USB_FS0_PHYSET_DIRPD_Msk             (0x1UL)
/* ========================================================  INTSTS0  ======================================================== */
 #define R_USB_FS0_INTSTS0_VBINT_Pos            (15UL)
 #define R_USB_FS0_INTSTS0_VBINT_Msk            (0x8000UL)
 #define R_USB_FS0_INTSTS0_RESM_Pos             (14UL)
 #define R_USB_FS0_INTSTS0_RESM_Msk             (0x4000UL)
 #define R_USB_FS0_INTSTS0_SOFR_Pos             (13UL)
 #define R_USB_FS0_INTSTS0_SOFR_Msk             (0x2000UL)
 #define R_USB_FS0_INTSTS0_DVST_Pos             (12UL)
 #define R_USB_FS0_INTSTS0_DVST_Msk             (0x1000UL)
 #define R_USB_FS0_INTSTS0_CTRT_Pos             (11UL)
 #define R_USB_FS0_INTSTS0_CTRT_Msk             (0x800UL)
 #define R_USB_FS0_INTSTS0_BEMP_Pos             (10UL)
 #define R_USB_FS0_INTSTS0_BEMP_Msk             (0x400UL)
 #define R_USB_FS0_INTSTS0_NRDY_Pos             (9UL)
 #define R_USB_FS0_INTSTS0_NRDY_Msk             (0x200UL)
 #define R_USB_FS0_INTSTS0_BRDY_Pos             (8UL)
 #define R_USB_FS0_INTSTS0_BRDY_Msk             (0x100UL)
 #define R_USB_FS0_INTSTS0_VBSTS_Pos            (7UL)
 #define R_USB_FS0_INTSTS0_VBSTS_Msk            (0x80UL)
 #define R_USB_FS0_INTSTS0_DVSQ_Pos             (4UL)
 #define R_USB_FS0_INTSTS0_DVSQ_Msk             (0x70UL)
 #define R_USB_FS0_INTSTS0_VALID_Pos            (3UL)
 #define R_USB_FS0_INTSTS0_VALID_Msk            (0x8UL)
 #define R_USB_FS0_INTSTS0_CTSQ_Pos             (0UL)
 #define R_USB_FS0_INTSTS0_CTSQ_Msk             (0x7UL)
/* ========================================================  INTSTS1  ======================================================== */
 #define R_USB_FS0_INTSTS1_OVRCR_Pos            (15UL)
 #define R_USB_FS0_INTSTS1_OVRCR_Msk            (0x8000UL)
 #define R_USB_FS0_INTSTS1_BCHG_Pos             (14UL)
 #define R_USB_FS0_INTSTS1_BCHG_Msk             (0x4000UL)
 #define R_USB_FS0_INTSTS1_DTCH_Pos             (12UL)
 #define R_USB_FS0_INTSTS1_DTCH_Msk             (0x1000UL)
 #define R_USB_FS0_INTSTS1_ATTCH_Pos            (11UL)
 #define R_USB_FS0_INTSTS1_ATTCH_Msk            (0x800UL)
 #define R_USB_FS0_INTSTS1_L1RSMEND_Pos         (9UL)
 #define R_USB_FS0_INTSTS1_L1RSMEND_Msk         (0x200UL)
 #define R_USB_FS0_INTSTS1_LPMEND_Pos           (8UL)
 #define R_USB_FS0_INTSTS1_LPMEND_Msk           (0x100UL)
 #define R_USB_FS0_INTSTS1_EOFERR_Pos           (6UL)
 #define R_USB_FS0_INTSTS1_EOFERR_Msk           (0x40UL)
 #define R_USB_FS0_INTSTS1_SIGN_Pos             (5UL)
 #define R_USB_FS0_INTSTS1_SIGN_Msk             (0x20UL)
 #define R_USB_FS0_INTSTS1_SACK_Pos             (4UL)
 #define R_USB_FS0_INTSTS1_SACK_Msk             (0x10UL)
 #define R_USB_FS0_INTSTS1_PDDETINT0_Pos        (0UL)
 #define R_USB_FS0_INTSTS1_PDDETINT0_Msk        (0x1UL)
/* ========================================================  BRDYSTS  ======================================================== */
 #define R_USB_FS0_BRDYSTS_PIPEBRDY_Pos         (0UL)
 #define R_USB_FS0_BRDYSTS_PIPEBRDY_Msk         (0x1UL)
/* ========================================================  NRDYSTS  ======================================================== */
 #define R_USB_FS0_NRDYSTS_PIPENRDY_Pos         (0UL)
 #define R_USB_FS0_NRDYSTS_PIPENRDY_Msk         (0x1UL)
/* ========================================================  BEMPSTS  ======================================================== */
 #define R_USB_FS0_BEMPSTS_PIPEBEMP_Pos         (0UL)
 #define R_USB_FS0_BEMPSTS_PIPEBEMP_Msk         (0x1UL)
/* ========================================================  FRMNUM  ========================================================= */
 #define R_USB_FS0_FRMNUM_OVRN_Pos              (15UL)
 #define R_USB_FS0_FRMNUM_OVRN_Msk              (0x8000UL)
 #define R_USB_FS0_FRMNUM_CRCE_Pos              (14UL)
 #define R_USB_FS0_FRMNUM_CRCE_Msk              (0x4000UL)
 #define R_USB_FS0_FRMNUM_FRNM_Pos              (0UL)
 #define R_USB_FS0_FRMNUM_FRNM_Msk              (0x7ffUL)
/* ========================================================  UFRMNUM  ======================================================== */
 #define R_USB_FS0_UFRMNUM_DVCHG_Pos            (15UL)
 #define R_USB_FS0_UFRMNUM_DVCHG_Msk            (0x8000UL)
 #define R_USB_FS0_UFRMNUM_UFRNM_Pos            (0UL)
 #define R_USB_FS0_UFRMNUM_UFRNM_Msk            (0x7UL)
/* ========================================================  USBADDR  ======================================================== */
 #define R_USB_FS0_USBADDR_STSRECOV0_Pos        (8UL)
 #define R_USB_FS0_USBADDR_STSRECOV0_Msk        (0x700UL)
 #define R_USB_FS0_USBADDR_USBADDR_Pos          (0UL)
 #define R_USB_FS0_USBADDR_USBADDR_Msk          (0x7fUL)
/* ========================================================  USBREQ  ========================================================= */
 #define R_USB_FS0_USBREQ_BREQUEST_Pos          (8UL)
 #define R_USB_FS0_USBREQ_BREQUEST_Msk          (0xff00UL)
 #define R_USB_FS0_USBREQ_BMREQUESTTYPE_Pos     (0UL)
 #define R_USB_FS0_USBREQ_BMREQUESTTYPE_Msk     (0xffUL)
/* ========================================================  USBVAL  ========================================================= */
 #define R_USB_FS0_USBVAL_WVALUE_Pos            (0UL)
 #define R_USB_FS0_USBVAL_WVALUE_Msk            (0xffffUL)
/* ========================================================  USBINDX  ======================================================== */
 #define R_USB_FS0_USBINDX_WINDEX_Pos           (0UL)
 #define R_USB_FS0_USBINDX_WINDEX_Msk           (0xffffUL)
/* ========================================================  USBLENG  ======================================================== */
 #define R_USB_FS0_USBLENG_WLENGTH_Pos          (0UL)
 #define R_USB_FS0_USBLENG_WLENGTH_Msk          (0xffffUL)
/* ========================================================  DCPCFG  ========================================================= */
 #define R_USB_FS0_DCPCFG_CNTMD_Pos             (8UL)
 #define R_USB_FS0_DCPCFG_CNTMD_Msk             (0x100UL)
 #define R_USB_FS0_DCPCFG_SHTNAK_Pos            (7UL)
 #define R_USB_FS0_DCPCFG_SHTNAK_Msk            (0x80UL)
 #define R_USB_FS0_DCPCFG_DIR_Pos               (4UL)
 #define R_USB_FS0_DCPCFG_DIR_Msk               (0x10UL)
/* ========================================================  DCPMAXP  ======================================================== */
 #define R_USB_FS0_DCPMAXP_DEVSEL_Pos           (12UL)
 #define R_USB_FS0_DCPMAXP_DEVSEL_Msk           (0xf000UL)
 #define R_USB_FS0_DCPMAXP_MXPS_Pos             (0UL)
 #define R_USB_FS0_DCPMAXP_MXPS_Msk             (0x7fUL)
/* ========================================================  DCPCTR  ========================================================= */
 #define R_USB_FS0_DCPCTR_BSTS_Pos              (15UL)
 #define R_USB_FS0_DCPCTR_BSTS_Msk              (0x8000UL)
 #define R_USB_FS0_DCPCTR_SUREQ_Pos             (14UL)
 #define R_USB_FS0_DCPCTR_SUREQ_Msk             (0x4000UL)
 #define R_USB_FS0_DCPCTR_SUREQCLR_Pos          (11UL)
 #define R_USB_FS0_DCPCTR_SUREQCLR_Msk          (0x800UL)
 #define R_USB_FS0_DCPCTR_SQCLR_Pos             (8UL)
 #define R_USB_FS0_DCPCTR_SQCLR_Msk             (0x100UL)
 #define R_USB_FS0_DCPCTR_SQSET_Pos             (7UL)
 #define R_USB_FS0_DCPCTR_SQSET_Msk             (0x80UL)
 #define R_USB_FS0_DCPCTR_SQMON_Pos             (6UL)
 #define R_USB_FS0_DCPCTR_SQMON_Msk             (0x40UL)
 #define R_USB_FS0_DCPCTR_PBUSY_Pos             (5UL)
 #define R_USB_FS0_DCPCTR_PBUSY_Msk             (0x20UL)
 #define R_USB_FS0_DCPCTR_CCPL_Pos              (2UL)
 #define R_USB_FS0_DCPCTR_CCPL_Msk              (0x4UL)
 #define R_USB_FS0_DCPCTR_PID_Pos               (0UL)
 #define R_USB_FS0_DCPCTR_PID_Msk               (0x3UL)
/* ========================================================  PIPESEL  ======================================================== */
 #define R_USB_FS0_PIPESEL_PIPESEL_Pos          (0UL)
 #define R_USB_FS0_PIPESEL_PIPESEL_Msk          (0xfUL)
/* ========================================================  PIPECFG  ======================================================== */
 #define R_USB_FS0_PIPECFG_TYPE_Pos             (14UL)
 #define R_USB_FS0_PIPECFG_TYPE_Msk             (0xc000UL)
 #define R_USB_FS0_PIPECFG_BFRE_Pos             (10UL)
 #define R_USB_FS0_PIPECFG_BFRE_Msk             (0x400UL)
 #define R_USB_FS0_PIPECFG_DBLB_Pos             (9UL)
 #define R_USB_FS0_PIPECFG_DBLB_Msk             (0x200UL)
 #define R_USB_FS0_PIPECFG_SHTNAK_Pos           (7UL)
 #define R_USB_FS0_PIPECFG_SHTNAK_Msk           (0x80UL)
 #define R_USB_FS0_PIPECFG_DIR_Pos              (4UL)
 #define R_USB_FS0_PIPECFG_DIR_Msk              (0x10UL)
 #define R_USB_FS0_PIPECFG_EPNUM_Pos            (0UL)
 #define R_USB_FS0_PIPECFG_EPNUM_Msk            (0xfUL)
/* =======================================================  PIPEMAXP  ======================================================== */
 #define R_USB_FS0_PIPEMAXP_DEVSEL_Pos          (12UL)
 #define R_USB_FS0_PIPEMAXP_DEVSEL_Msk          (0xf000UL)
 #define R_USB_FS0_PIPEMAXP_MXPS_Pos            (0UL)
 #define R_USB_FS0_PIPEMAXP_MXPS_Msk            (0x1ffUL)
/* =======================================================  PIPEPERI  ======================================================== */
 #define R_USB_FS0_PIPEPERI_IFIS_Pos            (12UL)
 #define R_USB_FS0_PIPEPERI_IFIS_Msk            (0x1000UL)
 #define R_USB_FS0_PIPEPERI_IITV_Pos            (0UL)
 #define R_USB_FS0_PIPEPERI_IITV_Msk            (0x7UL)
/* =======================================================  PIPE_CTR  ======================================================== */
 #define R_USB_FS0_PIPE_CTR_BSTS_Pos            (15UL)
 #define R_USB_FS0_PIPE_CTR_BSTS_Msk            (0x8000UL)
 #define R_USB_FS0_PIPE_CTR_INBUFM_Pos          (14UL)
 #define R_USB_FS0_PIPE_CTR_INBUFM_Msk          (0x4000UL)
 #define R_USB_FS0_PIPE_CTR_CSCLR_Pos           (13UL)
 #define R_USB_FS0_PIPE_CTR_CSCLR_Msk           (0x2000UL)
 #define R_USB_FS0_PIPE_CTR_CSSTS_Pos           (12UL)
 #define R_USB_FS0_PIPE_CTR_CSSTS_Msk           (0x1000UL)
 #define R_USB_FS0_PIPE_CTR_ATREPM_Pos          (10UL)
 #define R_USB_FS0_PIPE_CTR_ATREPM_Msk          (0x400UL)
 #define R_USB_FS0_PIPE_CTR_ACLRM_Pos           (9UL)
 #define R_USB_FS0_PIPE_CTR_ACLRM_Msk           (0x200UL)
 #define R_USB_FS0_PIPE_CTR_SQCLR_Pos           (8UL)
 #define R_USB_FS0_PIPE_CTR_SQCLR_Msk           (0x100UL)
 #define R_USB_FS0_PIPE_CTR_SQSET_Pos           (7UL)
 #define R_USB_FS0_PIPE_CTR_SQSET_Msk           (0x80UL)
 #define R_USB_FS0_PIPE_CTR_SQMON_Pos           (6UL)
 #define R_USB_FS0_PIPE_CTR_SQMON_Msk           (0x40UL)
 #define R_USB_FS0_PIPE_CTR_PBUSY_Pos           (5UL)
 #define R_USB_FS0_PIPE_CTR_PBUSY_Msk           (0x20UL)
 #define R_USB_FS0_PIPE_CTR_PID_Pos             (0UL)
 #define R_USB_FS0_PIPE_CTR_PID_Msk             (0x3UL)
/* ========================================================  DEVADD  ========================================================= */
 #define R_USB_FS0_DEVADD_UPPHUB_Pos            (11UL)
 #define R_USB_FS0_DEVADD_UPPHUB_Msk            (0x7800UL)
 #define R_USB_FS0_DEVADD_HUBPORT_Pos           (8UL)
 #define R_USB_FS0_DEVADD_HUBPORT_Msk           (0x700UL)
 #define R_USB_FS0_DEVADD_USBSPD_Pos            (6UL)
 #define R_USB_FS0_DEVADD_USBSPD_Msk            (0xc0UL)
/* ======================================================  USBBCCTRL0  ======================================================= */
 #define R_USB_FS0_USBBCCTRL0_PDDETSTS0_Pos     (9UL)
 #define R_USB_FS0_USBBCCTRL0_PDDETSTS0_Msk     (0x200UL)
 #define R_USB_FS0_USBBCCTRL0_CHGDETSTS0_Pos    (8UL)
 #define R_USB_FS0_USBBCCTRL0_CHGDETSTS0_Msk    (0x100UL)
 #define R_USB_FS0_USBBCCTRL0_BATCHGE0_Pos      (7UL)
 #define R_USB_FS0_USBBCCTRL0_BATCHGE0_Msk      (0x80UL)
 #define R_USB_FS0_USBBCCTRL0_VDMSRCE0_Pos      (5UL)
 #define R_USB_FS0_USBBCCTRL0_VDMSRCE0_Msk      (0x20UL)
 #define R_USB_FS0_USBBCCTRL0_IDPSINKE0_Pos     (4UL)
 #define R_USB_FS0_USBBCCTRL0_IDPSINKE0_Msk     (0x10UL)
 #define R_USB_FS0_USBBCCTRL0_VDPSRCE0_Pos      (3UL)
 #define R_USB_FS0_USBBCCTRL0_VDPSRCE0_Msk      (0x8UL)
 #define R_USB_FS0_USBBCCTRL0_IDMSINKE0_Pos     (2UL)
 #define R_USB_FS0_USBBCCTRL0_IDMSINKE0_Msk     (0x4UL)
 #define R_USB_FS0_USBBCCTRL0_IDPSRCE0_Pos      (1UL)
 #define R_USB_FS0_USBBCCTRL0_IDPSRCE0_Msk      (0x2UL)
 #define R_USB_FS0_USBBCCTRL0_RPDME0_Pos        (0UL)
 #define R_USB_FS0_USBBCCTRL0_RPDME0_Msk        (0x1UL)
/* ========================================================  UCKSEL  ========================================================= */
 #define R_USB_FS0_UCKSEL_UCKSELC_Pos           (0UL)
 #define R_USB_FS0_UCKSEL_UCKSELC_Msk           (0x1UL)
/* =========================================================  USBMC  ========================================================= */
 #define R_USB_FS0_USBMC_VDCEN_Pos              (7UL)
 #define R_USB_FS0_USBMC_VDCEN_Msk              (0x80UL)
 #define R_USB_FS0_USBMC_VDDUSBE_Pos            (0UL)
 #define R_USB_FS0_USBMC_VDDUSBE_Msk            (0x1UL)
/* ========================================================  PHYSLEW  ======================================================== */
 #define R_USB_FS0_PHYSLEW_SLEWF01_Pos          (3UL)
 #define R_USB_FS0_PHYSLEW_SLEWF01_Msk          (0x8UL)
 #define R_USB_FS0_PHYSLEW_SLEWF00_Pos          (2UL)
 #define R_USB_FS0_PHYSLEW_SLEWF00_Msk          (0x4UL)
 #define R_USB_FS0_PHYSLEW_SLEWR01_Pos          (1UL)
 #define R_USB_FS0_PHYSLEW_SLEWR01_Msk          (0x2UL)
 #define R_USB_FS0_PHYSLEW_SLEWR00_Pos          (0UL)
 #define R_USB_FS0_PHYSLEW_SLEWR00_Msk          (0x1UL)
/* ========================================================  LPCTRL  ========================================================= */
 #define R_USB_FS0_LPCTRL_HWUPM_Pos             (7UL)
 #define R_USB_FS0_LPCTRL_HWUPM_Msk             (0x80UL)
/* =========================================================  LPSTS  ========================================================= */
 #define R_USB_FS0_LPSTS_SUSPENDM_Pos           (14UL)
 #define R_USB_FS0_LPSTS_SUSPENDM_Msk           (0x4000UL)
/* ========================================================  BCCTRL  ========================================================= */
 #define R_USB_FS0_BCCTRL_PDDETSTS_Pos          (9UL)
 #define R_USB_FS0_BCCTRL_PDDETSTS_Msk          (0x200UL)
 #define R_USB_FS0_BCCTRL_CHGDETSTS_Pos         (8UL)
 #define R_USB_FS0_BCCTRL_CHGDETSTS_Msk         (0x100UL)
 #define R_USB_FS0_BCCTRL_DCPMODE_Pos           (5UL)
 #define R_USB_FS0_BCCTRL_DCPMODE_Msk           (0x20UL)
 #define R_USB_FS0_BCCTRL_VDMSRCE_Pos           (4UL)
 #define R_USB_FS0_BCCTRL_VDMSRCE_Msk           (0x10UL)
 #define R_USB_FS0_BCCTRL_IDPSINKE_Pos          (3UL)
 #define R_USB_FS0_BCCTRL_IDPSINKE_Msk          (0x8UL)
 #define R_USB_FS0_BCCTRL_VDPSRCE_Pos           (2UL)
 #define R_USB_FS0_BCCTRL_VDPSRCE_Msk           (0x4UL)
 #define R_USB_FS0_BCCTRL_IDMSINKE_Pos          (1UL)
 #define R_USB_FS0_BCCTRL_IDMSINKE_Msk          (0x2UL)
 #define R_USB_FS0_BCCTRL_IDPSRCE_Pos           (0UL)
 #define R_USB_FS0_BCCTRL_IDPSRCE_Msk           (0x1UL)
/* =======================================================  PL1CTRL1  ======================================================== */
 #define R_USB_FS0_PL1CTRL1_L1EXTMD_Pos         (14UL)
 #define R_USB_FS0_PL1CTRL1_L1EXTMD_Msk         (0x4000UL)
 #define R_USB_FS0_PL1CTRL1_HIRDTHR_Pos         (8UL)
 #define R_USB_FS0_PL1CTRL1_HIRDTHR_Msk         (0xf00UL)
 #define R_USB_FS0_PL1CTRL1_DVSQ_Pos            (4UL)
 #define R_USB_FS0_PL1CTRL1_DVSQ_Msk            (0xf0UL)
 #define R_USB_FS0_PL1CTRL1_L1NEGOMD_Pos        (3UL)
 #define R_USB_FS0_PL1CTRL1_L1NEGOMD_Msk        (0x8UL)
 #define R_USB_FS0_PL1CTRL1_L1RESPMD_Pos        (1UL)
 #define R_USB_FS0_PL1CTRL1_L1RESPMD_Msk        (0x6UL)
 #define R_USB_FS0_PL1CTRL1_L1RESPEN_Pos        (0UL)
 #define R_USB_FS0_PL1CTRL1_L1RESPEN_Msk        (0x1UL)
/* =======================================================  PL1CTRL2  ======================================================== */
 #define R_USB_FS0_PL1CTRL2_RWEMON_Pos          (12UL)
 #define R_USB_FS0_PL1CTRL2_RWEMON_Msk          (0x1000UL)
 #define R_USB_FS0_PL1CTRL2_HIRDMON_Pos         (8UL)
 #define R_USB_FS0_PL1CTRL2_HIRDMON_Msk         (0xf00UL)
/* =======================================================  HL1CTRL1  ======================================================== */
 #define R_USB_FS0_HL1CTRL1_L1STATUS_Pos        (1UL)
 #define R_USB_FS0_HL1CTRL1_L1STATUS_Msk        (0x6UL)
 #define R_USB_FS0_HL1CTRL1_L1REQ_Pos           (0UL)
 #define R_USB_FS0_HL1CTRL1_L1REQ_Msk           (0x1UL)
/* =======================================================  HL1CTRL2  ======================================================== */
 #define R_USB_FS0_HL1CTRL2_BESL_Pos            (15UL)
 #define R_USB_FS0_HL1CTRL2_BESL_Msk            (0x8000UL)
 #define R_USB_FS0_HL1CTRL2_L1RWE_Pos           (12UL)
 #define R_USB_FS0_HL1CTRL2_L1RWE_Msk           (0x1000UL)
 #define R_USB_FS0_HL1CTRL2_HIRD_Pos            (8UL)
 #define R_USB_FS0_HL1CTRL2_HIRD_Msk            (0xf00UL)
 #define R_USB_FS0_HL1CTRL2_L1ADDR_Pos          (0UL)
 #define R_USB_FS0_HL1CTRL2_L1ADDR_Msk          (0xfUL)
/* ========================================================  DPUSR0R  ======================================================== */
 #define R_USB_FS0_DPUSR0R_DVBSTSHM_Pos         (23UL)
 #define R_USB_FS0_DPUSR0R_DVBSTSHM_Msk         (0x800000UL)
 #define R_USB_FS0_DPUSR0R_DOVCBHM_Pos          (21UL)
 #define R_USB_FS0_DPUSR0R_DOVCBHM_Msk          (0x200000UL)
 #define R_USB_FS0_DPUSR0R_DOVCAHM_Pos          (20UL)
 #define R_USB_FS0_DPUSR0R_DOVCAHM_Msk          (0x100000UL)
/* ========================================================  DPUSR1R  ======================================================== */
 #define R_USB_FS0_DPUSR1R_DVBSTSH_Pos          (23UL)
 #define R_USB_FS0_DPUSR1R_DVBSTSH_Msk          (0x800000UL)
 #define R_USB_FS0_DPUSR1R_DOVCBH_Pos           (21UL)
 #define R_USB_FS0_DPUSR1R_DOVCBH_Msk           (0x200000UL)
 #define R_USB_FS0_DPUSR1R_DOVCAH_Pos           (20UL)
 #define R_USB_FS0_DPUSR1R_DOVCAH_Msk           (0x100000UL)
 #define R_USB_FS0_DPUSR1R_DVBSTSHE_Pos         (7UL)
 #define R_USB_FS0_DPUSR1R_DVBSTSHE_Msk         (0x80UL)
 #define R_USB_FS0_DPUSR1R_DOVCBHE_Pos          (5UL)
 #define R_USB_FS0_DPUSR1R_DOVCBHE_Msk          (0x20UL)
 #define R_USB_FS0_DPUSR1R_DOVCAHE_Pos          (4UL)
 #define R_USB_FS0_DPUSR1R_DOVCAHE_Msk          (0x10UL)
/* ========================================================  DPUSR2R  ======================================================== */
 #define R_USB_FS0_DPUSR2R_DMINTE_Pos           (9UL)
 #define R_USB_FS0_DPUSR2R_DMINTE_Msk           (0x200UL)
 #define R_USB_FS0_DPUSR2R_DPINTE_Pos           (8UL)
 #define R_USB_FS0_DPUSR2R_DPINTE_Msk           (0x100UL)
 #define R_USB_FS0_DPUSR2R_DMVAL_Pos            (5UL)
 #define R_USB_FS0_DPUSR2R_DMVAL_Msk            (0x20UL)
 #define R_USB_FS0_DPUSR2R_DPVAL_Pos            (4UL)
 #define R_USB_FS0_DPUSR2R_DPVAL_Msk            (0x10UL)
 #define R_USB_FS0_DPUSR2R_DMINT_Pos            (1UL)
 #define R_USB_FS0_DPUSR2R_DMINT_Msk            (0x2UL)
 #define R_USB_FS0_DPUSR2R_DPINT_Pos            (0UL)
 #define R_USB_FS0_DPUSR2R_DPINT_Msk            (0x1UL)
/* ========================================================  DPUSRCR  ======================================================== */
 #define R_USB_FS0_DPUSRCR_FIXPHYPD_Pos         (1UL)
 #define R_USB_FS0_DPUSRCR_FIXPHYPD_Msk         (0x2UL)
 #define R_USB_FS0_DPUSRCR_FIXPHY_Pos           (0UL)
 #define R_USB_FS0_DPUSRCR_FIXPHY_Msk           (0x1UL)
/* ======================================================  DPUSR0R_FS  ======================================================= */
 #define R_USB_FS0_DPUSR0R_FS_DVBSTS0_Pos       (23UL)
 #define R_USB_FS0_DPUSR0R_FS_DVBSTS0_Msk       (0x800000UL)
 #define R_USB_FS0_DPUSR0R_FS_DOVCB0_Pos        (21UL)
 #define R_USB_FS0_DPUSR0R_FS_DOVCB0_Msk        (0x200000UL)
 #define R_USB_FS0_DPUSR0R_FS_DOVCA0_Pos        (20UL)
 #define R_USB_FS0_DPUSR0R_FS_DOVCA0_Msk        (0x100000UL)
 #define R_USB_FS0_DPUSR0R_FS_DM0_Pos           (17UL)
 #define R_USB_FS0_DPUSR0R_FS_DM0_Msk           (0x20000UL)
 #define R_USB_FS0_DPUSR0R_FS_DP0_Pos           (16UL)
 #define R_USB_FS0_DPUSR0R_FS_DP0_Msk           (0x10000UL)
 #define R_USB_FS0_DPUSR0R_FS_FIXPHY0_Pos       (4UL)
 #define R_USB_FS0_DPUSR0R_FS_FIXPHY0_Msk       (0x10UL)
 #define R_USB_FS0_DPUSR0R_FS_DRPD0_Pos         (3UL)
 #define R_USB_FS0_DPUSR0R_FS_DRPD0_Msk         (0x8UL)
 #define R_USB_FS0_DPUSR0R_FS_RPUE0_Pos         (1UL)
 #define R_USB_FS0_DPUSR0R_FS_RPUE0_Msk         (0x2UL)
 #define R_USB_FS0_DPUSR0R_FS_SRPC0_Pos         (0UL)
 #define R_USB_FS0_DPUSR0R_FS_SRPC0_Msk         (0x1UL)
/* ======================================================  DPUSR1R_FS  ======================================================= */
 #define R_USB_FS0_DPUSR1R_FS_DVBINT0_Pos       (23UL)
 #define R_USB_FS0_DPUSR1R_FS_DVBINT0_Msk       (0x800000UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRB0_Pos      (21UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRB0_Msk      (0x200000UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRA0_Pos      (20UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRA0_Msk      (0x100000UL)
 #define R_USB_FS0_DPUSR1R_FS_DMINT0_Pos        (17UL)
 #define R_USB_FS0_DPUSR1R_FS_DMINT0_Msk        (0x20000UL)
 #define R_USB_FS0_DPUSR1R_FS_DPINT0_Pos        (16UL)
 #define R_USB_FS0_DPUSR1R_FS_DPINT0_Msk        (0x10000UL)
 #define R_USB_FS0_DPUSR1R_FS_DVBSE0_Pos        (7UL)
 #define R_USB_FS0_DPUSR1R_FS_DVBSE0_Msk        (0x80UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRBE0_Pos     (5UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRBE0_Msk     (0x20UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRAE0_Pos     (4UL)
 #define R_USB_FS0_DPUSR1R_FS_DOVRCRAE0_Msk     (0x10UL)
 #define R_USB_FS0_DPUSR1R_FS_DMINTE0_Pos       (1UL)
 #define R_USB_FS0_DPUSR1R_FS_DMINTE0_Msk       (0x2UL)
 #define R_USB_FS0_DPUSR1R_FS_DPINTE0_Pos       (0UL)
 #define R_USB_FS0_DPUSR1R_FS_DPINTE0_Msk       (0x1UL)

/* =========================================================================================================================== */
/* ================                                           R_WDT                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  WDTRR  ========================================================= */
 #define R_WDT_WDTRR_WDTRR_Pos        (0UL)
 #define R_WDT_WDTRR_WDTRR_Msk        (0xffUL)
/* =========================================================  WDTCR  ========================================================= */
 #define R_WDT_WDTCR_RPSS_Pos         (12UL)
 #define R_WDT_WDTCR_RPSS_Msk         (0x3000UL)
 #define R_WDT_WDTCR_RPES_Pos         (8UL)
 #define R_WDT_WDTCR_RPES_Msk         (0x300UL)
 #define R_WDT_WDTCR_CKS_Pos          (4UL)
 #define R_WDT_WDTCR_CKS_Msk          (0xf0UL)
 #define R_WDT_WDTCR_TOPS_Pos         (0UL)
 #define R_WDT_WDTCR_TOPS_Msk         (0x3UL)
/* =========================================================  WDTSR  ========================================================= */
 #define R_WDT_WDTSR_REFEF_Pos        (15UL)
 #define R_WDT_WDTSR_REFEF_Msk        (0x8000UL)
 #define R_WDT_WDTSR_UNDFF_Pos        (14UL)
 #define R_WDT_WDTSR_UNDFF_Msk        (0x4000UL)
 #define R_WDT_WDTSR_CNTVAL_Pos       (0UL)
 #define R_WDT_WDTSR_CNTVAL_Msk       (0x3fffUL)
/* ========================================================  WDTRCR  ========================================================= */
 #define R_WDT_WDTRCR_RSTIRQS_Pos     (7UL)
 #define R_WDT_WDTRCR_RSTIRQS_Msk     (0x80UL)
/* =======================================================  WDTCSTPR  ======================================================== */
 #define R_WDT_WDTCSTPR_SLCSTP_Pos    (7UL)
 #define R_WDT_WDTCSTPR_SLCSTP_Msk    (0x80UL)

/* =========================================================================================================================== */
/* ================                                           R_TZF                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  TZFOAD  ========================================================= */
 #define R_TZF_TZFOAD_OAD_Pos       (0UL)
 #define R_TZF_TZFOAD_OAD_Msk       (0x1UL)
 #define R_TZF_TZFOAD_KEY_Pos       (8UL)
 #define R_TZF_TZFOAD_KEY_Msk       (0xff00UL)
/* =========================================================  TZFPT  ========================================================= */
 #define R_TZF_TZFPT_PROTECT_Pos    (0UL)
 #define R_TZF_TZFPT_PROTECT_Msk    (0x1UL)
 #define R_TZF_TZFPT_KEY_Pos        (8UL)
 #define R_TZF_TZFPT_KEY_Msk        (0xff00UL)

/* =========================================================================================================================== */
/* ================                                          R_CPSCU                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  CSAR  ========================================================== */
 #define R_CPSCU_CSAR_CACHESA_Pos            (0UL)
 #define R_CPSCU_CSAR_CACHESA_Msk            (0x1UL)
 #define R_CPSCU_CSAR_CACHELSA_Pos           (1UL)
 #define R_CPSCU_CSAR_CACHELSA_Msk           (0x2UL)
 #define R_CPSCU_CSAR_CACHEESA_Pos           (2UL)
 #define R_CPSCU_CSAR_CACHEESA_Msk           (0x4UL)
/* ========================================================  SRAMSAR  ======================================================== */
 #define R_CPSCU_SRAMSAR_SRAMSA0_Pos         (0UL)
 #define R_CPSCU_SRAMSAR_SRAMSA0_Msk         (0x1UL)
 #define R_CPSCU_SRAMSAR_SRAMSA1_Pos         (1UL)
 #define R_CPSCU_SRAMSAR_SRAMSA1_Msk         (0x2UL)
 #define R_CPSCU_SRAMSAR_SRAMSA2_Pos         (2UL)
 #define R_CPSCU_SRAMSAR_SRAMSA2_Msk         (0x4UL)
/* =======================================================  STBRAMSAR  ======================================================= */
 #define R_CPSCU_STBRAMSAR_NSBSTBR_Pos       (0UL)
 #define R_CPSCU_STBRAMSAR_NSBSTBR_Msk       (0xfUL)
/* ========================================================  DTCSAR  ========================================================= */
 #define R_CPSCU_DTCSAR_DTCSTSA_Pos          (0UL)
 #define R_CPSCU_DTCSAR_DTCSTSA_Msk          (0x1UL)
/* ========================================================  DMACSAR  ======================================================== */
 #define R_CPSCU_DMACSAR_DMASTSA_Pos         (0UL)
 #define R_CPSCU_DMACSAR_DMASTSA_Msk         (0x1UL)
/* ========================================================  ICUSARA  ======================================================== */
 #define R_CPSCU_ICUSARA_SAIRQCRn_Pos        (0UL)
 #define R_CPSCU_ICUSARA_SAIRQCRn_Msk        (0xffffUL)
/* ========================================================  ICUSARB  ======================================================== */
 #define R_CPSCU_ICUSARB_SANMI_Pos           (0UL)
 #define R_CPSCU_ICUSARB_SANMI_Msk           (0x1UL)
/* ========================================================  ICUSARC  ======================================================== */
 #define R_CPSCU_ICUSARC_SADMACn_Pos         (0UL)
 #define R_CPSCU_ICUSARC_SADMACn_Msk         (0xffUL)
/* ========================================================  ICUSARD  ======================================================== */
 #define R_CPSCU_ICUSARD_SASELSR0_Pos        (0UL)
 #define R_CPSCU_ICUSARD_SASELSR0_Msk        (0x1UL)
/* ========================================================  ICUSARE  ======================================================== */
 #define R_CPSCU_ICUSARE_SAIWDTWUP_Pos       (16UL)
 #define R_CPSCU_ICUSARE_SAIWDTWUP_Msk       (0x10000UL)
 #define R_CPSCU_ICUSARE_SALVD1WUP_Pos       (18UL)
 #define R_CPSCU_ICUSARE_SALVD1WUP_Msk       (0x40000UL)
 #define R_CPSCU_ICUSARE_SALVD2WUP_Pos       (19UL)
 #define R_CPSCU_ICUSARE_SALVD2WUP_Msk       (0x80000UL)
 #define R_CPSCU_ICUSARE_SAVBATTWUP_Pos      (20UL)
 #define R_CPSCU_ICUSARE_SAVBATTWUP_Msk      (0x100000UL)
 #define R_CPSCU_ICUSARE_SARTCALMWUP_Pos     (24UL)
 #define R_CPSCU_ICUSARE_SARTCALMWUP_Msk     (0x1000000UL)
 #define R_CPSCU_ICUSARE_SARTCPRDWUP_Pos     (25UL)
 #define R_CPSCU_ICUSARE_SARTCPRDWUP_Msk     (0x2000000UL)
 #define R_CPSCU_ICUSARE_SAUSBFS0WUP_Pos     (27UL)
 #define R_CPSCU_ICUSARE_SAUSBFS0WUP_Msk     (0x8000000UL)
 #define R_CPSCU_ICUSARE_SAAGT1UDWUP_Pos     (28UL)
 #define R_CPSCU_ICUSARE_SAAGT1UDWUP_Msk     (0x10000000UL)
 #define R_CPSCU_ICUSARE_SAAGT1CAWUP_Pos     (29UL)
 #define R_CPSCU_ICUSARE_SAAGT1CAWUP_Msk     (0x20000000UL)
 #define R_CPSCU_ICUSARE_SAAGT1CBWUP_Pos     (30UL)
 #define R_CPSCU_ICUSARE_SAAGT1CBWUP_Msk     (0x40000000UL)
 #define R_CPSCU_ICUSARE_SAIIC0WUP_Pos       (31UL)
 #define R_CPSCU_ICUSARE_SAIIC0WUP_Msk       (0x80000000UL)
/* ========================================================  ICUSARF  ======================================================== */
 #define R_CPSCU_ICUSARF_SAAGT3UDWUP_Pos     (0UL)
 #define R_CPSCU_ICUSARF_SAAGT3UDWUP_Msk     (0x1UL)
 #define R_CPSCU_ICUSARF_SAAGT3CAWUP_Pos     (1UL)
 #define R_CPSCU_ICUSARF_SAAGT3CAWUP_Msk     (0x2UL)
 #define R_CPSCU_ICUSARF_SAAGT3CBWUP_Pos     (2UL)
 #define R_CPSCU_ICUSARF_SAAGT3CBWUP_Msk     (0x4UL)
 #define R_CPSCU_ICUSARF_SACOMPHS0WUP_Pos    (3UL)
 #define R_CPSCU_ICUSARF_SACOMPHS0WUP_Msk    (0x8UL)
 #define R_CPSCU_ICUSARF_SAULP0UWUP_Pos      (8UL)
 #define R_CPSCU_ICUSARF_SAULP0UWUP_Msk      (0x100UL)
 #define R_CPSCU_ICUSARF_SAULP0AWUP_Pos      (9UL)
 #define R_CPSCU_ICUSARF_SAULP0AWUP_Msk      (0x200UL)
 #define R_CPSCU_ICUSARF_SAULP0BWUP_Pos      (10UL)
 #define R_CPSCU_ICUSARF_SAULP0BWUP_Msk      (0x400UL)
 #define R_CPSCU_ICUSARF_SAI3CWUP_Pos        (11UL)
 #define R_CPSCU_ICUSARF_SAI3CWUP_Msk        (0x800UL)
 #define R_CPSCU_ICUSARF_SAULP1UWUP_Pos      (12UL)
 #define R_CPSCU_ICUSARF_SAULP1UWUP_Msk      (0x1000UL)
 #define R_CPSCU_ICUSARF_SAULP1AWUP_Pos      (13UL)
 #define R_CPSCU_ICUSARF_SAULP1AWUP_Msk      (0x2000UL)
 #define R_CPSCU_ICUSARF_SAULP1BWUP_Pos      (14UL)
 #define R_CPSCU_ICUSARF_SAULP1BWUP_Msk      (0x4000UL)
/* ========================================================  ICUSARG  ======================================================== */
 #define R_CPSCU_ICUSARG_SAIELSRn_Pos        (0UL)
 #define R_CPSCU_ICUSARG_SAIELSRn_Msk        (0xffffffffUL)
/* ========================================================  ICUSARH  ======================================================== */
 #define R_CPSCU_ICUSARH_SAIELSRn_Pos        (0UL)
 #define R_CPSCU_ICUSARH_SAIELSRn_Msk        (0xffffffffUL)
/* ========================================================  ICUSARI  ======================================================== */
 #define R_CPSCU_ICUSARI_SAIELSRn_Pos        (0UL)
 #define R_CPSCU_ICUSARI_SAIELSRn_Msk        (0xffffffffUL)
/* ========================================================  BUSSARA  ======================================================== */
 #define R_CPSCU_BUSSARA_BUSSA0_Pos          (0UL)
 #define R_CPSCU_BUSSARA_BUSSA0_Msk          (0x1UL)
/* ========================================================  BUSSARB  ======================================================== */
 #define R_CPSCU_BUSSARB_BUSSB0_Pos          (0UL)
 #define R_CPSCU_BUSSARB_BUSSB0_Msk          (0x1UL)
/* =======================================================  MMPUSARA  ======================================================== */
 #define R_CPSCU_MMPUSARA_MMPUAnSA_Pos       (0UL)
 #define R_CPSCU_MMPUSARA_MMPUAnSA_Msk       (0xffUL)
/* =======================================================  MMPUSARB  ======================================================== */
 #define R_CPSCU_MMPUSARB_MMPUB0SA_Pos       (0UL)
 #define R_CPSCU_MMPUSARB_MMPUB0SA_Msk       (0x1UL)
/* =======================================================  DMACCHSAR  ======================================================= */
 #define R_CPSCU_DMACCHSAR_DMACCHSARn_Pos    (0UL)
 #define R_CPSCU_DMACCHSAR_DMACCHSARn_Msk    (0xffUL)
/* ========================================================  CPUDSAR  ======================================================== */
 #define R_CPSCU_CPUDSAR_CPUDSA0_Pos         (0UL)
 #define R_CPSCU_CPUDSAR_CPUDSA0_Msk         (0x1UL)
/* ======================================================  SRAMSABAR0  ======================================================= */
 #define R_CPSCU_SRAMSABAR0_SRAMSABAR_Pos    (13UL)
 #define R_CPSCU_SRAMSABAR0_SRAMSABAR_Msk    (0x1fe000UL)
/* ======================================================  SRAMSABAR1  ======================================================= */
 #define R_CPSCU_SRAMSABAR1_SRAMSABAR_Pos    (13UL)
 #define R_CPSCU_SRAMSABAR1_SRAMSABAR_Msk    (0x1fe000UL)
/* ========================================================  TEVTRCR  ======================================================== */
 #define R_CPSCU_TEVTRCR_TEVTE_Pos           (0UL)
 #define R_CPSCU_TEVTRCR_TEVTE_Msk           (0x1UL)

/* =========================================================================================================================== */
/* ================                                          R_DOC_B                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  DOCR  ========================================================== */
 #define R_DOC_B_DOCR_OMS_Pos         (0UL)
 #define R_DOC_B_DOCR_OMS_Msk         (0x3UL)
 #define R_DOC_B_DOCR_DOBW_Pos        (3UL)
 #define R_DOC_B_DOCR_DOBW_Msk        (0x8UL)
 #define R_DOC_B_DOCR_DCSEL_Pos       (4UL)
 #define R_DOC_B_DOCR_DCSEL_Msk       (0x70UL)
/* =========================================================  DOSR  ========================================================== */
 #define R_DOC_B_DOSR_DOPCF_Pos       (0UL)
 #define R_DOC_B_DOSR_DOPCF_Msk       (0x1UL)
/* =========================================================  DOSCR  ========================================================= */
 #define R_DOC_B_DOSCR_DOPCFCL_Pos    (0UL)
 #define R_DOC_B_DOSCR_DOPCFCL_Msk    (0x1UL)
/* =========================================================  DODIR  ========================================================= */
/* ========================================================  DODSR0  ========================================================= */
/* ========================================================  DODSR1  ========================================================= */

/* =========================================================================================================================== */
/* ================                                         R_SCI_B0                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  RDR  ========================================================== */
 #define R_SCI_B0_RDR_RDAT_Pos           (0UL)
 #define R_SCI_B0_RDR_RDAT_Msk           (0x1ffUL)
 #define R_SCI_B0_RDR_MPB_Pos            (9UL)
 #define R_SCI_B0_RDR_MPB_Msk            (0x200UL)
 #define R_SCI_B0_RDR_DR_Pos             (10UL)
 #define R_SCI_B0_RDR_DR_Msk             (0x400UL)
 #define R_SCI_B0_RDR_FPER_Pos           (11UL)
 #define R_SCI_B0_RDR_FPER_Msk           (0x800UL)
 #define R_SCI_B0_RDR_FFER_Pos           (12UL)
 #define R_SCI_B0_RDR_FFER_Msk           (0x1000UL)
 #define R_SCI_B0_RDR_ORER_Pos           (24UL)
 #define R_SCI_B0_RDR_ORER_Msk           (0x1000000UL)
 #define R_SCI_B0_RDR_PER_Pos            (27UL)
 #define R_SCI_B0_RDR_PER_Msk            (0x8000000UL)
 #define R_SCI_B0_RDR_FER_Pos            (28UL)
 #define R_SCI_B0_RDR_FER_Msk            (0x10000000UL)
/* ========================================================  RDR_BY  ========================================================= */
 #define R_SCI_B0_RDR_BY_RDAT_Pos        (0UL)
 #define R_SCI_B0_RDR_BY_RDAT_Msk        (0xffUL)
/* ==========================================================  TDR  ========================================================== */
 #define R_SCI_B0_TDR_TDAT_Pos           (0UL)
 #define R_SCI_B0_TDR_TDAT_Msk           (0x1ffUL)
 #define R_SCI_B0_TDR_MPBT_Pos           (9UL)
 #define R_SCI_B0_TDR_MPBT_Msk           (0x200UL)
 #define R_SCI_B0_TDR_TSYNC_Pos          (12UL)
 #define R_SCI_B0_TDR_TSYNC_Msk          (0x1000UL)
/* ========================================================  TDR_BY  ========================================================= */
 #define R_SCI_B0_TDR_BY_TDAT_Pos        (0UL)
 #define R_SCI_B0_TDR_BY_TDAT_Msk        (0xffUL)
/* =========================================================  CCR0  ========================================================== */
 #define R_SCI_B0_CCR0_RE_Pos            (0UL)
 #define R_SCI_B0_CCR0_RE_Msk            (0x1UL)
 #define R_SCI_B0_CCR0_TE_Pos            (4UL)
 #define R_SCI_B0_CCR0_TE_Msk            (0x10UL)
 #define R_SCI_B0_CCR0_MPIE_Pos          (8UL)
 #define R_SCI_B0_CCR0_MPIE_Msk          (0x100UL)
 #define R_SCI_B0_CCR0_DCME_Pos          (9UL)
 #define R_SCI_B0_CCR0_DCME_Msk          (0x200UL)
 #define R_SCI_B0_CCR0_IDSEL_Pos         (10UL)
 #define R_SCI_B0_CCR0_IDSEL_Msk         (0x400UL)
 #define R_SCI_B0_CCR0_RIE_Pos           (16UL)
 #define R_SCI_B0_CCR0_RIE_Msk           (0x10000UL)
 #define R_SCI_B0_CCR0_TIE_Pos           (20UL)
 #define R_SCI_B0_CCR0_TIE_Msk           (0x100000UL)
 #define R_SCI_B0_CCR0_TEIE_Pos          (21UL)
 #define R_SCI_B0_CCR0_TEIE_Msk          (0x200000UL)
 #define R_SCI_B0_CCR0_SSE_Pos           (24UL)
 #define R_SCI_B0_CCR0_SSE_Msk           (0x1000000UL)
/* =========================================================  CCR1  ========================================================== */
 #define R_SCI_B0_CCR1_CTSE_Pos          (0UL)
 #define R_SCI_B0_CCR1_CTSE_Msk          (0x1UL)
 #define R_SCI_B0_CCR1_CTSPEN_Pos        (1UL)
 #define R_SCI_B0_CCR1_CTSPEN_Msk        (0x2UL)
 #define R_SCI_B0_CCR1_SPB2DT_Pos        (4UL)
 #define R_SCI_B0_CCR1_SPB2DT_Msk        (0x10UL)
 #define R_SCI_B0_CCR1_SPB2IO_Pos        (5UL)
 #define R_SCI_B0_CCR1_SPB2IO_Msk        (0x20UL)
 #define R_SCI_B0_CCR1_PE_Pos            (8UL)
 #define R_SCI_B0_CCR1_PE_Msk            (0x100UL)
 #define R_SCI_B0_CCR1_PM_Pos            (9UL)
 #define R_SCI_B0_CCR1_PM_Msk            (0x200UL)
 #define R_SCI_B0_CCR1_TINV_Pos          (12UL)
 #define R_SCI_B0_CCR1_TINV_Msk          (0x1000UL)
 #define R_SCI_B0_CCR1_RINV_Pos          (13UL)
 #define R_SCI_B0_CCR1_RINV_Msk          (0x2000UL)
 #define R_SCI_B0_CCR1_SPLP_Pos          (16UL)
 #define R_SCI_B0_CCR1_SPLP_Msk          (0x10000UL)
 #define R_SCI_B0_CCR1_SHARPS_Pos        (20UL)
 #define R_SCI_B0_CCR1_SHARPS_Msk        (0x100000UL)
 #define R_SCI_B0_CCR1_NFCS_Pos          (24UL)
 #define R_SCI_B0_CCR1_NFCS_Msk          (0x7000000UL)
 #define R_SCI_B0_CCR1_NFEN_Pos          (28UL)
 #define R_SCI_B0_CCR1_NFEN_Msk          (0x10000000UL)
/* =========================================================  CCR2  ========================================================== */
 #define R_SCI_B0_CCR2_BCP_Pos           (0UL)
 #define R_SCI_B0_CCR2_BCP_Msk           (0x7UL)
 #define R_SCI_B0_CCR2_BGDM_Pos          (4UL)
 #define R_SCI_B0_CCR2_BGDM_Msk          (0x10UL)
 #define R_SCI_B0_CCR2_ABCS_Pos          (5UL)
 #define R_SCI_B0_CCR2_ABCS_Msk          (0x20UL)
 #define R_SCI_B0_CCR2_ABCSE_Pos         (6UL)
 #define R_SCI_B0_CCR2_ABCSE_Msk         (0x40UL)
 #define R_SCI_B0_CCR2_BRR_Pos           (8UL)
 #define R_SCI_B0_CCR2_BRR_Msk           (0xff00UL)
 #define R_SCI_B0_CCR2_BRME_Pos          (16UL)
 #define R_SCI_B0_CCR2_BRME_Msk          (0x10000UL)
 #define R_SCI_B0_CCR2_CKS_Pos           (20UL)
 #define R_SCI_B0_CCR2_CKS_Msk           (0x300000UL)
 #define R_SCI_B0_CCR2_MDDR_Pos          (24UL)
 #define R_SCI_B0_CCR2_MDDR_Msk          (0xff000000UL)
/* =========================================================  CCR3  ========================================================== */
 #define R_SCI_B0_CCR3_CPHA_Pos          (0UL)
 #define R_SCI_B0_CCR3_CPHA_Msk          (0x1UL)
 #define R_SCI_B0_CCR3_CPOL_Pos          (1UL)
 #define R_SCI_B0_CCR3_CPOL_Msk          (0x2UL)
 #define R_SCI_B0_CCR3_BPEN_Pos          (7UL)
 #define R_SCI_B0_CCR3_BPEN_Msk          (0x80UL)
 #define R_SCI_B0_CCR3_CHR_Pos           (8UL)
 #define R_SCI_B0_CCR3_CHR_Msk           (0x300UL)
 #define R_SCI_B0_CCR3_LSBF_Pos          (12UL)
 #define R_SCI_B0_CCR3_LSBF_Msk          (0x1000UL)
 #define R_SCI_B0_CCR3_SINV_Pos          (13UL)
 #define R_SCI_B0_CCR3_SINV_Msk          (0x2000UL)
 #define R_SCI_B0_CCR3_STP_Pos           (14UL)
 #define R_SCI_B0_CCR3_STP_Msk           (0x4000UL)
 #define R_SCI_B0_CCR3_RXDESEL_Pos       (15UL)
 #define R_SCI_B0_CCR3_RXDESEL_Msk       (0x8000UL)
 #define R_SCI_B0_CCR3_MOD_Pos           (16UL)
 #define R_SCI_B0_CCR3_MOD_Msk           (0x70000UL)
 #define R_SCI_B0_CCR3_MP_Pos            (19UL)
 #define R_SCI_B0_CCR3_MP_Msk            (0x80000UL)
 #define R_SCI_B0_CCR3_FM_Pos            (20UL)
 #define R_SCI_B0_CCR3_FM_Msk            (0x100000UL)
 #define R_SCI_B0_CCR3_DEN_Pos           (21UL)
 #define R_SCI_B0_CCR3_DEN_Msk           (0x200000UL)
 #define R_SCI_B0_CCR3_CKE_Pos           (24UL)
 #define R_SCI_B0_CCR3_CKE_Msk           (0x3000000UL)
 #define R_SCI_B0_CCR3_GM_Pos            (28UL)
 #define R_SCI_B0_CCR3_GM_Msk            (0x10000000UL)
 #define R_SCI_B0_CCR3_BLK_Pos           (29UL)
 #define R_SCI_B0_CCR3_BLK_Msk           (0x20000000UL)
/* =========================================================  CCR4  ========================================================== */
 #define R_SCI_B0_CCR4_CMPD_Pos          (0UL)
 #define R_SCI_B0_CCR4_CMPD_Msk          (0x1ffUL)
 #define R_SCI_B0_CCR4_ASEN_Pos          (16UL)
 #define R_SCI_B0_CCR4_ASEN_Msk          (0x10000UL)
 #define R_SCI_B0_CCR4_ATEN_Pos          (17UL)
 #define R_SCI_B0_CCR4_ATEN_Msk          (0x20000UL)
 #define R_SCI_B0_CCR4_SCKSEL_Pos        (19UL)
 #define R_SCI_B0_CCR4_SCKSEL_Msk        (0x80000UL)
 #define R_SCI_B0_CCR4_AST_Pos           (24UL)
 #define R_SCI_B0_CCR4_AST_Msk           (0x7000000UL)
 #define R_SCI_B0_CCR4_AJD_Pos           (27UL)
 #define R_SCI_B0_CCR4_AJD_Msk           (0x8000000UL)
 #define R_SCI_B0_CCR4_ATT_Pos           (28UL)
 #define R_SCI_B0_CCR4_ATT_Msk           (0x70000000UL)
 #define R_SCI_B0_CCR4_AET_Pos           (31UL)
 #define R_SCI_B0_CCR4_AET_Msk           (0x80000000UL)
/* =========================================================  CESR  ========================================================== */
 #define R_SCI_B0_CESR_RIST_Pos          (0UL)
 #define R_SCI_B0_CESR_RIST_Msk          (0x1UL)
 #define R_SCI_B0_CESR_TIST_Pos          (4UL)
 #define R_SCI_B0_CESR_TIST_Msk          (0x10UL)
/* ==========================================================  ICR  ========================================================== */
 #define R_SCI_B0_ICR_IICDL_Pos          (0UL)
 #define R_SCI_B0_ICR_IICDL_Msk          (0x1fUL)
 #define R_SCI_B0_ICR_IICINTM_Pos        (8UL)
 #define R_SCI_B0_ICR_IICINTM_Msk        (0x100UL)
 #define R_SCI_B0_ICR_IICCSC_Pos         (9UL)
 #define R_SCI_B0_ICR_IICCSC_Msk         (0x200UL)
 #define R_SCI_B0_ICR_IICACKT_Pos        (13UL)
 #define R_SCI_B0_ICR_IICACKT_Msk        (0x2000UL)
 #define R_SCI_B0_ICR_IICSTAREQ_Pos      (16UL)
 #define R_SCI_B0_ICR_IICSTAREQ_Msk      (0x10000UL)
 #define R_SCI_B0_ICR_IICRSTAREQ_Pos     (17UL)
 #define R_SCI_B0_ICR_IICRSTAREQ_Msk     (0x20000UL)
 #define R_SCI_B0_ICR_IICSTPREQ_Pos      (18UL)
 #define R_SCI_B0_ICR_IICSTPREQ_Msk      (0x40000UL)
 #define R_SCI_B0_ICR_IICSDAS_Pos        (20UL)
 #define R_SCI_B0_ICR_IICSDAS_Msk        (0x300000UL)
 #define R_SCI_B0_ICR_IICSCLS_Pos        (22UL)
 #define R_SCI_B0_ICR_IICSCLS_Msk        (0xc00000UL)
/* ==========================================================  FCR  ========================================================== */
 #define R_SCI_B0_FCR_DRES_Pos           (0UL)
 #define R_SCI_B0_FCR_DRES_Msk           (0x1UL)
 #define R_SCI_B0_FCR_TTRG_Pos           (8UL)
 #define R_SCI_B0_FCR_TTRG_Msk           (0x1f00UL)
 #define R_SCI_B0_FCR_TFRST_Pos          (15UL)
 #define R_SCI_B0_FCR_TFRST_Msk          (0x8000UL)
 #define R_SCI_B0_FCR_RTRG_Pos           (16UL)
 #define R_SCI_B0_FCR_RTRG_Msk           (0x1f0000UL)
 #define R_SCI_B0_FCR_RFRST_Pos          (23UL)
 #define R_SCI_B0_FCR_RFRST_Msk          (0x800000UL)
 #define R_SCI_B0_FCR_RSTRG_Pos          (24UL)
 #define R_SCI_B0_FCR_RSTRG_Msk          (0x1f000000UL)
/* ==========================================================  MCR  ========================================================== */
 #define R_SCI_B0_MCR_RMPOL_Pos          (0UL)
 #define R_SCI_B0_MCR_RMPOL_Msk          (0x1UL)
 #define R_SCI_B0_MCR_TMPOL_Pos          (1UL)
 #define R_SCI_B0_MCR_TMPOL_Msk          (0x2UL)
 #define R_SCI_B0_MCR_ERTEN_Pos          (2UL)
 #define R_SCI_B0_MCR_ERTEN_Msk          (0x4UL)
 #define R_SCI_B0_MCR_SYNVAL_Pos         (4UL)
 #define R_SCI_B0_MCR_SYNVAL_Msk         (0x10UL)
 #define R_SCI_B0_MCR_SYNSEL_Pos         (5UL)
 #define R_SCI_B0_MCR_SYNSEL_Msk         (0x20UL)
 #define R_SCI_B0_MCR_SBSEL_Pos          (6UL)
 #define R_SCI_B0_MCR_SBSEL_Msk          (0x40UL)
 #define R_SCI_B0_MCR_TPLEN_Pos          (8UL)
 #define R_SCI_B0_MCR_TPLEN_Msk          (0xf00UL)
 #define R_SCI_B0_MCR_TPPAT_Pos          (12UL)
 #define R_SCI_B0_MCR_TPPAT_Msk          (0x3000UL)
 #define R_SCI_B0_MCR_RPLEN_Pos          (16UL)
 #define R_SCI_B0_MCR_RPLEN_Msk          (0xf0000UL)
 #define R_SCI_B0_MCR_RPPAT_Pos          (20UL)
 #define R_SCI_B0_MCR_RPPAT_Msk          (0x300000UL)
 #define R_SCI_B0_MCR_PFEREN_Pos         (24UL)
 #define R_SCI_B0_MCR_PFEREN_Msk         (0x1000000UL)
 #define R_SCI_B0_MCR_SYEREN_Pos         (25UL)
 #define R_SCI_B0_MCR_SYEREN_Msk         (0x2000000UL)
 #define R_SCI_B0_MCR_SBEREN_Pos         (26UL)
 #define R_SCI_B0_MCR_SBEREN_Msk         (0x4000000UL)
/* ==========================================================  DCR  ========================================================== */
 #define R_SCI_B0_DCR_DEPOL_Pos          (0UL)
 #define R_SCI_B0_DCR_DEPOL_Msk          (0x1UL)
 #define R_SCI_B0_DCR_DEAST_Pos          (8UL)
 #define R_SCI_B0_DCR_DEAST_Msk          (0x1f00UL)
 #define R_SCI_B0_DCR_DENGT_Pos          (16UL)
 #define R_SCI_B0_DCR_DENGT_Msk          (0x1f0000UL)
/* =========================================================  XCR0  ========================================================== */
 #define R_SCI_B0_XCR0_TCSS_Pos          (0UL)
 #define R_SCI_B0_XCR0_TCSS_Msk          (0x3UL)
 #define R_SCI_B0_XCR0_BFE_Pos           (8UL)
 #define R_SCI_B0_XCR0_BFE_Msk           (0x100UL)
 #define R_SCI_B0_XCR0_CF0RE_Pos         (9UL)
 #define R_SCI_B0_XCR0_CF0RE_Msk         (0x200UL)
 #define R_SCI_B0_XCR0_CF1DS_Pos         (10UL)
 #define R_SCI_B0_XCR0_CF1DS_Msk         (0xc00UL)
 #define R_SCI_B0_XCR0_PIBE_Pos          (12UL)
 #define R_SCI_B0_XCR0_PIBE_Msk          (0x1000UL)
 #define R_SCI_B0_XCR0_PIBS_Pos          (13UL)
 #define R_SCI_B0_XCR0_PIBS_Msk          (0xe000UL)
 #define R_SCI_B0_XCR0_BFOIE_Pos         (16UL)
 #define R_SCI_B0_XCR0_BFOIE_Msk         (0x10000UL)
 #define R_SCI_B0_XCR0_BCDIE_Pos         (17UL)
 #define R_SCI_B0_XCR0_BCDIE_Msk         (0x20000UL)
 #define R_SCI_B0_XCR0_BFDIE_Pos         (20UL)
 #define R_SCI_B0_XCR0_BFDIE_Msk         (0x100000UL)
 #define R_SCI_B0_XCR0_COFIE_Pos         (21UL)
 #define R_SCI_B0_XCR0_COFIE_Msk         (0x200000UL)
 #define R_SCI_B0_XCR0_AEDIE_Pos         (22UL)
 #define R_SCI_B0_XCR0_AEDIE_Msk         (0x400000UL)
 #define R_SCI_B0_XCR0_BCCS_Pos          (24UL)
 #define R_SCI_B0_XCR0_BCCS_Msk          (0x3000000UL)
/* =========================================================  XCR1  ========================================================== */
 #define R_SCI_B0_XCR1_TCST_Pos          (0UL)
 #define R_SCI_B0_XCR1_TCST_Msk          (0x1UL)
 #define R_SCI_B0_XCR1_SDST_Pos          (4UL)
 #define R_SCI_B0_XCR1_SDST_Msk          (0x10UL)
 #define R_SCI_B0_XCR1_BMEN_Pos          (5UL)
 #define R_SCI_B0_XCR1_BMEN_Msk          (0x20UL)
 #define R_SCI_B0_XCR1_PCF1D_Pos         (8UL)
 #define R_SCI_B0_XCR1_PCF1D_Msk         (0xff00UL)
 #define R_SCI_B0_XCR1_SCF1D_Pos         (16UL)
 #define R_SCI_B0_XCR1_SCF1D_Msk         (0xff0000UL)
 #define R_SCI_B0_XCR1_CF1CE_Pos         (24UL)
 #define R_SCI_B0_XCR1_CF1CE_Msk         (0xff000000UL)
/* =========================================================  XCR2  ========================================================== */
 #define R_SCI_B0_XCR2_CF0D_Pos          (0UL)
 #define R_SCI_B0_XCR2_CF0D_Msk          (0xffUL)
 #define R_SCI_B0_XCR2_CF0CE_Pos         (8UL)
 #define R_SCI_B0_XCR2_CF0CE_Msk         (0xff00UL)
 #define R_SCI_B0_XCR2_BFLW_Pos          (16UL)
 #define R_SCI_B0_XCR2_BFLW_Msk          (0xffff0000UL)
/* ==========================================================  CSR  ========================================================== */
 #define R_SCI_B0_CSR_ERS_Pos            (4UL)
 #define R_SCI_B0_CSR_ERS_Msk            (0x10UL)
 #define R_SCI_B0_CSR_RXDMON_Pos         (15UL)
 #define R_SCI_B0_CSR_RXDMON_Msk         (0x8000UL)
 #define R_SCI_B0_CSR_DCMF_Pos           (16UL)
 #define R_SCI_B0_CSR_DCMF_Msk           (0x10000UL)
 #define R_SCI_B0_CSR_DPER_Pos           (17UL)
 #define R_SCI_B0_CSR_DPER_Msk           (0x20000UL)
 #define R_SCI_B0_CSR_DFER_Pos           (18UL)
 #define R_SCI_B0_CSR_DFER_Msk           (0x40000UL)
 #define R_SCI_B0_CSR_ORER_Pos           (24UL)
 #define R_SCI_B0_CSR_ORER_Msk           (0x1000000UL)
 #define R_SCI_B0_CSR_MFF_Pos            (26UL)
 #define R_SCI_B0_CSR_MFF_Msk            (0x4000000UL)
 #define R_SCI_B0_CSR_PER_Pos            (27UL)
 #define R_SCI_B0_CSR_PER_Msk            (0x8000000UL)
 #define R_SCI_B0_CSR_FER_Pos            (28UL)
 #define R_SCI_B0_CSR_FER_Msk            (0x10000000UL)
 #define R_SCI_B0_CSR_TDRE_Pos           (29UL)
 #define R_SCI_B0_CSR_TDRE_Msk           (0x20000000UL)
 #define R_SCI_B0_CSR_TEND_Pos           (30UL)
 #define R_SCI_B0_CSR_TEND_Msk           (0x40000000UL)
 #define R_SCI_B0_CSR_RDRF_Pos           (31UL)
 #define R_SCI_B0_CSR_RDRF_Msk           (0x80000000UL)
/* ==========================================================  ISR  ========================================================== */
 #define R_SCI_B0_ISR_IICACKR_Pos        (0UL)
 #define R_SCI_B0_ISR_IICACKR_Msk        (0x1UL)
 #define R_SCI_B0_ISR_IICSTIF_Pos        (3UL)
 #define R_SCI_B0_ISR_IICSTIF_Msk        (0x8UL)
/* =========================================================  FRSR  ========================================================== */
 #define R_SCI_B0_FRSR_DR_Pos            (0UL)
 #define R_SCI_B0_FRSR_DR_Msk            (0x1UL)
 #define R_SCI_B0_FRSR_R_Pos             (8UL)
 #define R_SCI_B0_FRSR_R_Msk             (0x3f00UL)
 #define R_SCI_B0_FRSR_PNUM_Pos          (16UL)
 #define R_SCI_B0_FRSR_PNUM_Msk          (0x3f0000UL)
 #define R_SCI_B0_FRSR_FNUM_Pos          (24UL)
 #define R_SCI_B0_FRSR_FNUM_Msk          (0x3f000000UL)
/* =========================================================  FTSR  ========================================================== */
 #define R_SCI_B0_FTSR_T_Pos             (0UL)
 #define R_SCI_B0_FTSR_T_Msk             (0x3fUL)
/* ==========================================================  MSR  ========================================================== */
 #define R_SCI_B0_MSR_PFER_Pos           (0UL)
 #define R_SCI_B0_MSR_PFER_Msk           (0x1UL)
 #define R_SCI_B0_MSR_SYER_Pos           (1UL)
 #define R_SCI_B0_MSR_SYER_Msk           (0x2UL)
 #define R_SCI_B0_MSR_SBER_Pos           (2UL)
 #define R_SCI_B0_MSR_SBER_Msk           (0x4UL)
 #define R_SCI_B0_MSR_MER_Pos            (4UL)
 #define R_SCI_B0_MSR_MER_Msk            (0x10UL)
 #define R_SCI_B0_MSR_RSYNC_Pos          (6UL)
 #define R_SCI_B0_MSR_RSYNC_Msk          (0x40UL)
/* =========================================================  XSR0  ========================================================== */
 #define R_SCI_B0_XSR0_SFSF_Pos          (0UL)
 #define R_SCI_B0_XSR0_SFSF_Msk          (0x1UL)
 #define R_SCI_B0_XSR0_RXDSF_Pos         (1UL)
 #define R_SCI_B0_XSR0_RXDSF_Msk         (0x2UL)
 #define R_SCI_B0_XSR0_BFOF_Pos          (8UL)
 #define R_SCI_B0_XSR0_BFOF_Msk          (0x100UL)
 #define R_SCI_B0_XSR0_BCDF_Pos          (9UL)
 #define R_SCI_B0_XSR0_BCDF_Msk          (0x200UL)
 #define R_SCI_B0_XSR0_BFDF_Pos          (10UL)
 #define R_SCI_B0_XSR0_BFDF_Msk          (0x400UL)
 #define R_SCI_B0_XSR0_CF0MF_Pos         (11UL)
 #define R_SCI_B0_XSR0_CF0MF_Msk         (0x800UL)
 #define R_SCI_B0_XSR0_CF1MF_Pos         (12UL)
 #define R_SCI_B0_XSR0_CF1MF_Msk         (0x1000UL)
 #define R_SCI_B0_XSR0_PIBDF_Pos         (13UL)
 #define R_SCI_B0_XSR0_PIBDF_Msk         (0x2000UL)
 #define R_SCI_B0_XSR0_COF_Pos           (14UL)
 #define R_SCI_B0_XSR0_COF_Msk           (0x4000UL)
 #define R_SCI_B0_XSR0_AEDF_Pos          (15UL)
 #define R_SCI_B0_XSR0_AEDF_Msk          (0x8000UL)
 #define R_SCI_B0_XSR0_CF0RD_Pos         (16UL)
 #define R_SCI_B0_XSR0_CF0RD_Msk         (0xff0000UL)
 #define R_SCI_B0_XSR0_CF1RD_Pos         (24UL)
 #define R_SCI_B0_XSR0_CF1RD_Msk         (0xff000000UL)
/* =========================================================  XSR1  ========================================================== */
 #define R_SCI_B0_XSR1_TCNT_Pos          (0UL)
 #define R_SCI_B0_XSR1_TCNT_Msk          (0xffffUL)
/* =========================================================  CFCLR  ========================================================= */
 #define R_SCI_B0_CFCLR_ERSC_Pos         (4UL)
 #define R_SCI_B0_CFCLR_ERSC_Msk         (0x10UL)
 #define R_SCI_B0_CFCLR_DCMFC_Pos        (16UL)
 #define R_SCI_B0_CFCLR_DCMFC_Msk        (0x10000UL)
 #define R_SCI_B0_CFCLR_DPERC_Pos        (17UL)
 #define R_SCI_B0_CFCLR_DPERC_Msk        (0x20000UL)
 #define R_SCI_B0_CFCLR_DFERC_Pos        (18UL)
 #define R_SCI_B0_CFCLR_DFERC_Msk        (0x40000UL)
 #define R_SCI_B0_CFCLR_ORERC_Pos        (24UL)
 #define R_SCI_B0_CFCLR_ORERC_Msk        (0x1000000UL)
 #define R_SCI_B0_CFCLR_MFFC_Pos         (26UL)
 #define R_SCI_B0_CFCLR_MFFC_Msk         (0x4000000UL)
 #define R_SCI_B0_CFCLR_PERC_Pos         (27UL)
 #define R_SCI_B0_CFCLR_PERC_Msk         (0x8000000UL)
 #define R_SCI_B0_CFCLR_FERC_Pos         (28UL)
 #define R_SCI_B0_CFCLR_FERC_Msk         (0x10000000UL)
 #define R_SCI_B0_CFCLR_TDREC_Pos        (29UL)
 #define R_SCI_B0_CFCLR_TDREC_Msk        (0x20000000UL)
 #define R_SCI_B0_CFCLR_RDRFC_Pos        (31UL)
 #define R_SCI_B0_CFCLR_RDRFC_Msk        (0x80000000UL)
/* ========================================================  ICFCLR  ========================================================= */
 #define R_SCI_B0_ICFCLR_IICSTIFC_Pos    (3UL)
 #define R_SCI_B0_ICFCLR_IICSTIFC_Msk    (0x8UL)
/* =========================================================  FFCLR  ========================================================= */
 #define R_SCI_B0_FFCLR_DRC_Pos          (0UL)
 #define R_SCI_B0_FFCLR_DRC_Msk          (0x1UL)
/* =========================================================  MFCLR  ========================================================= */
 #define R_SCI_B0_MFCLR_PFERC_Pos        (0UL)
 #define R_SCI_B0_MFCLR_PFERC_Msk        (0x1UL)
 #define R_SCI_B0_MFCLR_SYERC_Pos        (1UL)
 #define R_SCI_B0_MFCLR_SYERC_Msk        (0x2UL)
 #define R_SCI_B0_MFCLR_SBERC_Pos        (2UL)
 #define R_SCI_B0_MFCLR_SBERC_Msk        (0x4UL)
 #define R_SCI_B0_MFCLR_MERC_Pos         (4UL)
 #define R_SCI_B0_MFCLR_MERC_Msk         (0x10UL)
/* =========================================================  XFCLR  ========================================================= */
 #define R_SCI_B0_XFCLR_BFOC_Pos         (8UL)
 #define R_SCI_B0_XFCLR_BFOC_Msk         (0x100UL)
 #define R_SCI_B0_XFCLR_BCDC_Pos         (9UL)
 #define R_SCI_B0_XFCLR_BCDC_Msk         (0x200UL)
 #define R_SCI_B0_XFCLR_BFDC_Pos         (10UL)
 #define R_SCI_B0_XFCLR_BFDC_Msk         (0x400UL)
 #define R_SCI_B0_XFCLR_CF0MC_Pos        (11UL)
 #define R_SCI_B0_XFCLR_CF0MC_Msk        (0x800UL)
 #define R_SCI_B0_XFCLR_CF1MC_Pos        (12UL)
 #define R_SCI_B0_XFCLR_CF1MC_Msk        (0x1000UL)
 #define R_SCI_B0_XFCLR_PIBDC_Pos        (13UL)
 #define R_SCI_B0_XFCLR_PIBDC_Msk        (0x2000UL)
 #define R_SCI_B0_XFCLR_COFC_Pos         (14UL)
 #define R_SCI_B0_XFCLR_COFC_Msk         (0x4000UL)
 #define R_SCI_B0_XFCLR_AEDC_Pos         (15UL)
 #define R_SCI_B0_XFCLR_AEDC_Msk         (0x8000UL)

/* =========================================================================================================================== */
/* ================                                         R_SPI_B0                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  SPDR  ========================================================== */
/* ========================================================  SPDECR  ========================================================= */
 #define R_SPI_B0_SPDECR_SCKDL_Pos     (0UL)
 #define R_SPI_B0_SPDECR_SCKDL_Msk     (0x7UL)
 #define R_SPI_B0_SPDECR_SLNDL_Pos     (8UL)
 #define R_SPI_B0_SPDECR_SLNDL_Msk     (0x700UL)
 #define R_SPI_B0_SPDECR_SPNDL_Pos     (16UL)
 #define R_SPI_B0_SPDECR_SPNDL_Msk     (0x70000UL)
 #define R_SPI_B0_SPDECR_ARST_Pos      (24UL)
 #define R_SPI_B0_SPDECR_ARST_Msk      (0x7000000UL)
/* =========================================================  SPCR  ========================================================== */
 #define R_SPI_B0_SPCR_SPE_Pos         (0UL)
 #define R_SPI_B0_SPCR_SPE_Msk         (0x1UL)
 #define R_SPI_B0_SPCR_SPSCKSEL_Pos    (7UL)
 #define R_SPI_B0_SPCR_SPSCKSEL_Msk    (0x80UL)
 #define R_SPI_B0_SPCR_SPPE_Pos        (8UL)
 #define R_SPI_B0_SPCR_SPPE_Msk        (0x100UL)
 #define R_SPI_B0_SPCR_SPOE_Pos        (9UL)
 #define R_SPI_B0_SPCR_SPOE_Msk        (0x200UL)
 #define R_SPI_B0_SPCR_PTE_Pos         (11UL)
 #define R_SPI_B0_SPCR_PTE_Msk         (0x800UL)
 #define R_SPI_B0_SPCR_SCKASE_Pos      (12UL)
 #define R_SPI_B0_SPCR_SCKASE_Msk      (0x1000UL)
 #define R_SPI_B0_SPCR_BFDS_Pos        (13UL)
 #define R_SPI_B0_SPCR_BFDS_Msk        (0x2000UL)
 #define R_SPI_B0_SPCR_MODFEN_Pos      (14UL)
 #define R_SPI_B0_SPCR_MODFEN_Msk      (0x4000UL)
 #define R_SPI_B0_SPCR_SPEIE_Pos       (16UL)
 #define R_SPI_B0_SPCR_SPEIE_Msk       (0x10000UL)
 #define R_SPI_B0_SPCR_SPRIE_Pos       (17UL)
 #define R_SPI_B0_SPCR_SPRIE_Msk       (0x20000UL)
 #define R_SPI_B0_SPCR_SPIIE_Pos       (18UL)
 #define R_SPI_B0_SPCR_SPIIE_Msk       (0x40000UL)
 #define R_SPI_B0_SPCR_SPDRES_Pos      (19UL)
 #define R_SPI_B0_SPCR_SPDRES_Msk      (0x80000UL)
 #define R_SPI_B0_SPCR_SPTIE_Pos       (20UL)
 #define R_SPI_B0_SPCR_SPTIE_Msk       (0x100000UL)
 #define R_SPI_B0_SPCR_CENDIE_Pos      (21UL)
 #define R_SPI_B0_SPCR_CENDIE_Msk      (0x200000UL)
 #define R_SPI_B0_SPCR_SPMS_Pos        (24UL)
 #define R_SPI_B0_SPCR_SPMS_Msk        (0x1000000UL)
 #define R_SPI_B0_SPCR_SPFRF_Pos       (25UL)
 #define R_SPI_B0_SPCR_SPFRF_Msk       (0x2000000UL)
 #define R_SPI_B0_SPCR_TXMD_Pos        (28UL)
 #define R_SPI_B0_SPCR_TXMD_Msk        (0x30000000UL)
 #define R_SPI_B0_SPCR_MSTR_Pos        (30UL)
 #define R_SPI_B0_SPCR_MSTR_Msk        (0x40000000UL)
 #define R_SPI_B0_SPCR_BPEN_Pos        (31UL)
 #define R_SPI_B0_SPCR_BPEN_Msk        (0x80000000UL)
/* =========================================================  SPCR2  ========================================================= */
 #define R_SPI_B0_SPCR2_RMFM_Pos       (0UL)
 #define R_SPI_B0_SPCR2_RMFM_Msk       (0x1fUL)
 #define R_SPI_B0_SPCR2_RMEDTG_Pos     (6UL)
 #define R_SPI_B0_SPCR2_RMEDTG_Msk     (0x40UL)
 #define R_SPI_B0_SPCR2_RMSTTG_Pos     (7UL)
 #define R_SPI_B0_SPCR2_RMSTTG_Msk     (0x80UL)
 #define R_SPI_B0_SPCR2_SPDRC_Pos      (8UL)
 #define R_SPI_B0_SPCR2_SPDRC_Msk      (0xff00UL)
 #define R_SPI_B0_SPCR2_SPLP_Pos       (16UL)
 #define R_SPI_B0_SPCR2_SPLP_Msk       (0x10000UL)
 #define R_SPI_B0_SPCR2_SPLP2_Pos      (17UL)
 #define R_SPI_B0_SPCR2_SPLP2_Msk      (0x20000UL)
 #define R_SPI_B0_SPCR2_MOIFV_Pos      (20UL)
 #define R_SPI_B0_SPCR2_MOIFV_Msk      (0x100000UL)
 #define R_SPI_B0_SPCR2_MOIFE_Pos      (21UL)
 #define R_SPI_B0_SPCR2_MOIFE_Msk      (0x200000UL)
/* =========================================================  SPCR3  ========================================================= */
 #define R_SPI_B0_SPCR3_SSL0P_Pos      (0UL)
 #define R_SPI_B0_SPCR3_SSL0P_Msk      (0x1UL)
 #define R_SPI_B0_SPCR3_SSL1P_Pos      (1UL)
 #define R_SPI_B0_SPCR3_SSL1P_Msk      (0x2UL)
 #define R_SPI_B0_SPCR3_SSL2P_Pos      (2UL)
 #define R_SPI_B0_SPCR3_SSL2P_Msk      (0x4UL)
 #define R_SPI_B0_SPCR3_SSL3P_Pos      (3UL)
 #define R_SPI_B0_SPCR3_SSL3P_Msk      (0x8UL)
 #define R_SPI_B0_SPCR3_SPBR_Pos       (8UL)
 #define R_SPI_B0_SPCR3_SPBR_Msk       (0xff00UL)
 #define R_SPI_B0_SPCR3_SPSLN_Pos      (24UL)
 #define R_SPI_B0_SPCR3_SPSLN_Msk      (0x7000000UL)
/* ========================================================  SPCMD0  ========================================================= */
 #define R_SPI_B0_SPCMD0_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD0_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD0_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD0_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD0_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD0_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD0_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD0_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD0_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD0_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD0_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD0_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD0_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD0_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD0_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD0_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD0_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD0_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD0_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD0_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD1  ========================================================= */
 #define R_SPI_B0_SPCMD1_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD1_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD1_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD1_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD1_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD1_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD1_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD1_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD1_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD1_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD1_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD1_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD1_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD1_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD1_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD1_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD1_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD1_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD1_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD1_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD2  ========================================================= */
 #define R_SPI_B0_SPCMD2_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD2_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD2_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD2_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD2_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD2_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD2_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD2_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD2_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD2_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD2_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD2_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD2_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD2_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD2_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD2_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD2_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD2_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD2_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD2_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD3  ========================================================= */
 #define R_SPI_B0_SPCMD3_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD3_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD3_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD3_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD3_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD3_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD3_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD3_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD3_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD3_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD3_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD3_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD3_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD3_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD3_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD3_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD3_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD3_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD3_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD3_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD4  ========================================================= */
 #define R_SPI_B0_SPCMD4_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD4_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD4_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD4_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD4_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD4_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD4_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD4_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD4_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD4_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD4_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD4_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD4_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD4_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD4_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD4_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD4_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD4_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD4_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD4_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD5  ========================================================= */
 #define R_SPI_B0_SPCMD5_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD5_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD5_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD5_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD5_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD5_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD5_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD5_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD5_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD5_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD5_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD5_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD5_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD5_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD5_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD5_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD5_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD5_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD5_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD5_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD6  ========================================================= */
 #define R_SPI_B0_SPCMD6_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD6_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD6_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD6_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD6_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD6_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD6_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD6_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD6_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD6_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD6_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD6_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD6_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD6_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD6_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD6_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD6_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD6_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD6_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD6_SSLA_Msk      (0x7000000UL)
/* ========================================================  SPCMD7  ========================================================= */
 #define R_SPI_B0_SPCMD7_CPHA_Pos      (0UL)
 #define R_SPI_B0_SPCMD7_CPHA_Msk      (0x1UL)
 #define R_SPI_B0_SPCMD7_CPOL_Pos      (1UL)
 #define R_SPI_B0_SPCMD7_CPOL_Msk      (0x2UL)
 #define R_SPI_B0_SPCMD7_BRDV_Pos      (2UL)
 #define R_SPI_B0_SPCMD7_BRDV_Msk      (0xcUL)
 #define R_SPI_B0_SPCMD7_SSLKP_Pos     (7UL)
 #define R_SPI_B0_SPCMD7_SSLKP_Msk     (0x80UL)
 #define R_SPI_B0_SPCMD7_LSBF_Pos      (12UL)
 #define R_SPI_B0_SPCMD7_LSBF_Msk      (0x1000UL)
 #define R_SPI_B0_SPCMD7_SPNDEN_Pos    (13UL)
 #define R_SPI_B0_SPCMD7_SPNDEN_Msk    (0x2000UL)
 #define R_SPI_B0_SPCMD7_SLNDEN_Pos    (14UL)
 #define R_SPI_B0_SPCMD7_SLNDEN_Msk    (0x4000UL)
 #define R_SPI_B0_SPCMD7_SCKDEN_Pos    (15UL)
 #define R_SPI_B0_SPCMD7_SCKDEN_Msk    (0x8000UL)
 #define R_SPI_B0_SPCMD7_SPB_Pos       (16UL)
 #define R_SPI_B0_SPCMD7_SPB_Msk       (0x1f0000UL)
 #define R_SPI_B0_SPCMD7_SSLA_Pos      (24UL)
 #define R_SPI_B0_SPCMD7_SSLA_Msk      (0x7000000UL)
/* =========================================================  SPDCR  ========================================================= */
 #define R_SPI_B0_SPDCR_BYSW_Pos       (0UL)
 #define R_SPI_B0_SPDCR_BYSW_Msk       (0x1UL)
 #define R_SPI_B0_SPDCR_SPRDTD_Pos     (3UL)
 #define R_SPI_B0_SPDCR_SPRDTD_Msk     (0x8UL)
 #define R_SPI_B0_SPDCR_SINV_Pos       (4UL)
 #define R_SPI_B0_SPDCR_SINV_Msk       (0x10UL)
 #define R_SPI_B0_SPDCR_SPFC_Pos       (8UL)
 #define R_SPI_B0_SPDCR_SPFC_Msk       (0x300UL)
/* ========================================================  SPDCR2  ========================================================= */
 #define R_SPI_B0_SPDCR2_RTRG_Pos      (0UL)
 #define R_SPI_B0_SPDCR2_RTRG_Msk      (0x3UL)
 #define R_SPI_B0_SPDCR2_TTRG_Pos      (8UL)
 #define R_SPI_B0_SPDCR2_TTRG_Msk      (0x300UL)
/* =========================================================  SPSR  ========================================================== */
 #define R_SPI_B0_SPSR_SPCP_Pos        (8UL)
 #define R_SPI_B0_SPSR_SPCP_Msk        (0x700UL)
 #define R_SPI_B0_SPSR_SPECM_Pos       (12UL)
 #define R_SPI_B0_SPSR_SPECM_Msk       (0x7000UL)
 #define R_SPI_B0_SPSR_SPDRF_Pos       (23UL)
 #define R_SPI_B0_SPSR_SPDRF_Msk       (0x800000UL)
 #define R_SPI_B0_SPSR_OVRF_Pos        (24UL)
 #define R_SPI_B0_SPSR_OVRF_Msk        (0x1000000UL)
 #define R_SPI_B0_SPSR_IDLNF_Pos       (25UL)
 #define R_SPI_B0_SPSR_IDLNF_Msk       (0x2000000UL)
 #define R_SPI_B0_SPSR_MODF_Pos        (26UL)
 #define R_SPI_B0_SPSR_MODF_Msk        (0x4000000UL)
 #define R_SPI_B0_SPSR_PERF_Pos        (27UL)
 #define R_SPI_B0_SPSR_PERF_Msk        (0x8000000UL)
 #define R_SPI_B0_SPSR_UDRF_Pos        (28UL)
 #define R_SPI_B0_SPSR_UDRF_Msk        (0x10000000UL)
 #define R_SPI_B0_SPSR_SPTEF_Pos       (29UL)
 #define R_SPI_B0_SPSR_SPTEF_Msk       (0x20000000UL)
 #define R_SPI_B0_SPSR_CENDF_Pos       (30UL)
 #define R_SPI_B0_SPSR_CENDF_Msk       (0x40000000UL)
 #define R_SPI_B0_SPSR_SPRF_Pos        (31UL)
 #define R_SPI_B0_SPSR_SPRF_Msk        (0x80000000UL)
/* ========================================================  SPTFSR  ========================================================= */
 #define R_SPI_B0_SPTFSR_TFDN_Pos      (0UL)
 #define R_SPI_B0_SPTFSR_TFDN_Msk      (0x7UL)
/* ========================================================  SPRFSR  ========================================================= */
 #define R_SPI_B0_SPRFSR_RFDN_Pos      (0UL)
 #define R_SPI_B0_SPRFSR_RFDN_Msk      (0x7UL)
/* =========================================================  SPPSR  ========================================================= */
 #define R_SPI_B0_SPPSR_SPEPS_Pos      (0UL)
 #define R_SPI_B0_SPPSR_SPEPS_Msk      (0x1UL)
/* =========================================================  SPSRC  ========================================================= */
 #define R_SPI_B0_SPSRC_SPDRFC_Pos     (23UL)
 #define R_SPI_B0_SPSRC_SPDRFC_Msk     (0x800000UL)
 #define R_SPI_B0_SPSRC_OVRFC_Pos      (24UL)
 #define R_SPI_B0_SPSRC_OVRFC_Msk      (0x1000000UL)
 #define R_SPI_B0_SPSRC_MODFC_Pos      (26UL)
 #define R_SPI_B0_SPSRC_MODFC_Msk      (0x4000000UL)
 #define R_SPI_B0_SPSRC_PERFC_Pos      (27UL)
 #define R_SPI_B0_SPSRC_PERFC_Msk      (0x8000000UL)
 #define R_SPI_B0_SPSRC_UDRFC_Pos      (28UL)
 #define R_SPI_B0_SPSRC_UDRFC_Msk      (0x10000000UL)
 #define R_SPI_B0_SPSRC_SPTEFC_Pos     (29UL)
 #define R_SPI_B0_SPSRC_SPTEFC_Msk     (0x20000000UL)
 #define R_SPI_B0_SPSRC_CENDFC_Pos     (30UL)
 #define R_SPI_B0_SPSRC_CENDFC_Msk     (0x40000000UL)
 #define R_SPI_B0_SPSRC_SPRFC_Pos      (31UL)
 #define R_SPI_B0_SPSRC_SPRFC_Msk      (0x80000000UL)
/* =========================================================  SPFCR  ========================================================= */
 #define R_SPI_B0_SPFCR_SPFRST_Pos     (0UL)
 #define R_SPI_B0_SPFCR_SPFRST_Msk     (0x1UL)

/* =========================================================================================================================== */
/* ================                                         R_USB_HS0                                         ================ */
/* =========================================================================================================================== */

/* ========================================================  SYSCFG  ========================================================= */
 #define R_USB_HS0_SYSCFG_CNEN_Pos         (8UL)
 #define R_USB_HS0_SYSCFG_CNEN_Msk         (0x100UL)
 #define R_USB_HS0_SYSCFG_HSE_Pos          (7UL)
 #define R_USB_HS0_SYSCFG_HSE_Msk          (0x80UL)
 #define R_USB_HS0_SYSCFG_DCFM_Pos         (6UL)
 #define R_USB_HS0_SYSCFG_DCFM_Msk         (0x40UL)
 #define R_USB_HS0_SYSCFG_DRPD_Pos         (5UL)
 #define R_USB_HS0_SYSCFG_DRPD_Msk         (0x20UL)
 #define R_USB_HS0_SYSCFG_DPRPU_Pos        (4UL)
 #define R_USB_HS0_SYSCFG_DPRPU_Msk        (0x10UL)
 #define R_USB_HS0_SYSCFG_USBE_Pos         (0UL)
 #define R_USB_HS0_SYSCFG_USBE_Msk         (0x1UL)
/* ========================================================  BUSWAIT  ======================================================== */
 #define R_USB_HS0_BUSWAIT_BWAIT_Pos       (0UL)
 #define R_USB_HS0_BUSWAIT_BWAIT_Msk       (0xfUL)
/* ========================================================  SYSSTS0  ======================================================== */
 #define R_USB_HS0_SYSSTS0_HTACT_Pos       (6UL)
 #define R_USB_HS0_SYSSTS0_HTACT_Msk       (0x40UL)
 #define R_USB_HS0_SYSSTS0_SOFEA_Pos       (5UL)
 #define R_USB_HS0_SYSSTS0_SOFEA_Msk       (0x20UL)
 #define R_USB_HS0_SYSSTS0_IDMON_Pos       (2UL)
 #define R_USB_HS0_SYSSTS0_IDMON_Msk       (0x4UL)
 #define R_USB_HS0_SYSSTS0_LNST_Pos        (0UL)
 #define R_USB_HS0_SYSSTS0_LNST_Msk        (0x3UL)
 #define R_USB_HS0_SYSSTS0_OVCMON_Pos      (14UL)
 #define R_USB_HS0_SYSSTS0_OVCMON_Msk      (0xc000UL)
/* ========================================================  PLLSTA  ========================================================= */
 #define R_USB_HS0_PLLSTA_PLLLOCK_Pos      (0UL)
 #define R_USB_HS0_PLLSTA_PLLLOCK_Msk      (0x1UL)
/* =======================================================  DVSTCTR0  ======================================================== */
 #define R_USB_HS0_DVSTCTR0_HNPBTOA_Pos    (11UL)
 #define R_USB_HS0_DVSTCTR0_HNPBTOA_Msk    (0x800UL)
 #define R_USB_HS0_DVSTCTR0_EXICEN_Pos     (10UL)
 #define R_USB_HS0_DVSTCTR0_EXICEN_Msk     (0x400UL)
 #define R_USB_HS0_DVSTCTR0_VBUSEN_Pos     (9UL)
 #define R_USB_HS0_DVSTCTR0_VBUSEN_Msk     (0x200UL)
 #define R_USB_HS0_DVSTCTR0_WKUP_Pos       (8UL)
 #define R_USB_HS0_DVSTCTR0_WKUP_Msk       (0x100UL)
 #define R_USB_HS0_DVSTCTR0_RWUPE_Pos      (7UL)
 #define R_USB_HS0_DVSTCTR0_RWUPE_Msk      (0x80UL)
 #define R_USB_HS0_DVSTCTR0_USBRST_Pos     (6UL)
 #define R_USB_HS0_DVSTCTR0_USBRST_Msk     (0x40UL)
 #define R_USB_HS0_DVSTCTR0_RESUME_Pos     (5UL)
 #define R_USB_HS0_DVSTCTR0_RESUME_Msk     (0x20UL)
 #define R_USB_HS0_DVSTCTR0_UACT_Pos       (4UL)
 #define R_USB_HS0_DVSTCTR0_UACT_Msk       (0x10UL)
 #define R_USB_HS0_DVSTCTR0_RHST_Pos       (0UL)
 #define R_USB_HS0_DVSTCTR0_RHST_Msk       (0x7UL)
/* =======================================================  TESTMODE  ======================================================== */
 #define R_USB_HS0_TESTMODE_UTST_Pos       (0UL)
 #define R_USB_HS0_TESTMODE_UTST_Msk       (0xfUL)
/* =========================================================  CFIFO  ========================================================= */
 #define R_USB_HS0_CFIFO_FIFOPORT_Pos      (0UL)
 #define R_USB_HS0_CFIFO_FIFOPORT_Msk      (0xffffffffUL)
/* ========================================================  CFIFOL  ========================================================= */
/* ========================================================  CFIFOH  ========================================================= */
/* ========================================================  CFIFOLL  ======================================================== */
/* ========================================================  CFIFOHH  ======================================================== */
/* ========================================================  D0FIFO  ========================================================= */
 #define R_USB_HS0_D0FIFO_FIFOPORT_Pos    (0UL)
 #define R_USB_HS0_D0FIFO_FIFOPORT_Msk    (0xffffffffUL)
/* ========================================================  D0FIFOL  ======================================================== */
/* ========================================================  D0FIFOH  ======================================================== */
/* =======================================================  D0FIFOLL  ======================================================== */
/* =======================================================  D0FIFOHH  ======================================================== */
/* ========================================================  D1FIFO  ========================================================= */
 #define R_USB_HS0_D1FIFO_FIFOPORT_Pos    (0UL)
 #define R_USB_HS0_D1FIFO_FIFOPORT_Msk    (0xffffffffUL)
/* ========================================================  D1FIFOL  ======================================================== */
/* ========================================================  D1FIFOH  ======================================================== */
/* =======================================================  D1FIFOLL  ======================================================== */
/* =======================================================  D1FIFOHH  ======================================================== */
/* =======================================================  CFIFOSEL  ======================================================== */
 #define R_USB_HS0_CFIFOSEL_RCNT_Pos           (15UL)
 #define R_USB_HS0_CFIFOSEL_RCNT_Msk           (0x8000UL)
 #define R_USB_HS0_CFIFOSEL_REW_Pos            (14UL)
 #define R_USB_HS0_CFIFOSEL_REW_Msk            (0x4000UL)
 #define R_USB_HS0_CFIFOSEL_MBW_Pos            (10UL)
 #define R_USB_HS0_CFIFOSEL_MBW_Msk            (0xc00UL)
 #define R_USB_HS0_CFIFOSEL_BIGEND_Pos         (8UL)
 #define R_USB_HS0_CFIFOSEL_BIGEND_Msk         (0x100UL)
 #define R_USB_HS0_CFIFOSEL_ISEL_Pos           (5UL)
 #define R_USB_HS0_CFIFOSEL_ISEL_Msk           (0x20UL)
 #define R_USB_HS0_CFIFOSEL_CURPIPE_Pos        (0UL)
 #define R_USB_HS0_CFIFOSEL_CURPIPE_Msk        (0xfUL)
/* =======================================================  CFIFOCTR  ======================================================== */
 #define R_USB_HS0_CFIFOCTR_BVAL_Pos           (15UL)
 #define R_USB_HS0_CFIFOCTR_BVAL_Msk           (0x8000UL)
 #define R_USB_HS0_CFIFOCTR_BCLR_Pos           (14UL)
 #define R_USB_HS0_CFIFOCTR_BCLR_Msk           (0x4000UL)
 #define R_USB_HS0_CFIFOCTR_FRDY_Pos           (13UL)
 #define R_USB_HS0_CFIFOCTR_FRDY_Msk           (0x2000UL)
 #define R_USB_HS0_CFIFOCTR_DTLN_Pos           (0UL)
 #define R_USB_HS0_CFIFOCTR_DTLN_Msk           (0xfffUL)
/* =======================================================  D0FIFOSEL  ======================================================= */
 #define R_USB_HS0_D0FIFOSEL_RCNT_Pos          (15UL)
 #define R_USB_HS0_D0FIFOSEL_RCNT_Msk          (0x8000UL)
 #define R_USB_HS0_D0FIFOSEL_REW_Pos           (14UL)
 #define R_USB_HS0_D0FIFOSEL_REW_Msk           (0x4000UL)
 #define R_USB_HS0_D0FIFOSEL_DCLRM_Pos         (13UL)
 #define R_USB_HS0_D0FIFOSEL_DCLRM_Msk         (0x2000UL)
 #define R_USB_HS0_D0FIFOSEL_DREQE_Pos         (12UL)
 #define R_USB_HS0_D0FIFOSEL_DREQE_Msk         (0x1000UL)
 #define R_USB_HS0_D0FIFOSEL_MBW_Pos           (10UL)
 #define R_USB_HS0_D0FIFOSEL_MBW_Msk           (0xc00UL)
 #define R_USB_HS0_D0FIFOSEL_BIGEND_Pos        (8UL)
 #define R_USB_HS0_D0FIFOSEL_BIGEND_Msk        (0x100UL)
 #define R_USB_HS0_D0FIFOSEL_CURPIPE_Pos       (0UL)
 #define R_USB_HS0_D0FIFOSEL_CURPIPE_Msk       (0xfUL)
/* =======================================================  D0FIFOCTR  ======================================================= */
 #define R_USB_HS0_D0FIFOCTR_BVAL_Pos          (15UL)
 #define R_USB_HS0_D0FIFOCTR_BVAL_Msk          (0x8000UL)
 #define R_USB_HS0_D0FIFOCTR_BCLR_Pos          (14UL)
 #define R_USB_HS0_D0FIFOCTR_BCLR_Msk          (0x4000UL)
 #define R_USB_HS0_D0FIFOCTR_FRDY_Pos          (13UL)
 #define R_USB_HS0_D0FIFOCTR_FRDY_Msk          (0x2000UL)
 #define R_USB_HS0_D0FIFOCTR_DTLN_Pos          (0UL)
 #define R_USB_HS0_D0FIFOCTR_DTLN_Msk          (0xfffUL)
/* =======================================================  D1FIFOSEL  ======================================================= */
 #define R_USB_HS0_D1FIFOSEL_RCNT_Pos          (15UL)
 #define R_USB_HS0_D1FIFOSEL_RCNT_Msk          (0x8000UL)
 #define R_USB_HS0_D1FIFOSEL_REW_Pos           (14UL)
 #define R_USB_HS0_D1FIFOSEL_REW_Msk           (0x4000UL)
 #define R_USB_HS0_D1FIFOSEL_DCLRM_Pos         (13UL)
 #define R_USB_HS0_D1FIFOSEL_DCLRM_Msk         (0x2000UL)
 #define R_USB_HS0_D1FIFOSEL_DREQE_Pos         (12UL)
 #define R_USB_HS0_D1FIFOSEL_DREQE_Msk         (0x1000UL)
 #define R_USB_HS0_D1FIFOSEL_MBW_Pos           (10UL)
 #define R_USB_HS0_D1FIFOSEL_MBW_Msk           (0xc00UL)
 #define R_USB_HS0_D1FIFOSEL_BIGEND_Pos        (8UL)
 #define R_USB_HS0_D1FIFOSEL_BIGEND_Msk        (0x100UL)
 #define R_USB_HS0_D1FIFOSEL_CURPIPE_Pos       (0UL)
 #define R_USB_HS0_D1FIFOSEL_CURPIPE_Msk       (0xfUL)
/* =======================================================  D1FIFOCTR  ======================================================= */
 #define R_USB_HS0_D1FIFOCTR_BVAL_Pos          (15UL)
 #define R_USB_HS0_D1FIFOCTR_BVAL_Msk          (0x8000UL)
 #define R_USB_HS0_D1FIFOCTR_BCLR_Pos          (14UL)
 #define R_USB_HS0_D1FIFOCTR_BCLR_Msk          (0x4000UL)
 #define R_USB_HS0_D1FIFOCTR_FRDY_Pos          (13UL)
 #define R_USB_HS0_D1FIFOCTR_FRDY_Msk          (0x2000UL)
 #define R_USB_HS0_D1FIFOCTR_DTLN_Pos          (0UL)
 #define R_USB_HS0_D1FIFOCTR_DTLN_Msk          (0xfffUL)
/* ========================================================  INTENB0  ======================================================== */
 #define R_USB_HS0_INTENB0_VBSE_Pos            (15UL)
 #define R_USB_HS0_INTENB0_VBSE_Msk            (0x8000UL)
 #define R_USB_HS0_INTENB0_RSME_Pos            (14UL)
 #define R_USB_HS0_INTENB0_RSME_Msk            (0x4000UL)
 #define R_USB_HS0_INTENB0_SOFE_Pos            (13UL)
 #define R_USB_HS0_INTENB0_SOFE_Msk            (0x2000UL)
 #define R_USB_HS0_INTENB0_DVSE_Pos            (12UL)
 #define R_USB_HS0_INTENB0_DVSE_Msk            (0x1000UL)
 #define R_USB_HS0_INTENB0_CTRE_Pos            (11UL)
 #define R_USB_HS0_INTENB0_CTRE_Msk            (0x800UL)
 #define R_USB_HS0_INTENB0_BEMPE_Pos           (10UL)
 #define R_USB_HS0_INTENB0_BEMPE_Msk           (0x400UL)
 #define R_USB_HS0_INTENB0_NRDYE_Pos           (9UL)
 #define R_USB_HS0_INTENB0_NRDYE_Msk           (0x200UL)
 #define R_USB_HS0_INTENB0_BRDYE_Pos           (8UL)
 #define R_USB_HS0_INTENB0_BRDYE_Msk           (0x100UL)
/* ========================================================  INTENB1  ======================================================== */
 #define R_USB_HS0_INTENB1_OVRCRE_Pos          (15UL)
 #define R_USB_HS0_INTENB1_OVRCRE_Msk          (0x8000UL)
 #define R_USB_HS0_INTENB1_BCHGE_Pos           (14UL)
 #define R_USB_HS0_INTENB1_BCHGE_Msk           (0x4000UL)
 #define R_USB_HS0_INTENB1_DTCHE_Pos           (12UL)
 #define R_USB_HS0_INTENB1_DTCHE_Msk           (0x1000UL)
 #define R_USB_HS0_INTENB1_ATTCHE_Pos          (11UL)
 #define R_USB_HS0_INTENB1_ATTCHE_Msk          (0x800UL)
 #define R_USB_HS0_INTENB1_L1RSMENDE_Pos       (9UL)
 #define R_USB_HS0_INTENB1_L1RSMENDE_Msk       (0x200UL)
 #define R_USB_HS0_INTENB1_LPMENDE_Pos         (8UL)
 #define R_USB_HS0_INTENB1_LPMENDE_Msk         (0x100UL)
 #define R_USB_HS0_INTENB1_EOFERRE_Pos         (6UL)
 #define R_USB_HS0_INTENB1_EOFERRE_Msk         (0x40UL)
 #define R_USB_HS0_INTENB1_SIGNE_Pos           (5UL)
 #define R_USB_HS0_INTENB1_SIGNE_Msk           (0x20UL)
 #define R_USB_HS0_INTENB1_SACKE_Pos           (4UL)
 #define R_USB_HS0_INTENB1_SACKE_Msk           (0x10UL)
 #define R_USB_HS0_INTENB1_PDDETINTE0_Pos      (0UL)
 #define R_USB_HS0_INTENB1_PDDETINTE0_Msk      (0x1UL)
/* ========================================================  BRDYENB  ======================================================== */
 #define R_USB_HS0_BRDYENB_PIPEBRDYE_Pos       (0UL)
 #define R_USB_HS0_BRDYENB_PIPEBRDYE_Msk       (0x3ffUL)
/* ========================================================  NRDYENB  ======================================================== */
 #define R_USB_HS0_NRDYENB_PIPENRDYE_Pos       (0UL)
 #define R_USB_HS0_NRDYENB_PIPENRDYE_Msk       (0x3ffUL)
/* ========================================================  BEMPENB  ======================================================== */
 #define R_USB_HS0_BEMPENB_PIPEBEMPE_Pos       (0UL)
 #define R_USB_HS0_BEMPENB_PIPEBEMPE_Msk       (0x3ffUL)
/* ========================================================  SOFCFG  ========================================================= */
 #define R_USB_HS0_SOFCFG_TRNENSEL_Pos         (8UL)
 #define R_USB_HS0_SOFCFG_TRNENSEL_Msk         (0x100UL)
 #define R_USB_HS0_SOFCFG_BRDYM_Pos            (6UL)
 #define R_USB_HS0_SOFCFG_BRDYM_Msk            (0x40UL)
 #define R_USB_HS0_SOFCFG_INTL_Pos             (5UL)
 #define R_USB_HS0_SOFCFG_INTL_Msk             (0x20UL)
 #define R_USB_HS0_SOFCFG_EDGESTS_Pos          (4UL)
 #define R_USB_HS0_SOFCFG_EDGESTS_Msk          (0x10UL)
/* ========================================================  PHYSET  ========================================================= */
 #define R_USB_HS0_PHYSET_HSEB_Pos             (15UL)
 #define R_USB_HS0_PHYSET_HSEB_Msk             (0x8000UL)
 #define R_USB_HS0_PHYSET_REPSTART_Pos         (11UL)
 #define R_USB_HS0_PHYSET_REPSTART_Msk         (0x800UL)
 #define R_USB_HS0_PHYSET_REPSEL_Pos           (8UL)
 #define R_USB_HS0_PHYSET_REPSEL_Msk           (0x300UL)
 #define R_USB_HS0_PHYSET_CLKSEL_Pos           (4UL)
 #define R_USB_HS0_PHYSET_CLKSEL_Msk           (0x30UL)
 #define R_USB_HS0_PHYSET_CDPEN_Pos            (3UL)
 #define R_USB_HS0_PHYSET_CDPEN_Msk            (0x8UL)
 #define R_USB_HS0_PHYSET_PLLRESET_Pos         (1UL)
 #define R_USB_HS0_PHYSET_PLLRESET_Msk         (0x2UL)
 #define R_USB_HS0_PHYSET_DIRPD_Pos            (0UL)
 #define R_USB_HS0_PHYSET_DIRPD_Msk            (0x1UL)
/* ========================================================  INTSTS0  ======================================================== */
 #define R_USB_HS0_INTSTS0_VBINT_Pos           (15UL)
 #define R_USB_HS0_INTSTS0_VBINT_Msk           (0x8000UL)
 #define R_USB_HS0_INTSTS0_RESM_Pos            (14UL)
 #define R_USB_HS0_INTSTS0_RESM_Msk            (0x4000UL)
 #define R_USB_HS0_INTSTS0_SOFR_Pos            (13UL)
 #define R_USB_HS0_INTSTS0_SOFR_Msk            (0x2000UL)
 #define R_USB_HS0_INTSTS0_DVST_Pos            (12UL)
 #define R_USB_HS0_INTSTS0_DVST_Msk            (0x1000UL)
 #define R_USB_HS0_INTSTS0_CTRT_Pos            (11UL)
 #define R_USB_HS0_INTSTS0_CTRT_Msk            (0x800UL)
 #define R_USB_HS0_INTSTS0_BEMP_Pos            (10UL)
 #define R_USB_HS0_INTSTS0_BEMP_Msk            (0x400UL)
 #define R_USB_HS0_INTSTS0_NRDY_Pos            (9UL)
 #define R_USB_HS0_INTSTS0_NRDY_Msk            (0x200UL)
 #define R_USB_HS0_INTSTS0_BRDY_Pos            (8UL)
 #define R_USB_HS0_INTSTS0_BRDY_Msk            (0x100UL)
 #define R_USB_HS0_INTSTS0_VBSTS_Pos           (7UL)
 #define R_USB_HS0_INTSTS0_VBSTS_Msk           (0x80UL)
 #define R_USB_HS0_INTSTS0_DVSQ_Pos            (4UL)
 #define R_USB_HS0_INTSTS0_DVSQ_Msk            (0x70UL)
 #define R_USB_HS0_INTSTS0_VALID_Pos           (3UL)
 #define R_USB_HS0_INTSTS0_VALID_Msk           (0x8UL)
 #define R_USB_HS0_INTSTS0_CTSQ_Pos            (0UL)
 #define R_USB_HS0_INTSTS0_CTSQ_Msk            (0x7UL)
/* ========================================================  INTSTS1  ======================================================== */
 #define R_USB_HS0_INTSTS1_OVRCR_Pos           (15UL)
 #define R_USB_HS0_INTSTS1_OVRCR_Msk           (0x8000UL)
 #define R_USB_HS0_INTSTS1_BCHG_Pos            (14UL)
 #define R_USB_HS0_INTSTS1_BCHG_Msk            (0x4000UL)
 #define R_USB_HS0_INTSTS1_DTCH_Pos            (12UL)
 #define R_USB_HS0_INTSTS1_DTCH_Msk            (0x1000UL)
 #define R_USB_HS0_INTSTS1_ATTCH_Pos           (11UL)
 #define R_USB_HS0_INTSTS1_ATTCH_Msk           (0x800UL)
 #define R_USB_HS0_INTSTS1_L1RSMEND_Pos        (9UL)
 #define R_USB_HS0_INTSTS1_L1RSMEND_Msk        (0x200UL)
 #define R_USB_HS0_INTSTS1_LPMEND_Pos          (8UL)
 #define R_USB_HS0_INTSTS1_LPMEND_Msk          (0x100UL)
 #define R_USB_HS0_INTSTS1_EOFERR_Pos          (6UL)
 #define R_USB_HS0_INTSTS1_EOFERR_Msk          (0x40UL)
 #define R_USB_HS0_INTSTS1_SIGN_Pos            (5UL)
 #define R_USB_HS0_INTSTS1_SIGN_Msk            (0x20UL)
 #define R_USB_HS0_INTSTS1_SACK_Pos            (4UL)
 #define R_USB_HS0_INTSTS1_SACK_Msk            (0x10UL)
 #define R_USB_HS0_INTSTS1_PDDETINT0_Pos       (0UL)
 #define R_USB_HS0_INTSTS1_PDDETINT0_Msk       (0x1UL)
/* ========================================================  BRDYSTS  ======================================================== */
 #define R_USB_HS0_BRDYSTS_PIPEBRDY_Pos        (0UL)
 #define R_USB_HS0_BRDYSTS_PIPEBRDY_Msk        (0x3ffUL)
/* ========================================================  NRDYSTS  ======================================================== */
 #define R_USB_HS0_NRDYSTS_PIPENRDY_Pos        (0UL)
 #define R_USB_HS0_NRDYSTS_PIPENRDY_Msk        (0x3ffUL)
/* ========================================================  BEMPSTS  ======================================================== */
 #define R_USB_HS0_BEMPSTS_PIPEBEMP_Pos        (0UL)
 #define R_USB_HS0_BEMPSTS_PIPEBEMP_Msk        (0x3ffUL)
/* ========================================================  FRMNUM  ========================================================= */
 #define R_USB_HS0_FRMNUM_OVRN_Pos             (15UL)
 #define R_USB_HS0_FRMNUM_OVRN_Msk             (0x8000UL)
 #define R_USB_HS0_FRMNUM_CRCE_Pos             (14UL)
 #define R_USB_HS0_FRMNUM_CRCE_Msk             (0x4000UL)
 #define R_USB_HS0_FRMNUM_FRNM_Pos             (0UL)
 #define R_USB_HS0_FRMNUM_FRNM_Msk             (0x7ffUL)
/* ========================================================  UFRMNUM  ======================================================== */
 #define R_USB_HS0_UFRMNUM_DVCHG_Pos           (15UL)
 #define R_USB_HS0_UFRMNUM_DVCHG_Msk           (0x8000UL)
 #define R_USB_HS0_UFRMNUM_UFRNM_Pos           (0UL)
 #define R_USB_HS0_UFRMNUM_UFRNM_Msk           (0x7UL)
/* ========================================================  USBADDR  ======================================================== */
 #define R_USB_HS0_USBADDR_STSRECOV0_Pos       (8UL)
 #define R_USB_HS0_USBADDR_STSRECOV0_Msk       (0x700UL)
/* ========================================================  USBREQ  ========================================================= */
 #define R_USB_HS0_USBREQ_BREQUEST_Pos         (8UL)
 #define R_USB_HS0_USBREQ_BREQUEST_Msk         (0xff00UL)
 #define R_USB_HS0_USBREQ_BMREQUESTTYPE_Pos    (0UL)
 #define R_USB_HS0_USBREQ_BMREQUESTTYPE_Msk    (0xffUL)
/* ========================================================  USBVAL  ========================================================= */
 #define R_USB_HS0_USBVAL_WVALUE_Pos           (0UL)
 #define R_USB_HS0_USBVAL_WVALUE_Msk           (0xffffUL)
/* ========================================================  USBINDX  ======================================================== */
 #define R_USB_HS0_USBINDX_WINDEX_Pos          (0UL)
 #define R_USB_HS0_USBINDX_WINDEX_Msk          (0xffffUL)
/* ========================================================  USBLENG  ======================================================== */
 #define R_USB_HS0_USBLENG_WLENGTH_Pos         (0UL)
 #define R_USB_HS0_USBLENG_WLENGTH_Msk         (0xffffUL)
/* ========================================================  DCPCFG  ========================================================= */
 #define R_USB_HS0_DCPCFG_CNTMD_Pos            (8UL)
 #define R_USB_HS0_DCPCFG_CNTMD_Msk            (0x100UL)
 #define R_USB_HS0_DCPCFG_SHTNAK_Pos           (7UL)
 #define R_USB_HS0_DCPCFG_SHTNAK_Msk           (0x80UL)
 #define R_USB_HS0_DCPCFG_DIR_Pos              (4UL)
 #define R_USB_HS0_DCPCFG_DIR_Msk              (0x10UL)
/* ========================================================  DCPMAXP  ======================================================== */
 #define R_USB_HS0_DCPMAXP_DEVSEL_Pos          (12UL)
 #define R_USB_HS0_DCPMAXP_DEVSEL_Msk          (0xf000UL)
 #define R_USB_HS0_DCPMAXP_MXPS_Pos            (0UL)
 #define R_USB_HS0_DCPMAXP_MXPS_Msk            (0x7fUL)
/* ========================================================  DCPCTR  ========================================================= */
 #define R_USB_HS0_DCPCTR_BSTS_Pos             (15UL)
 #define R_USB_HS0_DCPCTR_BSTS_Msk             (0x8000UL)
 #define R_USB_HS0_DCPCTR_SUREQ_Pos            (14UL)
 #define R_USB_HS0_DCPCTR_SUREQ_Msk            (0x4000UL)
 #define R_USB_HS0_DCPCTR_CSCLR_Pos            (13UL)
 #define R_USB_HS0_DCPCTR_CSCLR_Msk            (0x2000UL)
 #define R_USB_HS0_DCPCTR_CSSTS_Pos            (12UL)
 #define R_USB_HS0_DCPCTR_CSSTS_Msk            (0x1000UL)
 #define R_USB_HS0_DCPCTR_SUREQCLR_Pos         (11UL)
 #define R_USB_HS0_DCPCTR_SUREQCLR_Msk         (0x800UL)
 #define R_USB_HS0_DCPCTR_SQCLR_Pos            (8UL)
 #define R_USB_HS0_DCPCTR_SQCLR_Msk            (0x100UL)
 #define R_USB_HS0_DCPCTR_SQSET_Pos            (7UL)
 #define R_USB_HS0_DCPCTR_SQSET_Msk            (0x80UL)
 #define R_USB_HS0_DCPCTR_SQMON_Pos            (6UL)
 #define R_USB_HS0_DCPCTR_SQMON_Msk            (0x40UL)
 #define R_USB_HS0_DCPCTR_PBUSY_Pos            (5UL)
 #define R_USB_HS0_DCPCTR_PBUSY_Msk            (0x20UL)
 #define R_USB_HS0_DCPCTR_PINGE_Pos            (4UL)
 #define R_USB_HS0_DCPCTR_PINGE_Msk            (0x10UL)
 #define R_USB_HS0_DCPCTR_CCPL_Pos             (2UL)
 #define R_USB_HS0_DCPCTR_CCPL_Msk             (0x4UL)
 #define R_USB_HS0_DCPCTR_PID_Pos              (0UL)
 #define R_USB_HS0_DCPCTR_PID_Msk              (0x3UL)
/* ========================================================  PIPESEL  ======================================================== */
/* ========================================================  PIPECFG  ======================================================== */
 #define R_USB_HS0_PIPECFG_TYPE_Pos            (14UL)
 #define R_USB_HS0_PIPECFG_TYPE_Msk            (0xc000UL)
 #define R_USB_HS0_PIPECFG_BFRE_Pos            (10UL)
 #define R_USB_HS0_PIPECFG_BFRE_Msk            (0x400UL)
 #define R_USB_HS0_PIPECFG_DBLB_Pos            (9UL)
 #define R_USB_HS0_PIPECFG_DBLB_Msk            (0x200UL)
 #define R_USB_HS0_PIPECFG_CNTMD_Pos           (8UL)
 #define R_USB_HS0_PIPECFG_CNTMD_Msk           (0x100UL)
 #define R_USB_HS0_PIPECFG_SHTNAK_Pos          (7UL)
 #define R_USB_HS0_PIPECFG_SHTNAK_Msk          (0x80UL)
 #define R_USB_HS0_PIPECFG_DIR_Pos             (4UL)
 #define R_USB_HS0_PIPECFG_DIR_Msk             (0x10UL)
 #define R_USB_HS0_PIPECFG_EPNUM_Pos           (0UL)
 #define R_USB_HS0_PIPECFG_EPNUM_Msk           (0xfUL)
/* ========================================================  PIPEBUF  ======================================================== */
 #define R_USB_HS0_PIPEBUF_BUFSIZE_Pos         (10UL)
 #define R_USB_HS0_PIPEBUF_BUFSIZE_Msk         (0x7c00UL)
 #define R_USB_HS0_PIPEBUF_BUFNMB_Pos          (0UL)
 #define R_USB_HS0_PIPEBUF_BUFNMB_Msk          (0xffUL)
/* =======================================================  PIPEMAXP  ======================================================== */
 #define R_USB_HS0_PIPEMAXP_DEVSEL_Pos         (12UL)
 #define R_USB_HS0_PIPEMAXP_DEVSEL_Msk         (0xf000UL)
 #define R_USB_HS0_PIPEMAXP_MXPS_Pos           (0UL)
 #define R_USB_HS0_PIPEMAXP_MXPS_Msk           (0x7ffUL)
/* =======================================================  PIPEPERI  ======================================================== */
 #define R_USB_HS0_PIPEPERI_IFIS_Pos           (12UL)
 #define R_USB_HS0_PIPEPERI_IFIS_Msk           (0x1000UL)
 #define R_USB_HS0_PIPEPERI_IITV_Pos           (0UL)
 #define R_USB_HS0_PIPEPERI_IITV_Msk           (0x7UL)
/* =======================================================  PIPE_CTR  ======================================================== */
 #define R_USB_HS0_PIPE_CTR_BSTS_Pos           (15UL)
 #define R_USB_HS0_PIPE_CTR_BSTS_Msk           (0x8000UL)
 #define R_USB_HS0_PIPE_CTR_INBUFM_Pos         (14UL)
 #define R_USB_HS0_PIPE_CTR_INBUFM_Msk         (0x4000UL)
 #define R_USB_HS0_PIPE_CTR_CSCLR_Pos          (13UL)
 #define R_USB_HS0_PIPE_CTR_CSCLR_Msk          (0x2000UL)
 #define R_USB_HS0_PIPE_CTR_CSSTS_Pos          (12UL)
 #define R_USB_HS0_PIPE_CTR_CSSTS_Msk          (0x1000UL)
 #define R_USB_HS0_PIPE_CTR_ATREPM_Pos         (10UL)
 #define R_USB_HS0_PIPE_CTR_ATREPM_Msk         (0x400UL)
 #define R_USB_HS0_PIPE_CTR_ACLRM_Pos          (9UL)
 #define R_USB_HS0_PIPE_CTR_ACLRM_Msk          (0x200UL)
 #define R_USB_HS0_PIPE_CTR_SQCLR_Pos          (8UL)
 #define R_USB_HS0_PIPE_CTR_SQCLR_Msk          (0x100UL)
 #define R_USB_HS0_PIPE_CTR_SQSET_Pos          (7UL)
 #define R_USB_HS0_PIPE_CTR_SQSET_Msk          (0x80UL)
 #define R_USB_HS0_PIPE_CTR_SQMON_Pos          (6UL)
 #define R_USB_HS0_PIPE_CTR_SQMON_Msk          (0x40UL)
 #define R_USB_HS0_PIPE_CTR_PBUSY_Pos          (5UL)
 #define R_USB_HS0_PIPE_CTR_PBUSY_Msk          (0x20UL)
 #define R_USB_HS0_PIPE_CTR_PID_Pos            (0UL)
 #define R_USB_HS0_PIPE_CTR_PID_Msk            (0x3UL)
/* ========================================================  DEVADD  ========================================================= */
 #define R_USB_HS0_DEVADD_UPPHUB_Pos           (11UL)
 #define R_USB_HS0_DEVADD_UPPHUB_Msk           (0x7800UL)
 #define R_USB_HS0_DEVADD_HUBPORT_Pos          (8UL)
 #define R_USB_HS0_DEVADD_HUBPORT_Msk          (0x700UL)
 #define R_USB_HS0_DEVADD_USBSPD_Pos           (6UL)
 #define R_USB_HS0_DEVADD_USBSPD_Msk           (0xc0UL)
/* ========================================================  LPCTRL  ========================================================= */
 #define R_USB_HS0_LPCTRL_HWUPM_Pos            (7UL)
 #define R_USB_HS0_LPCTRL_HWUPM_Msk            (0x80UL)
/* =========================================================  LPSTS  ========================================================= */
 #define R_USB_HS0_LPSTS_SUSPENDM_Pos          (14UL)
 #define R_USB_HS0_LPSTS_SUSPENDM_Msk          (0x4000UL)
/* ========================================================  BCCTRL  ========================================================= */
 #define R_USB_HS0_BCCTRL_PDDETSTS_Pos         (9UL)
 #define R_USB_HS0_BCCTRL_PDDETSTS_Msk         (0x200UL)
 #define R_USB_HS0_BCCTRL_CHGDETSTS_Pos        (8UL)
 #define R_USB_HS0_BCCTRL_CHGDETSTS_Msk        (0x100UL)
 #define R_USB_HS0_BCCTRL_DCPMODE_Pos          (5UL)
 #define R_USB_HS0_BCCTRL_DCPMODE_Msk          (0x20UL)
 #define R_USB_HS0_BCCTRL_VDMSRCE_Pos          (4UL)
 #define R_USB_HS0_BCCTRL_VDMSRCE_Msk          (0x10UL)
 #define R_USB_HS0_BCCTRL_IDPSINKE_Pos         (3UL)
 #define R_USB_HS0_BCCTRL_IDPSINKE_Msk         (0x8UL)
 #define R_USB_HS0_BCCTRL_VDPSRCE_Pos          (2UL)
 #define R_USB_HS0_BCCTRL_VDPSRCE_Msk          (0x4UL)
 #define R_USB_HS0_BCCTRL_IDMSINKE_Pos         (1UL)
 #define R_USB_HS0_BCCTRL_IDMSINKE_Msk         (0x2UL)
 #define R_USB_HS0_BCCTRL_IDPSRCE_Pos          (0UL)
 #define R_USB_HS0_BCCTRL_IDPSRCE_Msk          (0x1UL)
/* =======================================================  PL1CTRL1  ======================================================== */
 #define R_USB_HS0_PL1CTRL1_L1EXTMD_Pos        (14UL)
 #define R_USB_HS0_PL1CTRL1_L1EXTMD_Msk        (0x4000UL)
 #define R_USB_HS0_PL1CTRL1_HIRDTHR_Pos        (8UL)
 #define R_USB_HS0_PL1CTRL1_HIRDTHR_Msk        (0xf00UL)
 #define R_USB_HS0_PL1CTRL1_DVSQ_Pos           (4UL)
 #define R_USB_HS0_PL1CTRL1_DVSQ_Msk           (0xf0UL)
 #define R_USB_HS0_PL1CTRL1_L1NEGOMD_Pos       (3UL)
 #define R_USB_HS0_PL1CTRL1_L1NEGOMD_Msk       (0x8UL)
 #define R_USB_HS0_PL1CTRL1_L1RESPMD_Pos       (1UL)
 #define R_USB_HS0_PL1CTRL1_L1RESPMD_Msk       (0x6UL)
 #define R_USB_HS0_PL1CTRL1_L1RESPEN_Pos       (0UL)
 #define R_USB_HS0_PL1CTRL1_L1RESPEN_Msk       (0x1UL)
/* =======================================================  PL1CTRL2  ======================================================== */
 #define R_USB_HS0_PL1CTRL2_RWEMON_Pos         (12UL)
 #define R_USB_HS0_PL1CTRL2_RWEMON_Msk         (0x1000UL)
 #define R_USB_HS0_PL1CTRL2_HIRDMON_Pos        (8UL)
 #define R_USB_HS0_PL1CTRL2_HIRDMON_Msk        (0xf00UL)
/* =======================================================  HL1CTRL1  ======================================================== */
 #define R_USB_HS0_HL1CTRL1_L1STATUS_Pos       (1UL)
 #define R_USB_HS0_HL1CTRL1_L1STATUS_Msk       (0x6UL)
 #define R_USB_HS0_HL1CTRL1_L1REQ_Pos          (0UL)
 #define R_USB_HS0_HL1CTRL1_L1REQ_Msk          (0x1UL)
/* =======================================================  HL1CTRL2  ======================================================== */
 #define R_USB_HS0_HL1CTRL2_BESL_Pos           (15UL)
 #define R_USB_HS0_HL1CTRL2_BESL_Msk           (0x8000UL)
 #define R_USB_HS0_HL1CTRL2_L1RWE_Pos          (12UL)
 #define R_USB_HS0_HL1CTRL2_L1RWE_Msk          (0x1000UL)
 #define R_USB_HS0_HL1CTRL2_HIRD_Pos           (8UL)
 #define R_USB_HS0_HL1CTRL2_HIRD_Msk           (0xf00UL)
 #define R_USB_HS0_HL1CTRL2_L1ADDR_Pos         (0UL)
 #define R_USB_HS0_HL1CTRL2_L1ADDR_Msk         (0xfUL)
/* =======================================================  PHYTRIM1  ======================================================== */
 #define R_USB_HS0_PHYTRIM1_IMPOFFSET_Pos      (12UL)
 #define R_USB_HS0_PHYTRIM1_IMPOFFSET_Msk      (0x7000UL)
 #define R_USB_HS0_PHYTRIM1_HSIUP_Pos          (8UL)
 #define R_USB_HS0_PHYTRIM1_HSIUP_Msk          (0xf00UL)
 #define R_USB_HS0_PHYTRIM1_PCOMPENB_Pos       (7UL)
 #define R_USB_HS0_PHYTRIM1_PCOMPENB_Msk       (0x80UL)
 #define R_USB_HS0_PHYTRIM1_DFALL_Pos          (2UL)
 #define R_USB_HS0_PHYTRIM1_DFALL_Msk          (0xcUL)
 #define R_USB_HS0_PHYTRIM1_DRISE_Pos          (0UL)
 #define R_USB_HS0_PHYTRIM1_DRISE_Msk          (0x3UL)
/* =======================================================  PHYTRIM2  ======================================================== */
 #define R_USB_HS0_PHYTRIM2_DIS_Pos            (12UL)
 #define R_USB_HS0_PHYTRIM2_DIS_Msk            (0x7000UL)
 #define R_USB_HS0_PHYTRIM2_PDR_Pos            (8UL)
 #define R_USB_HS0_PHYTRIM2_PDR_Msk            (0x300UL)
 #define R_USB_HS0_PHYTRIM2_HSRXENMO_Pos       (7UL)
 #define R_USB_HS0_PHYTRIM2_HSRXENMO_Msk       (0x80UL)
 #define R_USB_HS0_PHYTRIM2_SQU_Pos            (0UL)
 #define R_USB_HS0_PHYTRIM2_SQU_Msk            (0xfUL)
/* ========================================================  DPUSR0R  ======================================================== */
 #define R_USB_HS0_DPUSR0R_DVBSTSHM_Pos        (23UL)
 #define R_USB_HS0_DPUSR0R_DVBSTSHM_Msk        (0x800000UL)
 #define R_USB_HS0_DPUSR0R_DOVCBHM_Pos         (21UL)
 #define R_USB_HS0_DPUSR0R_DOVCBHM_Msk         (0x200000UL)
 #define R_USB_HS0_DPUSR0R_DOVCAHM_Pos         (20UL)
 #define R_USB_HS0_DPUSR0R_DOVCAHM_Msk         (0x100000UL)
/* ========================================================  DPUSR1R  ======================================================== */
 #define R_USB_HS0_DPUSR1R_DVBSTSH_Pos         (23UL)
 #define R_USB_HS0_DPUSR1R_DVBSTSH_Msk         (0x800000UL)
 #define R_USB_HS0_DPUSR1R_DOVCBH_Pos          (21UL)
 #define R_USB_HS0_DPUSR1R_DOVCBH_Msk          (0x200000UL)
 #define R_USB_HS0_DPUSR1R_DOVCAH_Pos          (20UL)
 #define R_USB_HS0_DPUSR1R_DOVCAH_Msk          (0x100000UL)
 #define R_USB_HS0_DPUSR1R_DVBSTSHE_Pos        (7UL)
 #define R_USB_HS0_DPUSR1R_DVBSTSHE_Msk        (0x80UL)
 #define R_USB_HS0_DPUSR1R_DOVCBHE_Pos         (5UL)
 #define R_USB_HS0_DPUSR1R_DOVCBHE_Msk         (0x20UL)
 #define R_USB_HS0_DPUSR1R_DOVCAHE_Pos         (4UL)
 #define R_USB_HS0_DPUSR1R_DOVCAHE_Msk         (0x10UL)
/* ========================================================  DPUSR2R  ======================================================== */
 #define R_USB_HS0_DPUSR2R_DMINTE_Pos          (9UL)
 #define R_USB_HS0_DPUSR2R_DMINTE_Msk          (0x200UL)
 #define R_USB_HS0_DPUSR2R_DPINTE_Pos          (8UL)
 #define R_USB_HS0_DPUSR2R_DPINTE_Msk          (0x100UL)
 #define R_USB_HS0_DPUSR2R_DMVAL_Pos           (5UL)
 #define R_USB_HS0_DPUSR2R_DMVAL_Msk           (0x20UL)
 #define R_USB_HS0_DPUSR2R_DPVAL_Pos           (4UL)
 #define R_USB_HS0_DPUSR2R_DPVAL_Msk           (0x10UL)
 #define R_USB_HS0_DPUSR2R_DMINT_Pos           (1UL)
 #define R_USB_HS0_DPUSR2R_DMINT_Msk           (0x2UL)
 #define R_USB_HS0_DPUSR2R_DPINT_Pos           (0UL)
 #define R_USB_HS0_DPUSR2R_DPINT_Msk           (0x1UL)
/* ========================================================  DPUSRCR  ======================================================== */
 #define R_USB_HS0_DPUSRCR_FIXPHYPD_Pos        (1UL)
 #define R_USB_HS0_DPUSRCR_FIXPHYPD_Msk        (0x2UL)
 #define R_USB_HS0_DPUSRCR_FIXPHY_Pos          (0UL)
 #define R_USB_HS0_DPUSRCR_FIXPHY_Msk          (0x1UL)

/* =========================================================================================================================== */
/* ================                                          R_XSPI                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  WRAPCFG  ======================================================== */
 #define R_XSPI_WRAPCFG_CKSFTCS0_Pos      (0UL)
 #define R_XSPI_WRAPCFG_CKSFTCS0_Msk      (0x1fUL)
 #define R_XSPI_WRAPCFG_DSSFTCS0_Pos      (8UL)
 #define R_XSPI_WRAPCFG_DSSFTCS0_Msk      (0x1f00UL)
 #define R_XSPI_WRAPCFG_CKSFTCS1_Pos      (16UL)
 #define R_XSPI_WRAPCFG_CKSFTCS1_Msk      (0x1f0000UL)
 #define R_XSPI_WRAPCFG_DSSFTCS1_Pos      (24UL)
 #define R_XSPI_WRAPCFG_DSSFTCS1_Msk      (0x1f000000UL)
/* ========================================================  COMCFG  ========================================================= */
 #define R_XSPI_COMCFG_ARBMD_Pos          (0UL)
 #define R_XSPI_COMCFG_ARBMD_Msk          (0x3UL)
 #define R_XSPI_COMCFG_ECSINTOUTEN_Pos    (4UL)
 #define R_XSPI_COMCFG_ECSINTOUTEN_Msk    (0x30UL)
 #define R_XSPI_COMCFG_OEASTEX_Pos        (16UL)
 #define R_XSPI_COMCFG_OEASTEX_Msk        (0x10000UL)
 #define R_XSPI_COMCFG_OENEGEX_Pos        (17UL)
 #define R_XSPI_COMCFG_OENEGEX_Msk        (0x20000UL)
/* ========================================================  BMCFGCH  ======================================================== */
 #define R_XSPI_BMCFGCH_WRMD_Pos          (0UL)
 #define R_XSPI_BMCFGCH_WRMD_Msk          (0x1UL)
 #define R_XSPI_BMCFGCH_MWRCOMB_Pos       (7UL)
 #define R_XSPI_BMCFGCH_MWRCOMB_Msk       (0x80UL)
 #define R_XSPI_BMCFGCH_MWRSIZE_Pos       (8UL)
 #define R_XSPI_BMCFGCH_MWRSIZE_Msk       (0xff00UL)
 #define R_XSPI_BMCFGCH_PREEN_Pos         (16UL)
 #define R_XSPI_BMCFGCH_PREEN_Msk         (0x10000UL)
 #define R_XSPI_BMCFGCH_CMBTIM_Pos        (24UL)
 #define R_XSPI_BMCFGCH_CMBTIM_Msk        (0xff000000UL)
/* =======================================================  LIOCFGCS  ======================================================== */
 #define R_XSPI_LIOCFGCS_PRTMD_Pos        (0UL)
 #define R_XSPI_LIOCFGCS_PRTMD_Msk        (0x3ffUL)
 #define R_XSPI_LIOCFGCS_LATEMD_Pos       (10UL)
 #define R_XSPI_LIOCFGCS_LATEMD_Msk       (0x400UL)
 #define R_XSPI_LIOCFGCS_WRMSKMD_Pos      (11UL)
 #define R_XSPI_LIOCFGCS_WRMSKMD_Msk      (0x800UL)
 #define R_XSPI_LIOCFGCS_CSMIN_Pos        (16UL)
 #define R_XSPI_LIOCFGCS_CSMIN_Msk        (0xf0000UL)
 #define R_XSPI_LIOCFGCS_CSASTEX_Pos      (20UL)
 #define R_XSPI_LIOCFGCS_CSASTEX_Msk      (0x100000UL)
 #define R_XSPI_LIOCFGCS_CSNEGEX_Pos      (21UL)
 #define R_XSPI_LIOCFGCS_CSNEGEX_Msk      (0x200000UL)
 #define R_XSPI_LIOCFGCS_SDRDRV_Pos       (22UL)
 #define R_XSPI_LIOCFGCS_SDRDRV_Msk       (0x400000UL)
 #define R_XSPI_LIOCFGCS_SDRSMPMD_Pos     (23UL)
 #define R_XSPI_LIOCFGCS_SDRSMPMD_Msk     (0x800000UL)
 #define R_XSPI_LIOCFGCS_SDRSMPSFT_Pos    (24UL)
 #define R_XSPI_LIOCFGCS_SDRSMPSFT_Msk    (0xf000000UL)
 #define R_XSPI_LIOCFGCS_DDRSMPEX_Pos     (28UL)
 #define R_XSPI_LIOCFGCS_DDRSMPEX_Msk     (0xf0000000UL)
/* ========================================================  ABMCFG  ========================================================= */
 #define R_XSPI_ABMCFG_ODRMD_Pos          (0UL)
 #define R_XSPI_ABMCFG_ODRMD_Msk          (0x3UL)
 #define R_XSPI_ABMCFG_CHSEL_Pos          (16UL)
 #define R_XSPI_ABMCFG_CHSEL_Msk          (0xffff0000UL)
/* ========================================================  BMCTL0  ========================================================= */
 #define R_XSPI_BMCTL0_CH0CS0ACC_Pos      (0UL)
 #define R_XSPI_BMCTL0_CH0CS0ACC_Msk      (0x3UL)
 #define R_XSPI_BMCTL0_CH0CS1ACC_Pos      (2UL)
 #define R_XSPI_BMCTL0_CH0CS1ACC_Msk      (0xcUL)
 #define R_XSPI_BMCTL0_CH1CS0ACC_Pos      (4UL)
 #define R_XSPI_BMCTL0_CH1CS0ACC_Msk      (0x30UL)
 #define R_XSPI_BMCTL0_CH1CS1ACC_Pos      (6UL)
 #define R_XSPI_BMCTL0_CH1CS1ACC_Msk      (0xc0UL)
/* ========================================================  BMCTL1  ========================================================= */
 #define R_XSPI_BMCTL1_MWRPUSHCH_Pos      (8UL)
 #define R_XSPI_BMCTL1_MWRPUSHCH_Msk      (0x100UL)
 #define R_XSPI_BMCTL1_PBUFCLRCH_Pos      (10UL)
 #define R_XSPI_BMCTL1_PBUFCLRCH_Msk      (0x400UL)
/* ========================================================  CMCTLCH  ======================================================== */
 #define R_XSPI_CMCTLCH_XIPENCODE_Pos     (0UL)
 #define R_XSPI_CMCTLCH_XIPENCODE_Msk     (0xffUL)
 #define R_XSPI_CMCTLCH_XIPEXCODE_Pos     (8UL)
 #define R_XSPI_CMCTLCH_XIPEXCODE_Msk     (0xff00UL)
 #define R_XSPI_CMCTLCH_XIPEN_Pos         (16UL)
 #define R_XSPI_CMCTLCH_XIPEN_Msk         (0x10000UL)
/* ========================================================  CDCTL0  ========================================================= */
 #define R_XSPI_CDCTL0_TRREQ_Pos          (0UL)
 #define R_XSPI_CDCTL0_TRREQ_Msk          (0x1UL)
 #define R_XSPI_CDCTL0_PERMD_Pos          (1UL)
 #define R_XSPI_CDCTL0_PERMD_Msk          (0x2UL)
 #define R_XSPI_CDCTL0_CSSEL_Pos          (3UL)
 #define R_XSPI_CDCTL0_CSSEL_Msk          (0x8UL)
 #define R_XSPI_CDCTL0_TRNUM_Pos          (4UL)
 #define R_XSPI_CDCTL0_TRNUM_Msk          (0x30UL)
 #define R_XSPI_CDCTL0_PERITV_Pos         (16UL)
 #define R_XSPI_CDCTL0_PERITV_Msk         (0x1f0000UL)
 #define R_XSPI_CDCTL0_PERREP_Pos         (24UL)
 #define R_XSPI_CDCTL0_PERREP_Msk         (0xf000000UL)
/* ========================================================  CDCTL1  ========================================================= */
 #define R_XSPI_CDCTL1_PEREXP_Pos         (0UL)
 #define R_XSPI_CDCTL1_PEREXP_Msk         (0xffffffffUL)
/* ========================================================  CDCTL2  ========================================================= */
 #define R_XSPI_CDCTL2_PERMSK_Pos         (0UL)
 #define R_XSPI_CDCTL2_PERMSK_Msk         (0xffffffffUL)
/* ========================================================  LPCTL0  ========================================================= */
 #define R_XSPI_LPCTL0_PATREQ_Pos         (0UL)
 #define R_XSPI_LPCTL0_PATREQ_Msk         (0x1UL)
 #define R_XSPI_LPCTL0_CSSEL_Pos          (3UL)
 #define R_XSPI_LPCTL0_CSSEL_Msk          (0x8UL)
 #define R_XSPI_LPCTL0_XDPIN_Pos          (4UL)
 #define R_XSPI_LPCTL0_XDPIN_Msk          (0x30UL)
 #define R_XSPI_LPCTL0_XD1LEN_Pos         (16UL)
 #define R_XSPI_LPCTL0_XD1LEN_Msk         (0x1f0000UL)
 #define R_XSPI_LPCTL0_XD1VAL_Pos         (23UL)
 #define R_XSPI_LPCTL0_XD1VAL_Msk         (0x800000UL)
 #define R_XSPI_LPCTL0_XD2LEN_Pos         (24UL)
 #define R_XSPI_LPCTL0_XD2LEN_Msk         (0x1f000000UL)
 #define R_XSPI_LPCTL0_XD2VAL_Pos         (31UL)
 #define R_XSPI_LPCTL0_XD2VAL_Msk         (0x80000000UL)
/* ========================================================  LPCTL1  ========================================================= */
 #define R_XSPI_LPCTL1_PATREQ_Pos         (0UL)
 #define R_XSPI_LPCTL1_PATREQ_Msk         (0x3UL)
 #define R_XSPI_LPCTL1_CSSEL_Pos          (3UL)
 #define R_XSPI_LPCTL1_CSSEL_Msk          (0x8UL)
 #define R_XSPI_LPCTL1_RSTREP_Pos         (4UL)
 #define R_XSPI_LPCTL1_RSTREP_Msk         (0x30UL)
 #define R_XSPI_LPCTL1_RSTWID_Pos         (8UL)
 #define R_XSPI_LPCTL1_RSTWID_Msk         (0x700UL)
 #define R_XSPI_LPCTL1_RSTSU_Pos          (12UL)
 #define R_XSPI_LPCTL1_RSTSU_Msk          (0x7000UL)
/* ========================================================  LIOCTL  ========================================================= */
 #define R_XSPI_LIOCTL_WPCS_Pos           (0UL)
 #define R_XSPI_LIOCTL_WPCS_Msk           (0x1UL)
 #define R_XSPI_LIOCTL_RSTCS_Pos          (16UL)
 #define R_XSPI_LIOCTL_RSTCS_Msk          (0x10000UL)
/* ========================================================  VERSTT  ========================================================= */
 #define R_XSPI_VERSTT_VER_Pos            (0UL)
 #define R_XSPI_VERSTT_VER_Msk            (0xffffffffUL)
/* ========================================================  COMSTT  ========================================================= */
 #define R_XSPI_COMSTT_MEMACCCH_Pos       (0UL)
 #define R_XSPI_COMSTT_MEMACCCH_Msk       (0x1UL)
 #define R_XSPI_COMSTT_PBUFNECH_Pos       (4UL)
 #define R_XSPI_COMSTT_PBUFNECH_Msk       (0x10UL)
 #define R_XSPI_COMSTT_WRBUFNECH_Pos      (6UL)
 #define R_XSPI_COMSTT_WRBUFNECH_Msk      (0x40UL)
 #define R_XSPI_COMSTT_ECSCS_Pos          (16UL)
 #define R_XSPI_COMSTT_ECSCS_Msk          (0x10000UL)
 #define R_XSPI_COMSTT_INTCS_Pos          (17UL)
 #define R_XSPI_COMSTT_INTCS_Msk          (0x20000UL)
 #define R_XSPI_COMSTT_RSTOCS_Pos         (18UL)
 #define R_XSPI_COMSTT_RSTOCS_Msk         (0x40000UL)
/* ========================================================  CASTTCS  ======================================================== */
 #define R_XSPI_CASTTCS_CASUC_Pos         (0UL)
 #define R_XSPI_CASTTCS_CASUC_Msk         (0xffffffffUL)
/* =========================================================  INTS  ========================================================== */
 #define R_XSPI_INTS_CMDCMP_Pos           (0UL)
 #define R_XSPI_INTS_CMDCMP_Msk           (0x1UL)
 #define R_XSPI_INTS_PATCMP_Pos           (1UL)
 #define R_XSPI_INTS_PATCMP_Msk           (0x2UL)
 #define R_XSPI_INTS_INICMP_Pos           (2UL)
 #define R_XSPI_INTS_INICMP_Msk           (0x4UL)
 #define R_XSPI_INTS_PERTO_Pos            (3UL)
 #define R_XSPI_INTS_PERTO_Msk            (0x8UL)
 #define R_XSPI_INTS_DSTOCS_Pos           (4UL)
 #define R_XSPI_INTS_DSTOCS_Msk           (0x10UL)
 #define R_XSPI_INTS_ECSCS_Pos            (8UL)
 #define R_XSPI_INTS_ECSCS_Msk            (0x100UL)
 #define R_XSPI_INTS_INTCS_Pos            (12UL)
 #define R_XSPI_INTS_INTCS_Msk            (0x1000UL)
 #define R_XSPI_INTS_BRGOFCH_Pos          (16UL)
 #define R_XSPI_INTS_BRGOFCH_Msk          (0x10000UL)
 #define R_XSPI_INTS_BRGUFCH_Pos          (18UL)
 #define R_XSPI_INTS_BRGUFCH_Msk          (0x40000UL)
 #define R_XSPI_INTS_BUSERRCH_Pos         (20UL)
 #define R_XSPI_INTS_BUSERRCH_Msk         (0x100000UL)
 #define R_XSPI_INTS_CAFAILCS_Pos         (28UL)
 #define R_XSPI_INTS_CAFAILCS_Msk         (0x10000000UL)
 #define R_XSPI_INTS_CASUCCS_Pos          (30UL)
 #define R_XSPI_INTS_CASUCCS_Msk          (0x40000000UL)
/* =========================================================  INTC  ========================================================== */
 #define R_XSPI_INTC_CMDCMPC_Pos          (0UL)
 #define R_XSPI_INTC_CMDCMPC_Msk          (0x1UL)
 #define R_XSPI_INTC_PATCMPC_Pos          (1UL)
 #define R_XSPI_INTC_PATCMPC_Msk          (0x2UL)
 #define R_XSPI_INTC_INICMPC_Pos          (2UL)
 #define R_XSPI_INTC_INICMPC_Msk          (0x4UL)
 #define R_XSPI_INTC_PERTOC_Pos           (3UL)
 #define R_XSPI_INTC_PERTOC_Msk           (0x8UL)
 #define R_XSPI_INTC_DSTOCSC_Pos          (4UL)
 #define R_XSPI_INTC_DSTOCSC_Msk          (0x10UL)
 #define R_XSPI_INTC_ECSCSC_Pos           (8UL)
 #define R_XSPI_INTC_ECSCSC_Msk           (0x100UL)
 #define R_XSPI_INTC_INTCSC_Pos           (12UL)
 #define R_XSPI_INTC_INTCSC_Msk           (0x1000UL)
 #define R_XSPI_INTC_BRGOFCHC_Pos         (16UL)
 #define R_XSPI_INTC_BRGOFCHC_Msk         (0x10000UL)
 #define R_XSPI_INTC_BRGUFCHC_Pos         (18UL)
 #define R_XSPI_INTC_BRGUFCHC_Msk         (0x40000UL)
 #define R_XSPI_INTC_BUSERRCHC_Pos        (20UL)
 #define R_XSPI_INTC_BUSERRCHC_Msk        (0x100000UL)
 #define R_XSPI_INTC_CAFAILCSC_Pos        (28UL)
 #define R_XSPI_INTC_CAFAILCSC_Msk        (0x10000000UL)
 #define R_XSPI_INTC_CASUCCSC_Pos         (30UL)
 #define R_XSPI_INTC_CASUCCSC_Msk         (0x40000000UL)
/* =========================================================  INTE  ========================================================== */
 #define R_XSPI_INTE_CMDCMPE_Pos          (0UL)
 #define R_XSPI_INTE_CMDCMPE_Msk          (0x1UL)
 #define R_XSPI_INTE_PATCMPE_Pos          (1UL)
 #define R_XSPI_INTE_PATCMPE_Msk          (0x2UL)
 #define R_XSPI_INTE_INICMPE_Pos          (2UL)
 #define R_XSPI_INTE_INICMPE_Msk          (0x4UL)
 #define R_XSPI_INTE_PERTOE_Pos           (3UL)
 #define R_XSPI_INTE_PERTOE_Msk           (0x8UL)
 #define R_XSPI_INTE_DSTOCSE_Pos          (4UL)
 #define R_XSPI_INTE_DSTOCSE_Msk          (0x10UL)
 #define R_XSPI_INTE_ECSCSE_Pos           (8UL)
 #define R_XSPI_INTE_ECSCSE_Msk           (0x100UL)
 #define R_XSPI_INTE_INTCSE_Pos           (12UL)
 #define R_XSPI_INTE_INTCSE_Msk           (0x1000UL)
 #define R_XSPI_INTE_BRGOFCHE_Pos         (16UL)
 #define R_XSPI_INTE_BRGOFCHE_Msk         (0x10000UL)
 #define R_XSPI_INTE_BRGUFCHE_Pos         (18UL)
 #define R_XSPI_INTE_BRGUFCHE_Msk         (0x40000UL)
 #define R_XSPI_INTE_BUSERRCHE_Pos        (20UL)
 #define R_XSPI_INTE_BUSERRCHE_Msk        (0x100000UL)
 #define R_XSPI_INTE_CAFAILCSE_Pos        (28UL)
 #define R_XSPI_INTE_CAFAILCSE_Msk        (0x10000000UL)
 #define R_XSPI_INTE_CASUCCSE_Pos         (30UL)
 #define R_XSPI_INTE_CASUCCSE_Msk         (0x40000000UL)

/* =========================================================================================================================== */
/* ================                                           R_CEU                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CAPSR  ========================================================= */
 #define R_CEU_CAPSR_CE_Pos              (0UL)
 #define R_CEU_CAPSR_CE_Msk              (0x1UL)
 #define R_CEU_CAPSR_CPKIL_Pos           (16UL)
 #define R_CEU_CAPSR_CPKIL_Msk           (0x10000UL)
/* =========================================================  CAPCR  ========================================================= */
 #define R_CEU_CAPCR_CTNCP_Pos           (16UL)
 #define R_CEU_CAPCR_CTNCP_Msk           (0x10000UL)
 #define R_CEU_CAPCR_MTCM_Pos            (20UL)
 #define R_CEU_CAPCR_MTCM_Msk            (0x300000UL)
 #define R_CEU_CAPCR_FDRP_Pos            (24UL)
 #define R_CEU_CAPCR_FDRP_Msk            (0xff000000UL)
/* =========================================================  CAMCR  ========================================================= */
 #define R_CEU_CAMCR_HDPOL_Pos           (0UL)
 #define R_CEU_CAMCR_HDPOL_Msk           (0x1UL)
 #define R_CEU_CAMCR_VDPOL_Pos           (1UL)
 #define R_CEU_CAMCR_VDPOL_Msk           (0x2UL)
 #define R_CEU_CAMCR_JPG_Pos             (4UL)
 #define R_CEU_CAMCR_JPG_Msk             (0x30UL)
 #define R_CEU_CAMCR_DTARY_Pos           (8UL)
 #define R_CEU_CAMCR_DTARY_Msk           (0x300UL)
 #define R_CEU_CAMCR_DTIF_Pos            (12UL)
 #define R_CEU_CAMCR_DTIF_Msk            (0x1000UL)
 #define R_CEU_CAMCR_FLDPOL_Pos          (16UL)
 #define R_CEU_CAMCR_FLDPOL_Msk          (0x10000UL)
 #define R_CEU_CAMCR_DSEL_Pos            (24UL)
 #define R_CEU_CAMCR_DSEL_Msk            (0x1000000UL)
 #define R_CEU_CAMCR_FLDSEL_Pos          (25UL)
 #define R_CEU_CAMCR_FLDSEL_Msk          (0x2000000UL)
 #define R_CEU_CAMCR_HDSEL_Pos           (26UL)
 #define R_CEU_CAMCR_HDSEL_Msk           (0x4000000UL)
 #define R_CEU_CAMCR_VDSEL_Pos           (27UL)
 #define R_CEU_CAMCR_VDSEL_Msk           (0x8000000UL)
/* =========================================================  CMCYR  ========================================================= */
 #define R_CEU_CMCYR_HCYL_Pos            (0UL)
 #define R_CEU_CMCYR_HCYL_Msk            (0x3fffUL)
 #define R_CEU_CMCYR_VCYL_Pos            (16UL)
 #define R_CEU_CMCYR_VCYL_Msk            (0x3fff0000UL)
/* =========================================================  CAMOR  ========================================================= */
 #define R_CEU_CAMOR_HOFST_Pos           (0UL)
 #define R_CEU_CAMOR_HOFST_Msk           (0x1fffUL)
 #define R_CEU_CAMOR_VOFST_Pos           (16UL)
 #define R_CEU_CAMOR_VOFST_Msk           (0xfff0000UL)
/* =========================================================  CAPWR  ========================================================= */
 #define R_CEU_CAPWR_HWDTH_Pos           (0UL)
 #define R_CEU_CAPWR_HWDTH_Msk           (0x1fffUL)
 #define R_CEU_CAPWR_VWDTH_Pos           (16UL)
 #define R_CEU_CAPWR_VWDTH_Msk           (0xfff0000UL)
/* =========================================================  CAIFR  ========================================================= */
 #define R_CEU_CAIFR_FCI_Pos             (0UL)
 #define R_CEU_CAIFR_FCI_Msk             (0x3UL)
 #define R_CEU_CAIFR_CIM_Pos             (4UL)
 #define R_CEU_CAIFR_CIM_Msk             (0x10UL)
 #define R_CEU_CAIFR_IFS_Pos             (8UL)
 #define R_CEU_CAIFR_IFS_Msk             (0x100UL)
/* ========================================================  CRCNTR  ========================================================= */
 #define R_CEU_CRCNTR_RC_Pos             (0UL)
 #define R_CEU_CRCNTR_RC_Msk             (0x1UL)
 #define R_CEU_CRCNTR_RS_Pos             (1UL)
 #define R_CEU_CRCNTR_RS_Msk             (0x2UL)
 #define R_CEU_CRCNTR_RVS_Pos            (4UL)
 #define R_CEU_CRCNTR_RVS_Msk            (0x10UL)
/* ========================================================  CRCMPR  ========================================================= */
 #define R_CEU_CRCMPR_RA_Pos             (0UL)
 #define R_CEU_CRCMPR_RA_Msk             (0x1UL)
/* =========================================================  CFLCR  ========================================================= */
 #define R_CEU_CFLCR_HFRAC_Pos           (0UL)
 #define R_CEU_CFLCR_HFRAC_Msk           (0xfffUL)
 #define R_CEU_CFLCR_HMANT_Pos           (12UL)
 #define R_CEU_CFLCR_HMANT_Msk           (0xf000UL)
 #define R_CEU_CFLCR_VFRAC_Pos           (16UL)
 #define R_CEU_CFLCR_VFRAC_Msk           (0xfff0000UL)
 #define R_CEU_CFLCR_VMANT_Pos           (28UL)
 #define R_CEU_CFLCR_VMANT_Msk           (0xf0000000UL)
/* =========================================================  CFSZR  ========================================================= */
 #define R_CEU_CFSZR_HFCLP_Pos           (0UL)
 #define R_CEU_CFSZR_HFCLP_Msk           (0xfffUL)
 #define R_CEU_CFSZR_VFCLP_Pos           (16UL)
 #define R_CEU_CFSZR_VFCLP_Msk           (0xfff0000UL)
/* =========================================================  CDWDR  ========================================================= */
 #define R_CEU_CDWDR_CHDW_Pos            (0UL)
 #define R_CEU_CDWDR_CHDW_Msk            (0x1fffUL)
/* =========================================================  CDAYR  ========================================================= */
 #define R_CEU_CDAYR_CAYR_Pos            (0UL)
 #define R_CEU_CDAYR_CAYR_Msk            (0xffffffffUL)
/* =========================================================  CDACR  ========================================================= */
 #define R_CEU_CDACR_CACR_Pos            (0UL)
 #define R_CEU_CDACR_CACR_Msk            (0xffffffffUL)
/* =========================================================  CDBYR  ========================================================= */
 #define R_CEU_CDBYR_CBYR_Pos            (0UL)
 #define R_CEU_CDBYR_CBYR_Msk            (0xffffffffUL)
/* =========================================================  CDBCR  ========================================================= */
 #define R_CEU_CDBCR_CBCR_Pos            (0UL)
 #define R_CEU_CDBCR_CBCR_Msk            (0xffffffffUL)
/* =========================================================  CBDSR  ========================================================= */
 #define R_CEU_CBDSR_CBVS_Pos            (0UL)
 #define R_CEU_CBDSR_CBVS_Msk            (0x7fffffUL)
/* =========================================================  CFWCR  ========================================================= */
 #define R_CEU_CFWCR_FWE_Pos             (0UL)
 #define R_CEU_CFWCR_FWE_Msk             (0x1UL)
 #define R_CEU_CFWCR_FWV_Pos             (5UL)
 #define R_CEU_CFWCR_FWV_Msk             (0xffffffe0UL)
/* =========================================================  CLFCR  ========================================================= */
 #define R_CEU_CLFCR_LPF_Pos             (0UL)
 #define R_CEU_CLFCR_LPF_Msk             (0x1UL)
/* =========================================================  CDOCR  ========================================================= */
 #define R_CEU_CDOCR_COBS_Pos            (0UL)
 #define R_CEU_CDOCR_COBS_Msk            (0x1UL)
 #define R_CEU_CDOCR_COWS_Pos            (1UL)
 #define R_CEU_CDOCR_COWS_Msk            (0x2UL)
 #define R_CEU_CDOCR_COLS_Pos            (2UL)
 #define R_CEU_CDOCR_COLS_Msk            (0x4UL)
 #define R_CEU_CDOCR_CDS_Pos             (4UL)
 #define R_CEU_CDOCR_CDS_Msk             (0x10UL)
 #define R_CEU_CDOCR_CBE_Pos             (16UL)
 #define R_CEU_CDOCR_CBE_Msk             (0x10000UL)
/* =========================================================  CEIER  ========================================================= */
 #define R_CEU_CEIER_CPEIE_Pos           (0UL)
 #define R_CEU_CEIER_CPEIE_Msk           (0x1UL)
 #define R_CEU_CEIER_CFEIE_Pos           (1UL)
 #define R_CEU_CEIER_CFEIE_Msk           (0x2UL)
 #define R_CEU_CEIER_IGRWIE_Pos          (4UL)
 #define R_CEU_CEIER_IGRWIE_Msk          (0x10UL)
 #define R_CEU_CEIER_HDIE_Pos            (8UL)
 #define R_CEU_CEIER_HDIE_Msk            (0x100UL)
 #define R_CEU_CEIER_VDIE_Pos            (9UL)
 #define R_CEU_CEIER_VDIE_Msk            (0x200UL)
 #define R_CEU_CEIER_CPBE1IE_Pos         (12UL)
 #define R_CEU_CEIER_CPBE1IE_Msk         (0x1000UL)
 #define R_CEU_CEIER_CPBE2IE_Pos         (13UL)
 #define R_CEU_CEIER_CPBE2IE_Msk         (0x2000UL)
 #define R_CEU_CEIER_CPBE3IE_Pos         (14UL)
 #define R_CEU_CEIER_CPBE3IE_Msk         (0x4000UL)
 #define R_CEU_CEIER_CPBE4IE_Pos         (15UL)
 #define R_CEU_CEIER_CPBE4IE_Msk         (0x8000UL)
 #define R_CEU_CEIER_CDTOFIE_Pos         (16UL)
 #define R_CEU_CEIER_CDTOFIE_Msk         (0x10000UL)
 #define R_CEU_CEIER_IGHSIE_Pos          (17UL)
 #define R_CEU_CEIER_IGHSIE_Msk          (0x20000UL)
 #define R_CEU_CEIER_IGVSIE_Pos          (18UL)
 #define R_CEU_CEIER_IGVSIE_Msk          (0x40000UL)
 #define R_CEU_CEIER_VBPIE_Pos           (20UL)
 #define R_CEU_CEIER_VBPIE_Msk           (0x100000UL)
 #define R_CEU_CEIER_FWFIE_Pos           (23UL)
 #define R_CEU_CEIER_FWFIE_Msk           (0x800000UL)
 #define R_CEU_CEIER_NHDIE_Pos           (24UL)
 #define R_CEU_CEIER_NHDIE_Msk           (0x1000000UL)
 #define R_CEU_CEIER_NVDIE_Pos           (25UL)
 #define R_CEU_CEIER_NVDIE_Msk           (0x2000000UL)
/* =========================================================  CETCR  ========================================================= */
 #define R_CEU_CETCR_CPE_Pos             (0UL)
 #define R_CEU_CETCR_CPE_Msk             (0x1UL)
 #define R_CEU_CETCR_CFE_Pos             (1UL)
 #define R_CEU_CETCR_CFE_Msk             (0x2UL)
 #define R_CEU_CETCR_IGRW_Pos            (4UL)
 #define R_CEU_CETCR_IGRW_Msk            (0x10UL)
 #define R_CEU_CETCR_HD_Pos              (8UL)
 #define R_CEU_CETCR_HD_Msk              (0x100UL)
 #define R_CEU_CETCR_VD_Pos              (9UL)
 #define R_CEU_CETCR_VD_Msk              (0x200UL)
 #define R_CEU_CETCR_CPBE1_Pos           (12UL)
 #define R_CEU_CETCR_CPBE1_Msk           (0x1000UL)
 #define R_CEU_CETCR_CPBE2_Pos           (13UL)
 #define R_CEU_CETCR_CPBE2_Msk           (0x2000UL)
 #define R_CEU_CETCR_CPBE3_Pos           (14UL)
 #define R_CEU_CETCR_CPBE3_Msk           (0x4000UL)
 #define R_CEU_CETCR_CPBE4_Pos           (15UL)
 #define R_CEU_CETCR_CPBE4_Msk           (0x8000UL)
 #define R_CEU_CETCR_CDTOF_Pos           (16UL)
 #define R_CEU_CETCR_CDTOF_Msk           (0x10000UL)
 #define R_CEU_CETCR_IGHS_Pos            (17UL)
 #define R_CEU_CETCR_IGHS_Msk            (0x20000UL)
 #define R_CEU_CETCR_IGVS_Pos            (18UL)
 #define R_CEU_CETCR_IGVS_Msk            (0x40000UL)
 #define R_CEU_CETCR_VBP_Pos             (20UL)
 #define R_CEU_CETCR_VBP_Msk             (0x100000UL)
 #define R_CEU_CETCR_FWF_Pos             (23UL)
 #define R_CEU_CETCR_FWF_Msk             (0x800000UL)
 #define R_CEU_CETCR_NHD_Pos             (24UL)
 #define R_CEU_CETCR_NHD_Msk             (0x1000000UL)
 #define R_CEU_CETCR_NVD_Pos             (25UL)
 #define R_CEU_CETCR_NVD_Msk             (0x2000000UL)
/* =========================================================  CSTSR  ========================================================= */
 #define R_CEU_CSTSR_CPTON_Pos           (0UL)
 #define R_CEU_CSTSR_CPTON_Msk           (0x1UL)
 #define R_CEU_CSTSR_CPFLD_Pos           (16UL)
 #define R_CEU_CSTSR_CPFLD_Msk           (0x10000UL)
 #define R_CEU_CSTSR_CRST_Pos            (24UL)
 #define R_CEU_CSTSR_CRST_Msk            (0x1000000UL)
/* =========================================================  CDSSR  ========================================================= */
 #define R_CEU_CDSSR_CDSS_Pos            (0UL)
 #define R_CEU_CDSSR_CDSS_Msk            (0xffffffffUL)
/* ========================================================  CDAYR2  ========================================================= */
 #define R_CEU_CDAYR2_CAYR2_Pos          (0UL)
 #define R_CEU_CDAYR2_CAYR2_Msk          (0xffffffffUL)
/* ========================================================  CDACR2  ========================================================= */
 #define R_CEU_CDACR2_CACR2_Pos          (0UL)
 #define R_CEU_CDACR2_CACR2_Msk          (0xffffffffUL)
/* ========================================================  CDBYR2  ========================================================= */
 #define R_CEU_CDBYR2_CBYR2_Pos          (0UL)
 #define R_CEU_CDBYR2_CBYR2_Msk          (0xffffffffUL)
/* ========================================================  CDBCR2  ========================================================= */
 #define R_CEU_CDBCR2_CBCR2_Pos          (0UL)
 #define R_CEU_CDBCR2_CBCR2_Msk          (0xffffffffUL)
/* ======================================================  AXIBUSCTL2  ======================================================= */
 #define R_CEU_AXIBUSCTL2_AWCACHE_Pos    (0UL)
 #define R_CEU_AXIBUSCTL2_AWCACHE_Msk    (0xfUL)
/* ========================================================  CAMOR_B  ======================================================== */
 #define R_CEU_CAMOR_B_HOFST_Pos         (0UL)
 #define R_CEU_CAMOR_B_HOFST_Msk         (0x1fffUL)
 #define R_CEU_CAMOR_B_VOFST_Pos         (16UL)
 #define R_CEU_CAMOR_B_VOFST_Msk         (0xfff0000UL)
/* ========================================================  CAPWR_B  ======================================================== */
 #define R_CEU_CAPWR_B_HWDTH_Pos         (0UL)
 #define R_CEU_CAPWR_B_HWDTH_Msk         (0x1fffUL)
 #define R_CEU_CAPWR_B_VWDTH_Pos         (16UL)
 #define R_CEU_CAPWR_B_VWDTH_Msk         (0xfff0000UL)
/* ========================================================  CFLCR_B  ======================================================== */
 #define R_CEU_CFLCR_B_HFRAC_Pos         (0UL)
 #define R_CEU_CFLCR_B_HFRAC_Msk         (0xfffUL)
 #define R_CEU_CFLCR_B_HMANT_Pos         (12UL)
 #define R_CEU_CFLCR_B_HMANT_Msk         (0xf000UL)
 #define R_CEU_CFLCR_B_VFRAC_Pos         (16UL)
 #define R_CEU_CFLCR_B_VFRAC_Msk         (0xfff0000UL)
 #define R_CEU_CFLCR_B_VMANT_Pos         (28UL)
 #define R_CEU_CFLCR_B_VMANT_Msk         (0xf0000000UL)
/* ========================================================  CFSZR_B  ======================================================== */
 #define R_CEU_CFSZR_B_HFCLP_Pos         (0UL)
 #define R_CEU_CFSZR_B_HFCLP_Msk         (0xfffUL)
 #define R_CEU_CFSZR_B_VFCLP_Pos         (16UL)
 #define R_CEU_CFSZR_B_VFCLP_Msk         (0xfff0000UL)
/* ========================================================  CDWDR_B  ======================================================== */
 #define R_CEU_CDWDR_B_CHDW_Pos          (0UL)
 #define R_CEU_CDWDR_B_CHDW_Msk          (0x1fffUL)
/* ========================================================  CDAYR_B  ======================================================== */
 #define R_CEU_CDAYR_B_CAYR_Pos          (0UL)
 #define R_CEU_CDAYR_B_CAYR_Msk          (0xffffffffUL)
/* ========================================================  CDACR_B  ======================================================== */
 #define R_CEU_CDACR_B_CACR_Pos          (0UL)
 #define R_CEU_CDACR_B_CACR_Msk          (0xffffffffUL)
/* ========================================================  CDBYR_B  ======================================================== */
 #define R_CEU_CDBYR_B_CBYR_Pos          (0UL)
 #define R_CEU_CDBYR_B_CBYR_Msk          (0xffffffffUL)
/* ========================================================  CDBCR_B  ======================================================== */
 #define R_CEU_CDBCR_B_CBCR_Pos          (0UL)
 #define R_CEU_CDBCR_B_CBCR_Msk          (0xffffffffUL)
/* ========================================================  CBDSR_B  ======================================================== */
 #define R_CEU_CBDSR_B_CBVS_Pos          (0UL)
 #define R_CEU_CBDSR_B_CBVS_Msk          (0x7fffffUL)
/* ========================================================  CLFCR_B  ======================================================== */
 #define R_CEU_CLFCR_B_LPF_Pos           (0UL)
 #define R_CEU_CLFCR_B_LPF_Msk           (0x1UL)
/* ========================================================  CDOCR_B  ======================================================== */
 #define R_CEU_CDOCR_B_COBS_Pos          (0UL)
 #define R_CEU_CDOCR_B_COBS_Msk          (0x1UL)
 #define R_CEU_CDOCR_B_COWS_Pos          (1UL)
 #define R_CEU_CDOCR_B_COWS_Msk          (0x2UL)
 #define R_CEU_CDOCR_B_COLS_Pos          (2UL)
 #define R_CEU_CDOCR_B_COLS_Msk          (0x4UL)
 #define R_CEU_CDOCR_B_CDS_Pos           (4UL)
 #define R_CEU_CDOCR_B_CDS_Msk           (0x10UL)
 #define R_CEU_CDOCR_B_CBE_Pos           (16UL)
 #define R_CEU_CDOCR_B_CBE_Msk           (0x10000UL)
/* =======================================================  CDAYR2_B  ======================================================== */
 #define R_CEU_CDAYR2_B_CAYR2_Pos        (0UL)
 #define R_CEU_CDAYR2_B_CAYR2_Msk        (0xffffffffUL)
/* =======================================================  CDACR2_B  ======================================================== */
 #define R_CEU_CDACR2_B_CACR2_Pos        (0UL)
 #define R_CEU_CDACR2_B_CACR2_Msk        (0xffffffffUL)
/* =======================================================  CDBYR2_B  ======================================================== */
 #define R_CEU_CDBYR2_B_CBYR2_Pos        (0UL)
 #define R_CEU_CDBYR2_B_CBYR2_Msk        (0xffffffffUL)
/* =======================================================  CDBCR2_B  ======================================================== */
 #define R_CEU_CDBCR2_B_CBCR2_Pos        (0UL)
 #define R_CEU_CDBCR2_B_CBCR2_Msk        (0xffffffffUL)
/* ========================================================  CAMOR_M  ======================================================== */
 #define R_CEU_CAMOR_M_HOFST_Pos         (0UL)
 #define R_CEU_CAMOR_M_HOFST_Msk         (0x1fffUL)
 #define R_CEU_CAMOR_M_VOFST_Pos         (16UL)
 #define R_CEU_CAMOR_M_VOFST_Msk         (0xfff0000UL)
/* ========================================================  CAPWR_M  ======================================================== */
 #define R_CEU_CAPWR_M_HWDTH_Pos         (0UL)
 #define R_CEU_CAPWR_M_HWDTH_Msk         (0x1fffUL)
 #define R_CEU_CAPWR_M_VWDTH_Pos         (16UL)
 #define R_CEU_CAPWR_M_VWDTH_Msk         (0xfff0000UL)
/* ========================================================  CFLCR_M  ======================================================== */
 #define R_CEU_CFLCR_M_HFRAC_Pos         (0UL)
 #define R_CEU_CFLCR_M_HFRAC_Msk         (0xfffUL)
 #define R_CEU_CFLCR_M_HMANT_Pos         (12UL)
 #define R_CEU_CFLCR_M_HMANT_Msk         (0xf000UL)
 #define R_CEU_CFLCR_M_VFRAC_Pos         (16UL)
 #define R_CEU_CFLCR_M_VFRAC_Msk         (0xfff0000UL)
 #define R_CEU_CFLCR_M_VMANT_Pos         (28UL)
 #define R_CEU_CFLCR_M_VMANT_Msk         (0xf0000000UL)
/* ========================================================  CFSZR_M  ======================================================== */
 #define R_CEU_CFSZR_M_HFCLP_Pos         (0UL)
 #define R_CEU_CFSZR_M_HFCLP_Msk         (0xfffUL)
 #define R_CEU_CFSZR_M_VFCLP_Pos         (16UL)
 #define R_CEU_CFSZR_M_VFCLP_Msk         (0xfff0000UL)
/* ========================================================  CDWDR_M  ======================================================== */
 #define R_CEU_CDWDR_M_CHDW_Pos          (0UL)
 #define R_CEU_CDWDR_M_CHDW_Msk          (0x1fffUL)
/* ========================================================  CDAYR_M  ======================================================== */
 #define R_CEU_CDAYR_M_CAYR_Pos          (0UL)
 #define R_CEU_CDAYR_M_CAYR_Msk          (0xffffffffUL)
/* ========================================================  CDACR_M  ======================================================== */
 #define R_CEU_CDACR_M_CACR_Pos          (0UL)
 #define R_CEU_CDACR_M_CACR_Msk          (0xffffffffUL)
/* ========================================================  CDBYR_M  ======================================================== */
 #define R_CEU_CDBYR_M_CBYR_Pos          (0UL)
 #define R_CEU_CDBYR_M_CBYR_Msk          (0xffffffffUL)
/* ========================================================  CDBCR_M  ======================================================== */
 #define R_CEU_CDBCR_M_CBCR_Pos          (0UL)
 #define R_CEU_CDBCR_M_CBCR_Msk          (0xffffffffUL)
/* ========================================================  CBDSR_M  ======================================================== */
 #define R_CEU_CBDSR_M_CBVS_Pos          (0UL)
 #define R_CEU_CBDSR_M_CBVS_Msk          (0x7fffffUL)
/* ========================================================  CLFCR_M  ======================================================== */
 #define R_CEU_CLFCR_M_LPF_Pos           (0UL)
 #define R_CEU_CLFCR_M_LPF_Msk           (0x1UL)
/* ========================================================  CDOCR_M  ======================================================== */
 #define R_CEU_CDOCR_M_COBS_Pos          (0UL)
 #define R_CEU_CDOCR_M_COBS_Msk          (0x1UL)
 #define R_CEU_CDOCR_M_COWS_Pos          (1UL)
 #define R_CEU_CDOCR_M_COWS_Msk          (0x2UL)
 #define R_CEU_CDOCR_M_COLS_Pos          (2UL)
 #define R_CEU_CDOCR_M_COLS_Msk          (0x4UL)
 #define R_CEU_CDOCR_M_CDS_Pos           (4UL)
 #define R_CEU_CDOCR_M_CDS_Msk           (0x10UL)
 #define R_CEU_CDOCR_M_CBE_Pos           (16UL)
 #define R_CEU_CDOCR_M_CBE_Msk           (0x10000UL)
/* =======================================================  CDAYR2_M  ======================================================== */
 #define R_CEU_CDAYR2_M_CAYR2_Pos        (0UL)
 #define R_CEU_CDAYR2_M_CAYR2_Msk        (0xffffffffUL)
/* =======================================================  CDACR2_M  ======================================================== */
 #define R_CEU_CDACR2_M_CACR2_Pos        (0UL)
 #define R_CEU_CDACR2_M_CACR2_Msk        (0xffffffffUL)
/* =======================================================  CDBYR2_M  ======================================================== */
 #define R_CEU_CDBYR2_M_CBYR2_Pos        (0UL)
 #define R_CEU_CDBYR2_M_CBYR2_Msk        (0xffffffffUL)
/* =======================================================  CDBCR2_M  ======================================================== */
 #define R_CEU_CDBCR2_M_CBCR2_Pos        (0UL)
 #define R_CEU_CDBCR2_M_CBCR2_Msk        (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                          R_ULPT0                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  ULPTCNT  ======================================================== */
 #define R_ULPT0_ULPTCNT_ULPTCNT_Pos     (0UL)
 #define R_ULPT0_ULPTCNT_ULPTCNT_Msk     (0xffffffffUL)
/* ========================================================  ULPTCMA  ======================================================== */
 #define R_ULPT0_ULPTCMA_ULPTCMA_Pos     (0UL)
 #define R_ULPT0_ULPTCMA_ULPTCMA_Msk     (0xffffffffUL)
/* ========================================================  ULPTCMB  ======================================================== */
 #define R_ULPT0_ULPTCMB_ULPTCMB_Pos     (0UL)
 #define R_ULPT0_ULPTCMB_ULPTCMB_Msk     (0xffffffffUL)
/* ========================================================  ULPTCR  ========================================================= */
 #define R_ULPT0_ULPTCR_TSTART_Pos       (0UL)
 #define R_ULPT0_ULPTCR_TSTART_Msk       (0x1UL)
 #define R_ULPT0_ULPTCR_TCSTF_Pos        (1UL)
 #define R_ULPT0_ULPTCR_TCSTF_Msk        (0x2UL)
 #define R_ULPT0_ULPTCR_TSTOP_Pos        (2UL)
 #define R_ULPT0_ULPTCR_TSTOP_Msk        (0x4UL)
 #define R_ULPT0_ULPTCR_TUNDF_Pos        (5UL)
 #define R_ULPT0_ULPTCR_TUNDF_Msk        (0x20UL)
 #define R_ULPT0_ULPTCR_TCMAF_Pos        (6UL)
 #define R_ULPT0_ULPTCR_TCMAF_Msk        (0x40UL)
 #define R_ULPT0_ULPTCR_TCMBF_Pos        (7UL)
 #define R_ULPT0_ULPTCR_TCMBF_Msk        (0x80UL)
/* ========================================================  ULPTMR1  ======================================================== */
 #define R_ULPT0_ULPTMR1_TMOD1_Pos       (1UL)
 #define R_ULPT0_ULPTMR1_TMOD1_Msk       (0x2UL)
 #define R_ULPT0_ULPTMR1_TEDGPL_Pos      (3UL)
 #define R_ULPT0_ULPTMR1_TEDGPL_Msk      (0x8UL)
 #define R_ULPT0_ULPTMR1_TCK1_Pos        (5UL)
 #define R_ULPT0_ULPTMR1_TCK1_Msk        (0x20UL)
/* ========================================================  ULPTMR2  ======================================================== */
 #define R_ULPT0_ULPTMR2_CKS_Pos         (0UL)
 #define R_ULPT0_ULPTMR2_CKS_Msk         (0x7UL)
 #define R_ULPT0_ULPTMR2_LPM_Pos         (7UL)
 #define R_ULPT0_ULPTMR2_LPM_Msk         (0x80UL)
/* ========================================================  ULPTMR3  ======================================================== */
 #define R_ULPT0_ULPTMR3_TCNTCTL_Pos     (0UL)
 #define R_ULPT0_ULPTMR3_TCNTCTL_Msk     (0x1UL)
 #define R_ULPT0_ULPTMR3_TEVPOL_Pos      (1UL)
 #define R_ULPT0_ULPTMR3_TEVPOL_Msk      (0x2UL)
 #define R_ULPT0_ULPTMR3_TOPOL_Pos       (2UL)
 #define R_ULPT0_ULPTMR3_TOPOL_Msk       (0x4UL)
 #define R_ULPT0_ULPTMR3_TEECTL_Pos      (4UL)
 #define R_ULPT0_ULPTMR3_TEECTL_Msk      (0x30UL)
 #define R_ULPT0_ULPTMR3_TEEPOL_Pos      (6UL)
 #define R_ULPT0_ULPTMR3_TEEPOL_Msk      (0xc0UL)
/* ========================================================  ULPTIOC  ======================================================== */
 #define R_ULPT0_ULPTIOC_TOE_Pos         (2UL)
 #define R_ULPT0_ULPTIOC_TOE_Msk         (0x4UL)
 #define R_ULPT0_ULPTIOC_TIPF_Pos        (4UL)
 #define R_ULPT0_ULPTIOC_TIPF_Msk        (0x30UL)
 #define R_ULPT0_ULPTIOC_TIOGT0_Pos      (6UL)
 #define R_ULPT0_ULPTIOC_TIOGT0_Msk      (0x40UL)
/* ========================================================  ULPTISR  ======================================================== */
 #define R_ULPT0_ULPTISR_RCCPSEL2_Pos    (2UL)
 #define R_ULPT0_ULPTISR_RCCPSEL2_Msk    (0x4UL)
/* =======================================================  ULPTCMSR  ======================================================== */
 #define R_ULPT0_ULPTCMSR_TCMEA_Pos      (0UL)
 #define R_ULPT0_ULPTCMSR_TCMEA_Msk      (0x1UL)
 #define R_ULPT0_ULPTCMSR_TOEA_Pos       (1UL)
 #define R_ULPT0_ULPTCMSR_TOEA_Msk       (0x2UL)
 #define R_ULPT0_ULPTCMSR_TOPOLA_Pos     (2UL)
 #define R_ULPT0_ULPTCMSR_TOPOLA_Msk     (0x4UL)
 #define R_ULPT0_ULPTCMSR_TCMEB_Pos      (4UL)
 #define R_ULPT0_ULPTCMSR_TCMEB_Msk      (0x10UL)
 #define R_ULPT0_ULPTCMSR_TOEB_Pos       (5UL)
 #define R_ULPT0_ULPTCMSR_TOEB_Msk       (0x20UL)
 #define R_ULPT0_ULPTCMSR_TOPOLB_Pos     (6UL)
 #define R_ULPT0_ULPTCMSR_TOPOLB_Msk     (0x40UL)

/* =========================================================================================================================== */
/* ================                                        R_DEBUG_OCD                                        ================ */
/* =========================================================================================================================== */

/* =======================================================  FSBLSTATM  ======================================================= */
 #define R_DEBUG_OCD_FSBLSTATM_CS_Pos    (0UL)
 #define R_DEBUG_OCD_FSBLSTATM_CS_Msk    (0x1UL)
 #define R_DEBUG_OCD_FSBLSTATM_RS_Pos    (1UL)
 #define R_DEBUG_OCD_FSBLSTATM_RS_Msk    (0x2UL)

/* =========================================================================================================================== */
/* ================                                          R_DOTF                                           ================ */
/* =========================================================================================================================== */

/* ======================================================  CONVAREAST  ======================================================= */
 #define R_DOTF_CONVAREAST_CONVAREAST_Pos    (12UL)
 #define R_DOTF_CONVAREAST_CONVAREAST_Msk    (0xfffff000UL)
/* =======================================================  CONVAREAD  ======================================================= */
 #define R_DOTF_CONVAREAD_CONVAREAD_Pos      (12UL)
 #define R_DOTF_CONVAREAD_CONVAREAD_Msk      (0xfffff000UL)
/* =========================================================  REG00  ========================================================= */
 #define R_DOTF_REG00_B09_Pos                (9UL)
 #define R_DOTF_REG00_B09_Msk                (0x200UL)
 #define R_DOTF_REG00_B16_Pos                (16UL)
 #define R_DOTF_REG00_B16_Msk                (0x10000UL)
 #define R_DOTF_REG00_B17_Pos                (17UL)
 #define R_DOTF_REG00_B17_Msk                (0x20000UL)
 #define R_DOTF_REG00_B20_Pos                (20UL)
 #define R_DOTF_REG00_B20_Msk                (0x100000UL)
 #define R_DOTF_REG00_B24_Pos                (24UL)
 #define R_DOTF_REG00_B24_Msk                (0x3000000UL)
 #define R_DOTF_REG00_B28_Pos                (28UL)
 #define R_DOTF_REG00_B28_Msk                (0x30000000UL)
/* =========================================================  REG03  ========================================================= */
 #define R_DOTF_REG03_B00_Pos                (0UL)
 #define R_DOTF_REG03_B00_Msk                (0xffffffffUL)

/* =========================================================================================================================== */
/* ================                                          R_AGTX0                                          ================ */
/* =========================================================================================================================== */

/* =========================================================================================================================== */
/* ================                                          R_FLAD                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  FCKMHZ  ========================================================= */
 #define R_FLAD_FCKMHZ_FCKMHZ_Pos    (0UL)
 #define R_FLAD_FCKMHZ_FCKMHZ_Msk    (0xffUL)

/* =========================================================================================================================== */
/* ================                                      R_OFS_DATAFLASH                                      ================ */
/* =========================================================================================================================== */

/* =======================================================  FSBLCTRL0  ======================================================= */
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLEN_Pos        (0UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLEN_Msk        (0x7UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLSKIPSW_Pos    (3UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLSKIPSW_Msk    (0x38UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLSKIPDS_Pos    (6UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLSKIPDS_Msk    (0x1c0UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLCLK_Pos       (9UL)
 #define R_OFS_DATAFLASH_FSBLCTRL0_FSBLCLK_Msk       (0xe00UL)
/* =======================================================  FSBLCTRL1  ======================================================= */
 #define R_OFS_DATAFLASH_FSBLCTRL1_FSBLEXMD_Pos      (0UL)
 #define R_OFS_DATAFLASH_FSBLCTRL1_FSBLEXMD_Msk      (0x3UL)
/* =======================================================  FSBLCTRL2  ======================================================= */
 #define R_OFS_DATAFLASH_FSBLCTRL2_PORTPN_Pos        (0UL)
 #define R_OFS_DATAFLASH_FSBLCTRL2_PORTPN_Msk        (0xfUL)
 #define R_OFS_DATAFLASH_FSBLCTRL2_PORTGN_Pos        (4UL)
 #define R_OFS_DATAFLASH_FSBLCTRL2_PORTGN_Msk        (0x1f0UL)
/* =========================================================  SACC0  ========================================================= */
/* =========================================================  SACC1  ========================================================= */
/* =========================================================  SAMR  ========================================================== */
/* =======================================================  HOEMRTPK  ======================================================== */
/* =========================================================  ARCLS  ========================================================= */
 #define R_OFS_DATAFLASH_ARCLS_ARCS_LK_Pos          (0UL)
 #define R_OFS_DATAFLASH_ARCLS_ARCS_LK_Msk          (0x1UL)
 #define R_OFS_DATAFLASH_ARCLS_ARCNS_LK_Pos         (1UL)
 #define R_OFS_DATAFLASH_ARCLS_ARCNS_LK_Msk         (0x1eUL)
 #define R_OFS_DATAFLASH_ARCLS_ARCBL_LK_Pos         (5UL)
 #define R_OFS_DATAFLASH_ARCLS_ARCBL_LK_Msk         (0x20UL)
/* =========================================================  ARCCS  ========================================================= */
 #define R_OFS_DATAFLASH_ARCCS_CNF_ARCNS_Pos        (0UL)
 #define R_OFS_DATAFLASH_ARCCS_CNF_ARCNS_Msk        (0x3UL)
/* ========================================================  ARC_SEC  ======================================================== */
 #define R_OFS_DATAFLASH_ARC_SEC_ARC_SEC_Pos        (0UL)
 #define R_OFS_DATAFLASH_ARC_SEC_ARC_SEC_Msk        (0xffffffffUL)
/* =======================================================  ARC_NSEC  ======================================================== */
 #define R_OFS_DATAFLASH_ARC_NSEC_ARC_NSEC_Pos      (0UL)
 #define R_OFS_DATAFLASH_ARC_NSEC_ARC_NSEC_Msk      (0xffffffffUL)
/* =======================================================  ARC_OEMBL  ======================================================= */
 #define R_OFS_DATAFLASH_ARC_OEMBL_ARC_OEMBL_Pos    (0UL)
 #define R_OFS_DATAFLASH_ARC_OEMBL_ARC_OEMBL_Msk    (0xffffffffUL)

/** @} */ /* End of group PosMask_peripherals */

 #ifdef __cplusplus
}
 #endif

#endif                                 /* R7FA8M1AH_H */

/** @} */ /* End of group R7FA8M1AH */

/** @} */ /* End of group Renesas */
